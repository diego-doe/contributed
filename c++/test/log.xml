<?xml-stylesheet type="text/xsl" href="log.xsl"?>
<TestLog><TestSuite name="Master Test Suite"><TestSuite name="OpenBabelTestSuite"><TestCase name="aromatic_test">
# Testing aromaticity perception...  
<Info file="aromatest.cpp" line="47">check &apos;Bail out! Cannot read input file!&apos; passed</Info><Info file="aromatest.cpp" line="53">check &apos;Bail out! Cannot read file format!&apos; passed</Info><Info file="aromatest.cpp" line="60">check &apos;Bail out! File format isn&apos;t loaded&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 1 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 2 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 3 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 4 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 5 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 6 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 7 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 8 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 9 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 10 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 1 furan&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 11 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 12 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 13 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 14 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 15 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 16 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 17 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 18 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 19 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 20 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 2 thiophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 21 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 22 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 23 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 24 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 25 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 26 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 27 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 28 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 29 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 30 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 3 thiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 31 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 32 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 33 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 34 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 35 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 36 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 37 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 38 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 39 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 40 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 4 oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 41 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 42 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 43 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 44 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 45 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 46 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 47 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 48 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 49 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 50 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 5 isoxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 51 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 52 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 53 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 54 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 55 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 56 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 57 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 58 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 59 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 60 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 6 1,3,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 61 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 62 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 63 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 64 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 65 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 66 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 67 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 68 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 69 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 70 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 7 1,2,5-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 71 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 72 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 73 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 74 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 75 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 76 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 77 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 78 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 79 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 80 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 8 1,2,4-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 81 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 82 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 83 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 84 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 85 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 86 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 87 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 88 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 89 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 90 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 9 1,2,3-oxadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 91 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 92 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 93 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 94 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 95 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 96 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 97 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 98 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 99 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 100 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 10 1,2,3,5-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 101 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 102 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 103 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 104 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 105 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 106 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 107 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 108 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 109 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 110 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 11 1,2,3,4-oxatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 111 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 112 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 113 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 114 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 115 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 116 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 117 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 118 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 119 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 120 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 12 isothaizole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 121 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 122 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 123 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 124 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 125 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 126 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 127 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 128 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 129 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 130 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 13 1,3,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 131 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 132 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 133 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 134 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 135 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 136 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 137 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 138 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 139 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 140 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 14 1,2,3-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 141 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 142 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 143 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 144 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 145 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 146 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 147 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 148 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 149 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 150 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 15 1,2,5-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 151 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 152 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 153 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 154 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 155 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 156 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 157 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 158 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 159 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 160 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 16 1,2,4-thiadiazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 161 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 162 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 163 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 164 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 165 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 166 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 167 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 168 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 169 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 170 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 17 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 171 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 172 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 173 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 174 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 175 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 176 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 177 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 178 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 179 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 180 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 18 1,2,3,4-thiatriazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 181 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 182 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 183 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 184 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 185 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 186 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 187 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 188 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 189 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 190 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 19 selenophene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 191 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 192 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 193 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 194 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 195 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 196 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 197 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 198 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 199 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 200 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 201 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 202 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 20 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 203 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 204 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 205 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 206 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 207 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 208 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 209 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 210 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 211 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 212 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 213 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 214 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 21 pyridine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 215 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 216 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 217 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 218 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 219 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 220 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 221 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 222 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 223 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 224 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 225 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 226 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 22 1,2,3-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 227 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 228 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 229 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 230 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 231 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 232 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 233 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 234 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 235 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 236 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 237 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 238 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 23 1,2,4-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 239 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 240 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 241 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 242 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 243 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 244 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 245 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 246 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 247 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 248 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 249 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 250 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 24 s-triazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 251 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 252 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 253 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 254 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 255 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 256 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 257 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 258 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 259 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 260 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 261 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 262 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 25 pyrimidine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 263 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 264 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 265 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 266 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 267 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 268 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 269 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 270 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 271 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 272 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 273 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 274 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 26 pyrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 275 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 276 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 277 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 278 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 279 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 280 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 281 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 282 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 283 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 284 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 285 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 286 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 27 pyridazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 287 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 288 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 289 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 290 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 291 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 292 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 293 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 294 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 295 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 296 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 297 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 298 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 28 1,2,4,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 299 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 300 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 301 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 302 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 303 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 304 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 305 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 306 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 307 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 308 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 309 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 310 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 29 1,2,3,4-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 311 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 312 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 313 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 314 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 315 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 316 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 317 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 318 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 319 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 320 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 321 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 322 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 30 1,2,3,5-tetrazine&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 323 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 324 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 325 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 326 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 327 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 328 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 329 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 330 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 331 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 332 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 333 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 334 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 335 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 336 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 337 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 338 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 339 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 340 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 341 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 342 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 2 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 343 # bond isn&apos;t aromatic!
# begin atom 1, end atom 10, bond order 1 in molecule 31 naphthalene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 344 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 345 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 346 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 347 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 348 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 349 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 350 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 351 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 352 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 353 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 354 # atom isn&apos;t aromatic!
# atom idx 11 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 355 # atom isn&apos;t aromatic!
# atom idx 12 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 356 # atom isn&apos;t aromatic!
# atom idx 13 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 357 # atom isn&apos;t aromatic!
# atom idx 14 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 358 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 359 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 360 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 361 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 362 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 363 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 364 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 365 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 366 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 367 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 368 # bond isn&apos;t aromatic!
# begin atom 10, end atom 11, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 369 # bond isn&apos;t aromatic!
# begin atom 11, end atom 12, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 370 # bond isn&apos;t aromatic!
# begin atom 12, end atom 13, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 371 # bond isn&apos;t aromatic!
# begin atom 8, end atom 13, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 372 # bond isn&apos;t aromatic!
# begin atom 9, end atom 14, bond order 2 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 373 # bond isn&apos;t aromatic!
# begin atom 1, end atom 14, bond order 1 in molecule 32 anthracene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 374 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 375 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 376 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 377 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 378 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 379 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 380 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 381 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 382 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 383 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 384 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 385 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 386 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 387 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 388 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 389 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 390 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 391 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 392 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 393 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 2 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 394 # bond isn&apos;t aromatic!
# begin atom 1, end atom 10, bond order 1 in molecule 33 quinoline&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 395 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 396 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 397 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 398 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 399 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 400 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 401 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 402 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 403 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 404 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 34 1H-1,2,3-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 405 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 406 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 407 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 408 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 409 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 410 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 411 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 412 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 413 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 414 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 35 1H-tetrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 415 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 416 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 417 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 418 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 419 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 420 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 421 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 422 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 423 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 424 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 36 1H-pyrazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 425 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 426 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 427 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 428 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 429 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 430 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 431 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 432 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 433 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 434 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 37 1H-1,2,4-triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 435 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 436 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 437 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 438 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 439 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 440 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 441 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 442 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 443 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 444 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 445 # atom isn&apos;t aromatic!
# atom idx 11 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 446 # atom isn&apos;t aromatic!
# atom idx 12 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 447 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 448 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 449 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 450 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 451 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 452 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 453 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 454 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 455 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 456 # bond isn&apos;t aromatic!
# begin atom 10, end atom 11, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 457 # bond isn&apos;t aromatic!
# begin atom 7, end atom 11, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 458 # bond isn&apos;t aromatic!
# begin atom 11, end atom 12, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 459 # bond isn&apos;t aromatic!
# begin atom 1, end atom 12, bond order 2 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 460 # bond isn&apos;t aromatic!
# begin atom 5, end atom 12, bond order 1 in molecule 38 arotest1&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 461 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 462 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 463 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 464 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 465 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 466 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 467 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 468 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 469 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 470 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 471 # atom isn&apos;t aromatic!
# atom idx 11 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 472 # atom isn&apos;t aromatic!
# atom idx 12 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 473 # atom isn&apos;t aromatic!
# atom idx 13 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 474 # atom isn&apos;t aromatic!
# atom idx 14 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 475 # atom isn&apos;t aromatic!
# atom idx 15 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 476 # atom isn&apos;t aromatic!
# atom idx 16 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 477 # atom isn&apos;t aromatic!
# atom idx 17 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 478 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 479 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 480 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 481 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 482 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 483 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 484 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 485 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 486 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 487 # bond isn&apos;t aromatic!
# begin atom 10, end atom 11, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 488 # bond isn&apos;t aromatic!
# begin atom 7, end atom 11, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 489 # bond isn&apos;t aromatic!
# begin atom 12, end atom 13, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 490 # bond isn&apos;t aromatic!
# begin atom 13, end atom 14, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 491 # bond isn&apos;t aromatic!
# begin atom 14, end atom 15, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 492 # bond isn&apos;t aromatic!
# begin atom 15, end atom 16, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 493 # bond isn&apos;t aromatic!
# begin atom 16, end atom 17, bond order 1 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 494 # bond isn&apos;t aromatic!
# begin atom 12, end atom 17, bond order 2 in molecule 39 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 495 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 496 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 497 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 498 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 499 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 500 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 501 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 502 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 503 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 504 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 505 # atom isn&apos;t aromatic!
# atom idx 11 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 506 # atom isn&apos;t aromatic!
# atom idx 12 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 507 # atom isn&apos;t aromatic!
# atom idx 13 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 508 # atom isn&apos;t aromatic!
# atom idx 14 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 509 # atom isn&apos;t aromatic!
# atom idx 15 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 510 # atom isn&apos;t aromatic!
# atom idx 16 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 511 # atom isn&apos;t aromatic!
# atom idx 17 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 512 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 513 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 514 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 515 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 516 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 517 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 518 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 519 # bond isn&apos;t aromatic!
# begin atom 4, end atom 9, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 520 # bond isn&apos;t aromatic!
# begin atom 3, end atom 10, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 521 # bond isn&apos;t aromatic!
# begin atom 11, end atom 12, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 522 # bond isn&apos;t aromatic!
# begin atom 12, end atom 13, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 523 # bond isn&apos;t aromatic!
# begin atom 13, end atom 14, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 524 # bond isn&apos;t aromatic!
# begin atom 14, end atom 15, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 525 # bond isn&apos;t aromatic!
# begin atom 15, end atom 16, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 526 # bond isn&apos;t aromatic!
# begin atom 11, end atom 16, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 527 # bond isn&apos;t aromatic!
# begin atom 10, end atom 17, bond order 1 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 528 # bond isn&apos;t aromatic!
# begin atom 1, end atom 17, bond order 2 in molecule 40 1,2-diphenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 529 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 530 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 531 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 532 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 533 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 534 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 535 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 536 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 537 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 538 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 539 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 540 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 541 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 542 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 543 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 2 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 544 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 545 # bond isn&apos;t aromatic!
# begin atom 1, end atom 8, bond order 1 in molecule 41 imidazo[2,1-b]oxazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 546 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 547 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 548 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 549 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 550 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 551 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 552 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 553 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 554 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 555 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 556 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 557 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 558 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 559 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 560 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 2 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 561 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 562 # bond isn&apos;t aromatic!
# begin atom 1, end atom 8, bond order 1 in molecule 42 thiazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 563 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 564 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 565 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 566 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 567 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 568 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 569 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 570 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 571 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 572 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 573 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 574 # bond isn&apos;t aromatic!
# begin atom 1, end atom 5, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 575 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 576 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 577 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 2 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 578 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 579 # bond isn&apos;t aromatic!
# begin atom 1, end atom 8, bond order 1 in molecule 43 oxazolo[2,3-c][1,2,4]triazole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 580 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 581 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 582 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 583 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 584 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 585 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 586 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 587 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 588 # atom isn&apos;t aromatic!
# atom idx 9 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 589 # atom isn&apos;t aromatic!
# atom idx 10 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 590 # atom isn&apos;t aromatic!
# atom idx 11 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 591 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 592 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 593 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 594 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 595 # bond isn&apos;t aromatic!
# begin atom 2, end atom 6, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 596 # bond isn&apos;t aromatic!
# begin atom 1, end atom 7, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 597 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 598 # bond isn&apos;t aromatic!
# begin atom 8, end atom 9, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 599 # bond isn&apos;t aromatic!
# begin atom 9, end atom 10, bond order 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 600 # bond isn&apos;t aromatic!
# begin atom 10, end atom 11, bond order 1 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 601 # bond isn&apos;t aromatic!
# begin atom 1, end atom 11, bond order 2 in molecule 44 1-phenyl-1H-pyrrole&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 602 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 603 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 604 # atom isn&apos;t aromatic!
# atom idx 3 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 605 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 606 # atom isn&apos;t aromatic!
# atom idx 5 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 607 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 608 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 2 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 609 # bond isn&apos;t aromatic!
# begin atom 2, end atom 3, bond order 1 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 610 # bond isn&apos;t aromatic!
# begin atom 3, end atom 4, bond order 2 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 611 # bond isn&apos;t aromatic!
# begin atom 4, end atom 5, bond order 1 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 612 # bond isn&apos;t aromatic!
# begin atom 1, end atom 6, bond order 1 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 613 # bond isn&apos;t aromatic!
# begin atom 5, end atom 6, bond order 2 in molecule 45 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 614 # atom isn&apos;t aromatic!
# atom idx 1 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 615 # atom isn&apos;t aromatic!
# atom idx 2 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 616 # atom isn&apos;t aromatic!
# atom idx 4 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 617 # atom isn&apos;t aromatic!
# atom idx 6 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 618 # atom isn&apos;t aromatic!
# atom idx 7 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="80">check &apos;not ok 619 # atom isn&apos;t aromatic!
# atom idx 8 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 620 # bond isn&apos;t aromatic!
# begin atom 1, end atom 2, bond order 1 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 621 # bond isn&apos;t aromatic!
# begin atom 2, end atom 4, bond order 2 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 622 # bond isn&apos;t aromatic!
# begin atom 4, end atom 6, bond order 1 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 623 # bond isn&apos;t aromatic!
# begin atom 6, end atom 7, bond order 2 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 624 # bond isn&apos;t aromatic!
# begin atom 7, end atom 8, bond order 1 in molecule 46 benzene&apos; passed</Info><Info file="aromatest.cpp" line="94">check &apos;not ok 625 # bond isn&apos;t aromatic!
# begin atom 1, end atom 8, bond order 2 in molecule 46 benzene&apos; passed</Info><TestingTime>150000</TestingTime></TestCase><TestCase name="atom_test"># Unit tests for OBAtom 
0
4294967295
0
4294967295
4294967240
44
<TestingTime>0</TestingTime></TestCase><TestCase name="bond_test"># Unit tests for OBBond 
<TestingTime>0</TestingTime></TestCase><TestCase name="cansmi_test">
# Testing Canonical SMILES Generation ...  
<Info file="cansmi.cpp" line="48">check &apos;Bail out! Cannot read test data files/nci.smi&apos; passed</Info><Info file="cansmi.cpp" line="51">check &apos;Bail out! SMILES format is not loaded&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1 # SMILES read failed, buffer was CC=1C(=O)C=CC(C1)=O	1&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2 # SMARTS did not match for molecule O=C1C=CC(=O)C(=C1)C	1
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 3 # number of heavy atoms wrong for molecule O=C1C=CC(=O)C(=C1)C	1
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 4 # SMILES read failed, buffer was S(Sc1nc2ccccc2s1)c1nc2ccccc2s1	2&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 5 # SMARTS did not match for molecule c1ccc2nc(SSc3nc4ccccc4s3)sc2c1	2
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 6 # number of heavy atoms wrong for molecule c1ccc2nc(SSc3nc4ccccc4s3)sc2c1	2
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 7 # SMILES read failed, buffer was N(=O)(=O)c1cc([N+](=O)[O-])cc(c1O)Cl	3&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 8 # SMARTS did not match for molecule [O-][N+](=O)c1cc(Cl)c(O)c(c1)N(=O)=O	3
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 9 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(Cl)c(O)c(c1)N(=O)=O	3
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 10 # SMILES read failed, buffer was N(=O)(=O)c1sc(=N)[nH]c1	4&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 11 # SMARTS did not match for molecule N=c1[nH]cc(s1)N(=O)=O	4
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 12 # number of heavy atoms wrong for molecule N=c1[nH]cc(s1)N(=O)=O	4
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 13 # SMILES read failed, buffer was O=C1c2c(C(=O)c3c1cccc3)ccc(c2)N	5&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 14 # SMARTS did not match for molecule Nc1ccc2c(c1)C(=O)c1ccccc1C2=O	5
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 15 # number of heavy atoms wrong for molecule Nc1ccc2c(c1)C(=O)c1ccccc1C2=O	5
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 16 # SMILES read failed, buffer was C(=O)(O)c1c(c2c3c(oc4c2ccc(c4Br)=O)c(Br)c(O)cc3)cccc1	6&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 17 # SMARTS did not match for molecule OC(=O)c1ccccc1c1c2ccc(O)c(Br)c2oc2c1ccc(=O)c2Br	6
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 18 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1c1c2ccc(O)c(Br)c2oc2c1ccc(=O)c2Br	6
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 19 # SMILES read failed, buffer was O=C1c2c(C(=O)C(=C1N(C)C)Cl)cccc2	7&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 20 # SMARTS did not match for molecule O=C1C(=C(N(C)C)C(=O)c2ccccc12)Cl	7
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 21 # number of heavy atoms wrong for molecule O=C1C(=C(N(C)C)C(=O)c2ccccc12)Cl	7
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 22 # SMILES read failed, buffer was N(=O)(=O)c1c2c(C(=O)c3ccccc3C2=O)ccc1C	8&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 23 # SMARTS did not match for molecule O=C1c2ccccc2C(=O)c2ccc(C)c(N(=O)=O)c12	8
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 24 # number of heavy atoms wrong for molecule O=C1c2ccccc2C(=O)c2ccc(C)c(N(=O)=O)c12	8
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 25 # SMILES read failed, buffer was C(/C(=N/O)C)(=N/O)C	9&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 26 # SMARTS did not match for molecule O/N=C(/C)\C(=N\O)/C	9
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 27 # number of heavy atoms wrong for molecule O/N=C(/C)\C(=N\O)/C	9
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 28 # SMILES read failed, buffer was P(c1ccccc1)(c1ccccc1)c1ccccc1	10&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 29 # SMARTS did not match for molecule c1ccc(cc1)P(c1ccccc1)c1ccccc1	10
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 30 # number of heavy atoms wrong for molecule c1ccc(cc1)P(c1ccccc1)c1ccccc1	10
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 31 # SMILES read failed, buffer was C(C)(C)(C)c1c(O)cc(C(C)(C)C)c(c1)O	11&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 32 # SMARTS did not match for molecule Oc1cc(c(O)cc1C(C)(C)C)C(C)(C)C	11
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 33 # number of heavy atoms wrong for molecule Oc1cc(c(O)cc1C(C)(C)C)C(C)(C)C	11
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 34 # SMILES read failed, buffer was O=C1N(N=C(C1)C)c1ccccc1	12&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 35 # SMARTS did not match for molecule CC1=NN(C(=O)C1)c1ccccc1	12
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 36 # number of heavy atoms wrong for molecule CC1=NN(C(=O)C1)c1ccccc1	12
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 37 # SMILES read failed, buffer was Nc1c2c(cc(Cl)cc2)ncc1	13&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 38 # SMARTS did not match for molecule Clc1ccc2c(N)ccnc2c1	13
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 39 # number of heavy atoms wrong for molecule Clc1ccc2c(N)ccnc2c1	13
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 40 # SMILES read failed, buffer was C(CCCCC)[C@@H]1CCCCN1	14&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 41 # SMARTS did not match for molecule CCCCCC[C@@H]1CCCCN1	14
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 42 # number of heavy atoms wrong for molecule CCCCCC[C@@H]1CCCCN1	14
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 43 # SMILES read failed, buffer was C(=O)c1c2c(cc3c1cccc3)cccc2	15&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 44 # SMARTS did not match for molecule O=Cc1c2ccccc2cc2ccccc12	15
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 45 # number of heavy atoms wrong for molecule O=Cc1c2ccccc2cc2ccccc12	15
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 46 # SMILES read failed, buffer was BrN1C(=O)CCC1=O	16&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 47 # SMARTS did not match for molecule O=C1CCC(=O)N1Br	16
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 48 # number of heavy atoms wrong for molecule O=C1CCC(=O)N1Br	16
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 49 # SMILES read failed, buffer was C(CCCCCCCCCCCCCC)c1c(N)ccc(c1)O	17&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 50 # SMARTS did not match for molecule CCCCCCCCCCCCCCCc1cc(O)ccc1N	17
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 51 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCc1cc(O)ccc1N	17
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 52 # SMILES read failed, buffer was O(CCOc1c(cccc1)c1ccccc1)c1c(cccc1)c1ccccc1	18&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 53 # SMARTS did not match for molecule c1ccc(cc1)c1ccccc1OCCOc1ccccc1c1ccccc1	18
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 54 # number of heavy atoms wrong for molecule c1ccc(cc1)c1ccccc1OCCOc1ccccc1c1ccccc1	18
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 55 # SMILES read failed, buffer was C(CCC)SCC	19&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 56 # SMARTS did not match for molecule CCCCSCC	19
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 57 # number of heavy atoms wrong for molecule CCCCSCC	19
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 58 # SMILES read failed, buffer was Oc1c2c(nc(NC(C)=O)cc2)ncc1	20&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 59 # SMARTS did not match for molecule CC(=O)Nc1ccc2c(O)ccnc2n1	20
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 60 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc2c(O)ccnc2n1	20
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 61 # SMILES read failed, buffer was Cc1c2c(nc(c1)O)nc(N)cc2	21&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 62 # SMARTS did not match for molecule Nc1ccc2c(C)cc(O)nc2n1	21
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 63 # number of heavy atoms wrong for molecule Nc1ccc2c(C)cc(O)nc2n1	21
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 64 # SMILES read failed, buffer was Oc1c2c(ncc1C(OCC)=O)nc(N)cc2	22&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 65 # SMARTS did not match for molecule CCOC(=O)c1cnc2nc(N)ccc2c1O	22
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 66 # number of heavy atoms wrong for molecule CCOC(=O)c1cnc2nc(N)ccc2c1O	22
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 67 # SMILES read failed, buffer was N(=C/c1ccccc1)/c1cc(C)ccn1	23&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 68 # SMARTS did not match for molecule Cc1ccnc(\N=C\c2ccccc2)c1	23
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 69 # number of heavy atoms wrong for molecule Cc1ccnc(\N=C\c2ccccc2)c1	23
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 70 # SMILES read failed, buffer was C([N+](C)(C)C)c1ccccc1	24&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 71 # SMARTS did not match for molecule C[N+](C)(C)Cc1ccccc1	24
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 72 # number of heavy atoms wrong for molecule C[N+](C)(C)Cc1ccccc1	24
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 73 # SMILES read failed, buffer was C([N+](C)(C)C)(=O)c1ccccc1	25&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 74 # SMARTS did not match for molecule O=C(c1ccccc1)[N+](C)(C)C	25
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 75 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[N+](C)(C)C	25
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 76 # SMILES read failed, buffer was C(CCI)(c1ccccc1)(c1ccccc1)c1ccccc1	26&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 77 # SMARTS did not match for molecule ICCC(c1ccccc1)(c1ccccc1)c1ccccc1	26
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 78 # number of heavy atoms wrong for molecule ICCC(c1ccccc1)(c1ccccc1)c1ccccc1	26
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 79 # SMILES read failed, buffer was C([N+](C)(C)C)c1c(C)cc(C)cc1C	27&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 80 # SMARTS did not match for molecule Cc1cc(C)c(C[N+](C)(C)C)c(C)c1	27
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 81 # number of heavy atoms wrong for molecule Cc1cc(C)c(C[N+](C)(C)C)c(C)c1	27
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 82 # SMILES read failed, buffer was C([C@@](C)(O)c1ccc([N+](=O)[O-])cc1)C(=O)O	28&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 83 # SMARTS did not match for molecule OC(=O)C[C@@](C)(O)c1ccc(cc1)[N+](=O)[O-]	28
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 84 # number of heavy atoms wrong for molecule OC(=O)C[C@@](C)(O)c1ccc(cc1)[N+](=O)[O-]	28
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 85 # SMILES read failed, buffer was C(=O)(c1ccc(C)cc1)c1ccc(Cl)cc1	29&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 86 # SMARTS did not match for molecule Cc1ccc(cc1)C(=O)c1ccc(Cl)cc1	29
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 87 # number of heavy atoms wrong for molecule Cc1ccc(cc1)C(=O)c1ccc(Cl)cc1	29
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 88 # SMILES read failed, buffer was C(=N/O)/c1ccc(O)cc1	30&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 89 # SMARTS did not match for molecule O/N=C\c1ccc(O)cc1	30
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 90 # number of heavy atoms wrong for molecule O/N=C\c1ccc(O)cc1	30
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 91 # SMILES read failed, buffer was Nc1c(C)cc(C)cc1C	31&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 92 # SMARTS did not match for molecule Cc1cc(C)c(N)c(C)c1	31
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 93 # number of heavy atoms wrong for molecule Cc1cc(C)c(N)c(C)c1	31
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 94 # SMILES read failed, buffer was C(=O)(c1ccc([N+](=O)[O-])cc1)c1ccc(C)cc1	32&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 95 # SMARTS did not match for molecule Cc1ccc(cc1)C(=O)c1ccc(cc1)[N+](=O)[O-]	32
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 96 # number of heavy atoms wrong for molecule Cc1ccc(cc1)C(=O)c1ccc(cc1)[N+](=O)[O-]	32
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 97 # SMILES read failed, buffer was C(C)(O)(c1ccccc1)c1ccccc1	33&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 98 # SMARTS did not match for molecule CC(O)(c1ccccc1)c1ccccc1	33
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 99 # number of heavy atoms wrong for molecule CC(O)(c1ccccc1)c1ccccc1	33
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 100 # SMILES read failed, buffer was C(=N/O)/c1cc([N+](=O)[O-])ccc1	34&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 101 # SMARTS did not match for molecule O/N=C\c1cccc(c1)[N+](=O)[O-]	34
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 102 # number of heavy atoms wrong for molecule O/N=C\c1cccc(c1)[N+](=O)[O-]	34
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 103 # SMILES read failed, buffer was Oc1c2c(ncc1[N+](=O)[O-])cc(Cl)cc2	35&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 104 # SMARTS did not match for molecule Clc1ccc2c(ncc([N+](=O)[O-])c2O)c1	35
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 105 # number of heavy atoms wrong for molecule Clc1ccc2c(ncc([N+](=O)[O-])c2O)c1	35
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 106 # SMILES read failed, buffer was Clc1c2c(ncc1C)cccc2C	36&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 107 # SMARTS did not match for molecule Cc1cnc2cccc(C)c2c1Cl	36
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 108 # number of heavy atoms wrong for molecule Cc1cnc2cccc(C)c2c1Cl	36
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 109 # SMILES read failed, buffer was C([C@@H](OC(N)=O)c1ccccc1)(CC)(CC)c1ccccc1	37&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 110 # SMARTS did not match for molecule CCC(CC)(c1ccccc1)[C@@H](OC(=O)N)c1ccccc1	37
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 111 # number of heavy atoms wrong for molecule CCC(CC)(c1ccccc1)[C@@H](OC(=O)N)c1ccccc1	37
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 112 # SMILES read failed, buffer was C(/[C@@H](C#N)c1ccccc1)(Cc1ccccc1)=N/O	38&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 113 # SMARTS did not match for molecule O/N=C(/Cc1ccccc1)\[C@@H](C#N)c1ccccc1	38
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 114 # number of heavy atoms wrong for molecule O/N=C(/Cc1ccccc1)\[C@@H](C#N)c1ccccc1	38
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 115 # SMILES read failed, buffer was C([C@@H](O)c1ccccc1)c1ccccc1	39&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 116 # SMARTS did not match for molecule O[C@@H](Cc1ccccc1)c1ccccc1	39
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 117 # number of heavy atoms wrong for molecule O[C@@H](Cc1ccccc1)c1ccccc1	39
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 118 # SMILES read failed, buffer was C(c1ccc(OC)cc1)c1ccc(OC)cc1	40&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 119 # SMARTS did not match for molecule COc1ccc(cc1)Cc1ccc(OC)cc1	40
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 120 # number of heavy atoms wrong for molecule COc1ccc(cc1)Cc1ccc(OC)cc1	40
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 121 # SMILES read failed, buffer was N([C@@H](c1c(C)cccc1)c1ccccc1)(C)C	41&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 122 # SMARTS did not match for molecule Cc1ccccc1[C@@H](N(C)C)c1ccccc1	41
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 123 # number of heavy atoms wrong for molecule Cc1ccccc1[C@@H](N(C)C)c1ccccc1	41
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 124 # SMILES read failed, buffer was N(=O)(=O)c1c(N)c([N+](=O)[O-])cc(c1)OC	42&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 125 # SMARTS did not match for molecule COc1cc([N+](=O)[O-])c(N)c(c1)N(=O)=O	42
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 126 # number of heavy atoms wrong for molecule COc1cc([N+](=O)[O-])c(N)c(c1)N(=O)=O	42
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 127 # SMILES read failed, buffer was C(=N/N)(/c1ccccc1)c1ccccc1	43&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 128 # SMARTS did not match for molecule NN=C(c1ccccc1)c1ccccc1	43
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 129 # number of heavy atoms wrong for molecule NN=C(c1ccccc1)c1ccccc1	43
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 130 # SMILES read failed, buffer was C(=N/O)/c1ccc(OC)cc1	44&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 131 # SMARTS did not match for molecule O/N=C\c1ccc(OC)cc1	44
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 132 # number of heavy atoms wrong for molecule O/N=C\c1ccc(OC)cc1	44
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 133 # SMILES read failed, buffer was C(/N=C(\c1ccccc1)c1ccccc1)(c1ccccc1)c1ccccc1	45&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 134 # SMARTS did not match for molecule c1ccc(cc1)C(N=C(c1ccccc1)c1ccccc1)c1ccccc1	45
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 135 # number of heavy atoms wrong for molecule c1ccc(cc1)C(N=C(c1ccccc1)c1ccccc1)c1ccccc1	45
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 136 # SMILES read failed, buffer was C(=N\c1ccccc1)(/c1ccccc1)c1ccccc1	46&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 137 # SMARTS did not match for molecule c1ccc(cc1)N=C(c1ccccc1)c1ccccc1	46
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 138 # number of heavy atoms wrong for molecule c1ccc(cc1)N=C(c1ccccc1)c1ccccc1	46
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 139 # SMILES read failed, buffer was Oc1c(c(C)nc2c1cccc2)c1ccccc1	47&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 140 # SMARTS did not match for molecule Cc1nc2ccccc2c(O)c1c1ccccc1	47
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 141 # number of heavy atoms wrong for molecule Cc1nc2ccccc2c(O)c1c1ccccc1	47
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 142 # SMILES read failed, buffer was C(C)C1=[O+][Cu]2([O+]=C(CC)CC(=[O+]2)CC)[O+]=C(C1)CC	48&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 143 # SMARTS did not match for molecule CCC1=[O+][Cu]2([O+]=C(CC)C1)[O+]=C(CC)CC(=[O+]2)CC	48
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 144 # number of heavy atoms wrong for molecule CCC1=[O+][Cu]2([O+]=C(CC)C1)[O+]=C(CC)CC(=[O+]2)CC	48
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 145 # SMILES read failed, buffer was C([C@@H](C(=O)O)c1ccccc1)c1ccccc1	49&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 146 # SMARTS did not match for molecule OC(=O)[C@@H](Cc1ccccc1)c1ccccc1	49
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 147 # number of heavy atoms wrong for molecule OC(=O)[C@@H](Cc1ccccc1)c1ccccc1	49
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 148 # SMILES read failed, buffer was C(C)c1c(N)cc(C)nc1	50&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 149 # SMARTS did not match for molecule CCc1cnc(C)cc1N	50
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 150 # number of heavy atoms wrong for molecule CCc1cnc(C)cc1N	50
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 151 # SMILES read failed, buffer was O(c1c(c(C)nc2c1cccc2)c1ccccc1)c1ccccc1	51&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 152 # SMARTS did not match for molecule Cc1nc2ccccc2c(Oc2ccccc2)c1c1ccccc1	51
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 153 # number of heavy atoms wrong for molecule Cc1nc2ccccc2c(Oc2ccccc2)c1c1ccccc1	51
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 154 # SMILES read failed, buffer was C([C@@H](C#N)c1ccccc1)(c1ccccc1)c1ccccc1	52&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 155 # SMARTS did not match for molecule N#C[C@@H](c1ccccc1)C(c1ccccc1)c1ccccc1	52
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 156 # number of heavy atoms wrong for molecule N#C[C@@H](c1ccccc1)C(c1ccccc1)c1ccccc1	52
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 157 # SMILES read failed, buffer was N([C@@H](C#N)C)(C)C	53&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 158 # SMARTS did not match for molecule N#C[C@@H](C)N(C)C	53
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 159 # number of heavy atoms wrong for molecule N#C[C@@H](C)N(C)C	53
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 160 # SMILES read failed, buffer was O=C1c2c(cccc2)C[C@@H]1C(C)=O	54&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 161 # SMARTS did not match for molecule CC(=O)[C@@H]1Cc2ccccc2C1=O	54
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 162 # number of heavy atoms wrong for molecule CC(=O)[C@@H]1Cc2ccccc2C1=O	54
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 163 # SMILES read failed, buffer was C(S(Cc1ccccc1)=O)c1ccccc1	55&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 164 # SMARTS did not match for molecule O=S(Cc1ccccc1)Cc1ccccc1	55
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 165 # number of heavy atoms wrong for molecule O=S(Cc1ccccc1)Cc1ccccc1	55
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 166 # SMILES read failed, buffer was C([C@]([C@@H](C)c1ccccc1)(C)c1ccccc1)#N	56&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 167 # SMARTS did not match for molecule N#C[C@](C)(c1ccccc1)[C@@H](C)c1ccccc1	56
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 168 # number of heavy atoms wrong for molecule N#C[C@](C)(c1ccccc1)[C@@H](C)c1ccccc1	56
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 169 # SMILES read failed, buffer was Cc1c2c(nc(n1)O)CCCC2	57&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 170 # SMARTS did not match for molecule Oc1nc2CCCCc2c(C)n1	57
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 171 # number of heavy atoms wrong for molecule Oc1nc2CCCCc2c(C)n1	57
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 172 # SMILES read failed, buffer was C(NC(c1ccccc1)c1ccccc1)(c1ccccc1)c1ccccc1	58&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 173 # SMARTS did not match for molecule c1ccc(cc1)C(NC(c1ccccc1)c1ccccc1)c1ccccc1	58
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 174 # number of heavy atoms wrong for molecule c1ccc(cc1)C(NC(c1ccccc1)c1ccccc1)c1ccccc1	58
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 175 # SMILES read failed, buffer was Oc1c2c(c(c3ccccc3)nn1)cccc2	59&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 176 # SMARTS did not match for molecule Oc1nnc(c2ccccc2)c2ccccc12	59
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 177 # number of heavy atoms wrong for molecule Oc1nnc(c2ccccc2)c2ccccc12	59
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 178 # SMILES read failed, buffer was C(C(N)=O)(C)(C)c1ccccc1	60&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 179 # SMARTS did not match for molecule NC(=O)C(C)(C)c1ccccc1	60
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 180 # number of heavy atoms wrong for molecule NC(=O)C(C)(C)c1ccccc1	60
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 181 # SMILES read failed, buffer was C(C(=O)O)(c1ccccc1)(c1ccccc1)c1ccccc1	61&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 182 # SMARTS did not match for molecule OC(=O)C(c1ccccc1)(c1ccccc1)c1ccccc1	61
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 183 # number of heavy atoms wrong for molecule OC(=O)C(c1ccccc1)(c1ccccc1)c1ccccc1	61
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 184 # SMILES read failed, buffer was [N+](Cc1ccccc1)(CCC)(CCC)CCC	62&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 185 # SMARTS did not match for molecule CCC[N+](CCC)(CCC)Cc1ccccc1	62
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 186 # number of heavy atoms wrong for molecule CCC[N+](CCC)(CCC)Cc1ccccc1	62
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 187 # SMILES read failed, buffer was C(C(=O)c1ccccc1)c1c(C)cc(C)cc1C	63&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 188 # SMARTS did not match for molecule Cc1cc(C)c(CC(=O)c2ccccc2)c(C)c1	63
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 189 # number of heavy atoms wrong for molecule Cc1cc(C)c(CC(=O)c2ccccc2)c(C)c1	63
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 190 # SMILES read failed, buffer was C(OC)(c1ccccc1)(c1ccccc1)c1ccccc1	64&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 191 # SMARTS did not match for molecule COC(c1ccccc1)(c1ccccc1)c1ccccc1	64
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 192 # number of heavy atoms wrong for molecule COC(c1ccccc1)(c1ccccc1)c1ccccc1	64
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 193 # SMILES read failed, buffer was C([C@@H](OC(=O)c1c(C(=O)O)cccc1)c1ccccc1)(CC)(CC)CC	65&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 194 # SMARTS did not match for molecule CCC(CC)(CC)[C@@H](OC(=O)c1ccccc1C(=O)O)c1ccccc1	65
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 195 # number of heavy atoms wrong for molecule CCC(CC)(CC)[C@@H](OC(=O)c1ccccc1C(=O)O)c1ccccc1	65
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 196 # SMILES read failed, buffer was C(Cc1ccccc1)(C(C)=O)(c1ccccc1)c1ccccc1	66&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 197 # SMARTS did not match for molecule CC(=O)C(Cc1ccccc1)(c1ccccc1)c1ccccc1	66
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 198 # number of heavy atoms wrong for molecule CC(=O)C(Cc1ccccc1)(c1ccccc1)c1ccccc1	66
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 199 # SMILES read failed, buffer was C(S(Cc1ccccc1)(=O)=O)c1ccccc1	67&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 200 # SMARTS did not match for molecule O=S(=O)(Cc1ccccc1)Cc1ccccc1	67
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 201 # number of heavy atoms wrong for molecule O=S(=O)(Cc1ccccc1)Cc1ccccc1	67
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 202 # SMILES read failed, buffer was C(C(OC(C)(C)C)=O)(c1ccccc1)c1ccccc1	68&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 203 # SMARTS did not match for molecule O=C(OC(C)(C)C)C(c1ccccc1)c1ccccc1	68
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 204 # number of heavy atoms wrong for molecule O=C(OC(C)(C)C)C(c1ccccc1)c1ccccc1	68
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 205 # SMILES read failed, buffer was C(Cc1ccccc1)(C#N)(c1ccccc1)c1ccccc1	69&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 206 # SMARTS did not match for molecule N#CC(Cc1ccccc1)(c1ccccc1)c1ccccc1	69
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 207 # number of heavy atoms wrong for molecule N#CC(Cc1ccccc1)(c1ccccc1)c1ccccc1	69
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 208 # SMILES read failed, buffer was C(=C\c1ccccc1)(/C)c1ccccc1	70&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 209 # SMARTS did not match for molecule C/C(=C/c1ccccc1)/c1ccccc1	70
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 210 # number of heavy atoms wrong for molecule C/C(=C/c1ccccc1)/c1ccccc1	70
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 211 # SMILES read failed, buffer was C([C@@H](C#N)c1ccccc1)c1ccccc1	71&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 212 # SMARTS did not match for molecule N#C[C@@H](Cc1ccccc1)c1ccccc1	71
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 213 # number of heavy atoms wrong for molecule N#C[C@@H](Cc1ccccc1)c1ccccc1	71
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 214 # SMILES read failed, buffer was C([C@H]([C@@](C)(O)c1ccccc1)c1ccccc1)(=O)O	72&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 215 # SMARTS did not match for molecule OC(=O)[C@H](c1ccccc1)[C@@](C)(O)c1ccccc1	72
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 216 # number of heavy atoms wrong for molecule OC(=O)[C@H](c1ccccc1)[C@@](C)(O)c1ccccc1	72
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 217 # SMILES read failed, buffer was C([C@H]([C@@H](C)c1ccccc1)c1ccccc1)(=O)O	73&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 218 # SMARTS did not match for molecule OC(=O)[C@H](c1ccccc1)[C@@H](C)c1ccccc1	73
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 219 # number of heavy atoms wrong for molecule OC(=O)[C@H](c1ccccc1)[C@@H](C)c1ccccc1	73
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 220 # SMILES read failed, buffer was C(=N/O)/c1ccc(Cl)cc1	74&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 221 # SMARTS did not match for molecule O/N=C\c1ccc(Cl)cc1	74
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 222 # number of heavy atoms wrong for molecule O/N=C\c1ccc(Cl)cc1	74
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 223 # SMILES read failed, buffer was C(OC)(c1ccccc1)c1ccccc1	75&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 224 # SMARTS did not match for molecule COC(c1ccccc1)c1ccccc1	75
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 225 # number of heavy atoms wrong for molecule COC(c1ccccc1)c1ccccc1	75
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 226 # SMILES read failed, buffer was C(NC(=O)c1ccccc1)(c1ccccc1)c1ccccc1	76&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 227 # SMARTS did not match for molecule O=C(NC(c1ccccc1)c1ccccc1)c1ccccc1	76
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 228 # number of heavy atoms wrong for molecule O=C(NC(c1ccccc1)c1ccccc1)c1ccccc1	76
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 229 # SMILES read failed, buffer was C([N+](Cc1ccccc1)(C)C)c1ccccc1	77&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 230 # SMARTS did not match for molecule C[N+](C)(Cc1ccccc1)Cc1ccccc1	77
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 231 # number of heavy atoms wrong for molecule C[N+](C)(Cc1ccccc1)Cc1ccccc1	77
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 232 # SMILES read failed, buffer was C(=C/c1ccccc1)/C1=[O+][Cu]2([O+]=C(CC(=[O+]2)/C=C/c2ccccc2)c2ccccc2)[O+]=C(C1)c1ccccc1	78&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 233 # SMARTS did not match for molecule c1ccc(cc1)\C=C/C1=[O+][Cu]2([O+]=C(\C=C\c3ccccc3)CC(=[O+]2)c2ccccc2)[O+]=C(C1)c1ccccc1	78
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 234 # number of heavy atoms wrong for molecule c1ccc(cc1)\C=C/C1=[O+][Cu]2([O+]=C(\C=C\c3ccccc3)CC(=[O+]2)c2ccccc2)[O+]=C(C1)c1ccccc1	78
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 235 # SMILES read failed, buffer was C(=N/O)/c1cc2c(OCO2)cc1	79&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 236 # SMARTS did not match for molecule O/N=C\c1ccc2OCOc2c1	79
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 237 # number of heavy atoms wrong for molecule O/N=C\c1ccc2OCOc2c1	79
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 238 # SMILES read failed, buffer was C(NC(=O)c1ccccc1)(C(OCC)=O)C(OCC)=O	80&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 239 # SMARTS did not match for molecule CCOC(=O)C(NC(=O)c1ccccc1)C(=O)OCC	80
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 240 # number of heavy atoms wrong for molecule CCOC(=O)C(NC(=O)c1ccccc1)C(=O)OCC	80
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 241 # SMILES read failed, buffer was Nc1ccc(Cl)nc1	81&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 242 # SMARTS did not match for molecule Clc1ccc(N)cn1	81
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 243 # number of heavy atoms wrong for molecule Clc1ccc(N)cn1	81
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 244 # SMILES read failed, buffer was C(c1ccccc1)(c1ccccc1)N1CCCCC1	82&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 245 # SMARTS did not match for molecule C1CCN(CC1)C(c1ccccc1)c1ccccc1	82
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 246 # number of heavy atoms wrong for molecule C1CCN(CC1)C(c1ccccc1)c1ccccc1	82
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 247 # SMILES read failed, buffer was Oc1c2c(c(C)c(Cl)cc2)ncc1C(OCC)=O	83&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 248 # SMARTS did not match for molecule Cc1c(Cl)ccc2c(O)c(cnc12)C(=O)OCC	83
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 249 # number of heavy atoms wrong for molecule Cc1c(Cl)ccc2c(O)c(cnc12)C(=O)OCC	83
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 250 # SMILES read failed, buffer was C(=C/C(N(CC)CC)=O)/c1ccccc1	84&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 251 # SMARTS did not match for molecule CCN(CC)C(=O)\C=C\c1ccccc1	84
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 252 # number of heavy atoms wrong for molecule CCN(CC)C(=O)\C=C\c1ccccc1	84
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 253 # SMILES read failed, buffer was C([N+](C)(C)C)c1ccc([N+](=O)[O-])cc1	85&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 254 # SMARTS did not match for molecule [O-][N+](=O)c1ccc(cc1)C[N+](C)(C)C	85
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 255 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccc(cc1)C[N+](C)(C)C	85
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 256 # SMILES read failed, buffer was C([N+](C)(C)C)c1cc([N+](=O)[O-])ccc1	86&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 257 # SMARTS did not match for molecule [O-][N+](=O)c1cccc(c1)C[N+](C)(C)C	86
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 258 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cccc(c1)C[N+](C)(C)C	86
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 259 # SMILES read failed, buffer was C([C@@H](c1ccccc1)N1CCCCC1)C(=O)c1ccccc1	87&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 260 # SMARTS did not match for molecule O=C(C[C@@H](N1CCCCC1)c1ccccc1)c1ccccc1	87
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 261 # number of heavy atoms wrong for molecule O=C(C[C@@H](N1CCCCC1)c1ccccc1)c1ccccc1	87
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 262 # SMILES read failed, buffer was C(N(C)C)(OC)(c1ccccc1)c1ccccc1	88&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 263 # SMARTS did not match for molecule COC(N(C)C)(c1ccccc1)c1ccccc1	88
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 264 # number of heavy atoms wrong for molecule COC(N(C)C)(c1ccccc1)c1ccccc1	88
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 265 # SMILES read failed, buffer was C(CCN(C)C)(=O)c1ccccc1	89&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 266 # SMARTS did not match for molecule CN(C)CCC(=O)c1ccccc1	89
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 267 # number of heavy atoms wrong for molecule CN(C)CCC(=O)c1ccccc1	89
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 268 # SMILES read failed, buffer was N(CCCC)(CCCC)C(C)=O	90&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 269 # SMARTS did not match for molecule CCCCN(CCCC)C(=O)C	90
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 270 # number of heavy atoms wrong for molecule CCCCN(CCCC)C(=O)C	90
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 271 # SMILES read failed, buffer was C(O)c1c(C)cccc1	91&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 272 # SMARTS did not match for molecule OCc1ccccc1C	91
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 273 # number of heavy atoms wrong for molecule OCc1ccccc1C	91
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 274 # SMILES read failed, buffer was N(CCC(OC)=O)(CC)CC	92&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 275 # SMARTS did not match for molecule CCN(CC)CCC(=O)OC	92
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 276 # number of heavy atoms wrong for molecule CCN(CC)CCC(=O)OC	92
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 277 # SMILES read failed, buffer was C([C@@H](Cl)c1ccccc1)c1ccccc1	93&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 278 # SMARTS did not match for molecule Cl[C@@H](Cc1ccccc1)c1ccccc1	93
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 279 # number of heavy atoms wrong for molecule Cl[C@@H](Cc1ccccc1)c1ccccc1	93
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 280 # SMILES read failed, buffer was C(C(CC(C)=O)=O)C(C)C	94&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 281 # SMARTS did not match for molecule CC(C)CC(=O)CC(=O)C	94
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 282 # number of heavy atoms wrong for molecule CC(C)CC(=O)CC(=O)C	94
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 283 # SMILES read failed, buffer was N(CCC#N)(CC)CC	95&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 284 # SMARTS did not match for molecule N#CCCN(CC)CC	95
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 285 # number of heavy atoms wrong for molecule N#CCCN(CC)CC	95
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 286 # SMILES read failed, buffer was C(C#N)c1ccc(OC)cc1	96&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 287 # SMARTS did not match for molecule N#CCc1ccc(OC)cc1	96
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 288 # number of heavy atoms wrong for molecule N#CCc1ccc(OC)cc1	96
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 289 # SMILES read failed, buffer was N(Cc1ccccc1)(C)c1ccccc1	97&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 290 # SMARTS did not match for molecule CN(Cc1ccccc1)c1ccccc1	97
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 291 # number of heavy atoms wrong for molecule CN(Cc1ccccc1)c1ccccc1	97
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 292 # SMILES read failed, buffer was C(C#N)(C)(C)c1ccc(OC)cc1	98&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 293 # SMARTS did not match for molecule COc1ccc(cc1)C(C)(C)C#N	98
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 294 # number of heavy atoms wrong for molecule COc1ccc(cc1)C(C)(C)C#N	98
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 295 # SMILES read failed, buffer was C([C@@H](O)c1ccccc1)(CC)(CC)c1ccccc1	99&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 296 # SMARTS did not match for molecule CCC(CC)(c1ccccc1)[C@@H](O)c1ccccc1	99
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 297 # number of heavy atoms wrong for molecule CCC(CC)(c1ccccc1)[C@@H](O)c1ccccc1	99
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 298 # SMILES read failed, buffer was C(=C(/OC(=O)c1ccccc1)C)/c1ccccc1	100&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 299 # SMARTS did not match for molecule C/C(=C/c1ccccc1)/OC(=O)c1ccccc1	100
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 300 # number of heavy atoms wrong for molecule C/C(=C/c1ccccc1)/OC(=O)c1ccccc1	100
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 301 # SMILES read failed, buffer was N(C(C)=O)(CC)CC	101&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 302 # SMARTS did not match for molecule CCN(CC)C(=O)C	101
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 303 # number of heavy atoms wrong for molecule CCN(CC)C(=O)C	101
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 304 # SMILES read failed, buffer was O([C@@H](c1ccccc1)N1CCCCC1)CCCC	102&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 305 # SMARTS did not match for molecule CCCCO[C@@H](N1CCCCC1)c1ccccc1	102
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 306 # number of heavy atoms wrong for molecule CCCCO[C@@H](N1CCCCC1)c1ccccc1	102
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 307 # SMILES read failed, buffer was N(CCCCCCCC)(CC)CC	103&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 308 # SMARTS did not match for molecule CCCCCCCCN(CC)CC	103
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 309 # number of heavy atoms wrong for molecule CCCCCCCCN(CC)CC	103
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 310 # SMILES read failed, buffer was O([C@@H](C)c1ccccc1)CC	104&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 311 # SMARTS did not match for molecule CCO[C@@H](C)c1ccccc1	104
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 312 # number of heavy atoms wrong for molecule CCO[C@@H](C)c1ccccc1	104
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 313 # SMILES read failed, buffer was N(C(CC)=O)(CC)CC	105&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 314 # SMARTS did not match for molecule CCC(=O)N(CC)CC	105
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 315 # number of heavy atoms wrong for molecule CCC(=O)N(CC)CC	105
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 316 # SMILES read failed, buffer was C(OCCCC)(OCCCC)c1ccccc1	106&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 317 # SMARTS did not match for molecule CCCCOC(OCCCC)c1ccccc1	106
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 318 # number of heavy atoms wrong for molecule CCCCOC(OCCCC)c1ccccc1	106
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 319 # SMILES read failed, buffer was C([Si](C)(C)C)c1ccccc1	107&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 320 # SMARTS did not match for molecule C[Si](C)(C)Cc1ccccc1	107
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 321 # number of heavy atoms wrong for molecule C[Si](C)(C)Cc1ccccc1	107
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 322 # SMILES read failed, buffer was N(CCCCCCN(CC)CC)c1c2c(ncc1)cc(Cl)cc2	108&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 323 # SMARTS did not match for molecule CCN(CC)CCCCCCNc1ccnc2cc(Cl)ccc12	108
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 324 # number of heavy atoms wrong for molecule CCN(CC)CCCCCCNc1ccnc2cc(Cl)ccc12	108
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 325 # SMILES read failed, buffer was C(C)(=O)c1cc(C)c(O)c(c1)C	109&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 326 # SMARTS did not match for molecule CC(=O)c1cc(C)c(O)c(C)c1	109
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 327 # number of heavy atoms wrong for molecule CC(=O)c1cc(C)c(O)c(C)c1	109
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 328 # SMILES read failed, buffer was S(N(CC)CC)(=O)(=O)c1ccc(C(OCC)=O)cc1	110&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 329 # SMARTS did not match for molecule CCOC(=O)c1ccc(cc1)S(=O)(=O)N(CC)CC	110
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 330 # number of heavy atoms wrong for molecule CCOC(=O)c1ccc(cc1)S(=O)(=O)N(CC)CC	110
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 331 # SMILES read failed, buffer was C(C)(=O)c1ccncc1	111&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 332 # SMARTS did not match for molecule CC(=O)c1ccncc1	111
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 333 # number of heavy atoms wrong for molecule CC(=O)c1ccncc1	111
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 334 # SMILES read failed, buffer was C([N+](C)(C)C)c1c(C)c(C)c(C)cc1C	112&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 335 # SMARTS did not match for molecule Cc1c(C)cc(C)c(C[N+](C)(C)C)c1C	112
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 336 # number of heavy atoms wrong for molecule Cc1c(C)cc(C)c(C[N+](C)(C)C)c1C	112
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 337 # SMILES read failed, buffer was C(C(F)F)(CO)(F)F	113&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 338 # SMARTS did not match for molecule OCC(F)(F)C(F)F	113
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 339 # number of heavy atoms wrong for molecule OCC(F)(F)C(F)F	113
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 340 # SMILES read failed, buffer was C(C(C(F)F)(F)F)(C(CO)(F)F)(F)F	114&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 341 # SMARTS did not match for molecule OCC(F)(F)C(F)(F)C(F)(F)C(F)F	114
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 342 # number of heavy atoms wrong for molecule OCC(F)(F)C(F)(F)C(F)(F)C(F)F	114
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 343 # SMILES read failed, buffer was C(C(C(C(F)F)(F)F)(F)F)(C(C(CO)(F)F)(F)F)(F)F	115&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 344 # SMARTS did not match for molecule OCC(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)F	115
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 345 # number of heavy atoms wrong for molecule OCC(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)F	115
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 346 # SMILES read failed, buffer was C(C(C(F)F)(F)F)(C(COC(CCCC(OCC(C(C(C(F)F)(F)F)(F)F)(F)F)=O)=O)(F)F)(F)F	116&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 347 # SMARTS did not match for molecule O=C(CCCC(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	116
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 348 # number of heavy atoms wrong for molecule O=C(CCCC(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	116
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 349 # SMILES read failed, buffer was C(C(COC(CC(CC(OCC(C(C(C(F)F)(F)F)(F)F)(F)F)=O)C)=O)(F)F)(C(C(F)F)(F)F)(F)F	117&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 350 # SMARTS did not match for molecule O=C(OCC(F)(F)C(F)(F)C(F)(F)C(F)F)CC(C)CC(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	117
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 351 # number of heavy atoms wrong for molecule O=C(OCC(F)(F)C(F)(F)C(F)(F)C(F)F)CC(C)CC(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	117
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 352 # SMILES read failed, buffer was [Si](OCC(C(C(C(C(C(F)F)(F)F)(F)F)(F)F)(F)F)(F)F)(OCC(C(C(C(C(C(F)F)(F)F)(F)F)(F)F)(F)F)(F)F)(OC(C)(C)C)OC(C)(C)C	118&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 353 # SMARTS did not match for molecule FC(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)CO[Si](OCC(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)F)(OC(C)(C)C)OC(C)(C)C	118
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 354 # number of heavy atoms wrong for molecule FC(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)CO[Si](OCC(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)(F)C(F)F)(OC(C)(C)C)OC(C)(C)C	118
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 355 # SMILES read failed, buffer was C(OCC(C(C(C(F)F)(F)F)(F)F)(F)F)(=O)c1c(C(OCC(C(C(C(F)F)(F)F)(F)F)(F)F)=O)cccc1	119&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 356 # SMARTS did not match for molecule O=C(OCC(F)(F)C(F)(F)C(F)(F)C(F)F)c1ccccc1C(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	119
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 357 # number of heavy atoms wrong for molecule O=C(OCC(F)(F)C(F)(F)C(F)(F)C(F)F)c1ccccc1C(=O)OCC(F)(F)C(F)(F)C(F)(F)C(F)F	119
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 358 # SMILES read failed, buffer was CN1c2c(Sc3c1cccc3)cccc2	120&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 359 # SMARTS did not match for molecule CN1c2ccccc2Sc2ccccc12	120
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 360 # number of heavy atoms wrong for molecule CN1c2ccccc2Sc2ccccc12	120
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 361 # SMILES read failed, buffer was C(C)N1c2c(Sc3c1cccc3)cccc2	121&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 362 # SMARTS did not match for molecule CCN1c2ccccc2Sc2ccccc12	121
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 363 # number of heavy atoms wrong for molecule CCN1c2ccccc2Sc2ccccc12	121
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 364 # SMILES read failed, buffer was C(C)N1c2c([S@@](=O)c3c1cccc3)cc([N+](=O)[O-])cc2	122&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 365 # SMARTS did not match for molecule CCN1c2ccc(cc2[S@@](=O)c2ccccc12)[N+](=O)[O-]	122
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 366 # number of heavy atoms wrong for molecule CCN1c2ccc(cc2[S@@](=O)c2ccccc12)[N+](=O)[O-]	122
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 367 # SMILES read failed, buffer was CN1c2c(S(=O)c3c1cccc3)cccc2	123&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 368 # SMARTS did not match for molecule O=S1c2ccccc2N(C)c2ccccc12	123
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 369 # number of heavy atoms wrong for molecule O=S1c2ccccc2N(C)c2ccccc12	123
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 370 # SMILES read failed, buffer was C(CCl)(=O)c1cc2c(Sc3ccccc3N2)cc1	124&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 371 # SMARTS did not match for molecule ClCC(=O)c1ccc2Sc3ccccc3Nc2c1	124
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 372 # number of heavy atoms wrong for molecule ClCC(=O)c1ccc2Sc3ccccc3Nc2c1	124
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 373 # SMILES read failed, buffer was C(CC[N+](CC)(CC)[O-])N1c2c(S(=O)c3c1cccc3)cccc2	125&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 374 # SMARTS did not match for molecule CC[N+]([O-])(CC)CCCN1c2ccccc2S(=O)c2ccccc12	125
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 375 # number of heavy atoms wrong for molecule CC[N+]([O-])(CC)CCCN1c2ccccc2S(=O)c2ccccc12	125
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 376 # SMILES read failed, buffer was C(OC)(=O)c1c2c(Sc3ccccc3N2)ccc1	126&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 377 # SMARTS did not match for molecule COC(=O)c1cccc2Sc3ccccc3Nc12	126
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 378 # number of heavy atoms wrong for molecule COC(=O)c1cccc2Sc3ccccc3Nc12	126
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 379 # SMILES read failed, buffer was C(C)(=O)N1c2c(Sc3c1cccc3)ccc(c2)C(CCl)=O	127&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 380 # SMARTS did not match for molecule ClCC(=O)c1ccc2Sc3ccccc3N(C(=O)C)c2c1	127
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 381 # number of heavy atoms wrong for molecule ClCC(=O)c1ccc2Sc3ccccc3N(C(=O)C)c2c1	127
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 382 # SMILES read failed, buffer was C(C)(=O)N1c2c(c3c(cccc3)cc2)Sc2c1cccc2	128&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 383 # SMARTS did not match for molecule CC(=O)N1c2ccccc2Sc2c1ccc1ccccc21	128
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 384 # number of heavy atoms wrong for molecule CC(=O)N1c2ccccc2Sc2c1ccc1ccccc21	128
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 385 # SMILES read failed, buffer was c12c(sc(n1)c1ccccc1)cc1ccccc1c2	129&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 386 # SMARTS did not match for molecule c1ccc(cc1)c1nc2cc3ccccc3cc2s1	129
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 387 # number of heavy atoms wrong for molecule c1ccc(cc1)c1nc2cc3ccccc3cc2s1	129
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 388 # SMILES read failed, buffer was O=C1Nc2c(cccc2)SC1	130&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 389 # SMARTS did not match for molecule O=C1CSc2ccccc2N1	130
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 390 # number of heavy atoms wrong for molecule O=C1CSc2ccccc2N1	130
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 391 # SMILES read failed, buffer was [Se]([Se]N1CCOCC1)N1CCOCC1	131&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 392 # SMARTS did not match for molecule O1CCN(CC1)[Se][Se]N1CCOCC1	131
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 393 # number of heavy atoms wrong for molecule O1CCN(CC1)[Se][Se]N1CCOCC1	131
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 394 # SMILES read failed, buffer was N(CC)(CC)N=O	132&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 395 # SMARTS did not match for molecule CCN(CC)N=O	132
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 396 # number of heavy atoms wrong for molecule CCN(CC)N=O	132
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 397 # SMILES read failed, buffer was N(CCC)(CCC)N=O	133&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 398 # SMARTS did not match for molecule CCCN(N=O)CCC	133
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 399 # number of heavy atoms wrong for molecule CCCN(N=O)CCC	133
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 400 # SMILES read failed, buffer was N(CC(C)C)(CC(C)C)N=O	134&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 401 # SMARTS did not match for molecule O=NN(CC(C)C)CC(C)C	134
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 402 # number of heavy atoms wrong for molecule O=NN(CC(C)C)CC(C)C	134
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 403 # SMILES read failed, buffer was N(CCCC)(CC)N=O	135&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 404 # SMARTS did not match for molecule CCCCN(CC)N=O	135
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 405 # number of heavy atoms wrong for molecule CCCCN(CC)N=O	135
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 406 # SMILES read failed, buffer was N(N=O)(C)c1ccccc1	137&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 407 # SMARTS did not match for molecule O=NN(C)c1ccccc1	137
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 408 # number of heavy atoms wrong for molecule O=NN(C)c1ccccc1	137
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 409 # SMILES read failed, buffer was N(=O)N1CCCCC1	138&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 410 # SMARTS did not match for molecule O=NN1CCCCC1	138
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 411 # number of heavy atoms wrong for molecule O=NN1CCCCC1	138
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 412 # SMILES read failed, buffer was N(=O)N1CCOCC1	139&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 413 # SMARTS did not match for molecule O=NN1CCOCC1	139
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 414 # number of heavy atoms wrong for molecule O=NN1CCOCC1	139
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 415 # SMILES read failed, buffer was C(/C=C/C(OCCCC)=O)(OCCCC)=O	140&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 416 # SMARTS did not match for molecule CCCCOC(=O)\C=C/C(=O)OCCCC	140
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 417 # number of heavy atoms wrong for molecule CCCCOC(=O)\C=C/C(=O)OCCCC	140
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 418 # SMILES read failed, buffer was C(CBr)(=O)O	141&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 419 # SMARTS did not match for molecule OC(=O)CBr	141
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 420 # number of heavy atoms wrong for molecule OC(=O)CBr	141
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 421 # SMILES read failed, buffer was C(CCl)(=O)O	142&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 422 # SMARTS did not match for molecule OC(=O)CCl	142
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 423 # number of heavy atoms wrong for molecule OC(=O)CCl	142
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 424 # SMILES read failed, buffer was C(/C=C/C(=O)O)(=O)c1ccccc1	143&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 425 # SMARTS did not match for molecule OC(=O)\C=C/C(=O)c1ccccc1	143
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 426 # number of heavy atoms wrong for molecule OC(=O)\C=C/C(=O)c1ccccc1	143
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 427 # SMILES read failed, buffer was C(=O)(O)c1c(N)cccc1	144&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 428 # SMARTS did not match for molecule OC(=O)c1ccccc1N	144
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 429 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1N	144
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 430 # SMILES read failed, buffer was P(=O)(O)(O)c1ccccc1	145&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 431 # SMARTS did not match for molecule OP(=O)(O)c1ccccc1	145
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 432 # number of heavy atoms wrong for molecule OP(=O)(O)c1ccccc1	145
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 433 # SMILES read failed, buffer was S(=O)(=O)(O)c1ccccc1	146&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 434 # SMARTS did not match for molecule OS(=O)(=O)c1ccccc1	146
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 435 # number of heavy atoms wrong for molecule OS(=O)(=O)c1ccccc1	146
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 436 # SMILES read failed, buffer was S(=O)(=O)(O)c1c(N)cccc1	147&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 437 # SMARTS did not match for molecule Nc1ccccc1S(=O)(=O)O	147
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 438 # number of heavy atoms wrong for molecule Nc1ccccc1S(=O)(=O)O	147
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 439 # SMILES read failed, buffer was N(=O)(=O)c1c(Cl)c([N+](=O)[O-])cc(c1)S(=O)(=O)O	148&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 440 # SMARTS did not match for molecule O=N(=O)c1cc(cc([N+](=O)[O-])c1Cl)S(=O)(=O)O	148
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 441 # number of heavy atoms wrong for molecule O=N(=O)c1cc(cc([N+](=O)[O-])c1Cl)S(=O)(=O)O	148
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 442 # SMILES read failed, buffer was C(=O)(O)c1ccccc1	149&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 443 # SMARTS did not match for molecule OC(=O)c1ccccc1	149
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 444 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1	149
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 445 # SMILES read failed, buffer was N(=O)(=O)c1cc(Cl)c(C(=O)O)cc1	150&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 446 # SMARTS did not match for molecule OC(=O)c1ccc(cc1Cl)N(=O)=O	150
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 447 # number of heavy atoms wrong for molecule OC(=O)c1ccc(cc1Cl)N(=O)=O	150
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 448 # SMILES read failed, buffer was C(=C(/CCCC)C(=O)O)/c1cc(Cl)c(O)c(c1)Cl	151&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 449 # SMARTS did not match for molecule CCCC/C(=C\c1cc(Cl)c(O)c(Cl)c1)/C(=O)O	151
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 450 # number of heavy atoms wrong for molecule CCCC/C(=C\c1cc(Cl)c(O)c(Cl)c1)/C(=O)O	151
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 451 # SMILES read failed, buffer was C(=C\c1cc(Br)c(O)c(c1)Br)(/C(=O)O)c1ccc(I)cc1	155&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 452 # SMARTS did not match for molecule Ic1ccc(cc1)\C(=C\c1cc(Br)c(O)c(Br)c1)/C(=O)O	155
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 453 # number of heavy atoms wrong for molecule Ic1ccc(cc1)\C(=C\c1cc(Br)c(O)c(Br)c1)/C(=O)O	155
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 454 # SMILES read failed, buffer was C(=C\c1cc(Cl)c(O)c(c1)Cl)(/C(=O)O)c1ccc(I)cc1	156&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 455 # SMARTS did not match for molecule Ic1ccc(cc1)\C(=C\c1cc(Cl)c(O)c(Cl)c1)/C(=O)O	156
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 456 # number of heavy atoms wrong for molecule Ic1ccc(cc1)\C(=C\c1cc(Cl)c(O)c(Cl)c1)/C(=O)O	156
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 457 # SMILES read failed, buffer was C(=C\c1cc(I)c(O)c(c1)I)(/C(=O)O)c1ccc(I)cc1	157&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 458 # SMARTS did not match for molecule Ic1ccc(cc1)\C(=C\c1cc(I)c(O)c(I)c1)/C(=O)O	157
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 459 # number of heavy atoms wrong for molecule Ic1ccc(cc1)\C(=C\c1cc(I)c(O)c(I)c1)/C(=O)O	157
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 460 # SMILES read failed, buffer was C(=C(/C(=O)O)C)/c1ccc(O)cc1	158&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 461 # SMARTS did not match for molecule Oc1ccc(cc1)/C=C(\C)/C(=O)O	158
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 462 # number of heavy atoms wrong for molecule Oc1ccc(cc1)/C=C(\C)/C(=O)O	158
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 463 # SMILES read failed, buffer was C(=C\c1c(O)c(Br)cc(c1)Br)(/C(=O)O)c1ccccc1	159&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 464 # SMARTS did not match for molecule Brc1cc(/C=C(\C(=O)O)/c2ccccc2)c(O)c(Br)c1	159
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 465 # number of heavy atoms wrong for molecule Brc1cc(/C=C(\C(=O)O)/c2ccccc2)c(O)c(Br)c1	159
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 466 # SMILES read failed, buffer was C(=C\c1cc(Br)c(O)c(c1)Br)(/C(=O)O)c1ccccc1	160&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 467 # SMARTS did not match for molecule OC(=O)/C(=C\c1cc(Br)c(O)c(Br)c1)\c1ccccc1	160
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 468 # number of heavy atoms wrong for molecule OC(=O)/C(=C\c1cc(Br)c(O)c(Br)c1)\c1ccccc1	160
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 469 # SMILES read failed, buffer was C(=C\c1cc(Cl)c(O)c(c1)Cl)(/C(=O)O)c1ccccc1	161&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 470 # SMARTS did not match for molecule OC(=O)/C(=C\c1cc(Cl)c(O)c(Cl)c1)\c1ccccc1	161
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 471 # number of heavy atoms wrong for molecule OC(=O)/C(=C\c1cc(Cl)c(O)c(Cl)c1)\c1ccccc1	161
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 472 # SMILES read failed, buffer was C(=C\c1cc(O)ccc1)(/C(=O)O)c1ccccc1	162&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 473 # SMARTS did not match for molecule Oc1cccc(c1)\C=C(/C(=O)O)\c1ccccc1	162
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 474 # number of heavy atoms wrong for molecule Oc1cccc(c1)\C=C(/C(=O)O)\c1ccccc1	162
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 475 # SMILES read failed, buffer was S(=O)(=O)(O)c1c(/C=C/c2c(S(=O)(=O)O)cc(N)cc2)ccc(c1)N	163&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 476 # SMARTS did not match for molecule Nc1ccc(\C=C/c2ccc(N)cc2S(=O)(=O)O)c(c1)S(=O)(=O)O	163
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 477 # number of heavy atoms wrong for molecule Nc1ccc(\C=C/c2ccc(N)cc2S(=O)(=O)O)c(c1)S(=O)(=O)O	163
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 478 # SMILES read failed, buffer was C(CS(=O)(=O)O)S(=O)(=O)O	164&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 479 # SMARTS did not match for molecule OS(=O)(=O)CCS(=O)(=O)O	164
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 480 # number of heavy atoms wrong for molecule OS(=O)(=O)CCS(=O)(=O)O	164
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 481 # SMILES read failed, buffer was C(=O)(O)[C@@H]1[C@@H](O)[C@@H](O)[C@@H](O)[C@@H](O1)O	165&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 482 # SMARTS did not match for molecule O[C@@H]1O[C@@H](C(=O)O)[C@@H](O)[C@@H](O)[C@@H]1O	165
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 483 # number of heavy atoms wrong for molecule O[C@@H]1O[C@@H](C(=O)O)[C@@H](O)[C@@H](O)[C@@H]1O	165
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 484 # SMILES read failed, buffer was C(CO)(=O)O	166&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 485 # SMARTS did not match for molecule OCC(=O)O	166
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 486 # number of heavy atoms wrong for molecule OCC(=O)O	166
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 487 # SMILES read failed, buffer was C([C@@H](C(=O)O)Br)(C)C	167&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 488 # SMARTS did not match for molecule Br[C@@H](C(C)C)C(=O)O	167
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 489 # number of heavy atoms wrong for molecule Br[C@@H](C(C)C)C(=O)O	167
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 490 # SMILES read failed, buffer was S(=O)(=O)(O)c1c2c(c(N)cc1)cccc2	168&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 491 # SMARTS did not match for molecule Nc1ccc(c2ccccc12)S(=O)(=O)O	168
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 492 # number of heavy atoms wrong for molecule Nc1ccc(c2ccccc12)S(=O)(=O)O	168
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 493 # SMILES read failed, buffer was N(C(OCC)=O)(c1cc2c(c(O)cc(c2)S(=O)(=O)O)cc1)c1ccccc1	169&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 494 # SMARTS did not match for molecule CCOC(=O)N(c1ccccc1)c1ccc2c(O)cc(cc2c1)S(=O)(=O)O	169
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 495 # number of heavy atoms wrong for molecule CCOC(=O)N(c1ccccc1)c1ccc2c(O)cc(cc2c1)S(=O)(=O)O	169
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 496 # SMILES read failed, buffer was C(=O)(O)c1ccccn1	171&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 497 # SMARTS did not match for molecule OC(=O)c1ccccn1	171
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 498 # number of heavy atoms wrong for molecule OC(=O)c1ccccn1	171
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 499 # SMILES read failed, buffer was C([C@@H](Br)C)(=O)O	172&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 500 # SMARTS did not match for molecule C[C@@H](Br)C(=O)O	172
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 501 # number of heavy atoms wrong for molecule C[C@@H](Br)C(=O)O	172
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 502 # SMILES read failed, buffer was C([C@@H](C)Cl)(=O)O	173&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 503 # SMARTS did not match for molecule C[C@@H](Cl)C(=O)O	173
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 504 # number of heavy atoms wrong for molecule C[C@@H](Cl)C(=O)O	173
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 505 # SMILES read failed, buffer was C(C(=O)O)CCl	174&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 506 # SMARTS did not match for molecule OC(=O)CCCl	174
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 507 # number of heavy atoms wrong for molecule OC(=O)CCCl	174
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 508 # SMILES read failed, buffer was C([C@@H](CBr)Br)(=O)O	175&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 509 # SMARTS did not match for molecule OC(=O)[C@@H](Br)CBr	175
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 510 # number of heavy atoms wrong for molecule OC(=O)[C@@H](Br)CBr	175
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 511 # SMILES read failed, buffer was C(=O)(O)c1nc(C(=O)O)ccc1	176&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 512 # SMARTS did not match for molecule OC(=O)c1cccc(n1)C(=O)O	176
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 513 # number of heavy atoms wrong for molecule OC(=O)c1cccc(n1)C(=O)O	176
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 514 # SMILES read failed, buffer was C(=O)(O)c1ccc(C(=O)O)nc1	177&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 515 # SMARTS did not match for molecule OC(=O)c1ccc(cn1)C(=O)O	177
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 516 # number of heavy atoms wrong for molecule OC(=O)c1ccc(cn1)C(=O)O	177
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 517 # SMILES read failed, buffer was C(=O)(O)c1c(C(=O)O)cncc1	178&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 518 # SMARTS did not match for molecule OC(=O)c1cnccc1C(=O)O	178
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 519 # number of heavy atoms wrong for molecule OC(=O)c1cnccc1C(=O)O	178
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 520 # SMILES read failed, buffer was C(C(=O)O)(C)=O	179&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 521 # SMARTS did not match for molecule OC(=O)C(=O)C	179
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 522 # number of heavy atoms wrong for molecule OC(=O)C(=O)C	179
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 523 # SMILES read failed, buffer was C(=O)(O)c1c(O)cccc1	180&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 524 # SMARTS did not match for molecule OC(=O)c1ccccc1O	180
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 525 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1O	180
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 526 # SMILES read failed, buffer was C(=O)(O)c1c(O)c([N+](=O)[O-])cc(c1)[N+](=O)[O-]	181&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 527 # SMARTS did not match for molecule [O-][N+](=O)c1cc(C(=O)O)c(O)c(c1)[N+](=O)[O-]	181
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 528 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(C(=O)O)c(O)c(c1)[N+](=O)[O-]	181
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 529 # SMILES read failed, buffer was C(=O)(O)c1c(O)c([N+](=O)[O-])ccc1	182&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 530 # SMARTS did not match for molecule OC(=O)c1cccc([N+](=O)[O-])c1O	182
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 531 # number of heavy atoms wrong for molecule OC(=O)c1cccc([N+](=O)[O-])c1O	182
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 532 # SMILES read failed, buffer was C(=O)(O)c1cc([N+](=O)[O-])ccc1O	183&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 533 # SMARTS did not match for molecule [O-][N+](=O)c1ccc(O)c(c1)C(=O)O	183
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 534 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccc(O)c(c1)C(=O)O	183
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 535 # SMILES read failed, buffer was C([C@@H](C(=O)O)Br)CC	184&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 536 # SMARTS did not match for molecule CCC[C@@H](Br)C(=O)O	184
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 537 # number of heavy atoms wrong for molecule CCC[C@@H](Br)C(=O)O	184
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 538 # SMILES read failed, buffer was C([C@@H](O)[C@@H]1C(=O)[C@@H](C)C[C@@H](C1)C)C1CC(=O)NC(C1)=O	185&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 539 # SMARTS did not match for molecule O=C1NC(=O)CC(C1)C[C@@H](O)[C@@H]1C[C@@H](C)C[C@@H](C)C1=O	185
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 540 # number of heavy atoms wrong for molecule O=C1NC(=O)CC(C1)C[C@@H](O)[C@@H]1C[C@@H](C)C[C@@H](C)C1=O	185
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 541 # SMILES read failed, buffer was CC1=C2C(C(O)=C(C1=O)C(=O)O)=CO[C@H]([C@@H]2C)C	186&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 542 # SMARTS did not match for molecule C[C@H]1OC=C2C(=C(C)C(=O)C(=C2O)C(=O)O)[C@@H]1C	186
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 543 # number of heavy atoms wrong for molecule C[C@H]1OC=C2C(=C(C)C(=O)C(=C2O)C(=O)O)[C@@H]1C	186
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 544 # SMILES read failed, buffer was O(CCCC)C(N)=O	187&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 545 # SMARTS did not match for molecule CCCCOC(=O)N	187
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 546 # number of heavy atoms wrong for molecule CCCCOC(=O)N	187
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 547 # SMILES read failed, buffer was N(C(OCCCl)=O)c1c(C)cccc1	188&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 548 # SMARTS did not match for molecule ClCCOC(=O)Nc1ccccc1C	188
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 549 # number of heavy atoms wrong for molecule ClCCOC(=O)Nc1ccccc1C	188
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 550 # SMILES read failed, buffer was N(C(OCCCl)=O)c1ccccc1	189&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 551 # SMARTS did not match for molecule ClCCOC(=O)Nc1ccccc1	189
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 552 # number of heavy atoms wrong for molecule ClCCOC(=O)Nc1ccccc1	189
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 553 # SMILES read failed, buffer was C(NCC=C)(OCC)=O	190&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 554 # SMARTS did not match for molecule CCOC(=O)NCC=C	190
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 555 # number of heavy atoms wrong for molecule CCOC(=O)NCC=C	190
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 556 # SMILES read failed, buffer was Cc1ccc(S)cc1	191&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 557 # SMARTS did not match for molecule Cc1ccc(S)cc1	191
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 558 # number of heavy atoms wrong for molecule Cc1ccc(S)cc1	191
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 559 # SMILES read failed, buffer was S(Sc1c([N+](=O)[O-])cc([N+](=O)[O-])cc1)c1c([N+](=O)[O-])cc([N+](=O)[O-])cc1	192&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 560 # SMARTS did not match for molecule [O-][N+](=O)c1cc(ccc1SSc1ccc(cc1[N+](=O)[O-])[N+](=O)[O-])[N+](=O)[O-]	192
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 561 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(ccc1SSc1ccc(cc1[N+](=O)[O-])[N+](=O)[O-])[N+](=O)[O-]	192
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 562 # SMILES read failed, buffer was C(#CC1(O)CCCC1)C1(O)CCCC1	193&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 563 # SMARTS did not match for molecule OC1(CCCC1)C#CC1(O)CCCC1	193
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 564 # number of heavy atoms wrong for molecule OC1(CCCC1)C#CC1(O)CCCC1	193
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 565 # SMILES read failed, buffer was C(C(=O)c1ccccc1)(c1ccccc1)(c1ccccc1)c1ccccc1	194&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 566 # SMARTS did not match for molecule O=C(c1ccccc1)C(c1ccccc1)(c1ccccc1)c1ccccc1	194
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 567 # number of heavy atoms wrong for molecule O=C(c1ccccc1)C(c1ccccc1)(c1ccccc1)c1ccccc1	194
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 568 # SMILES read failed, buffer was C(C(N)=O)NC	195&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 569 # SMARTS did not match for molecule CNCC(=O)N	195
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 570 # number of heavy atoms wrong for molecule CNCC(=O)N	195
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 571 # SMILES read failed, buffer was C(/C=C/c1cccnc1)(=O)c1ccccc1	196&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 572 # SMARTS did not match for molecule O=C(/C=C\c1cccnc1)c1ccccc1	196
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 573 # number of heavy atoms wrong for molecule O=C(/C=C\c1cccnc1)c1ccccc1	196
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 574 # SMILES read failed, buffer was C(/C=C/c1ccccn1)(=O)c1ccccc1	197&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 575 # SMARTS did not match for molecule O=C(/C=C\c1ccccn1)c1ccccc1	197
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 576 # number of heavy atoms wrong for molecule O=C(/C=C\c1ccccn1)c1ccccc1	197
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 577 # SMILES read failed, buffer was C([C@@H]([C@@H](O)c1ccccn1)C)(=O)c1ccccc1	198&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 578 # SMARTS did not match for molecule C[C@@H]([C@@H](O)c1ccccn1)C(=O)c1ccccc1	198
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 579 # number of heavy atoms wrong for molecule C[C@@H]([C@@H](O)c1ccccn1)C(=O)c1ccccc1	198
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 580 # SMILES read failed, buffer was N(C(C)=O)c1cc(C)cc(c1)C	200&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 581 # SMARTS did not match for molecule CC(=O)Nc1cc(C)cc(C)c1	200
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 582 # number of heavy atoms wrong for molecule CC(=O)Nc1cc(C)cc(C)c1	200
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 583 # SMILES read failed, buffer was S(=O)(=O)(O)c1c2c(C(=O)c3c(S(=O)(=O)O)cccc3C2=O)ccc1	201&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 584 # SMARTS did not match for molecule O=C1c2cccc(c2C(=O)c2cccc(c12)S(=O)(=O)O)S(=O)(=O)O	201
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 585 # number of heavy atoms wrong for molecule O=C1c2cccc(c2C(=O)c2cccc(c12)S(=O)(=O)O)S(=O)(=O)O	201
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 586 # SMILES read failed, buffer was S(=O)(=O)(O)c1c2c(C(=O)c3cccc(c3C2=O)S(=O)(=O)O)ccc1	202&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 587 # SMARTS did not match for molecule O=C1c2cccc(c2C(=O)c2c1cccc2S(=O)(=O)O)S(=O)(=O)O	202
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 588 # number of heavy atoms wrong for molecule O=C1c2cccc(c2C(=O)c2c1cccc2S(=O)(=O)O)S(=O)(=O)O	202
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 589 # SMILES read failed, buffer was S(Sc1c([N+](=O)[O-])cccc1)c1c([N+](=O)[O-])cccc1	203&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 590 # SMARTS did not match for molecule [O-][N+](=O)c1ccccc1SSc1ccccc1[N+](=O)[O-]	203
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 591 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccccc1SSc1ccccc1[N+](=O)[O-]	203
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 592 # SMILES read failed, buffer was N(=C/c1ccccc1)/c1ccc(Cl)nc1	204&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 593 # SMARTS did not match for molecule Clc1ccc(\N=C\c2ccccc2)cn1	204
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 594 # number of heavy atoms wrong for molecule Clc1ccc(\N=C\c2ccccc2)cn1	204
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 595 # SMILES read failed, buffer was C(=O)(O)c1c(NC(Nc2c(C(=O)O)cccc2)=O)cccc1	205&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 596 # SMARTS did not match for molecule O=C(Nc1ccccc1C(=O)O)Nc1ccccc1C(=O)O	205
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 597 # number of heavy atoms wrong for molecule O=C(Nc1ccccc1C(=O)O)Nc1ccccc1C(=O)O	205
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 598 # SMILES read failed, buffer was C(C)(C)(O)c1c2c(c(C(C)(C)O)ccc2)ccc1	206&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 599 # SMARTS did not match for molecule CC(C)(O)c1cccc2c1cccc2C(C)(C)O	206
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 600 # number of heavy atoms wrong for molecule CC(C)(O)c1cccc2c1cccc2C(C)(C)O	206
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 601 # SMILES read failed, buffer was C(OCCC(OC)=N)(=O)c1ccccc1	207&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 602 # SMARTS did not match for molecule COC(=N)CCOC(=O)c1ccccc1	207
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 603 # number of heavy atoms wrong for molecule COC(=N)CCOC(=O)c1ccccc1	207
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 604 # SMILES read failed, buffer was S(=O)(=O)(c1ccc(C)cc1)c1ccc(C)cc1	208&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 605 # SMARTS did not match for molecule Cc1ccc(cc1)S(=O)(=O)c1ccc(C)cc1	208
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 606 # number of heavy atoms wrong for molecule Cc1ccc(cc1)S(=O)(=O)c1ccc(C)cc1	208
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 607 # SMILES read failed, buffer was C(SSC(=O)c1ccccc1)(=O)c1ccccc1	209&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 608 # SMARTS did not match for molecule O=C(SSC(=O)c1ccccc1)c1ccccc1	209
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 609 # number of heavy atoms wrong for molecule O=C(SSC(=O)c1ccccc1)c1ccccc1	209
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 610 # SMILES read failed, buffer was C(CCC(=O)O)(CCC(=O)O)(C)C	210&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 611 # SMARTS did not match for molecule OC(=O)CCC(C)(C)CCC(=O)O	210
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 612 # number of heavy atoms wrong for molecule OC(=O)CCC(C)(C)CCC(=O)O	210
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 613 # SMILES read failed, buffer was S(Sc1ccc(CC(=O)O)cc1)c1ccc(CC(=O)O)cc1	211&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 614 # SMARTS did not match for molecule OC(=O)Cc1ccc(SSc2ccc(cc2)CC(=O)O)cc1	211
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 615 # number of heavy atoms wrong for molecule OC(=O)Cc1ccc(SSc2ccc(cc2)CC(=O)O)cc1	211
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 616 # SMILES read failed, buffer was S(Cl)(=O)(=O)c1ccc(Oc2ccc(S(Cl)(=O)=O)cc2)cc1	212&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 617 # SMARTS did not match for molecule ClS(=O)(=O)c1ccc(cc1)Oc1ccc(cc1)S(=O)(=O)Cl	212
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 618 # number of heavy atoms wrong for molecule ClS(=O)(=O)c1ccc(cc1)Oc1ccc(cc1)S(=O)(=O)Cl	212
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 619 # SMILES read failed, buffer was S(Sc1c(C(=O)O)cccc1)c1c(C(=O)O)cccc1	213&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 620 # SMARTS did not match for molecule OC(=O)c1ccccc1SSc1ccccc1C(=O)O	213
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 621 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1SSc1ccccc1C(=O)O	213
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 622 # SMILES read failed, buffer was O(c1ccc(C(C)=O)cc1)c1ccc(C(C)=O)cc1	214&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 623 # SMARTS did not match for molecule CC(=O)c1ccc(cc1)Oc1ccc(cc1)C(=O)C	214
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 624 # number of heavy atoms wrong for molecule CC(=O)c1ccc(cc1)Oc1ccc(cc1)C(=O)C	214
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 625 # SMILES read failed, buffer was O(C(CCC)=O)c1c(C(=O)O)cccc1	215&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 626 # SMARTS did not match for molecule CCCC(=O)Oc1ccccc1C(=O)O	215
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 627 # number of heavy atoms wrong for molecule CCCC(=O)Oc1ccccc1C(=O)O	215
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 628 # SMILES read failed, buffer was C(C)(C)c1ccc(/C=C/C(=O)O)cc1	216&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 629 # SMARTS did not match for molecule OC(=O)\C=C/c1ccc(cc1)C(C)C	216
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 630 # number of heavy atoms wrong for molecule OC(=O)\C=C/c1ccc(cc1)C(C)C	216
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 631 # SMILES read failed, buffer was S(N)(=O)(=O)c1ccc(NC(C)=O)cc1	217&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 632 # SMARTS did not match for molecule CC(=O)Nc1ccc(cc1)S(=O)(=O)N	217
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 633 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(cc1)S(=O)(=O)N	217
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 634 # SMILES read failed, buffer was N(=O)(=O)c1cc(Cl)c(N)c(c1)Cl	218&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 635 # SMARTS did not match for molecule Clc1cc(cc(Cl)c1N)N(=O)=O	218
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 636 # number of heavy atoms wrong for molecule Clc1cc(cc(Cl)c1N)N(=O)=O	218
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 637 # SMILES read failed, buffer was O(c1ccc([C@@H](C)O)cc1)c1ccc([C@@H](C)O)cc1	219&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 638 # SMARTS did not match for molecule C[C@@H](O)c1ccc(cc1)Oc1ccc(cc1)[C@@H](C)O	219
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 639 # number of heavy atoms wrong for molecule C[C@@H](O)c1ccc(cc1)Oc1ccc(cc1)[C@@H](C)O	219
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 640 # SMILES read failed, buffer was S(Sc1ccc(NC(CCCCCCCCCCC)=O)cc1)c1ccc(NC(CCCCCCCCCCC)=O)cc1	220&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 641 # SMARTS did not match for molecule CCCCCCCCCCCC(=O)Nc1ccc(SSc2ccc(cc2)NC(=O)CCCCCCCCCCC)cc1	220
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 642 # number of heavy atoms wrong for molecule CCCCCCCCCCCC(=O)Nc1ccc(SSc2ccc(cc2)NC(=O)CCCCCCCCCCC)cc1	220
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 643 # SMILES read failed, buffer was C(CCC(=O)c1ccc(Br)cc1)(=O)c1ccc(Br)cc1	222&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 644 # SMARTS did not match for molecule Brc1ccc(cc1)C(=O)CCC(=O)c1ccc(Br)cc1	222
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 645 # number of heavy atoms wrong for molecule Brc1ccc(cc1)C(=O)CCC(=O)c1ccc(Br)cc1	222
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 646 # SMILES read failed, buffer was C(=O)(O)c1c(OC(CCCCC)=O)cccc1	223&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 647 # SMARTS did not match for molecule CCCCCC(=O)Oc1ccccc1C(=O)O	223
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 648 # number of heavy atoms wrong for molecule CCCCCC(=O)Oc1ccccc1C(=O)O	223
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 649 # SMILES read failed, buffer was C(C)(=S)N1CCCCC1	224&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 650 # SMARTS did not match for molecule CC(=S)N1CCCCC1	224
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 651 # number of heavy atoms wrong for molecule CC(=S)N1CCCCC1	224
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 652 # SMILES read failed, buffer was C(C)(=O)c1c2c(c(C(C)=O)ccc2)ccc1	225&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 653 # SMARTS did not match for molecule CC(=O)c1cccc2c(cccc12)C(=O)C	225
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 654 # number of heavy atoms wrong for molecule CC(=O)c1cccc2c(cccc12)C(=O)C	225
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 655 # SMILES read failed, buffer was C(CCCCCN)(OCC)=O	226&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 656 # SMARTS did not match for molecule NCCCCCC(=O)OCC	226
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 657 # number of heavy atoms wrong for molecule NCCCCCC(=O)OCC	226
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 658 # SMILES read failed, buffer was S(Cc1ccccc1)(=O)(=O)c1ccc(C)cc1	227&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 659 # SMARTS did not match for molecule Cc1ccc(cc1)S(=O)(=O)Cc1ccccc1	227
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 660 # number of heavy atoms wrong for molecule Cc1ccc(cc1)S(=O)(=O)Cc1ccccc1	227
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 661 # SMILES read failed, buffer was C([C@@H](C(=O)O)N)CCCCC[C@@H](C(=O)O)N	228&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 662 # SMARTS did not match for molecule OC(=O)[C@@H](N)CCCCCC[C@@H](N)C(=O)O	228
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 663 # number of heavy atoms wrong for molecule OC(=O)[C@@H](N)CCCCCC[C@@H](N)C(=O)O	228
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 664 # SMILES read failed, buffer was Sc1c2c(c(S)ccc2)ccc1	229&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 665 # SMARTS did not match for molecule Sc1cccc2c(S)cccc12	229
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 666 # number of heavy atoms wrong for molecule Sc1cccc2c(S)cccc12	229
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 667 # SMILES read failed, buffer was C(/C=C/c1ccccn1)(=O)c1ccc(N)cc1	231&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 668 # SMARTS did not match for molecule Nc1ccc(cc1)C(=O)/C=C\c1ccccn1	231
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 669 # number of heavy atoms wrong for molecule Nc1ccc(cc1)C(=O)/C=C\c1ccccn1	231
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 670 # SMILES read failed, buffer was C(N(C)C)CC#N	232&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 671 # SMARTS did not match for molecule N#CCCN(C)C	232
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 672 # number of heavy atoms wrong for molecule N#CCCN(C)C	232
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 673 # SMILES read failed, buffer was C([C@@H](C(OCC)=O)C(C)=O)C(OCC)=O	233&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 674 # SMARTS did not match for molecule CCOC(=O)C[C@@H](C(=O)C)C(=O)OCC	233
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 675 # number of heavy atoms wrong for molecule CCOC(=O)C[C@@H](C(=O)C)C(=O)OCC	233
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 676 # SMILES read failed, buffer was C(#C/C(=C/CCC)C)C=1CCCCC1	234&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 677 # SMARTS did not match for molecule CCC/C=C(\C)/C#CC1=CCCCC1	234
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 678 # number of heavy atoms wrong for molecule CCC/C=C(\C)/C#CC1=CCCCC1	234
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 679 # SMILES read failed, buffer was O(CCC#N)C(C)=O	235&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 680 # SMARTS did not match for molecule CC(=O)OCCC#N	235
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 681 # number of heavy atoms wrong for molecule CC(=O)OCCC#N	235
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 682 # SMILES read failed, buffer was C(OCC)(=O)N1CCCCC1	236&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 683 # SMARTS did not match for molecule CCOC(=O)N1CCCCC1	236
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 684 # number of heavy atoms wrong for molecule CCOC(=O)N1CCCCC1	236
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 685 # SMILES read failed, buffer was C(OCCC#N)(=O)c1ccccc1	237&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 686 # SMARTS did not match for molecule N#CCCOC(=O)c1ccccc1	237
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 687 # number of heavy atoms wrong for molecule N#CCCOC(=O)c1ccccc1	237
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 688 # SMILES read failed, buffer was C(C)(=O)N1CCCCC1	239&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 689 # SMARTS did not match for molecule CC(=O)N1CCCCC1	239
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 690 # number of heavy atoms wrong for molecule CC(=O)N1CCCCC1	239
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 691 # SMILES read failed, buffer was c12c3c(ccc1CCCC2)CCCC3	240&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 692 # SMARTS did not match for molecule C1CCc2c(C1)ccc1CCCCc21	240
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 693 # number of heavy atoms wrong for molecule C1CCc2c(C1)ccc1CCCCc21	240
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 694 # SMILES read failed, buffer was C(OCCCC)OCCCC	241&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 695 # SMARTS did not match for molecule CCCCOCOCCCC	241
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 696 # number of heavy atoms wrong for molecule CCCCOCOCCCC	241
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 697 # SMILES read failed, buffer was S([C@@H](CC(C)=O)c1ccccc1)CCSCCS[C@@H](CC(C)=O)c1ccccc1	243&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 698 # SMARTS did not match for molecule CC(=O)C[C@@H](SCCSCCS[C@@H](CC(=O)C)c1ccccc1)c1ccccc1	243
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 699 # number of heavy atoms wrong for molecule CC(=O)C[C@@H](SCCSCCS[C@@H](CC(=O)C)c1ccccc1)c1ccccc1	243
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 700 # SMILES read failed, buffer was C[C@@]12[C@@H](OC([C@@H]([C@@H](OC)c3ccccc3)[Hg]Br)=O)C[C@@H](C1(C)C)CC2	244&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 701 # SMARTS did not match for molecule Br[Hg][C@@H](C(=O)O[C@@H]1C[C@@H]2CC[C@@]1(C)C2(C)C)[C@@H](OC)c1ccccc1	244
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 702 # number of heavy atoms wrong for molecule Br[Hg][C@@H](C(=O)O[C@@H]1C[C@@H]2CC[C@@]1(C)C2(C)C)[C@@H](OC)c1ccccc1	244
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 703 # SMILES read failed, buffer was C(CC(=O)c1ccccc1)(c1ccccc1)(c1ccccc1)c1ccccc1	245&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 704 # SMARTS did not match for molecule O=C(CC(c1ccccc1)(c1ccccc1)c1ccccc1)c1ccccc1	245
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 705 # number of heavy atoms wrong for molecule O=C(CC(c1ccccc1)(c1ccccc1)c1ccccc1)c1ccccc1	245
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 706 # SMILES read failed, buffer was C(SC(C)=S)C(C)C	246&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 707 # SMARTS did not match for molecule CC(C)CSC(=S)C	246
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 708 # number of heavy atoms wrong for molecule CC(C)CSC(=S)C	246
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 709 # SMILES read failed, buffer was Clc1c(Cl)ccc(c1)N	247&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 710 # SMARTS did not match for molecule Nc1ccc(Cl)c(Cl)c1	247
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 711 # number of heavy atoms wrong for molecule Nc1ccc(Cl)c(Cl)c1	247
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 712 # SMILES read failed, buffer was P(F)(=O)(O)O	248&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 713 # SMARTS did not match for molecule OP(=O)(O)F	248
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 714 # number of heavy atoms wrong for molecule OP(=O)(O)F	248
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 715 # SMILES read failed, buffer was P(N)(N)(=O)c1ccccc1	250&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 716 # SMARTS did not match for molecule NP(=O)(N)c1ccccc1	250
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 717 # number of heavy atoms wrong for molecule NP(=O)(N)c1ccccc1	250
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 718 # SMILES read failed, buffer was Nc1nc(N)ncn1	251&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 719 # SMARTS did not match for molecule Nc1ncnc(N)n1	251
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 720 # number of heavy atoms wrong for molecule Nc1ncnc(N)n1	251
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 721 # SMILES read failed, buffer was S(N)(N)(=O)=O	252&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 722 # SMARTS did not match for molecule NS(=O)(=O)N	252
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 723 # number of heavy atoms wrong for molecule NS(=O)(=O)N	252
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 724 # SMILES read failed, buffer was NN.O(B1OB(O)O1)B1OB(O)O1	253&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 725 # SMARTS did not match for molecule NN.OB1OB(O1)OB1OB(O)O1	253
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 726 # number of heavy atoms wrong for molecule NN.OB1OB(O1)OB1OB(O)O1	253
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 727 # SMILES read failed, buffer was P(NC1CCCCC1)(Oc1ccccc1)(Oc1ccccc1)=O	254&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 728 # SMARTS did not match for molecule O=P(NC1CCCCC1)(Oc1ccccc1)Oc1ccccc1	254
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 729 # number of heavy atoms wrong for molecule O=P(NC1CCCCC1)(Oc1ccccc1)Oc1ccccc1	254
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 730 # SMILES read failed, buffer was P(OCCCC)(=O)(N1CCOCC1)N1CCOCC1	255&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 731 # SMARTS did not match for molecule CCCCOP(=O)(N1CCOCC1)N1CCOCC1	255
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 732 # number of heavy atoms wrong for molecule CCCCOP(=O)(N1CCOCC1)N1CCOCC1	255
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 733 # SMILES read failed, buffer was O([P@@](N)(=O)c1ccccc1)CC	256&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 734 # SMARTS did not match for molecule CCO[P@@](=O)(N)c1ccccc1	256
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 735 # number of heavy atoms wrong for molecule CCO[P@@](=O)(N)c1ccccc1	256
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 736 # SMILES read failed, buffer was Cc1nc(N)nc(n1)N	257&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 737 # SMARTS did not match for molecule Cc1nc(N)nc(N)n1	257
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 738 # number of heavy atoms wrong for molecule Cc1nc(N)nc(N)n1	257
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 739 # SMILES read failed, buffer was P(NN)(NN)(=S)c1ccccc1	258&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 740 # SMARTS did not match for molecule NNP(=S)(NN)c1ccccc1	258
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 741 # number of heavy atoms wrong for molecule NNP(=S)(NN)c1ccccc1	258
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 742 # SMILES read failed, buffer was N(NC(NN)=S)c1ccccc1	259&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 743 # SMARTS did not match for molecule NNC(=S)NNc1ccccc1	259
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 744 # number of heavy atoms wrong for molecule NNC(=S)NNc1ccccc1	259
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 745 # SMILES read failed, buffer was S(NCC)(NCC)(=O)=O	260&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 746 # SMARTS did not match for molecule CCNS(=O)(=O)NCC	260
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 747 # number of heavy atoms wrong for molecule CCNS(=O)(=O)NCC	260
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 748 # SMILES read failed, buffer was C(NNC(N)=S)(CC(C)=O)(C)C	261&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 749 # SMARTS did not match for molecule NC(=S)NNC(C)(C)CC(=O)C	261
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 750 # number of heavy atoms wrong for molecule NC(=S)NNC(C)(C)CC(=O)C	261
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 751 # SMILES read failed, buffer was P(Nc1ccccc1)(Nc1ccccc1)(Nc1ccccc1)=O	262&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 752 # SMARTS did not match for molecule O=P(Nc1ccccc1)(Nc1ccccc1)Nc1ccccc1	262
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 753 # number of heavy atoms wrong for molecule O=P(Nc1ccccc1)(Nc1ccccc1)Nc1ccccc1	262
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 754 # SMILES read failed, buffer was N(S(=O)(=O)O)(S(=O)(=O)O)S(=O)(=O)O	263&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 755 # SMARTS did not match for molecule OS(=O)(=O)N(S(=O)(=O)O)S(=O)(=O)O	263
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 756 # number of heavy atoms wrong for molecule OS(=O)(=O)N(S(=O)(=O)O)S(=O)(=O)O	263
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 757 # SMILES read failed, buffer was C(C(NN)=O)(NN)=O	264&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 758 # SMARTS did not match for molecule NNC(=O)C(=O)NN	264
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 759 # number of heavy atoms wrong for molecule NNC(=O)C(=O)NN	264
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 760 # SMILES read failed, buffer was C(=N/NC(Nc1nnn[nH]1)=O)/c1c(O)cccc1	265&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 761 # SMARTS did not match for molecule O=C(N/N=C\c1ccccc1O)Nc1nnn[nH]1	265
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 762 # number of heavy atoms wrong for molecule O=C(N/N=C\c1ccccc1O)Nc1nnn[nH]1	265
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 763 # SMILES read failed, buffer was C(NNC(N)=O)(NNC(N)=O)=O	266&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 764 # SMARTS did not match for molecule O=C(NNC(=O)N)NNC(=O)N	266
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 765 # number of heavy atoms wrong for molecule O=C(NNC(=O)N)NNC(=O)N	266
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 766 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1ccccc1	267&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 767 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccccc1	267
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 768 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccccc1	267
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 769 # SMILES read failed, buffer was C(=N\NC(N/N=C(\C)c1ccccc1)=S)(/C)c1ccccc1	268&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 770 # SMARTS did not match for molecule S=C(N/N=C(\C)/c1ccccc1)N\N=C(\C)/c1ccccc1	268
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 771 # number of heavy atoms wrong for molecule S=C(N/N=C(\C)/c1ccccc1)N\N=C(\C)/c1ccccc1	268
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 772 # SMILES read failed, buffer was C(=N\N=C(/C)c1ccc(Cl)cc1)(/C)c1ccc(Cl)cc1	269&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 773 # SMARTS did not match for molecule Clc1ccc(cc1)/C(=N/N=C(\C)/c1ccc(Cl)cc1)\C	269
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 774 # number of heavy atoms wrong for molecule Clc1ccc(cc1)/C(=N/N=C(\C)/c1ccc(Cl)cc1)\C	269
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 775 # SMILES read failed, buffer was N(C(OCC)=O)c1nnn[nH]1	270&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 776 # SMARTS did not match for molecule CCOC(=O)Nc1nnn[nH]1	270
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 777 # number of heavy atoms wrong for molecule CCOC(=O)Nc1nnn[nH]1	270
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 778 # SMILES read failed, buffer was S(C)(N)(=O)=O	271&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 779 # SMARTS did not match for molecule CS(=O)(=O)N	271
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 780 # number of heavy atoms wrong for molecule CS(=O)(=O)N	271
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 781 # SMILES read failed, buffer was N(C(OCC)=O)C(N)=O	272&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 782 # SMARTS did not match for molecule CCOC(=O)NC(=O)N	272
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 783 # number of heavy atoms wrong for molecule CCOC(=O)NC(=O)N	272
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 784 # SMILES read failed, buffer was C(#N)c1c2c(nc3c1cccc3)cccc2	273&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 785 # SMARTS did not match for molecule N#Cc1c2ccccc2nc2ccccc12	273
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 786 # number of heavy atoms wrong for molecule N#Cc1c2ccccc2nc2ccccc12	273
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 787 # SMILES read failed, buffer was C(C(=O)c1ccc(Cl)cc1)(=O)c1ccc(Cl)cc1	274&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 788 # SMARTS did not match for molecule Clc1ccc(cc1)C(=O)C(=O)c1ccc(Cl)cc1	274
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 789 # number of heavy atoms wrong for molecule Clc1ccc(cc1)C(=O)C(=O)c1ccc(Cl)cc1	274
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 790 # SMILES read failed, buffer was C(NCCCCCCNC(=O)c1ccccc1)(=O)c1ccccc1	275&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 791 # SMARTS did not match for molecule O=C(NCCCCCCNC(=O)c1ccccc1)c1ccccc1	275
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 792 # number of heavy atoms wrong for molecule O=C(NCCCCCCNC(=O)c1ccccc1)c1ccccc1	275
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 793 # SMILES read failed, buffer was C([C@@H](CC(=O)c1ccccc1)N1CCN(Cc2ccccc2)CC1)(=O)c1ccccc1	276&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 794 # SMARTS did not match for molecule O=C(c1ccccc1)[C@@H](CC(=O)c1ccccc1)N1CCN(CC1)Cc1ccccc1	276
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 795 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[C@@H](CC(=O)c1ccccc1)N1CCN(CC1)Cc1ccccc1	276
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 796 # SMILES read failed, buffer was C(=O)(O)c1ccc(Cl)nc1	277&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 797 # SMARTS did not match for molecule Clc1ccc(cn1)C(=O)O	277
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 798 # number of heavy atoms wrong for molecule Clc1ccc(cn1)C(=O)O	277
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 799 # SMILES read failed, buffer was O=C1C(=C(O)C(=O)c2c1cccc2)C1CCCCC1	278&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 800 # SMARTS did not match for molecule OC1=C(C2CCCCC2)C(=O)c2ccccc2C1=O	278
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 801 # number of heavy atoms wrong for molecule OC1=C(C2CCCCC2)C(=O)c2ccccc2C1=O	278
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 802 # SMILES read failed, buffer was C([C@@H](Cc1ccccc1)N1CCCCC1)(=O)c1ccccc1	279&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 803 # SMARTS did not match for molecule O=C(c1ccccc1)[C@@H](Cc1ccccc1)N1CCCCC1	279
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 804 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[C@@H](Cc1ccccc1)N1CCCCC1	279
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 805 # SMILES read failed, buffer was Clc1c2c(cc([nH]2)c2ccccc2)cc(c1)Cl	281&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 806 # SMARTS did not match for molecule Clc1cc2cc([nH]c2c(Cl)c1)c1ccccc1	281
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 807 # number of heavy atoms wrong for molecule Clc1cc2cc([nH]c2c(Cl)c1)c1ccccc1	281
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 808 # SMILES read failed, buffer was N(N)c1c(C(=O)O)cccc1	282&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 809 # SMARTS did not match for molecule NNc1ccccc1C(=O)O	282
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 810 # number of heavy atoms wrong for molecule NNc1ccccc1C(=O)O	282
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 811 # SMILES read failed, buffer was N(=O)(=O)c1cc(N)cc(c1)N	283&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 812 # SMARTS did not match for molecule Nc1cc(N)cc(c1)N(=O)=O	283
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 813 # number of heavy atoms wrong for molecule Nc1cc(N)cc(c1)N(=O)=O	283
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 814 # SMILES read failed, buffer was N(=O)(=O)c1cc([N+](=O)[O-])cc(c1)N	284&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 815 # SMARTS did not match for molecule Nc1cc(cc(c1)N(=O)=O)[N+](=O)[O-]	284
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 816 # number of heavy atoms wrong for molecule Nc1cc(cc(c1)N(=O)=O)[N+](=O)[O-]	284
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 817 # SMILES read failed, buffer was C[C@@]12C(C)(C)[C@@H](C(C1=O)=O)CC2	285&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 818 # SMARTS did not match for molecule O=C1C(=O)[C@@]2(C)CC[C@@H]1C2(C)C	285
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 819 # number of heavy atoms wrong for molecule O=C1C(=O)[C@@]2(C)CC[C@@H]1C2(C)C	285
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 820 # SMILES read failed, buffer was N(=O)(=O)c1c(N)c(C)ccc1	286&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 821 # SMARTS did not match for molecule O=N(=O)c1cccc(C)c1N	286
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 822 # number of heavy atoms wrong for molecule O=N(=O)c1cccc(C)c1N	286
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 823 # SMILES read failed, buffer was C(OCC)(OCC)c1ccccc1	287&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 824 # SMARTS did not match for molecule CCOC(OCC)c1ccccc1	287
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 825 # number of heavy atoms wrong for molecule CCOC(OCC)c1ccccc1	287
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 826 # SMILES read failed, buffer was C(=O)(O)c1c(NN)ccc(c1)I	288&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 827 # SMARTS did not match for molecule NNc1ccc(I)cc1C(=O)O	288
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 828 # number of heavy atoms wrong for molecule NNc1ccc(I)cc1C(=O)O	288
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 829 # SMILES read failed, buffer was N(=O)(=O)c1c(Br)ccc(c1)C	289&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 830 # SMARTS did not match for molecule Cc1ccc(Br)c(c1)N(=O)=O	289
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 831 # number of heavy atoms wrong for molecule Cc1ccc(Br)c(c1)N(=O)=O	289
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 832 # SMILES read failed, buffer was Brc1c2c(cc([nH]2)c2ccccc2)cc(c1)Br	290&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 833 # SMARTS did not match for molecule Brc1cc2cc([nH]c2c(Br)c1)c1ccccc1	290
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 834 # number of heavy atoms wrong for molecule Brc1cc2cc([nH]c2c(Br)c1)c1ccccc1	290
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 835 # SMILES read failed, buffer was C(=C1\N=C(c2ccccc2)OC1=O)/c1ccccc1	291&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 836 # SMARTS did not match for molecule O=C1OC(=N\C/1=C/c1ccccc1)c1ccccc1	291
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 837 # number of heavy atoms wrong for molecule O=C1OC(=N\C/1=C/c1ccccc1)c1ccccc1	291
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 838 # SMILES read failed, buffer was C[C@@H]1CCOCO1	292&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 839 # SMARTS did not match for molecule C[C@@H]1CCOCO1	292
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 840 # number of heavy atoms wrong for molecule C[C@@H]1CCOCO1	292
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 841 # SMILES read failed, buffer was N(=O)(=O)c1cc(C)c(I)cc1	293&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 842 # SMARTS did not match for molecule O=N(=O)c1ccc(I)c(C)c1	293
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 843 # number of heavy atoms wrong for molecule O=N(=O)c1ccc(I)c(C)c1	293
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 844 # SMILES read failed, buffer was N(=O)(=O)c1c(I)ccc(c1)C	294&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 845 # SMARTS did not match for molecule Cc1ccc(I)c(c1)N(=O)=O	294
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 846 # number of heavy atoms wrong for molecule Cc1ccc(I)c(c1)N(=O)=O	294
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 847 # SMILES read failed, buffer was C(CCC(=O)O)c1ccccc1	295&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 848 # SMARTS did not match for molecule OC(=O)CCCc1ccccc1	295
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 849 # number of heavy atoms wrong for molecule OC(=O)CCCc1ccccc1	295
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 850 # SMILES read failed, buffer was C(=O)(c1c(O)ccc(c1)C)c1ccccc1	296&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 851 # SMARTS did not match for molecule Cc1ccc(O)c(c1)C(=O)c1ccccc1	296
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 852 # number of heavy atoms wrong for molecule Cc1ccc(O)c(c1)C(=O)c1ccccc1	296
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 853 # SMILES read failed, buffer was C(=O)(c1cc(C)c(O)cc1)c1ccccc1	297&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 854 # SMARTS did not match for molecule O=C(c1ccccc1)c1ccc(O)c(C)c1	297
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 855 # number of heavy atoms wrong for molecule O=C(c1ccccc1)c1ccc(O)c(C)c1	297
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 856 # SMILES read failed, buffer was C(=C(/C(=O)O)C#N)/c1ccccc1	298&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 857 # SMARTS did not match for molecule N#C/C(=C/c1ccccc1)/C(=O)O	298
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 858 # number of heavy atoms wrong for molecule N#C/C(=C/c1ccccc1)/C(=O)O	298
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 859 # SMILES read failed, buffer was N(C(C)=O)c1c(C(=O)O)cc(I)cc1	299&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 860 # SMARTS did not match for molecule CC(=O)Nc1ccc(I)cc1C(=O)O	299
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 861 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(I)cc1C(=O)O	299
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 862 # SMILES read failed, buffer was S(=O)(=O)(O)c1cc(Br)c(N)c(c1)Cl	300&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 863 # SMARTS did not match for molecule Clc1cc(cc(Br)c1N)S(=O)(=O)O	300
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 864 # number of heavy atoms wrong for molecule Clc1cc(cc(Br)c1N)S(=O)(=O)O	300
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 865 # SMILES read failed, buffer was C(C(=O)O)c1cc2c(cccc2)cc1	301&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 866 # SMARTS did not match for molecule OC(=O)Cc1ccc2ccccc2c1	301
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 867 # number of heavy atoms wrong for molecule OC(=O)Cc1ccc2ccccc2c1	301
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 868 # SMILES read failed, buffer was C(=O)(O)c1c(N)ccc(c1)I	302&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 869 # SMARTS did not match for molecule Ic1ccc(N)c(c1)C(=O)O	302
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 870 # number of heavy atoms wrong for molecule Ic1ccc(N)c(c1)C(=O)O	302
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 871 # SMILES read failed, buffer was Clc1c2c(c(=O)[nH][nH]2)ccc1	303&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 872 # SMARTS did not match for molecule Clc1cccc2c(=O)[nH][nH]c12	303
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 873 # number of heavy atoms wrong for molecule Clc1cccc2c(=O)[nH][nH]c12	303
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 874 # SMILES read failed, buffer was O=C1N(C)N=C(C1)C	304&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 875 # SMARTS did not match for molecule CC1=NN(C)C(=O)C1	304
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 876 # number of heavy atoms wrong for molecule CC1=NN(C)C(=O)C1	304
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 877 # SMILES read failed, buffer was Nc1c(Br)cccc1Br	305&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 878 # SMARTS did not match for molecule Nc1c(Br)cccc1Br	305
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 879 # number of heavy atoms wrong for molecule Nc1c(Br)cccc1Br	305
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 880 # SMILES read failed, buffer was N(C(C)=O)c1cc(Br)cc(c1)C	306&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 881 # SMARTS did not match for molecule CC(=O)Nc1cc(C)cc(Br)c1	306
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 882 # number of heavy atoms wrong for molecule CC(=O)Nc1cc(C)cc(Br)c1	306
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 883 # SMILES read failed, buffer was C(C(OCC)=O)C1(O)CCCCC1	307&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 884 # SMARTS did not match for molecule CCOC(=O)CC1(O)CCCCC1	307
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 885 # number of heavy atoms wrong for molecule CCOC(=O)CC1(O)CCCCC1	307
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 886 # SMILES read failed, buffer was N(Nc1cc(Br)cc(c1)Br)c1cc(Br)cc(c1)Br	308&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 887 # SMARTS did not match for molecule Brc1cc(NNc2cc(Br)cc(Br)c2)cc(Br)c1	308
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 888 # number of heavy atoms wrong for molecule Brc1cc(NNc2cc(Br)cc(Br)c2)cc(Br)c1	308
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 889 # SMILES read failed, buffer was N(Nc1c(C)cccc1)c1c(C)cccc1	309&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 890 # SMARTS did not match for molecule Cc1ccccc1NNc1ccccc1C	309
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 891 # number of heavy atoms wrong for molecule Cc1ccccc1NNc1ccccc1C	309
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 892 # SMILES read failed, buffer was N(=N/c1ccc(c2ccccc2)cc1)/c1ccc(c2ccccc2)cc1	310&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 893 # SMARTS did not match for molecule c1ccc(cc1)c1ccc(\N=N\c2ccc(cc2)c2ccccc2)cc1	310
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 894 # number of heavy atoms wrong for molecule c1ccc(cc1)c1ccc(\N=N\c2ccc(cc2)c2ccccc2)cc1	310
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 895 # SMILES read failed, buffer was N(C(CCl)=O)c1ccccc1	311&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 896 # SMARTS did not match for molecule ClCC(=O)Nc1ccccc1	311
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 897 # number of heavy atoms wrong for molecule ClCC(=O)Nc1ccccc1	311
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 898 # SMILES read failed, buffer was c1([C@H]([C@@H](C(=O)c2ccccc2)N2CCOCC2)N2CCOCC2)ccccc1	312&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 899 # SMARTS did not match for molecule O=C(c1ccccc1)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)c1ccccc1	312
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 900 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)c1ccccc1	312
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 901 # SMILES read failed, buffer was S(N(N=O)C)(=O)(=O)c1ccc(C)cc1	313&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 902 # SMARTS did not match for molecule O=NN(C)S(=O)(=O)c1ccc(C)cc1	313
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 903 # number of heavy atoms wrong for molecule O=NN(C)S(=O)(=O)c1ccc(C)cc1	313
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 904 # SMILES read failed, buffer was C(NC(C(NCc1ccccc1)=O)=O)c1ccccc1	314&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 905 # SMARTS did not match for molecule O=C(NCc1ccccc1)C(=O)NCc1ccccc1	314
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 906 # number of heavy atoms wrong for molecule O=C(NCc1ccccc1)C(=O)NCc1ccccc1	314
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 907 # SMILES read failed, buffer was N([C@@H](C(=O)c1ccccc1)c1ccccc1)(C(C)=O)c1ccccc1	315&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 908 # SMARTS did not match for molecule O=C(c1ccccc1)[C@@H](c1ccccc1)N(C(=O)C)c1ccccc1	315
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 909 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[C@@H](c1ccccc1)N(C(=O)C)c1ccccc1	315
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 910 # SMILES read failed, buffer was C(=C/C=C/c1ccccc1)/c1ccccc1	316&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 911 # SMARTS did not match for molecule c1ccc(\C=C\C=C\c2ccccc2)cc1	316
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 912 # number of heavy atoms wrong for molecule c1ccc(\C=C\C=C\c2ccccc2)cc1	316
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 913 # SMILES read failed, buffer was N(C(C(NC1CCCCC1)=O)=O)C1CCCCC1	317&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 914 # SMARTS did not match for molecule O=C(NC1CCCCC1)C(=O)NC1CCCCC1	317
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 915 # number of heavy atoms wrong for molecule O=C(NC1CCCCC1)C(=O)NC1CCCCC1	317
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 916 # SMILES read failed, buffer was C(N1C(=O)[C@H](O)CC1)c1ccccc1	318&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 917 # SMARTS did not match for molecule O[C@H]1CCN(Cc2ccccc2)C1=O	318
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 918 # number of heavy atoms wrong for molecule O[C@H]1CCN(Cc2ccccc2)C1=O	318
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 919 # SMILES read failed, buffer was O=C1N(CC[C@@H]1O)C1CCCCC1	319&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 920 # SMARTS did not match for molecule O=C1[C@@H](O)CCN1C1CCCCC1	319
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 921 # number of heavy atoms wrong for molecule O=C1[C@@H](O)CCN1C1CCCCC1	319
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 922 # SMILES read failed, buffer was N(C(CN(C(C)=O)c1ccc(Cl)cc1)=O)(CC(=O)O)c1ccc(Cl)cc1	320&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 923 # SMARTS did not match for molecule Clc1ccc(cc1)N(CC(=O)O)C(=O)CN(C(=O)C)c1ccc(Cl)cc1	320
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 924 # number of heavy atoms wrong for molecule Clc1ccc(cc1)N(CC(=O)O)C(=O)CN(C(=O)C)c1ccc(Cl)cc1	320
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 925 # SMILES read failed, buffer was N(C(C(OCC)=O)=O)(CCC(=O)O)c1ccccc1	321&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 926 # SMARTS did not match for molecule CCOC(=O)C(=O)N(CCC(=O)O)c1ccccc1	321
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 927 # number of heavy atoms wrong for molecule CCOC(=O)C(=O)N(CCC(=O)O)c1ccccc1	321
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 928 # SMILES read failed, buffer was Oc1c(C2=NCCN2)cccc1	322&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 929 # SMARTS did not match for molecule Oc1ccccc1C1=NCCN1	322
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 930 # number of heavy atoms wrong for molecule Oc1ccccc1C1=NCCN1	322
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 931 # SMILES read failed, buffer was Br[C@H]([C@@H](C(CBr)=O)Br)c1ccccc1	323&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 932 # SMARTS did not match for molecule BrCC(=O)[C@@H](Br)[C@H](Br)c1ccccc1	323
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 933 # number of heavy atoms wrong for molecule BrCC(=O)[C@@H](Br)[C@H](Br)c1ccccc1	323
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 934 # SMILES read failed, buffer was C(NCCNCCO)(=O)c1c(O)c([N+](=O)[O-])cc(c1)[N+](=O)[O-]	324&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 935 # SMARTS did not match for molecule OCCNCCNC(=O)c1cc(cc([N+](=O)[O-])c1O)[N+](=O)[O-]	324
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 936 # number of heavy atoms wrong for molecule OCCNCCNC(=O)c1cc(cc([N+](=O)[O-])c1O)[N+](=O)[O-]	324
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 937 # SMILES read failed, buffer was C(N1C[C@H](C(OC)=O)C(C1=O)=O)c1ccccc1	325&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 938 # SMARTS did not match for molecule COC(=O)[C@H]1CN(Cc2ccccc2)C(=O)C1=O	325
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 939 # number of heavy atoms wrong for molecule COC(=O)[C@H]1CN(Cc2ccccc2)C(=O)C1=O	325
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 940 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1C(=O)C(=O)N(C1)C	326&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 941 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(C)C(=O)C1=O	326
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 942 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(C)C(=O)C1=O	326
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 943 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1CN(CC)C(C1=O)=O	327&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 944 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(CC)C(=O)C1=O	327
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 945 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(CC)C(=O)C1=O	327
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 946 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1CN(CCC)C(C1=O)=O	328&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 947 # SMARTS did not match for molecule CCCN1C[C@H](C(=O)OCC)C(=O)C1=O	328
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 948 # number of heavy atoms wrong for molecule CCCN1C[C@H](C(=O)OCC)C(=O)C1=O	328
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 949 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1CN(C(C)C)C(C1=O)=O	329&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 950 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(C(C)C)C(=O)C1=O	329
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 951 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(C(C)C)C(=O)C1=O	329
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 952 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1C(=O)C(=O)N(C1)CCCC	330&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 953 # SMARTS did not match for molecule CCCCN1C[C@H](C(=O)OCC)C(=O)C1=O	330
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 954 # number of heavy atoms wrong for molecule CCCCN1C[C@H](C(=O)OCC)C(=O)C1=O	330
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 955 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1CN(CC(C)C)C(C1=O)=O	331&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 956 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(CC(C)C)C(=O)C1=O	331
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 957 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(CC(C)C)C(=O)C1=O	331
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 958 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1CN(C(C)(C)C)C(C1=O)=O	332&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 959 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(C(=O)C1=O)C(C)(C)C	332
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 960 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(C(=O)C1=O)C(C)(C)C	332
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 961 # SMILES read failed, buffer was O=C1N(C[C@H](C1=O)C(OCC)=O)c1ccccc1	333&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 962 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(c2ccccc2)C(=O)C1=O	333
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 963 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(c2ccccc2)C(=O)C1=O	333
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 964 # SMILES read failed, buffer was C(N1C[C@H](C(OCC)=O)C(C1=O)=O)c1ccccc1	334&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 965 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(Cc2ccccc2)C(=O)C1=O	334
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 966 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(Cc2ccccc2)C(=O)C1=O	334
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 967 # SMILES read failed, buffer was C(OCC)(=O)[C@H]1C(=O)C(=O)N(C1)CCc1ccccc1	335&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 968 # SMARTS did not match for molecule CCOC(=O)[C@H]1CN(CCc2ccccc2)C(=O)C1=O	335
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 969 # number of heavy atoms wrong for molecule CCOC(=O)[C@H]1CN(CCc2ccccc2)C(=O)C1=O	335
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 970 # SMILES read failed, buffer was N(C(C)C)(C(C)C)N=O	336&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 971 # SMARTS did not match for molecule O=NN(C(C)C)C(C)C	336
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 972 # number of heavy atoms wrong for molecule O=NN(C(C)C)C(C)C	336
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 973 # SMILES read failed, buffer was N(N=O)(C1CCCCC1)C1CCCCC1	337&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 974 # SMARTS did not match for molecule O=NN(C1CCCCC1)C1CCCCC1	337
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 975 # number of heavy atoms wrong for molecule O=NN(C1CCCCC1)C1CCCCC1	337
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 976 # SMILES read failed, buffer was N(Cc1ccccc1)(Cc1ccccc1)N=O	338&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 977 # SMARTS did not match for molecule O=NN(Cc1ccccc1)Cc1ccccc1	338
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 978 # number of heavy atoms wrong for molecule O=NN(Cc1ccccc1)Cc1ccccc1	338
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 979 # SMILES read failed, buffer was N(=O)N1CCN(N=O)CC1	339&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 980 # SMARTS did not match for molecule O=NN1CCN(N=O)CC1	339
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 981 # number of heavy atoms wrong for molecule O=NN1CCN(N=O)CC1	339
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 982 # SMILES read failed, buffer was Brc1c(C)c(C)c(C)c(c1C)C	340&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 983 # SMARTS did not match for molecule Cc1c(C)c(C)c(C)c(Br)c1C	340
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 984 # number of heavy atoms wrong for molecule Cc1c(C)c(C)c(C)c(Br)c1C	340
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 985 # SMILES read failed, buffer was C(OC)c1c(C)cc(C)cc1C	341&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 986 # SMARTS did not match for molecule COCc1c(C)cc(C)cc1C	341
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 987 # number of heavy atoms wrong for molecule COCc1c(C)cc(C)cc1C	341
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 988 # SMILES read failed, buffer was C(=O)(c1cc(C)c(O)c(c1)C)c1ccccc1	342&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 989 # SMARTS did not match for molecule O=C(c1ccccc1)c1cc(C)c(O)c(C)c1	342
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 990 # number of heavy atoms wrong for molecule O=C(c1ccccc1)c1cc(C)c(O)c(C)c1	342
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 991 # SMILES read failed, buffer was C(CC)(CC)(C#N)c1ccccc1	343&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 992 # SMARTS did not match for molecule CCC(CC)(C#N)c1ccccc1	343
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 993 # number of heavy atoms wrong for molecule CCC(CC)(C#N)c1ccccc1	343
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 994 # SMILES read failed, buffer was C(CN(C)C)c1c(C)cc(C)cc1C	344&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 995 # SMARTS did not match for molecule CN(C)CCc1c(C)cc(C)cc1C	344
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 996 # number of heavy atoms wrong for molecule CN(C)CCc1c(C)cc(C)cc1C	344
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 997 # SMILES read failed, buffer was C(C(OCC)=O)(C(C)=O)C(C)=O	345&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 998 # SMARTS did not match for molecule CCOC(=O)C(C(=O)C)C(=O)C	345
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 999 # number of heavy atoms wrong for molecule CCOC(=O)C(C(=O)C)C(=O)C	345
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1000 # SMILES read failed, buffer was N(=O)(=O)c1c2c(ccc1)cccn2	346&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1001 # SMARTS did not match for molecule O=N(=O)c1cccc2cccnc12	346
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1002 # number of heavy atoms wrong for molecule O=N(=O)c1cccc2cccnc12	346
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1003 # SMILES read failed, buffer was C([C@@H](CCCC)CC)(CC(C)=O)=O	347&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1004 # SMARTS did not match for molecule CCCC[C@@H](CC)C(=O)CC(=O)C	347
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1005 # number of heavy atoms wrong for molecule CCCC[C@@H](CC)C(=O)CC(=O)C	347
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1006 # SMILES read failed, buffer was C(CC(C)=O)c1ccc(Cl)cc1	348&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1007 # SMARTS did not match for molecule CC(=O)CCc1ccc(Cl)cc1	348
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1008 # number of heavy atoms wrong for molecule CC(=O)CCc1ccc(Cl)cc1	348
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1009 # SMILES read failed, buffer was C(N(C)C)c1cc(OC)ccc1C	349&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1010 # SMARTS did not match for molecule COc1ccc(C)c(CN(C)C)c1	349
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1011 # number of heavy atoms wrong for molecule COc1ccc(C)c(CN(C)C)c1	349
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1012 # SMILES read failed, buffer was C(CN(C)C)c1c(C)c(C)c(C)cc1C	351&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1013 # SMARTS did not match for molecule CN(C)CCc1c(C)cc(C)c(C)c1C	351
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1014 # number of heavy atoms wrong for molecule CN(C)CCc1c(C)cc(C)c(C)c1C	351
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1015 # SMILES read failed, buffer was C([N+](C)(C)C)c1c(C[N+](C)(C)C)cccc1	352&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1016 # SMARTS did not match for molecule C[N+](C)(C)Cc1ccccc1C[N+](C)(C)C	352
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1017 # number of heavy atoms wrong for molecule C[N+](C)(C)Cc1ccccc1C[N+](C)(C)C	352
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1018 # SMILES read failed, buffer was N(CCCN(CC)CC)c1c2c(nc3c1ccc(c3)Cl)ccc(c2)OC	353&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1019 # SMARTS did not match for molecule CCN(CC)CCCNc1c2cc(OC)ccc2nc2cc(Cl)ccc12	353
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1020 # number of heavy atoms wrong for molecule CCN(CC)CCCNc1c2cc(OC)ccc2nc2cc(Cl)ccc12	353
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1021 # SMILES read failed, buffer was C(COC)(=O)c1ccccc1	354&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1022 # SMARTS did not match for molecule COCC(=O)c1ccccc1	354
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1023 # number of heavy atoms wrong for molecule COCC(=O)c1ccccc1	354
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1024 # SMILES read failed, buffer was C(C(CCCCC)=O)C(CC)=O	356&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1025 # SMARTS did not match for molecule CCCCCC(=O)CC(=O)CC	356
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1026 # number of heavy atoms wrong for molecule CCCCCC(=O)CC(=O)CC	356
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1027 # SMILES read failed, buffer was C([C@@H](O)c1ccccc1)(CC)(CC)CC	357&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1028 # SMARTS did not match for molecule CCC(CC)(CC)[C@@H](O)c1ccccc1	357
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1029 # number of heavy atoms wrong for molecule CCC(CC)(CC)[C@@H](O)c1ccccc1	357
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1030 # SMILES read failed, buffer was C([C@@H](O)c1ccccc1)C(OC(C)(C)C)=O	358&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1031 # SMARTS did not match for molecule O=C(C[C@@H](O)c1ccccc1)OC(C)(C)C	358
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1032 # number of heavy atoms wrong for molecule O=C(C[C@@H](O)c1ccccc1)OC(C)(C)C	358
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1033 # SMILES read failed, buffer was Clc1c2c(Sc3c(Cl)ccc(c3N2)Cl)c(Cl)cc1C#N	359&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1034 # SMARTS did not match for molecule N#Cc1cc(Cl)c2Sc3c(Cl)ccc(Cl)c3Nc2c1Cl	359
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1035 # number of heavy atoms wrong for molecule N#Cc1cc(Cl)c2Sc3c(Cl)ccc(Cl)c3Nc2c1Cl	359
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1036 # SMILES read failed, buffer was C(/C=C/c1ccc(N(C)C)cc1)(=O)c1ccccc1	360&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1037 # SMARTS did not match for molecule CN(C)c1ccc(cc1)\C=C/C(=O)c1ccccc1	360
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1038 # number of heavy atoms wrong for molecule CN(C)c1ccc(cc1)\C=C/C(=O)c1ccccc1	360
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1039 # SMILES read failed, buffer was C([C@@](C)(O)c1ccccc1)C(N(CCCC)CCCC)=O	361&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1040 # SMARTS did not match for molecule CCCCN(CCCC)C(=O)C[C@@](C)(O)c1ccccc1	361
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1041 # number of heavy atoms wrong for molecule CCCCN(CCCC)C(=O)C[C@@](C)(O)c1ccccc1	361
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1042 # SMILES read failed, buffer was C([C@@H](C#N)c1ccccc1)(OCC)=O	362&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1043 # SMARTS did not match for molecule CCOC(=O)[C@@H](C#N)c1ccccc1	362
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1044 # number of heavy atoms wrong for molecule CCOC(=O)[C@@H](C#N)c1ccccc1	362
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1045 # SMILES read failed, buffer was C(N(C)C)(c1ccccc1)c1ccccc1	363&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1046 # SMARTS did not match for molecule CN(C)C(c1ccccc1)c1ccccc1	363
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1047 # number of heavy atoms wrong for molecule CN(C)C(c1ccccc1)c1ccccc1	363
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1048 # SMILES read failed, buffer was C([C@@H](O)c1ccc(Cl)cc1)(=O)c1ccc(Cl)cc1	364&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1049 # SMARTS did not match for molecule Clc1ccc(cc1)C(=O)[C@@H](O)c1ccc(Cl)cc1	364
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1050 # number of heavy atoms wrong for molecule Clc1ccc(cc1)C(=O)[C@@H](O)c1ccc(Cl)cc1	364
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1051 # SMILES read failed, buffer was C(C(CC(C)C)=O)C(CCC)=O	365&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1052 # SMARTS did not match for molecule CCCC(=O)CC(=O)CC(C)C	365
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1053 # number of heavy atoms wrong for molecule CCCC(=O)CC(=O)CC(C)C	365
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1054 # SMILES read failed, buffer was N(CCCC#N)(CC)CC	366&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1055 # SMARTS did not match for molecule N#CCCCN(CC)CC	366
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1056 # number of heavy atoms wrong for molecule N#CCCCN(CC)CC	366
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1057 # SMILES read failed, buffer was C([C@@H](C(OC)=O)CC)(=O)c1ccccc1	367&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1058 # SMARTS did not match for molecule COC(=O)[C@@H](CC)C(=O)c1ccccc1	367
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1059 # number of heavy atoms wrong for molecule COC(=O)[C@@H](CC)C(=O)c1ccccc1	367
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1060 # SMILES read failed, buffer was c1([C@H]([C@@H](C(=O)c2ccc(NC(C)=O)cc2)N2CCOCC2)N2CCOCC2)ccccc1	368&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1061 # SMARTS did not match for molecule CC(=O)Nc1ccc(cc1)C(=O)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)c1ccccc1	368
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1062 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(cc1)C(=O)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)c1ccccc1	368
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1063 # SMILES read failed, buffer was C([C@H]([C@@H](C(=O)c1ccccc1)N1CCOCC1)N1CCOCC1)(=O)c1ccccc1	369&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1064 # SMARTS did not match for molecule O=C(c1ccccc1)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)C(=O)c1ccccc1	369
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1065 # number of heavy atoms wrong for molecule O=C(c1ccccc1)[C@@H](N1CCOCC1)[C@H](N1CCOCC1)C(=O)c1ccccc1	369
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1066 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(=O)c1ccc(/N=C/c2ccccc2)cc1	370&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1067 # SMARTS did not match for molecule O=C(/C=C\c1ccccc1)c1ccc(\N=C/c2ccccc2)cc1	370
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1068 # number of heavy atoms wrong for molecule O=C(/C=C\c1ccccc1)c1ccc(\N=C/c2ccccc2)cc1	370
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1069 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(=O)c1ccc(N)cc1	371&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1070 # SMARTS did not match for molecule Nc1ccc(cc1)C(=O)/C=C\c1ccccc1	371
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1071 # number of heavy atoms wrong for molecule Nc1ccc(cc1)C(=O)/C=C\c1ccccc1	371
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1072 # SMILES read failed, buffer was C(/C=C/c1ccc(N(C)C)cc1)(=O)c1ccc(NC(OCC)=O)cc1	372&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1073 # SMARTS did not match for molecule CCOC(=O)Nc1ccc(cc1)C(=O)/C=C\c1ccc(cc1)N(C)C	372
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1074 # number of heavy atoms wrong for molecule CCOC(=O)Nc1ccc(cc1)C(=O)/C=C\c1ccc(cc1)N(C)C	372
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1075 # SMILES read failed, buffer was C(/C=C/c1ccc(N(C)C)cc1)(=O)c1ccc(NC(C)=O)cc1	373&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1076 # SMARTS did not match for molecule CC(=O)Nc1ccc(cc1)C(=O)/C=C\c1ccc(cc1)N(C)C	373
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1077 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(cc1)C(=O)/C=C\c1ccc(cc1)N(C)C	373
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1078 # SMILES read failed, buffer was N(CC)(CC)c1ccc(/C=C/C(=O)c2ccc(NC(C)=O)cc2)cc1	374&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1079 # SMARTS did not match for molecule CCN(CC)c1ccc(cc1)\C=C/C(=O)c1ccc(cc1)NC(=O)C	374
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1080 # number of heavy atoms wrong for molecule CCN(CC)c1ccc(cc1)\C=C/C(=O)c1ccc(cc1)NC(=O)C	374
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1081 # SMILES read failed, buffer was N(C[S](=O)=O)c1ccc(OCCCC)nc1	375&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1082 # SMARTS did not match for molecule CCCCOc1ccc(cn1)NC[S](=O)=O	375
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1083 # number of heavy atoms wrong for molecule CCCCOc1ccc(cn1)NC[S](=O)=O	375
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1084 # SMILES read failed, buffer was O=C1c2c(C(=O)C(=C1CCCc1ccc(Oc3ccccc3)cc1)O)cccc2	377&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1085 # SMARTS did not match for molecule OC1=C(CCCc2ccc(cc2)Oc2ccccc2)C(=O)c2ccccc2C1=O	377
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1086 # number of heavy atoms wrong for molecule OC1=C(CCCc2ccc(cc2)Oc2ccccc2)C(=O)c2ccccc2C1=O	377
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1087 # SMILES read failed, buffer was C(=O)(O)c1c(Cl)nccc1	378&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1088 # SMARTS did not match for molecule OC(=O)c1cccnc1Cl	378
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1089 # number of heavy atoms wrong for molecule OC(=O)c1cccnc1Cl	378
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1090 # SMILES read failed, buffer was S(CC(=O)O)c1c(C(=O)O)cccc1	379&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1091 # SMARTS did not match for molecule OC(=O)CSc1ccccc1C(=O)O	379
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1092 # number of heavy atoms wrong for molecule OC(=O)CSc1ccccc1C(=O)O	379
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1093 # SMILES read failed, buffer was O=C1C2=C(C(=O)c3c1cccc3)CCCC2	380&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1094 # SMARTS did not match for molecule O=C1C2=C(CCCC2)C(=O)c2ccccc12	380
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1095 # number of heavy atoms wrong for molecule O=C1C2=C(CCCC2)C(=O)c2ccccc12	380
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1096 # SMILES read failed, buffer was P(=O)(O)(O)O.N(CCCN(CCCCC)CCCCC)c1c2c(nc3c1CCCC3)ccc(c2)OC	381&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1097 # SMARTS did not match for molecule CCCCCN(CCCNc1c2CCCCc2nc2ccc(OC)cc12)CCCCC.OP(=O)(O)O	381
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1098 # number of heavy atoms wrong for molecule CCCCCN(CCCNc1c2CCCCc2nc2ccc(OC)cc12)CCCCC.OP(=O)(O)O	381
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1099 # SMILES read failed, buffer was C(N(CCCC)CCCC)(=[NH2])c1c(C)cc(C)cc1C	382&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1100 # SMARTS did not match for molecule CCCCN(CCCC)C(=[NH2])c1c(C)cc(C)cc1C	382
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1101 # number of heavy atoms wrong for molecule CCCCN(CCCC)C(=[NH2])c1c(C)cc(C)cc1C	382
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1102 # SMILES read failed, buffer was C(=O)(O)c1ccc(N)nc1	383&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1103 # SMARTS did not match for molecule Nc1ccc(cn1)C(=O)O	383
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1104 # number of heavy atoms wrong for molecule Nc1ccc(cn1)C(=O)O	383
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1105 # SMILES read failed, buffer was P(=O)(O)(O)O.N(CCCN(CCCCC)CCCCC)c1c2c(nc3c1CCCC3)ccc(c2)Cl	384&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1106 # SMARTS did not match for molecule CCCCCN(CCCNc1c2CCCCc2nc2ccc(Cl)cc12)CCCCC.OP(=O)(O)O	384
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1107 # number of heavy atoms wrong for molecule CCCCCN(CCCNc1c2CCCCc2nc2ccc(Cl)cc12)CCCCC.OP(=O)(O)O	384
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1108 # SMILES read failed, buffer was C(=C\c1ccccc1)(/[N+](=O)[O-])c1ccccc1	385&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1109 # SMARTS did not match for molecule [O-][N+](=O)/C(=C\c1ccccc1)\c1ccccc1	385
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1110 # number of heavy atoms wrong for molecule [O-][N+](=O)/C(=C\c1ccccc1)\c1ccccc1	385
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1111 # SMILES read failed, buffer was C(=O)(O)c1c2c(nc3c1cccc3)cccc2	386&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1112 # SMARTS did not match for molecule OC(=O)c1c2ccccc2nc2ccccc12	386
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1113 # number of heavy atoms wrong for molecule OC(=O)c1c2ccccc2nc2ccccc12	386
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1114 # SMILES read failed, buffer was C([C@@H](CC(=O)c1ccccc1)N1CCC(C)CC1)(=O)c1ccccc1	387&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1115 # SMARTS did not match for molecule CC1CCN(CC1)[C@@H](CC(=O)c1ccccc1)C(=O)c1ccccc1	387
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1116 # number of heavy atoms wrong for molecule CC1CCN(CC1)[C@@H](CC(=O)c1ccccc1)C(=O)c1ccccc1	387
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1117 # SMILES read failed, buffer was N([C@H]([C@@H](O)c1ccc(Cl)cc1)c1ccc(Cl)cc1)CCO	389&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1118 # SMARTS did not match for molecule OCCN[C@H](c1ccc(Cl)cc1)[C@@H](O)c1ccc(Cl)cc1	389
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1119 # number of heavy atoms wrong for molecule OCCN[C@H](c1ccc(Cl)cc1)[C@@H](O)c1ccc(Cl)cc1	389
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1120 # SMILES read failed, buffer was C([C@@H](CC(=O)c1ccccc1)[N@@]1[C@@H](C)CCCC1)(=O)c1ccccc1	390&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1121 # SMARTS did not match for molecule C[C@@H]1CCCC[N@@]1[C@@H](CC(=O)c1ccccc1)C(=O)c1ccccc1	390
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1122 # number of heavy atoms wrong for molecule C[C@@H]1CCCC[N@@]1[C@@H](CC(=O)c1ccccc1)C(=O)c1ccccc1	390
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1123 # SMILES read failed, buffer was C([C@@H](NCCO)c1ccc(Cl)cc1)(=O)c1ccc(Cl)cc1	391&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1124 # SMARTS did not match for molecule OCCN[C@@H](c1ccc(Cl)cc1)C(=O)c1ccc(Cl)cc1	391
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1125 # number of heavy atoms wrong for molecule OCCN[C@@H](c1ccc(Cl)cc1)C(=O)c1ccc(Cl)cc1	391
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1126 # SMILES read failed, buffer was S(C)c1nc(SC)nc(n1)C	392&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1127 # SMARTS did not match for molecule CSc1nc(SC)nc(C)n1	392
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1128 # number of heavy atoms wrong for molecule CSc1nc(SC)nc(C)n1	392
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1129 # SMILES read failed, buffer was N(=O)(=O)N1C(=O)CCC1=O	393&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1130 # SMARTS did not match for molecule O=N(=O)N1C(=O)CCC1=O	393
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1131 # number of heavy atoms wrong for molecule O=N(=O)N1C(=O)CCC1=O	393
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1132 # SMILES read failed, buffer was N(=O)(=O)N1C(=O)CCC1=O.CO	394&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1133 # SMARTS did not match for molecule OC.O=N(=O)N1C(=O)CCC1=O	394
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1134 # number of heavy atoms wrong for molecule OC.O=N(=O)N1C(=O)CCC1=O	394
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1135 # SMILES read failed, buffer was O=C1c2c(cccc2)C(N1[N+](=O)[O-])=O	395&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1136 # SMARTS did not match for molecule [O-][N+](=O)N1C(=O)c2ccccc2C1=O	395
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1137 # number of heavy atoms wrong for molecule [O-][N+](=O)N1C(=O)c2ccccc2C1=O	395
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1138 # SMILES read failed, buffer was O=C1c2c(cccc2)C(N1[N+](=O)[O-])=O.C(O)c1ccccc1	396&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1139 # SMARTS did not match for molecule OCc1ccccc1.[O-][N+](=O)N1C(=O)c2ccccc2C1=O	396
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1140 # number of heavy atoms wrong for molecule OCc1ccccc1.[O-][N+](=O)N1C(=O)c2ccccc2C1=O	396
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1141 # SMILES read failed, buffer was C(=C/[C@@H](CCCC)CC)/c1nc2c(cccc2)cc1	397&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1142 # SMARTS did not match for molecule CCCC[C@@H](CC)/C=C\c1ccc2ccccc2n1	397
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1143 # number of heavy atoms wrong for molecule CCCC[C@@H](CC)/C=C\c1ccc2ccccc2n1	397
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1144 # SMILES read failed, buffer was P(=O)(c1ccccc1)(c1ccccc1)c1ccccc1	398&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1145 # SMARTS did not match for molecule O=P(c1ccccc1)(c1ccccc1)c1ccccc1	398
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1146 # number of heavy atoms wrong for molecule O=P(c1ccccc1)(c1ccccc1)c1ccccc1	398
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1147 # SMILES read failed, buffer was C(CC#N)n1c2c(cccc2)c2c1cccc2	399&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1148 # SMARTS did not match for molecule N#CCCn1c2ccccc2c2ccccc12	399
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1149 # number of heavy atoms wrong for molecule N#CCCn1c2ccccc2c2ccccc12	399
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1150 # SMILES read failed, buffer was C(C(=O)O)c1c(F)cccc1	401&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1151 # SMARTS did not match for molecule OC(=O)Cc1ccccc1F	401
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1152 # number of heavy atoms wrong for molecule OC(=O)Cc1ccccc1F	401
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1153 # SMILES read failed, buffer was C(C(=O)O)c1ccc(F)cc1	402&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1154 # SMARTS did not match for molecule OC(=O)Cc1ccc(F)cc1	402
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1155 # number of heavy atoms wrong for molecule OC(=O)Cc1ccc(F)cc1	402
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1156 # SMILES read failed, buffer was C(=O)(O)C1CCOCC1	403&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1157 # SMARTS did not match for molecule OC(=O)C1CCOCC1	403
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1158 # number of heavy atoms wrong for molecule OC(=O)C1CCOCC1	403
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1159 # SMILES read failed, buffer was C(=O)(O)C1(C(=O)O)CCOCC1	404&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1160 # SMARTS did not match for molecule OC(=O)C1(CCOCC1)C(=O)O	404
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1161 # number of heavy atoms wrong for molecule OC(=O)C1(CCOCC1)C(=O)O	404
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1162 # SMILES read failed, buffer was O[C@@H](c1nc2ccccc2[nH]1)c1ccccc1	405&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1163 # SMARTS did not match for molecule O[C@@H](c1ccccc1)c1nc2ccccc2[nH]1	405
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1164 # number of heavy atoms wrong for molecule O[C@@H](c1ccccc1)c1nc2ccccc2[nH]1	405
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1165 # SMILES read failed, buffer was C(Oc1ccccc1)(Oc1ccccc1)C(=O)O	406&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1166 # SMARTS did not match for molecule OC(=O)C(Oc1ccccc1)Oc1ccccc1	406
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1167 # number of heavy atoms wrong for molecule OC(=O)C(Oc1ccccc1)Oc1ccccc1	406
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1168 # SMILES read failed, buffer was C(C)(=O)c1cc2c(c3ccccc3s2)cc1	407&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1169 # SMARTS did not match for molecule CC(=O)c1ccc2c(c1)sc1ccccc21	407
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1170 # number of heavy atoms wrong for molecule CC(=O)c1ccc2c(c1)sc1ccccc21	407
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1171 # SMILES read failed, buffer was C(C)(=O)c1cc2c(c3ccc(cc3s2)C(C)=O)cc1	408&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1172 # SMARTS did not match for molecule CC(=O)c1ccc2c(c1)sc1cc(ccc21)C(=O)C	408
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1173 # number of heavy atoms wrong for molecule CC(=O)c1ccc2c(c1)sc1cc(ccc21)C(=O)C	408
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1174 # SMILES read failed, buffer was C(OC)(=O)c1c(Br)c([N+](=O)[O-])ccc1	409&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1175 # SMARTS did not match for molecule COC(=O)c1cccc([N+](=O)[O-])c1Br	409
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1176 # number of heavy atoms wrong for molecule COC(=O)c1cccc([N+](=O)[O-])c1Br	409
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1177 # SMILES read failed, buffer was O=S1(=O)c2c(Oc3c1cccc3)cccc2	410&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1178 # SMARTS did not match for molecule O=S1(=O)c2ccccc2Oc2ccccc12	410
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1179 # number of heavy atoms wrong for molecule O=S1(=O)c2ccccc2Oc2ccccc12	410
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1180 # SMILES read failed, buffer was O(CCCCCCCCCCCC)c1ccc(C(=O)O)cc1	411&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1181 # SMARTS did not match for molecule CCCCCCCCCCCCOc1ccc(cc1)C(=O)O	411
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1182 # number of heavy atoms wrong for molecule CCCCCCCCCCCCOc1ccc(cc1)C(=O)O	411
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1183 # SMILES read failed, buffer was C(=N/[C@@H](CC/N=C/c1c(O)cccc1)C)/c1c(O)cccc1	412&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1184 # SMARTS did not match for molecule C[C@@H](CC/N=C/c1ccccc1O)/N=C\c1ccccc1O	412
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1185 # number of heavy atoms wrong for molecule C[C@@H](CC/N=C/c1ccccc1O)/N=C\c1ccccc1O	412
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1186 # SMILES read failed, buffer was C(C)O.S(CC)c1nc(C=O)cc(n1)O	413&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1187 # SMARTS did not match for molecule CCO.CCSc1nc(C=O)cc(O)n1	413
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1188 # number of heavy atoms wrong for molecule CCO.CCSc1nc(C=O)cc(O)n1	413
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1189 # SMILES read failed, buffer was C(CNCCc1sc(C)nc1C)c1sc(C)nc1C	414&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1190 # SMARTS did not match for molecule Cc1nc(C)c(CCNCCc2sc(C)nc2C)s1	414
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1191 # number of heavy atoms wrong for molecule Cc1nc(C)c(CCNCCc2sc(C)nc2C)s1	414
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1192 # SMILES read failed, buffer was C(NN)(=O)C1C(C(NN)=O)C1C(NN)=O	415&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1193 # SMARTS did not match for molecule NNC(=O)C1C(C(=O)NN)C1C(=O)NN	415
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1194 # number of heavy atoms wrong for molecule NNC(=O)C1C(C(=O)NN)C1C(=O)NN	415
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1195 # SMILES read failed, buffer was O([P@@](N(C(C)C)C(C)C)(=O)c1ccc([N+](=O)[O-])cc1)[P@@](N(C(C)C)C(C)C)(=O)c1ccc([N+](=O)[O-])cc1	416&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1196 # SMARTS did not match for molecule [O-][N+](=O)c1ccc(cc1)[P@@](=O)(O[P@@](=O)(c1ccc(cc1)[N+](=O)[O-])N(C(C)C)C(C)C)N(C(C)C)C(C)C	416
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1197 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccc(cc1)[P@@](=O)(O[P@@](=O)(c1ccc(cc1)[N+](=O)[O-])N(C(C)C)C(C)C)N(C(C)C)C(C)C	416
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1198 # SMILES read failed, buffer was P(=O)(O)(O)c1ccc(N)cc1	417&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1199 # SMARTS did not match for molecule Nc1ccc(cc1)P(=O)(O)O	417
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1200 # number of heavy atoms wrong for molecule Nc1ccc(cc1)P(=O)(O)O	417
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1201 # SMILES read failed, buffer was C[C@@H]1N[C@@H](C)SC(S1)C	418&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1202 # SMARTS did not match for molecule C[C@@H]1N[C@@H](C)SC(C)S1	418
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1203 # number of heavy atoms wrong for molecule C[C@@H]1N[C@@H](C)SC(C)S1	418
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1204 # SMILES read failed, buffer was P(=O)(O)(O)c1cc([N+](=O)[O-])ccc1	419&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1205 # SMARTS did not match for molecule [O-][N+](=O)c1cccc(c1)P(=O)(O)O	419
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1206 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cccc(c1)P(=O)(O)O	419
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1207 # SMILES read failed, buffer was P(=O)(O)(O)c1ccc([N+](=O)[O-])cc1	420&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1208 # SMARTS did not match for molecule [O-][N+](=O)c1ccc(cc1)P(=O)(O)O	420
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1209 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccc(cc1)P(=O)(O)O	420
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1210 # SMILES read failed, buffer was C(C(OCC)=O)([Si](C)(C)C)(C)C	421&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1211 # SMARTS did not match for molecule CCOC(=O)C(C)(C)[Si](C)(C)C	421
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1212 # number of heavy atoms wrong for molecule CCOC(=O)C(C)(C)[Si](C)(C)C	421
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1213 # SMILES read failed, buffer was C([C@@H](C(OCC)=O)C(C)C)(CC(C)C)=O	422&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1214 # SMARTS did not match for molecule CCOC(=O)[C@@H](C(C)C)C(=O)CC(C)C	422
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1215 # number of heavy atoms wrong for molecule CCOC(=O)[C@@H](C(C)C)C(=O)CC(C)C	422
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1216 # SMILES read failed, buffer was O(CCO)c1c(Cl)cc(Cl)cc1	423&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1217 # SMARTS did not match for molecule OCCOc1ccc(Cl)cc1Cl	423
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1218 # number of heavy atoms wrong for molecule OCCOc1ccc(Cl)cc1Cl	423
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1219 # SMILES read failed, buffer was C(CCCCCCCCCCCCCCCC)C1=NCCN1	424&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1220 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCCC1=NCCN1	424
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1221 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCCC1=NCCN1	424
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1222 # SMILES read failed, buffer was C(NC[C@H]1CCCO1)[C@@H]1CCCO1	425&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1223 # SMARTS did not match for molecule C1CO[C@H](CNC[C@@H]2CCCO2)C1	425
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1224 # number of heavy atoms wrong for molecule C1CO[C@H](CNC[C@@H]2CCCO2)C1	425
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1225 # SMILES read failed, buffer was N(=N/c1cc(OC)c(N)cc1)/c1c(OC)cccc1	426&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1226 # SMARTS did not match for molecule COc1cc(\N=N\c2ccccc2OC)ccc1N	426
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1227 # number of heavy atoms wrong for molecule COc1cc(\N=N\c2ccccc2OC)ccc1N	426
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1228 # SMILES read failed, buffer was Clc1c(O)ccc(c1)O	427&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1229 # SMARTS did not match for molecule Oc1ccc(O)c(Cl)c1	427
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1230 # number of heavy atoms wrong for molecule Oc1ccc(O)c(Cl)c1	427
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1231 # SMILES read failed, buffer was [N+](C)(=O)[O-]	428&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1232 # SMARTS did not match for molecule [O-][N+](=O)C	428
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1233 # number of heavy atoms wrong for molecule [O-][N+](=O)C	428
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1234 # SMILES read failed, buffer was C(NCC)(NCC)=O	429&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1235 # SMARTS did not match for molecule CCNC(=O)NCC	429
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1236 # number of heavy atoms wrong for molecule CCNC(=O)NCC	429
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1237 # SMILES read failed, buffer was O(CC(=O)O)c1c(Cl)cc(Cl)c(c1)Cl	430&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1238 # SMARTS did not match for molecule OC(=O)COc1cc(Cl)c(Cl)cc1Cl	430
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1239 # number of heavy atoms wrong for molecule OC(=O)COc1cc(Cl)c(Cl)cc1Cl	430
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1240 # SMILES read failed, buffer was Nc1ccccn1	431&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1241 # SMARTS did not match for molecule Nc1ccccn1	431
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1242 # number of heavy atoms wrong for molecule Nc1ccccn1	431
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1243 # SMILES read failed, buffer was [Sb](Cl)(Cl)(c1ccccc1)(c1ccccc1)c1ccccc1	432&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1244 # SMARTS did not match for molecule Cl[Sb](Cl)(c1ccccc1)(c1ccccc1)c1ccccc1	432
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1245 # number of heavy atoms wrong for molecule Cl[Sb](Cl)(c1ccccc1)(c1ccccc1)c1ccccc1	432
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1246 # SMILES read failed, buffer was N(C)(C)c1ccc(c2ccc(N(C)C)cc2)cc1	433&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1247 # SMARTS did not match for molecule CN(C)c1ccc(cc1)c1ccc(cc1)N(C)C	433
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1248 # number of heavy atoms wrong for molecule CN(C)c1ccc(cc1)c1ccc(cc1)N(C)C	433
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1249 # SMILES read failed, buffer was N(C)C1CCCCC1	434&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1250 # SMARTS did not match for molecule CNC1CCCCC1	434
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1251 # number of heavy atoms wrong for molecule CNC1CCCCC1	434
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1252 # SMILES read failed, buffer was C(Cl)(c1ccccc1)(c1ccccc1)c1ccccc1	435&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1253 # SMARTS did not match for molecule ClC(c1ccccc1)(c1ccccc1)c1ccccc1	435
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1254 # number of heavy atoms wrong for molecule ClC(c1ccccc1)(c1ccccc1)c1ccccc1	435
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1255 # SMILES read failed, buffer was C(C)[n+]1c2c(ccc1)cccc2	436&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1256 # SMARTS did not match for molecule CC[n+]1cccc2ccccc12	436
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1257 # number of heavy atoms wrong for molecule CC[n+]1cccc2ccccc12	436
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1258 # SMILES read failed, buffer was C(C(=O)O)CS	437&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1259 # SMARTS did not match for molecule OC(=O)CCS	437
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1260 # number of heavy atoms wrong for molecule OC(=O)CCS	437
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1261 # SMILES read failed, buffer was P(Oc1c(C)cccc1)(Oc1c(C)cccc1)(Oc1c(C)cccc1)=O	438&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1262 # SMARTS did not match for molecule Cc1ccccc1OP(=O)(Oc1ccccc1C)Oc1ccccc1C	438
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1263 # number of heavy atoms wrong for molecule Cc1ccccc1OP(=O)(Oc1ccccc1C)Oc1ccccc1C	438
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1264 # SMILES read failed, buffer was c12c(Sc3ccccc3S1)cccc2	439&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1265 # SMARTS did not match for molecule c1ccc2Sc3ccccc3Sc2c1	439
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1266 # number of heavy atoms wrong for molecule c1ccc2Sc3ccccc3Sc2c1	439
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1267 # SMILES read failed, buffer was C(NCC)(OCC)=O	440&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1268 # SMARTS did not match for molecule CCNC(=O)OCC	440
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1269 # number of heavy atoms wrong for molecule CCNC(=O)OCC	440
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1270 # SMILES read failed, buffer was C(CO)(C)(C)N	441&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1271 # SMARTS did not match for molecule OCC(C)(C)N	441
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1272 # number of heavy atoms wrong for molecule OCC(C)(C)N	441
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1273 # SMILES read failed, buffer was C(/CC)(=N/O)C	442&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1274 # SMARTS did not match for molecule C/C(=N/O)/CC	442
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1275 # number of heavy atoms wrong for molecule C/C(=N/O)/CC	442
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1276 # SMILES read failed, buffer was C(CNCCN)NCCN	443&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1277 # SMARTS did not match for molecule NCCNCCNCCN	443
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1278 # number of heavy atoms wrong for molecule NCCNCCNCCN	443
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1279 # SMILES read failed, buffer was N(C(C)=O)c1ccc(Cl)cc1	444&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1280 # SMARTS did not match for molecule CC(=O)Nc1ccc(Cl)cc1	444
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1281 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(Cl)cc1	444
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1282 # SMILES read failed, buffer was C([C@@H](CN)O)CC	445&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1283 # SMARTS did not match for molecule CCC[C@@H](O)CN	445
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1284 # number of heavy atoms wrong for molecule CCC[C@@H](O)CN	445
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1285 # SMILES read failed, buffer was N(CCN)CCN	446&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1286 # SMARTS did not match for molecule NCCNCCN	446
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1287 # number of heavy atoms wrong for molecule NCCNCCN	446
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1288 # SMILES read failed, buffer was C(S(=O)(=O)O)CBr	447&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1289 # SMARTS did not match for molecule BrCCS(=O)(=O)O	447
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1290 # number of heavy atoms wrong for molecule BrCCS(=O)(=O)O	447
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1291 # SMILES read failed, buffer was N(/Cl)=C1/C=CC(=O)C=C1	448&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1292 # SMARTS did not match for molecule ClN=C1C=CC(=O)C=C1	448
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1293 # number of heavy atoms wrong for molecule ClN=C1C=CC(=O)C=C1	448
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1294 # SMILES read failed, buffer was C(=O)c1c2c(ccc(c2)OC)ncc1	449&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1295 # SMARTS did not match for molecule COc1ccc2nccc(C=O)c2c1	449
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1296 # number of heavy atoms wrong for molecule COc1ccc2nccc(C=O)c2c1	449
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1297 # SMILES read failed, buffer was Cc1c(N)nccc1	450&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1298 # SMARTS did not match for molecule Cc1cccnc1N	450
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1299 # number of heavy atoms wrong for molecule Cc1cccnc1N	450
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1300 # SMILES read failed, buffer was C(CO)(F)(F)F	451&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1301 # SMARTS did not match for molecule OCC(F)(F)F	451
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1302 # number of heavy atoms wrong for molecule OCC(F)(F)F	451
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1303 # SMILES read failed, buffer was C(=O)(O)C1CCCCC1	452&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1304 # SMARTS did not match for molecule OC(=O)C1CCCCC1	452
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1305 # number of heavy atoms wrong for molecule OC(=O)C1CCCCC1	452
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1306 # SMILES read failed, buffer was C(S(=O)(=O)O)CC(C)C	453&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1307 # SMARTS did not match for molecule CC(C)CCS(=O)(=O)O	453
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1308 # number of heavy atoms wrong for molecule CC(C)CCS(=O)(=O)O	453
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1309 # SMILES read failed, buffer was N(C(OCC)=O)CCCC	454&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1310 # SMARTS did not match for molecule CCCCNC(=O)OCC	454
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1311 # number of heavy atoms wrong for molecule CCCCNC(=O)OCC	454
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1312 # SMILES read failed, buffer was C(CC)(C)(C)c1c(O)cc(C(CC)(C)C)c(c1)O	455&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1313 # SMARTS did not match for molecule CCC(C)(C)c1cc(O)c(cc1O)C(C)(C)CC	455
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1314 # number of heavy atoms wrong for molecule CCC(C)(C)c1cc(O)c(cc1O)C(C)(C)CC	455
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1315 # SMILES read failed, buffer was N(/NC(N)=O)=C(\C)C	456&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1316 # SMARTS did not match for molecule NC(=O)NN=C(C)C	456
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1317 # number of heavy atoms wrong for molecule NC(=O)NN=C(C)C	456
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1318 # SMILES read failed, buffer was N(C(CCCCCCCCCCC)=O)(CCCC)CCCC	457&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1319 # SMARTS did not match for molecule CCCCCCCCCCCC(=O)N(CCCC)CCCC	457
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1320 # number of heavy atoms wrong for molecule CCCCCCCCCCCC(=O)N(CCCC)CCCC	457
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1321 # SMILES read failed, buffer was O=C1c2c(C(=O)c3c1cccc3)cccc2N	458&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1322 # SMARTS did not match for molecule Nc1cccc2C(=O)c3ccccc3C(=O)c12	458
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1323 # number of heavy atoms wrong for molecule Nc1cccc2C(=O)c3ccccc3C(=O)c12	458
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1324 # SMILES read failed, buffer was C(#N)c1c(N)nc(C)nc1	459&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1325 # SMARTS did not match for molecule N#Cc1cnc(C)nc1N	459
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1326 # number of heavy atoms wrong for molecule N#Cc1cnc(C)nc1N	459
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1327 # SMILES read failed, buffer was Cc1cc(C)nc(c1)C	460&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1328 # SMARTS did not match for molecule Cc1cc(C)nc(C)c1	460
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1329 # number of heavy atoms wrong for molecule Cc1cc(C)nc(C)c1	460
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1330 # SMILES read failed, buffer was N(CCN)CCO	461&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1331 # SMARTS did not match for molecule NCCNCCO	461
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1332 # number of heavy atoms wrong for molecule NCCNCCO	461
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1333 # SMILES read failed, buffer was C[C@@H]1CCCCN1	462&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1334 # SMARTS did not match for molecule C[C@@H]1CCCCN1	462
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1335 # number of heavy atoms wrong for molecule C[C@@H]1CCCCN1	462
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1336 # SMILES read failed, buffer was S(=O)(=O)(O)O.O=C1N2[C@@H]3[C@@]4([C@@H]5[N@@](CC=6[C@@H]([C@@H]3[C@@H](C1)OCC6)C5)CC4)c1c2cc(OC)c(c1)OC	463&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1337 # SMARTS did not match for molecule COc1cc2c(cc1OC)N1C(=O)C[C@@H]3OCC=C4C[N@@]5CC[C@@]62[C@@H]5C[C@@H]4[C@@H]3[C@@H]16.OS(=O)(=O)O	463
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1338 # number of heavy atoms wrong for molecule COc1cc2c(cc1OC)N1C(=O)C[C@@H]3OCC=C4C[N@@]5CC[C@@]62[C@@H]5C[C@@H]4[C@@H]3[C@@H]16.OS(=O)(=O)O	463
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1339 # SMILES read failed, buffer was c12c(Sc3ccccc3O1)cccc2	464&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1340 # SMARTS did not match for molecule c1ccc2Oc3ccccc3Sc2c1	464
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1341 # number of heavy atoms wrong for molecule c1ccc2Oc3ccccc3Sc2c1	464
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1342 # SMILES read failed, buffer was [Bi](c1ccccc1)(c1ccccc1)c1ccccc1	465&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1343 # SMARTS did not match for molecule c1ccc(cc1)[Bi](c1ccccc1)c1ccccc1	465
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1344 # number of heavy atoms wrong for molecule c1ccc(cc1)[Bi](c1ccccc1)c1ccccc1	465
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1345 # SMILES read failed, buffer was C([C@@](C(=O)O)(CC)C)CC	466&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1346 # SMARTS did not match for molecule CCC[C@@](C)(CC)C(=O)O	466
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1347 # number of heavy atoms wrong for molecule CCC[C@@](C)(CC)C(=O)O	466
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1348 # SMILES read failed, buffer was C(CCCC)(C(=O)O)(CC)CC	467&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1349 # SMARTS did not match for molecule CCCCC(CC)(CC)C(=O)O	467
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1350 # number of heavy atoms wrong for molecule CCCCC(CC)(CC)C(=O)O	467
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1351 # SMILES read failed, buffer was C(C(C(=O)O)(C)C)CCCCCCC	468&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1352 # SMARTS did not match for molecule CCCCCCCCC(C)(C)C(=O)O	468
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1353 # number of heavy atoms wrong for molecule CCCCCCCCC(C)(C)C(=O)O	468
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1354 # SMILES read failed, buffer was C(CCCCCCCC)(C(=O)O)(CC)CC	469&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1355 # SMARTS did not match for molecule CCCCCCCCC(CC)(CC)C(=O)O	469
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1356 # number of heavy atoms wrong for molecule CCCCCCCCC(CC)(CC)C(=O)O	469
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1357 # SMILES read failed, buffer was C([C@@](CCCC)(C(=O)O)CC)CCCCCCC	470&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1358 # SMARTS did not match for molecule CCCCCCCC[C@@](CC)(CCCC)C(=O)O	470
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1359 # number of heavy atoms wrong for molecule CCCCCCCC[C@@](CC)(CCCC)C(=O)O	470
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1360 # SMILES read failed, buffer was C(Cc1ccccc1)(C(=O)O)(CC)CC	471&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1361 # SMARTS did not match for molecule CCC(CC)(Cc1ccccc1)C(=O)O	471
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1362 # number of heavy atoms wrong for molecule CCC(CC)(Cc1ccccc1)C(=O)O	471
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1363 # SMILES read failed, buffer was C([C@@](CCCC)(C(=O)O)CC)c1ccccc1	472&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1364 # SMARTS did not match for molecule CCCC[C@@](CC)(Cc1ccccc1)C(=O)O	472
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1365 # number of heavy atoms wrong for molecule CCCC[C@@](CC)(Cc1ccccc1)C(=O)O	472
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1366 # SMILES read failed, buffer was N(C(Nc1c(C)cccc1)=[NH2])c1c(C)cccc1	473&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1367 # SMARTS did not match for molecule [NH2]=C(Nc1ccccc1C)Nc1ccccc1C	473
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1368 # number of heavy atoms wrong for molecule [NH2]=C(Nc1ccccc1C)Nc1ccccc1C	473
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1369 # SMILES read failed, buffer was C1CNCCN1	474&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1370 # SMARTS did not match for molecule N1CCNCC1	474
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1371 # number of heavy atoms wrong for molecule N1CCNCC1	474
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1372 # SMILES read failed, buffer was Cc1cc2c(cccc2)cn1	475&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1373 # SMARTS did not match for molecule Cc1ncc2ccccc2c1	475
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1374 # number of heavy atoms wrong for molecule Cc1ncc2ccccc2c1	475
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1375 # SMILES read failed, buffer was C(C)[n+]1c2c(ccc1C)cccc2	476&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1376 # SMARTS did not match for molecule CC[n+]1c(C)ccc2ccccc12	476
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1377 # number of heavy atoms wrong for molecule CC[n+]1c(C)ccc2ccccc12	476
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1378 # SMILES read failed, buffer was O[Ti]12(O)(O[C@H](C)C(O2)=O)O[C@@H](C)C(O1)=O	477&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1379 # SMARTS did not match for molecule O=C1O[Ti]2(O)(O)(OC(=O)[C@@H](C)O2)O[C@H]1C	477
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1380 # number of heavy atoms wrong for molecule O=C1O[Ti]2(O)(O)(OC(=O)[C@@H](C)O2)O[C@H]1C	477
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1381 # SMILES read failed, buffer was [As](c1ccccc1)(c1ccccc1)c1ccccc1	478&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1382 # SMARTS did not match for molecule c1ccc(cc1)[As](c1ccccc1)c1ccccc1	478
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1383 # number of heavy atoms wrong for molecule c1ccc(cc1)[As](c1ccccc1)c1ccccc1	478
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1384 # SMILES read failed, buffer was C([C@]1(C(=O)NC(N1)=O)c1cccnc1)c1ccccc1	479&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1385 # SMARTS did not match for molecule O=C1NC(=O)[C@](N1)(Cc1ccccc1)c1cccnc1	479
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1386 # number of heavy atoms wrong for molecule O=C1NC(=O)[C@](N1)(Cc1ccccc1)c1cccnc1	479
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1387 # SMILES read failed, buffer was C([C@@H](NC(CCCC)=O)O)([C@@H](C)Cl)(Cl)Cl	480&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1388 # SMARTS did not match for molecule CCCCC(=O)N[C@@H](O)C(Cl)(Cl)[C@@H](C)Cl	480
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1389 # number of heavy atoms wrong for molecule CCCCC(=O)N[C@@H](O)C(Cl)(Cl)[C@@H](C)Cl	480
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1390 # SMILES read failed, buffer was N(C(CBr)=O)c1ccc(Cl)cc1	481&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1391 # SMARTS did not match for molecule BrCC(=O)Nc1ccc(Cl)cc1	481
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1392 # number of heavy atoms wrong for molecule BrCC(=O)Nc1ccc(Cl)cc1	481
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1393 # SMILES read failed, buffer was N(C(CBr)=O)c1ccc(C)cc1	482&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1394 # SMARTS did not match for molecule BrCC(=O)Nc1ccc(C)cc1	482
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1395 # number of heavy atoms wrong for molecule BrCC(=O)Nc1ccc(C)cc1	482
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1396 # SMILES read failed, buffer was N(C(C(Cl)(Cl)Cl)=O)c1ccccc1	483&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1397 # SMARTS did not match for molecule O=C(Nc1ccccc1)C(Cl)(Cl)Cl	483
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1398 # number of heavy atoms wrong for molecule O=C(Nc1ccccc1)C(Cl)(Cl)Cl	483
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1399 # SMILES read failed, buffer was S([Hg]c1ccccc1)c1nc2ccccc2s1	484&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1400 # SMARTS did not match for molecule c1ccc(cc1)[Hg]Sc1nc2ccccc2s1	484
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1401 # number of heavy atoms wrong for molecule c1ccc(cc1)[Hg]Sc1nc2ccccc2s1	484
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1402 # SMILES read failed, buffer was C([C@@H](C#N)c1ccccc1)(C#N)C#N	485&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1403 # SMARTS did not match for molecule N#CC(C#N)[C@@H](C#N)c1ccccc1	485
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1404 # number of heavy atoms wrong for molecule N#CC(C#N)[C@@H](C#N)c1ccccc1	485
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1405 # SMILES read failed, buffer was N(C(=O)c1c(O)cccc1)c1c2c(ccc1)cccc2	486&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1406 # SMARTS did not match for molecule O=C(Nc1cccc2ccccc12)c1ccccc1O	486
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1407 # number of heavy atoms wrong for molecule O=C(Nc1cccc2ccccc12)c1ccccc1O	486
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1408 # SMILES read failed, buffer was N(C(=O)c1c(O)cccc1)c1cc2c(cccc2)cc1	487&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1409 # SMARTS did not match for molecule O=C(Nc1ccc2ccccc2c1)c1ccccc1O	487
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1410 # number of heavy atoms wrong for molecule O=C(Nc1ccc2ccccc2c1)c1ccccc1O	487
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1411 # SMILES read failed, buffer was C(=C/c1ccccn1)/c1ccc(Cl)cc1	488&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1412 # SMARTS did not match for molecule Clc1ccc(\C=C\c2ccccn2)cc1	488
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1413 # number of heavy atoms wrong for molecule Clc1ccc(\C=C\c2ccccn2)cc1	488
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1414 # SMILES read failed, buffer was C(=C/c1ccncc1)/c1ccc(Cl)cc1	489&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1415 # SMARTS did not match for molecule Clc1ccc(\C=C\c2ccncc2)cc1	489
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1416 # number of heavy atoms wrong for molecule Clc1ccc(\C=C\c2ccncc2)cc1	489
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1417 # SMILES read failed, buffer was C(=C(\C#N)C#N)/c1ccccc1	490&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1418 # SMARTS did not match for molecule N#CC(=Cc1ccccc1)C#N	490
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1419 # number of heavy atoms wrong for molecule N#CC(=Cc1ccccc1)C#N	490
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1420 # SMILES read failed, buffer was C(=C(\C#N)C#N)/c1cc([N+](=O)[O-])ccc1	491&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1421 # SMARTS did not match for molecule N#CC(=Cc1cccc(c1)[N+](=O)[O-])C#N	491
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1422 # number of heavy atoms wrong for molecule N#CC(=Cc1cccc(c1)[N+](=O)[O-])C#N	491
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1423 # SMILES read failed, buffer was C(=C(\C#N)C#N)/c1ccc(Cl)cc1	492&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1424 # SMARTS did not match for molecule N#CC(=Cc1ccc(Cl)cc1)C#N	492
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1425 # number of heavy atoms wrong for molecule N#CC(=Cc1ccc(Cl)cc1)C#N	492
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1426 # SMILES read failed, buffer was C(=C(/C#N)C#N)/c1c(Cl)cc(Cl)cc1	493&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1427 # SMARTS did not match for molecule N#CC(=Cc1ccc(Cl)cc1Cl)C#N	493
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1428 # number of heavy atoms wrong for molecule N#CC(=Cc1ccc(Cl)cc1Cl)C#N	493
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1429 # SMILES read failed, buffer was C(=C(/C#N)C#N)/c1cc(Cl)c(Cl)cc1	494&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1430 # SMARTS did not match for molecule N#CC(=Cc1ccc(Cl)c(Cl)c1)C#N	494
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1431 # number of heavy atoms wrong for molecule N#CC(=Cc1ccc(Cl)c(Cl)c1)C#N	494
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1432 # SMILES read failed, buffer was N(C(/C=C/c1ccccc1)=O)c1ccccc1	495&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1433 # SMARTS did not match for molecule O=C(\C=C/c1ccccc1)Nc1ccccc1	495
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1434 # number of heavy atoms wrong for molecule O=C(\C=C/c1ccccc1)Nc1ccccc1	495
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1435 # SMILES read failed, buffer was N(CCCCCCC)P(Cl)(Cl)=S	496&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1436 # SMARTS did not match for molecule CCCCCCCNP(=S)(Cl)Cl	496
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1437 # number of heavy atoms wrong for molecule CCCCCCCNP(=S)(Cl)Cl	496
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1438 # SMILES read failed, buffer was P(NCCC)(NCCC)(NCCC)=S	497&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1439 # SMARTS did not match for molecule CCCNP(=S)(NCCC)NCCC	497
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1440 # number of heavy atoms wrong for molecule CCCNP(=S)(NCCC)NCCC	497
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1441 # SMILES read failed, buffer was P(NCCCCCCC)(NCCCCCCC)(NCCCCCCC)=S	498&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1442 # SMARTS did not match for molecule CCCCCCCNP(=S)(NCCCCCCC)NCCCCCCC	498
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1443 # number of heavy atoms wrong for molecule CCCCCCCNP(=S)(NCCCCCCC)NCCCCCCC	498
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1444 # SMILES read failed, buffer was P(NCCCCCCCC)(NCCCCCCCC)(NCCCCCCCC)=S	499&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1445 # SMARTS did not match for molecule CCCCCCCCNP(=S)(NCCCCCCCC)NCCCCCCCC	499
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1446 # number of heavy atoms wrong for molecule CCCCCCCCNP(=S)(NCCCCCCCC)NCCCCCCCC	499
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1447 # SMILES read failed, buffer was P(NCCCCCCCCCCCC)(NCCCCCCCCCCCC)(NCCCCCCCCCCCC)=S	500&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1448 # SMARTS did not match for molecule CCCCCCCCCCCCNP(=S)(NCCCCCCCCCCCC)NCCCCCCCCCCCC	500
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1449 # number of heavy atoms wrong for molecule CCCCCCCCCCCCNP(=S)(NCCCCCCCCCCCC)NCCCCCCCCCCCC	500
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1450 # SMILES read failed, buffer was N(/O)=C1\C(C)(C)[C@H]2CC[C@@]1(C)C2	501&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1451 # SMARTS did not match for molecule O/N=C1\[C@@]2(C)CC[C@H](C2)C\1(C)C	501
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1452 # number of heavy atoms wrong for molecule O/N=C1\[C@@]2(C)CC[C@H](C2)C\1(C)C	501
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1453 # SMILES read failed, buffer was C(=N/Nc1ccccc1)/c1ccco1	502&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1454 # SMARTS did not match for molecule c1ccc(cc1)N/N=C\c1ccco1	502
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1455 # number of heavy atoms wrong for molecule c1ccc(cc1)N/N=C\c1ccco1	502
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1456 # SMILES read failed, buffer was S=c1[nH]c2c(cccc2s1)c1ccccc1	503&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1457 # SMARTS did not match for molecule S=c1sc2cccc(c3ccccc3)c2[nH]1	503
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1458 # number of heavy atoms wrong for molecule S=c1sc2cccc(c3ccccc3)c2[nH]1	503
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1459 # SMILES read failed, buffer was O=C1c2c(C(=O)c3c1cccc3)ccc(c2Cl)C	504&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1460 # SMARTS did not match for molecule O=C1c2ccccc2C(=O)c2c1ccc(C)c2Cl	504
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1461 # number of heavy atoms wrong for molecule O=C1c2ccccc2C(=O)c2c1ccc(C)c2Cl	504
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1462 # SMILES read failed, buffer was C([C@H]([C@@H](CBr)Br)Br)Br	505&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1463 # SMARTS did not match for molecule BrC[C@@H](Br)[C@H](Br)CBr	505
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1464 # number of heavy atoms wrong for molecule BrC[C@@H](Br)[C@H](Br)CBr	505
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1465 # SMILES read failed, buffer was C([C@@H](C1CCCCC1)c1ccccc1)#N	506&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1466 # SMARTS did not match for molecule N#C[C@@H](C1CCCCC1)c1ccccc1	506
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1467 # number of heavy atoms wrong for molecule N#C[C@@H](C1CCCCC1)c1ccccc1	506
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1468 # SMILES read failed, buffer was C([C@@](C)(O)c1ccccc1)(C)C	507&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1469 # SMARTS did not match for molecule CC(C)[C@@](C)(O)c1ccccc1	507
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1470 # number of heavy atoms wrong for molecule CC(C)[C@@](C)(O)c1ccccc1	507
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1471 # SMILES read failed, buffer was C(CCCO)CCO	508&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1472 # SMARTS did not match for molecule OCCCCCCO	508
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1473 # number of heavy atoms wrong for molecule OCCCCCCO	508
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1474 # SMILES read failed, buffer was O=C1C=C(c2ccccc2)CC1	509&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1475 # SMARTS did not match for molecule O=C1CCC(=C1)c1ccccc1	509
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1476 # number of heavy atoms wrong for molecule O=C1CCC(=C1)c1ccccc1	509
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1477 # SMILES read failed, buffer was C(CCC#N)CCN	510&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1478 # SMARTS did not match for molecule NCCCCCC#N	510
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1479 # number of heavy atoms wrong for molecule NCCCCCC#N	510
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1480 # SMILES read failed, buffer was C(CCC(=O)O)(OC)=O	511&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1481 # SMARTS did not match for molecule COC(=O)CCC(=O)O	511
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1482 # number of heavy atoms wrong for molecule COC(=O)CCC(=O)O	511
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1483 # SMILES read failed, buffer was C(CC(=O)O)c1ccc(C)cc1	512&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1484 # SMARTS did not match for molecule OC(=O)CCc1ccc(C)cc1	512
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1485 # number of heavy atoms wrong for molecule OC(=O)CCc1ccc(C)cc1	512
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1486 # SMILES read failed, buffer was C([C@@H](CO)O)CC	513&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1487 # SMARTS did not match for molecule CCC[C@@H](O)CO	513
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1488 # number of heavy atoms wrong for molecule CCC[C@@H](O)CO	513
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1489 # SMILES read failed, buffer was O([C@@](CC)(C#N)C)C(C)=O	514&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1490 # SMARTS did not match for molecule CC[C@@](C)(C#N)OC(=O)C	514
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1491 # number of heavy atoms wrong for molecule CC[C@@](C)(C#N)OC(=O)C	514
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1492 # SMILES read failed, buffer was O([C@]([C@@](OC(C)=O)(C#N)C)(C#N)C)C(C)=O	515&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1493 # SMARTS did not match for molecule N#C[C@@](C)(OC(=O)C)[C@](C)(C#N)OC(=O)C	515
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1494 # number of heavy atoms wrong for molecule N#C[C@@](C)(OC(=O)C)[C@](C)(C#N)OC(=O)C	515
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1495 # SMILES read failed, buffer was C(SC)(=[NH2])N.S(=O)(=O)(O)O	516&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1496 # SMARTS did not match for molecule CSC(=[NH2])N.OS(=O)(=O)O	516
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1497 # number of heavy atoms wrong for molecule CSC(=[NH2])N.OS(=O)(=O)O	516
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1498 # SMILES read failed, buffer was C([C@H]([C@@H](C(OC)=O)O)O)(OC)=O	517&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1499 # SMARTS did not match for molecule COC(=O)[C@@H](O)[C@H](O)C(=O)OC	517
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1500 # number of heavy atoms wrong for molecule COC(=O)[C@@H](O)[C@H](O)C(=O)OC	517
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1501 # SMILES read failed, buffer was O([C@@H](C(C)C)C)C(C)=O	518&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1502 # SMARTS did not match for molecule CC(=O)O[C@@H](C)C(C)C	518
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1503 # number of heavy atoms wrong for molecule CC(=O)O[C@@H](C)C(C)C	518
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1504 # SMILES read failed, buffer was C(CCC#N)(=O)c1ccccc1	520&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1505 # SMARTS did not match for molecule N#CCCC(=O)c1ccccc1	520
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1506 # number of heavy atoms wrong for molecule N#CCCC(=O)c1ccccc1	520
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1507 # SMILES read failed, buffer was O=C1c2c3c(ccc2C(O1)=O)cccc3	521&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1508 # SMARTS did not match for molecule O=C1OC(=O)c2ccc3ccccc3c12	521
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1509 # number of heavy atoms wrong for molecule O=C1OC(=O)c2ccc3ccccc3c12	521
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1510 # SMILES read failed, buffer was [N+](C)(C)(C)[C@H]1CS(=O)(=O)C=C1	522&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1511 # SMARTS did not match for molecule O=S1(=O)C=C[C@H](C1)[N+](C)(C)C	522
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1512 # number of heavy atoms wrong for molecule O=S1(=O)C=C[C@H](C1)[N+](C)(C)C	522
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1513 # SMILES read failed, buffer was C(C#C)(C)(C)O	523&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1514 # SMARTS did not match for molecule C#CC(C)(C)O	523
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1515 # number of heavy atoms wrong for molecule C#CC(C)(C)O	523
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1516 # SMILES read failed, buffer was C[C@@H]1C(=O)CCCC1	524&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1517 # SMARTS did not match for molecule C[C@@H]1CCCCC1=O	524
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1518 # number of heavy atoms wrong for molecule C[C@@H]1CCCCC1=O	524
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1519 # SMILES read failed, buffer was C(CCCCCCCC=C)COC(C)=O	525&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1520 # SMARTS did not match for molecule C=CCCCCCCCCCOC(=O)C	525
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1521 # number of heavy atoms wrong for molecule C=CCCCCCCCCCOC(=O)C	525
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1522 # SMILES read failed, buffer was N(C(CCC(=O)O)=O)(CC)CC	526&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1523 # SMARTS did not match for molecule CCN(CC)C(=O)CCC(=O)O	526
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1524 # number of heavy atoms wrong for molecule CCN(CC)C(=O)CCC(=O)O	526
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1525 # SMILES read failed, buffer was C(OC(C)=O)[C@@H]1[C@@H](COC(C)=O)[C@@H](C)C=C[C@@H]1C	527&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1526 # SMARTS did not match for molecule CC(=O)OC[C@@H]1[C@@H](C)C=C[C@@H](C)[C@@H]1COC(=O)C	527
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1527 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1[C@@H](C)C=C[C@@H](C)[C@@H]1COC(=O)C	527
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1528 # SMILES read failed, buffer was N(/Cl)=C1/C=C(Br)C(=O)C(=C1)Br	528&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1529 # SMARTS did not match for molecule ClN=C1C=C(Br)C(=O)C(=C1)Br	528
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1530 # number of heavy atoms wrong for molecule ClN=C1C=C(Br)C(=O)C(=C1)Br	528
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1531 # SMILES read failed, buffer was C(C)[n+]1c2c(cc(C)cc2)ccc1C	529&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1532 # SMARTS did not match for molecule CC[n+]1c(C)ccc2cc(C)ccc12	529
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1533 # number of heavy atoms wrong for molecule CC[n+]1c(C)ccc2cc(C)ccc12	529
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1534 # SMILES read failed, buffer was N(C(=O)c1c(O)cccc1)c1ccc(C(=O)O)cc1	530&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1535 # SMARTS did not match for molecule O=C(Nc1ccc(cc1)C(=O)O)c1ccccc1O	530
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1536 # number of heavy atoms wrong for molecule O=C(Nc1ccc(cc1)C(=O)O)c1ccccc1O	530
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1537 # SMILES read failed, buffer was C(Nc1ccccc1)(=O)c1c(OCC(=O)O)cccc1	531&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1538 # SMARTS did not match for molecule OC(=O)COc1ccccc1C(=O)Nc1ccccc1	531
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1539 # number of heavy atoms wrong for molecule OC(=O)COc1ccccc1C(=O)Nc1ccccc1	531
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1540 # SMILES read failed, buffer was C(=C(\C#N)C#N)/c1ccc(Br)cc1	532&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1541 # SMARTS did not match for molecule N#CC(=Cc1ccc(Br)cc1)C#N	532
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1542 # number of heavy atoms wrong for molecule N#CC(=Cc1ccc(Br)cc1)C#N	532
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1543 # SMILES read failed, buffer was C(CNc1ccccc1)n1c2c(cccc2)sc1=S	533&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1544 # SMARTS did not match for molecule S=c1sc2ccccc2n1CCNc1ccccc1	533
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1545 # number of heavy atoms wrong for molecule S=c1sc2ccccc2n1CCNc1ccccc1	533
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1546 # SMILES read failed, buffer was C(SC#N)c1cc([N+](=O)[O-])ccc1O	536&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1547 # SMARTS did not match for molecule [O-][N+](=O)c1cc(CSC#N)c(O)cc1	536
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1548 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(CSC#N)c(O)cc1	536
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1549 # SMILES read failed, buffer was O=C1c2c(C(=O)C(=C1Cl)Cl)cccc2	537&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1550 # SMARTS did not match for molecule ClC1=C(Cl)C(=O)c2ccccc2C1=O	537
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1551 # number of heavy atoms wrong for molecule ClC1=C(Cl)C(=O)c2ccccc2C1=O	537
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1552 # SMILES read failed, buffer was O([C@@H](C(=O)O)C)c1c(cccc1)c1ccccc1	538&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1553 # SMARTS did not match for molecule OC(=O)[C@@H](C)Oc1ccccc1c1ccccc1	538
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1554 # number of heavy atoms wrong for molecule OC(=O)[C@@H](C)Oc1ccccc1c1ccccc1	538
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1555 # SMILES read failed, buffer was N(=C/c1c(O)cccc1)/c1ccc([Hg]OC(C)=O)cc1	539&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1556 # SMARTS did not match for molecule CC(=O)O[Hg]c1ccc(cc1)\N=C\c1ccccc1O	539
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1557 # number of heavy atoms wrong for molecule CC(=O)O[Hg]c1ccc(cc1)\N=C\c1ccccc1O	539
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1558 # SMILES read failed, buffer was N(=O)(=O)c1c(SC#N)ccc(c1)[N+](=O)[O-]	540&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1559 # SMARTS did not match for molecule N#CSc1ccc(cc1N(=O)=O)[N+](=O)[O-]	540
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1560 # number of heavy atoms wrong for molecule N#CSc1ccc(cc1N(=O)=O)[N+](=O)[O-]	540
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1561 # SMILES read failed, buffer was C(Cl)c1cc([N+](=O)[O-])ccc1O	541&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1562 # SMARTS did not match for molecule ClCc1cc(ccc1O)[N+](=O)[O-]	541
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1563 # number of heavy atoms wrong for molecule ClCc1cc(ccc1O)[N+](=O)[O-]	541
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1564 # SMILES read failed, buffer was C(=C(\C#N)C#N)/c1c(Cl)cccc1	542&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1565 # SMARTS did not match for molecule N#CC(=Cc1ccccc1Cl)C#N	542
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1566 # number of heavy atoms wrong for molecule N#CC(=Cc1ccccc1Cl)C#N	542
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1567 # SMILES read failed, buffer was S(N)(=O)(=O)c1cc(SC#N)c(N)cc1	543&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1568 # SMARTS did not match for molecule N#CSc1cc(ccc1N)S(=O)(=O)N	543
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1569 # number of heavy atoms wrong for molecule N#CSc1cc(ccc1N)S(=O)(=O)N	543
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1570 # SMILES read failed, buffer was O(C[C@H]1CO1)c1cc([N+](=O)[O-])ccc1	544&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1571 # SMARTS did not match for molecule [O-][N+](=O)c1cccc(OC[C@H]2CO2)c1	544
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1572 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cccc(OC[C@H]2CO2)c1	544
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1573 # SMILES read failed, buffer was C([C@@H](C#N)c1cc(Cl)c(Cl)cc1)(C#N)C#N	545&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1574 # SMARTS did not match for molecule N#C[C@@H](C(C#N)C#N)c1ccc(Cl)c(Cl)c1	545
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1575 # number of heavy atoms wrong for molecule N#C[C@@H](C(C#N)C#N)c1ccc(Cl)c(Cl)c1	545
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1576 # SMILES read failed, buffer was P(NC1CCCCC1)(NC1CCCCC1)(NC1CCCCC1)=S	546&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1577 # SMARTS did not match for molecule S=P(NC1CCCCC1)(NC1CCCCC1)NC1CCCCC1	546
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1578 # number of heavy atoms wrong for molecule S=P(NC1CCCCC1)(NC1CCCCC1)NC1CCCCC1	546
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1579 # SMILES read failed, buffer was N(C(CBr)=O)c1c(C)cccc1	547&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1580 # SMARTS did not match for molecule BrCC(=O)Nc1ccccc1C	547
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1581 # number of heavy atoms wrong for molecule BrCC(=O)Nc1ccccc1C	547
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1582 # SMILES read failed, buffer was S(N)(=O)(=O)c1ccc(NC(CBr)=O)cc1	549&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1583 # SMARTS did not match for molecule BrCC(=O)Nc1ccc(cc1)S(=O)(=O)N	549
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1584 # number of heavy atoms wrong for molecule BrCC(=O)Nc1ccc(cc1)S(=O)(=O)N	549
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1585 # SMILES read failed, buffer was S(Sc1cc(S(N)(=O)=O)ccc1N)c1cc(S(N)(=O)=O)ccc1N	550&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1586 # SMARTS did not match for molecule Nc1ccc(cc1SSc1cc(ccc1N)S(=O)(=O)N)S(=O)(=O)N	550
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1587 # number of heavy atoms wrong for molecule Nc1ccc(cc1SSc1cc(ccc1N)S(=O)(=O)N)S(=O)(=O)N	550
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1588 # SMILES read failed, buffer was C[C@@]12[C@@H](OC(CN(CCCCC)CCCCC)=O)C[C@@H](C1(C)C)CC2	551&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1589 # SMARTS did not match for molecule CCCCCN(CCCCC)CC(=O)O[C@@H]1C[C@@H]2CC[C@@]1(C)C2(C)C	551
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1590 # number of heavy atoms wrong for molecule CCCCCN(CCCCC)CC(=O)O[C@@H]1C[C@@H]2CC[C@@]1(C)C2(C)C	551
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1591 # SMILES read failed, buffer was C(COC)CN	552&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1592 # SMARTS did not match for molecule COCCCN	552
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1593 # number of heavy atoms wrong for molecule COCCCN	552
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1594 # SMILES read failed, buffer was C(NCO)(C=C)=O	553&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1595 # SMARTS did not match for molecule OCNC(=O)C=C	553
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1596 # number of heavy atoms wrong for molecule OCNC(=O)C=C	553
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1597 # SMILES read failed, buffer was Oc1nc2c(cccc2)cc1	554&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1598 # SMARTS did not match for molecule Oc1ccc2ccccc2n1	554
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1599 # number of heavy atoms wrong for molecule Oc1ccc2ccccc2n1	554
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1600 # SMILES read failed, buffer was C(OC(N[C@@H](CCC(=O)O)C(=O)O)=O)c1ccccc1	555&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1601 # SMARTS did not match for molecule O=C(OCc1ccccc1)N[C@@H](CCC(=O)O)C(=O)O	555
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1602 # number of heavy atoms wrong for molecule O=C(OCc1ccccc1)N[C@@H](CCC(=O)O)C(=O)O	555
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1603 # SMILES read failed, buffer was C(OC(C)=O)[C@H]1[C@@H](COC(C)=O)[C@@H]2CC[C@@H]1C2	556&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1604 # SMARTS did not match for molecule CC(=O)OC[C@@H]1[C@@H]2CC[C@@H](C2)[C@H]1COC(=O)C	556
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1605 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1[C@@H]2CC[C@@H](C2)[C@H]1COC(=O)C	556
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1606 # SMILES read failed, buffer was C(OC(C)=O)[C@@H]1[C@@H](COC(C)=O)[C@@H](C)CCC1	557&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1607 # SMARTS did not match for molecule CC(=O)OC[C@@H]1[C@@H](CCC[C@@H]1C)COC(=O)C	557
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1608 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1[C@@H](CCC[C@@H]1C)COC(=O)C	557
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1609 # SMILES read failed, buffer was C=C1CCCC=C1	560&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1610 # SMARTS did not match for molecule C=C1CCCC=C1	560
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1611 # number of heavy atoms wrong for molecule C=C1CCCC=C1	560
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1612 # SMILES read failed, buffer was C(OC/C=C/COC(OC)=O)(OC)=O	561&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1613 # SMARTS did not match for molecule COC(=O)OC/C=C/COC(=O)OC	561
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1614 # number of heavy atoms wrong for molecule COC(=O)OC/C=C/COC(=O)OC	561
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1615 # SMILES read failed, buffer was C(/CC(C)C)(=N/O)C	562&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1616 # SMARTS did not match for molecule O/N=C(/C)\CC(C)C	562
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1617 # number of heavy atoms wrong for molecule O/N=C(/C)\CC(C)C	562
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1618 # SMILES read failed, buffer was O(C(C)=O)[C@@H]1[C@@H](OC(C)=O)CCCC1	563&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1619 # SMARTS did not match for molecule CC(=O)O[C@@H]1CCCC[C@@H]1OC(=O)C	563
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1620 # number of heavy atoms wrong for molecule CC(=O)O[C@@H]1CCCC[C@@H]1OC(=O)C	563
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1621 # SMILES read failed, buffer was N(CCC[C@@H](Br)C)(CC)CC	564&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1622 # SMARTS did not match for molecule CCN(CC)CCC[C@@H](C)Br	564
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1623 # number of heavy atoms wrong for molecule CCN(CC)CCC[C@@H](C)Br	564
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1624 # SMILES read failed, buffer was O(C(C)=O)[C@@]1(C)[C@@](OC(C)=O)(C)C(=O)OC1=O	565&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1625 # SMARTS did not match for molecule CC(=O)O[C@@]1(C)C(=O)OC(=O)[C@@]1(C)OC(=O)C	565
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1626 # number of heavy atoms wrong for molecule CC(=O)O[C@@]1(C)C(=O)OC(=O)[C@@]1(C)OC(=O)C	565
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1627 # SMILES read failed, buffer was C([C@@H](OC=O)C)C(C)C	566&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1628 # SMARTS did not match for molecule O=CO[C@@H](C)CC(C)C	566
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1629 # number of heavy atoms wrong for molecule O=CO[C@@H](C)CC(C)C	566
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1630 # SMILES read failed, buffer was C([C@@H](OC(C)=O)C)C(C)C	567&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1631 # SMARTS did not match for molecule CC(C)C[C@@H](C)OC(=O)C	567
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1632 # number of heavy atoms wrong for molecule CC(C)C[C@@H](C)OC(=O)C	567
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1633 # SMILES read failed, buffer was O([C@@H](CC(C)C)C)C(CCC)=O	568&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1634 # SMARTS did not match for molecule CCCC(=O)O[C@@H](C)CC(C)C	568
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1635 # number of heavy atoms wrong for molecule CCCC(=O)O[C@@H](C)CC(C)C	568
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1636 # SMILES read failed, buffer was O([C@@H](CC(C)C)C)C(CC(C)C)=O	569&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1637 # SMARTS did not match for molecule CC(C)C[C@@H](C)OC(=O)CC(C)C	569
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1638 # number of heavy atoms wrong for molecule CC(C)C[C@@H](C)OC(=O)CC(C)C	569
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1639 # SMILES read failed, buffer was O([C@@H](CC(C)C)C)C(CCCCCC)=O	570&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1640 # SMARTS did not match for molecule CCCCCCC(=O)O[C@@H](C)CC(C)C	570
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1641 # number of heavy atoms wrong for molecule CCCCCCC(=O)O[C@@H](C)CC(C)C	570
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1642 # SMILES read failed, buffer was C(O[C@@H](CC(C)C)C)(=O)c1ccc(OC)cc1	571&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1643 # SMARTS did not match for molecule COc1ccc(cc1)C(=O)O[C@@H](C)CC(C)C	571
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1644 # number of heavy atoms wrong for molecule COc1ccc(cc1)C(=O)O[C@@H](C)CC(C)C	571
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1645 # SMILES read failed, buffer was C(Cl)c1c(C)cc(C)cc1	574&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1646 # SMARTS did not match for molecule ClCc1ccc(C)cc1C	574
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1647 # number of heavy atoms wrong for molecule ClCc1ccc(C)cc1C	574
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1648 # SMILES read failed, buffer was O=C1c2c(cccc2)C(N1CCCCBr)=O	575&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1649 # SMARTS did not match for molecule BrCCCCN1C(=O)c2ccccc2C1=O	575
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1650 # number of heavy atoms wrong for molecule BrCCCCN1C(=O)c2ccccc2C1=O	575
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1651 # SMILES read failed, buffer was N(CCCCCCCCCCCO)(CCCCCC)CCCCCC	576&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1652 # SMARTS did not match for molecule OCCCCCCCCCCCN(CCCCCC)CCCCCC	576
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1653 # number of heavy atoms wrong for molecule OCCCCCCCCCCCN(CCCCCC)CCCCCC	576
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1654 # SMILES read failed, buffer was C(=O)(O)c1c(Cl)cc(Cl)cc1	578&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1655 # SMARTS did not match for molecule Clc1ccc(C(=O)O)c(Cl)c1	578
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1656 # number of heavy atoms wrong for molecule Clc1ccc(C(=O)O)c(Cl)c1	578
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1657 # SMILES read failed, buffer was Fc1ccc(N)cc1	579&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1658 # SMARTS did not match for molecule Nc1ccc(F)cc1	579
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1659 # number of heavy atoms wrong for molecule Nc1ccc(F)cc1	579
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1660 # SMILES read failed, buffer was C(Cc1ccc(N)cc1)c1ccc(N)cc1	580&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1661 # SMARTS did not match for molecule Nc1ccc(CCc2ccc(N)cc2)cc1	580
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1662 # number of heavy atoms wrong for molecule Nc1ccc(CCc2ccc(N)cc2)cc1	580
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1663 # SMILES read failed, buffer was C(C(C)=O)c1ccc([N+](=O)[O-])cc1	581&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1664 # SMARTS did not match for molecule CC(=O)Cc1ccc(cc1)[N+](=O)[O-]	581
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1665 # number of heavy atoms wrong for molecule CC(=O)Cc1ccc(cc1)[N+](=O)[O-]	581
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1666 # SMILES read failed, buffer was C(CC)(=O)c1ccc([N+](=O)[O-])cc1	582&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1667 # SMARTS did not match for molecule CCC(=O)c1ccc(cc1)[N+](=O)[O-]	582
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1668 # number of heavy atoms wrong for molecule CCC(=O)c1ccc(cc1)[N+](=O)[O-]	582
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1669 # SMILES read failed, buffer was C(CC)(=O)c1cc(C(CC)=O)cc(c1)C(CC)=O	583&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1670 # SMARTS did not match for molecule CCC(=O)c1cc(cc(c1)C(=O)CC)C(=O)CC	583
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1671 # number of heavy atoms wrong for molecule CCC(=O)c1cc(cc(c1)C(=O)CC)C(=O)CC	583
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1672 # SMILES read failed, buffer was C(=C/C(/C=C/c1c(Cl)cccc1)=O)/c1c(Cl)cccc1	584&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1673 # SMARTS did not match for molecule O=C(/C=C/c1ccccc1Cl)\C=C/c1ccccc1Cl	584
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1674 # number of heavy atoms wrong for molecule O=C(/C=C/c1ccccc1Cl)\C=C/c1ccccc1Cl	584
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1675 # SMILES read failed, buffer was N(N=O)(c1ccccc1)c1ccccc1	585&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1676 # SMARTS did not match for molecule O=NN(c1ccccc1)c1ccccc1	585
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1677 # number of heavy atoms wrong for molecule O=NN(c1ccccc1)c1ccccc1	585
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1678 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(=O)c1c(C)c([N+](=O)[O-])cc(c1)[N+](=O)[O-]	586&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1679 # SMARTS did not match for molecule [O-][N+](=O)c1cc(C(=O)/C=C\c2ccccc2)c(C)c(c1)[N+](=O)[O-]	586
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1680 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(C(=O)/C=C\c2ccccc2)c(C)c(c1)[N+](=O)[O-]	586
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1681 # SMILES read failed, buffer was C(C(C)=O)c1ccc(c2ccccc2)cc1	587&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1682 # SMARTS did not match for molecule CC(=O)Cc1ccc(cc1)c1ccccc1	587
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1683 # number of heavy atoms wrong for molecule CC(=O)Cc1ccc(cc1)c1ccccc1	587
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1684 # SMILES read failed, buffer was O(C)c1c2c(c([N+](=O)[O-])cc1OC)nccc2	588&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1685 # SMARTS did not match for molecule COc1cc([N+](=O)[O-])c2ncccc2c1OC	588
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1686 # number of heavy atoms wrong for molecule COc1cc([N+](=O)[O-])c2ncccc2c1OC	588
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1687 # SMILES read failed, buffer was O=C1C(=CC(=O)C(=C1)c1ccc(OC)cc1)c1ccc(OC)cc1	589&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1688 # SMARTS did not match for molecule COc1ccc(cc1)C1=CC(=O)C(=CC1=O)c1ccc(OC)cc1	589
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1689 # number of heavy atoms wrong for molecule COc1ccc(cc1)C1=CC(=O)C(=CC1=O)c1ccc(OC)cc1	589
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1690 # SMILES read failed, buffer was C(=C)N1C(=O)CCC1=O	590&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1691 # SMARTS did not match for molecule C=CN1C(=O)CCC1=O	590
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1692 # number of heavy atoms wrong for molecule C=CN1C(=O)CCC1=O	590
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1693 # SMILES read failed, buffer was Clc1cc2c(NC(=O)CS2)cc1	591&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1694 # SMARTS did not match for molecule O=C1CSc2cc(Cl)ccc2N1	591
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1695 # number of heavy atoms wrong for molecule O=C1CSc2cc(Cl)ccc2N1	591
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1696 # SMILES read failed, buffer was Oc1c2c(cc(c1C#N)C)cccc2	592&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1697 # SMARTS did not match for molecule N#Cc1c(C)cc2ccccc2c1O	592
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1698 # number of heavy atoms wrong for molecule N#Cc1c(C)cc2ccccc2c1O	592
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1699 # SMILES read failed, buffer was Clc1c2c(cc(Cl)cc2)ncc1	593&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1700 # SMARTS did not match for molecule Clc1ccc2c(Cl)ccnc2c1	593
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1701 # number of heavy atoms wrong for molecule Clc1ccc2c(Cl)ccnc2c1	593
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1702 # SMILES read failed, buffer was C(Cc1ccc(Cl)cc1)c1ccc(Cl)cc1	594&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1703 # SMARTS did not match for molecule Clc1ccc(CCc2ccc(Cl)cc2)cc1	594
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1704 # number of heavy atoms wrong for molecule Clc1ccc(CCc2ccc(Cl)cc2)cc1	594
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1705 # SMILES read failed, buffer was C(CCCCCCC)(CCCCCCC)=O	595&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1706 # SMARTS did not match for molecule CCCCCCCC(=O)CCCCCCC	595
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1707 # number of heavy atoms wrong for molecule CCCCCCCC(=O)CCCCCCC	595
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1708 # SMILES read failed, buffer was N(=O)(=O)c1c(Br)c([N+](=O)[O-])cc(c1C)[N+](=O)[O-]	596&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1709 # SMARTS did not match for molecule [O-][N+](=O)c1cc([N+](=O)[O-])c(Br)c(N(=O)=O)c1C	596
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1710 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc([N+](=O)[O-])c(Br)c(N(=O)=O)c1C	596
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1711 # SMILES read failed, buffer was C(=O)(O)c1cc(N)c(C)cc1	597&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1712 # SMARTS did not match for molecule OC(=O)c1ccc(C)c(N)c1	597
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1713 # number of heavy atoms wrong for molecule OC(=O)c1ccc(C)c(N)c1	597
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1714 # SMILES read failed, buffer was c1(cc(nc(c1)c1cccnc1)c1cccnc1)c1ccccc1	598&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1715 # SMARTS did not match for molecule c1ccc(cc1)c1cc(nc(c1)c1cccnc1)c1cccnc1	598
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1716 # number of heavy atoms wrong for molecule c1ccc(cc1)c1cc(nc(c1)c1cccnc1)c1cccnc1	598
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1717 # SMILES read failed, buffer was C(=C(/C(=O)O)C)/c1c2c(ccc1OC)cccc2	599&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1718 # SMARTS did not match for molecule COc1ccc2ccccc2c1/C=C(\C)/C(=O)O	599
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1719 # number of heavy atoms wrong for molecule COc1ccc2ccccc2c1/C=C(\C)/C(=O)O	599
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1720 # SMILES read failed, buffer was C(CC(C(C)(C)C)=O)(c1ccccc1)c1ccccc1	600&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1721 # SMARTS did not match for molecule O=C(CC(c1ccccc1)c1ccccc1)C(C)(C)C	600
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1722 # number of heavy atoms wrong for molecule O=C(CC(c1ccccc1)c1ccccc1)C(C)(C)C	600
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1723 # SMILES read failed, buffer was C(=O)(O)c1c(C)c(Br)c(C)cc1C	601&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1724 # SMARTS did not match for molecule OC(=O)c1c(C)cc(C)c(Br)c1C	601
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1725 # number of heavy atoms wrong for molecule OC(=O)c1c(C)cc(C)c(Br)c1C	601
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1726 # SMILES read failed, buffer was C(C(CCCCCCCCC=C)=O)CCCCCCCC=C	602&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1727 # SMARTS did not match for molecule C=CCCCCCCCCC(=O)CCCCCCCCC=C	602
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1728 # number of heavy atoms wrong for molecule C=CCCCCCCCCC(=O)CCCCCCCCC=C	602
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1729 # SMILES read failed, buffer was C(CNC(C)=O)NC(C)=O	603&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1730 # SMARTS did not match for molecule CC(=O)NCCNC(=O)C	603
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1731 # number of heavy atoms wrong for molecule CC(=O)NCCNC(=O)C	603
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1732 # SMILES read failed, buffer was C(C=C)C1(O)C(=C(c2ccccc2)C(=C1c1ccccc1)c1ccccc1)c1ccccc1	604&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1733 # SMARTS did not match for molecule C=CCC1(O)C(=C(c2ccccc2)C(=C1c1ccccc1)c1ccccc1)c1ccccc1	604
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1734 # number of heavy atoms wrong for molecule C=CCC1(O)C(=C(c2ccccc2)C(=C1c1ccccc1)c1ccccc1)c1ccccc1	604
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1735 # SMILES read failed, buffer was C(Cl)(=O)c1c2c(c([N+](=O)[O-])ccc2)ccc1	605&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1736 # SMARTS did not match for molecule [O-][N+](=O)c1cccc2c(cccc12)C(=O)Cl	605
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1737 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cccc2c(cccc12)C(=O)Cl	605
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1738 # SMILES read failed, buffer was C(N)(=O)[C@@]1(C)C(C)(C)[C@@H](C(=O)O)CC1	606&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1739 # SMARTS did not match for molecule OC(=O)[C@@H]1CC[C@@](C)(C(=O)N)C1(C)C	606
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1740 # number of heavy atoms wrong for molecule OC(=O)[C@@H]1CC[C@@](C)(C(=O)N)C1(C)C	606
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1741 # SMILES read failed, buffer was O=C1c2c(C(=O)c3c1cccc3)ccc(c2)C	607&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1742 # SMARTS did not match for molecule Cc1ccc2c(c1)C(=O)c1ccccc1C2=O	607
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1743 # number of heavy atoms wrong for molecule Cc1ccc2c(c1)C(=O)c1ccccc1C2=O	607
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1744 # SMILES read failed, buffer was N(=O)(=O)c1ccc(CCc2ccc([N+](=O)[O-])cc2)cc1	608&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1745 # SMARTS did not match for molecule [O-][N+](=O)c1ccc(CCc2ccc(cc2)N(=O)=O)cc1	608
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1746 # number of heavy atoms wrong for molecule [O-][N+](=O)c1ccc(CCc2ccc(cc2)N(=O)=O)cc1	608
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1747 # SMILES read failed, buffer was N(=O)(=O)c1c(C(=O)O)cccc1OC	609&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1748 # SMARTS did not match for molecule COc1cccc(C(=O)O)c1N(=O)=O	609
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1749 # number of heavy atoms wrong for molecule COc1cccc(C(=O)O)c1N(=O)=O	609
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1750 # SMILES read failed, buffer was C(Br)(Br)(Br)c1nc2c(cccc2)cc1	610&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1751 # SMARTS did not match for molecule BrC(Br)(Br)c1ccc2ccccc2n1	610
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1752 # number of heavy atoms wrong for molecule BrC(Br)(Br)c1ccc2ccccc2n1	610
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1753 # SMILES read failed, buffer was C(CCl)[C@H]1C(=O)N[C@@H](CCCl)C(N1)=O	611&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1754 # SMARTS did not match for molecule ClCC[C@H]1NC(=O)[C@@H](CCCl)NC1=O	611
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1755 # number of heavy atoms wrong for molecule ClCC[C@H]1NC(=O)[C@@H](CCCl)NC1=O	611
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1756 # SMILES read failed, buffer was C(CCCC(=O)c1ccc(C)cc1)(=O)c1ccc(C)cc1	612&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1757 # SMARTS did not match for molecule Cc1ccc(cc1)C(=O)CCCC(=O)c1ccc(C)cc1	612
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1758 # number of heavy atoms wrong for molecule Cc1ccc(cc1)C(=O)CCCC(=O)c1ccc(C)cc1	612
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1759 # SMILES read failed, buffer was Brc1nc(Br)ccc1	613&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1760 # SMARTS did not match for molecule Brc1cccc(Br)n1	613
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1761 # number of heavy atoms wrong for molecule Brc1cccc(Br)n1	613
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1762 # SMILES read failed, buffer was N(=O)(=O)c1c2c(c(N)cc1)cccc2	614&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1763 # SMARTS did not match for molecule O=N(=O)c1ccc(N)c2ccccc12	614
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1764 # number of heavy atoms wrong for molecule O=N(=O)c1ccc(N)c2ccccc12	614
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1765 # SMILES read failed, buffer was C(C)(=O)c1c(O)cccc1O	615&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1766 # SMARTS did not match for molecule CC(=O)c1c(O)cccc1O	615
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1767 # number of heavy atoms wrong for molecule CC(=O)c1c(O)cccc1O	615
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1768 # SMILES read failed, buffer was C(=O)(c1c(C)cccc1)c1c(C)cccc1	616&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1769 # SMARTS did not match for molecule Cc1ccccc1C(=O)c1ccccc1C	616
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1770 # number of heavy atoms wrong for molecule Cc1ccccc1C(=O)c1ccccc1C	616
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1771 # SMILES read failed, buffer was N(=O)(=O)c1cc(C(C)=O)ccc1C	617&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1772 # SMARTS did not match for molecule CC(=O)c1ccc(C)c(c1)N(=O)=O	617
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1773 # number of heavy atoms wrong for molecule CC(=O)c1ccc(C)c(c1)N(=O)=O	617
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1774 # SMILES read failed, buffer was Cc1c2c(ccc1)cc[nH]2	618&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1775 # SMARTS did not match for molecule Cc1cccc2cc[nH]c12	618
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1776 # number of heavy atoms wrong for molecule Cc1cccc2cc[nH]c12	618
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1777 # SMILES read failed, buffer was C(CCCC)(=O)c1cc(OC)cc(c1)OC	619&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1778 # SMARTS did not match for molecule CCCCC(=O)c1cc(OC)cc(OC)c1	619
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1779 # number of heavy atoms wrong for molecule CCCCC(=O)c1cc(OC)cc(OC)c1	619
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1780 # SMILES read failed, buffer was C(OCC)(=O)c1cc2c(cccc2)oc1=O	620&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1781 # SMARTS did not match for molecule CCOC(=O)c1cc2ccccc2oc1=O	620
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1782 # number of heavy atoms wrong for molecule CCOC(=O)c1cc2ccccc2oc1=O	620
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1783 # SMILES read failed, buffer was C(=O)(O)C1CCC(C(=O)O)CC1	621&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1784 # SMARTS did not match for molecule OC(=O)C1CCC(CC1)C(=O)O	621
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1785 # number of heavy atoms wrong for molecule OC(=O)C1CCC(CC1)C(=O)O	621
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1786 # SMILES read failed, buffer was C(=O)(O)C=1CC[C@@H](C)CC1	622&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1787 # SMARTS did not match for molecule C[C@@H]1CCC(=CC1)C(=O)O	622
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1788 # number of heavy atoms wrong for molecule C[C@@H]1CCC(=CC1)C(=O)O	622
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1789 # SMILES read failed, buffer was C(=O)(c1c(O)cccc1)c1ccccc1	623&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1790 # SMARTS did not match for molecule Oc1ccccc1C(=O)c1ccccc1	623
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1791 # number of heavy atoms wrong for molecule Oc1ccccc1C(=O)c1ccccc1	623
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1792 # SMILES read failed, buffer was C(C(OC)=O)(O)(c1ccccc1)c1ccccc1	624&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1793 # SMARTS did not match for molecule COC(=O)C(O)(c1ccccc1)c1ccccc1	624
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1794 # number of heavy atoms wrong for molecule COC(=O)C(O)(c1ccccc1)c1ccccc1	624
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1795 # SMILES read failed, buffer was C(CCC(=O)O)(=O)c1cc(OC)c(OC)cc1	625&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1796 # SMARTS did not match for molecule COc1cc(ccc1OC)C(=O)CCC(=O)O	625
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1797 # number of heavy atoms wrong for molecule COc1cc(ccc1OC)C(=O)CCC(=O)O	625
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1798 # SMILES read failed, buffer was Clc1c2c(c3c(c(Cl)ccn3)cc2)ncc1	626&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1799 # SMARTS did not match for molecule Clc1ccnc2c3nccc(Cl)c3ccc12	626
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1800 # number of heavy atoms wrong for molecule Clc1ccnc2c3nccc(Cl)c3ccc12	626
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1801 # SMILES read failed, buffer was C(=N/C(NC(N)=S)=S)/c1ccc(OC)cc1	627&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1802 # SMARTS did not match for molecule COc1ccc(cc1)\C=N\C(=S)NC(=S)N	627
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1803 # number of heavy atoms wrong for molecule COc1ccc(cc1)\C=N\C(=S)NC(=S)N	627
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1804 # SMILES read failed, buffer was N(C(/N=C/CC)=S)C(N)=S	628&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1805 # SMARTS did not match for molecule CC/C=N/C(=S)NC(=S)N	628
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1806 # number of heavy atoms wrong for molecule CC/C=N/C(=S)NC(=S)N	628
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1807 # SMILES read failed, buffer was C1[C@@H](O1)[C@@H]1CO1	629&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1808 # SMARTS did not match for molecule O1C[C@@H]1[C@@H]1OC1	629
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1809 # number of heavy atoms wrong for molecule O1C[C@@H]1[C@@H]1OC1	629
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1810 # SMILES read failed, buffer was C(Br)[C@H]1CO1	630&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1811 # SMARTS did not match for molecule BrC[C@H]1CO1	630
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1812 # number of heavy atoms wrong for molecule BrC[C@H]1CO1	630
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1813 # SMILES read failed, buffer was C(OCC=C)[C@H]1CO1	631&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1814 # SMARTS did not match for molecule C=CCOC[C@H]1CO1	631
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1815 # number of heavy atoms wrong for molecule C=CCOC[C@H]1CO1	631
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1816 # SMILES read failed, buffer was O(C[C@H]1CO1)c1c2c(ccc1)cccc2	632&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1817 # SMARTS did not match for molecule c1ccc2cccc(OC[C@H]3CO3)c2c1	632
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1818 # number of heavy atoms wrong for molecule c1ccc2cccc(OC[C@H]3CO3)c2c1	632
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1819 # SMILES read failed, buffer was C(OCCCl)[C@H]1CO1	633&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1820 # SMARTS did not match for molecule ClCCOC[C@H]1CO1	633
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1821 # number of heavy atoms wrong for molecule ClCCOC[C@H]1CO1	633
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1822 # SMILES read failed, buffer was O(C[C@H]1CO1)c1c(Cl)cc(Cl)cc1	634&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1823 # SMARTS did not match for molecule Clc1ccc(OC[C@H]2CO2)c(Cl)c1	634
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1824 # number of heavy atoms wrong for molecule Clc1ccc(OC[C@H]2CO2)c(Cl)c1	634
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1825 # SMILES read failed, buffer was O(C[C@H]1CO1)c1ccccc1	635&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1826 # SMARTS did not match for molecule c1ccc(cc1)OC[C@H]1OC1	635
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1827 # number of heavy atoms wrong for molecule c1ccc(cc1)OC[C@H]1OC1	635
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1828 # SMILES read failed, buffer was C(CBr)(CBr)O	636&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1829 # SMARTS did not match for molecule BrCC(O)CBr	636
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1830 # number of heavy atoms wrong for molecule BrCC(O)CBr	636
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1831 # SMILES read failed, buffer was C1[C@@H](O1)c1ccccc1	637&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1832 # SMARTS did not match for molecule c1ccc(cc1)[C@@H]1OC1	637
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1833 # number of heavy atoms wrong for molecule c1ccc(cc1)[C@@H]1OC1	637
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1834 # SMILES read failed, buffer was C(CCCCCCC(=O)O)[C@H]1[C@@H](CCCCCCCC)O1	638&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1835 # SMARTS did not match for molecule CCCCCCCC[C@@H]1O[C@H]1CCCCCCCC(=O)O	638
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1836 # number of heavy atoms wrong for molecule CCCCCCCC[C@@H]1O[C@H]1CCCCCCCC(=O)O	638
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1837 # SMILES read failed, buffer was S(NN)(=O)(=O)c1ccc(NC(C)=O)cc1	639&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1838 # SMARTS did not match for molecule NNS(=O)(=O)c1ccc(cc1)NC(=O)C	639
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1839 # number of heavy atoms wrong for molecule NNS(=O)(=O)c1ccc(cc1)NC(=O)C	639
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1840 # SMILES read failed, buffer was C(NN)(=O)c1ccc(N)cc1	640&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1841 # SMARTS did not match for molecule NNC(=O)c1ccc(N)cc1	640
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1842 # number of heavy atoms wrong for molecule NNC(=O)c1ccc(N)cc1	640
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1843 # SMILES read failed, buffer was C(NN)(=O)c1c(O)ccc(c1)N	641&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1844 # SMARTS did not match for molecule NNC(=O)c1cc(N)ccc1O	641
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1845 # number of heavy atoms wrong for molecule NNC(=O)c1cc(N)ccc1O	641
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1846 # SMILES read failed, buffer was C(NN)(=O)c1c(N)cccc1	642&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1847 # SMARTS did not match for molecule NNC(=O)c1ccccc1N	642
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1848 # number of heavy atoms wrong for molecule NNC(=O)c1ccccc1N	642
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1849 # SMILES read failed, buffer was S(NN)(=O)(=O)c1ccccc1	643&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1850 # SMARTS did not match for molecule NNS(=O)(=O)c1ccccc1	643
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1851 # number of heavy atoms wrong for molecule NNS(=O)(=O)c1ccccc1	643
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1852 # SMILES read failed, buffer was C(NN)(=O)c1ccccc1	644&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1853 # SMARTS did not match for molecule NNC(=O)c1ccccc1	644
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1854 # number of heavy atoms wrong for molecule NNC(=O)c1ccccc1	644
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1855 # SMILES read failed, buffer was C(NN)(=O)c1cc(OC)nc(c1)OC	645&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1856 # SMARTS did not match for molecule COc1nc(OC)cc(c1)C(=O)NN	645
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1857 # number of heavy atoms wrong for molecule COc1nc(OC)cc(c1)C(=O)NN	645
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1858 # SMILES read failed, buffer was C(/C=C/C)(NN)=O	646&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1859 # SMARTS did not match for molecule C/C=C/C(=O)NN	646
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1860 # number of heavy atoms wrong for molecule C/C=C/C(=O)NN	646
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1861 # SMILES read failed, buffer was C(NN)(=O)c1ccc(O)cc1	647&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1862 # SMARTS did not match for molecule NNC(=O)c1ccc(O)cc1	647
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1863 # number of heavy atoms wrong for molecule NNC(=O)c1ccc(O)cc1	647
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1864 # SMILES read failed, buffer was C(NN)(=O)c1ccc(C(C)C)cc1	648&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1865 # SMARTS did not match for molecule NNC(=O)c1ccc(cc1)C(C)C	648
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1866 # number of heavy atoms wrong for molecule NNC(=O)c1ccc(cc1)C(C)C	648
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1867 # SMILES read failed, buffer was C(C(NN)=O)C(NN)=O	649&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1868 # SMARTS did not match for molecule NNC(=O)CC(=O)NN	649
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1869 # number of heavy atoms wrong for molecule NNC(=O)CC(=O)NN	649
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1870 # SMILES read failed, buffer was I(Cl)Cl.Cc1[n+](C)cccc1	650&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1871 # SMARTS did not match for molecule ClICl.Cc1cccc[n+]1C	650
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1872 # number of heavy atoms wrong for molecule ClICl.Cc1cccc[n+]1C	650
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1873 # SMILES read failed, buffer was Oc1c2c(c(O)nn1)cccc2	651&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1874 # SMARTS did not match for molecule Oc1nnc(O)c2ccccc12	651
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1875 # number of heavy atoms wrong for molecule Oc1nnc(O)c2ccccc12	651
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1876 # SMILES read failed, buffer was C(NN)(=O)c1c(O)cccc1	652&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1877 # SMARTS did not match for molecule NNC(=O)c1ccccc1O	652
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1878 # number of heavy atoms wrong for molecule NNC(=O)c1ccccc1O	652
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1879 # SMILES read failed, buffer was C(NN)(=O)c1cccs1	653&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1880 # SMARTS did not match for molecule NNC(=O)c1cccs1	653
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1881 # number of heavy atoms wrong for molecule NNC(=O)c1cccs1	653
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1882 # SMILES read failed, buffer was CC=1OC(=O)CC1	654&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1883 # SMARTS did not match for molecule O=C1CC=C(C)O1	654
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1884 # number of heavy atoms wrong for molecule O=C1CC=C(C)O1	654
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1885 # SMILES read failed, buffer was C[C@H]1OC(=O)C=C1	655&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1886 # SMARTS did not match for molecule C[C@H]1C=CC(=O)O1	655
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1887 # number of heavy atoms wrong for molecule C[C@H]1C=CC(=O)O1	655
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1888 # SMILES read failed, buffer was C([C@@H](O)[C@@H]1[C@@H](O)[C@@H](O)C(O1)=O)=O	656&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1889 # SMARTS did not match for molecule O=C[C@@H](O)[C@@H]1OC(=O)[C@@H](O)[C@@H]1O	656
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1890 # number of heavy atoms wrong for molecule O=C[C@@H](O)[C@@H]1OC(=O)[C@@H](O)[C@@H]1O	656
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1891 # SMILES read failed, buffer was N(C(C)=O)c1ccc(/C=N/O)cc1	657&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1892 # SMARTS did not match for molecule O/N=C/c1ccc(cc1)NC(=O)C	657
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1893 # number of heavy atoms wrong for molecule O/N=C/c1ccc(cc1)NC(=O)C	657
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1894 # SMILES read failed, buffer was C(/C(=O)c1ccccc1)(=N/O)c1ccccc1	658&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1895 # SMARTS did not match for molecule O/N=C(/c1ccccc1)\C(=O)c1ccccc1	658
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1896 # number of heavy atoms wrong for molecule O/N=C(/c1ccccc1)\C(=O)c1ccccc1	658
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1897 # SMILES read failed, buffer was C(/[C@@H](O)c1ccccc1)(=N/O)c1ccccc1	659&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1898 # SMARTS did not match for molecule O/N=C(/c1ccccc1)\[C@@H](O)c1ccccc1	659
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1899 # number of heavy atoms wrong for molecule O/N=C(/c1ccccc1)\[C@@H](O)c1ccccc1	659
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1900 # SMILES read failed, buffer was C(/C(C)=O)(=N/O)C	660&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1901 # SMARTS did not match for molecule C/C(=N/O)/C(=O)C	660
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1902 # number of heavy atoms wrong for molecule C/C(=N/O)/C(=O)C	660
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1903 # SMILES read failed, buffer was N(CC)(CC)[C@@H]1/C(=N/O)CCCC1	661&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1904 # SMARTS did not match for molecule CCN(CC)[C@@H]1CCCC/C/1=N\O	661
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1905 # number of heavy atoms wrong for molecule CCN(CC)[C@@H]1CCCC/C/1=N\O	661
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1906 # SMILES read failed, buffer was N(=O)(=O)c1oc(/C=N/O)cc1	662&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1907 # SMARTS did not match for molecule O/N=C/c1ccc(o1)N(=O)=O	662
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1908 # number of heavy atoms wrong for molecule O/N=C/c1ccc(o1)N(=O)=O	662
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1909 # SMILES read failed, buffer was C(/C=C/c1ccc(OC)cc1)(=N/O)c1ccccc1	663&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1910 # SMARTS did not match for molecule COc1ccc(cc1)\C=C\C(=N\O)/c1ccccc1	663
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1911 # number of heavy atoms wrong for molecule COc1ccc(cc1)\C=C\C(=N\O)/c1ccccc1	663
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1912 # SMILES read failed, buffer was C(/CCc1ccc(OC)cc1)(=N/O)c1ccccc1	664&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1913 # SMARTS did not match for molecule COc1ccc(cc1)CC/C(=N\O)/c1ccccc1	664
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1914 # number of heavy atoms wrong for molecule COc1ccc(cc1)CC/C(=N\O)/c1ccccc1	664
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1915 # SMILES read failed, buffer was C([N+](C)(C)C)[C@@H]1COCCO1	665&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1916 # SMARTS did not match for molecule C[N+](C)(C)C[C@@H]1OCCOC1	665
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1917 # number of heavy atoms wrong for molecule C[N+](C)(C)C[C@@H]1OCCOC1	665
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1918 # SMILES read failed, buffer was C([C@@H](C(NO)=O)N)c1ccc(O)cc1	667&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1919 # SMARTS did not match for molecule ONC(=O)[C@@H](N)Cc1ccc(O)cc1	667
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1920 # number of heavy atoms wrong for molecule ONC(=O)[C@@H](N)Cc1ccc(O)cc1	667
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1921 # SMILES read failed, buffer was O(OC(C)=O)C(C)=O	669&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1922 # SMARTS did not match for molecule CC(=O)OOC(=O)C	669
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1923 # number of heavy atoms wrong for molecule CC(=O)OOC(=O)C	669
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1924 # SMILES read failed, buffer was C(OOC(CCCCCCCCCCC)=O)(CCCCCCCCCCC)=O	670&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1925 # SMARTS did not match for molecule CCCCCCCCCCCC(=O)OOC(=O)CCCCCCCCCCC	670
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1926 # number of heavy atoms wrong for molecule CCCCCCCCCCCC(=O)OOC(=O)CCCCCCCCCCC	670
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1927 # SMILES read failed, buffer was C(OOC(=O)c1ccccc1)(=O)c1ccccc1	671&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1928 # SMARTS did not match for molecule O=C(OOC(=O)c1ccccc1)c1ccccc1	671
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1929 # number of heavy atoms wrong for molecule O=C(OOC(=O)c1ccccc1)c1ccccc1	671
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1930 # SMILES read failed, buffer was C(OO)(C)(C)C	672&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1931 # SMARTS did not match for molecule OOC(C)(C)C	672
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1932 # number of heavy atoms wrong for molecule OOC(C)(C)C	672
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1933 # SMILES read failed, buffer was O(OC(C)(C)C)C(C)(C)C	673&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1934 # SMARTS did not match for molecule CC(C)(C)OOC(C)(C)C	673
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1935 # number of heavy atoms wrong for molecule CC(C)(C)OOC(C)(C)C	673
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1936 # SMILES read failed, buffer was C(OOC(C)(C)C)(=O)c1ccccc1	674&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1937 # SMARTS did not match for molecule O=C(OOC(C)(C)C)c1ccccc1	674
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1938 # number of heavy atoms wrong for molecule O=C(OOC(C)(C)C)c1ccccc1	674
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1939 # SMILES read failed, buffer was C(OOC(=O)c1ccccc1)(=O)c1ccccc1	675&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1940 # SMARTS did not match for molecule O=C(OOC(=O)c1ccccc1)c1ccccc1	675
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1941 # number of heavy atoms wrong for molecule O=C(OOC(=O)c1ccccc1)c1ccccc1	675
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1942 # SMILES read failed, buffer was C(OOC(CCC(=O)O)=O)(CCC(=O)O)=O	676&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1943 # SMARTS did not match for molecule O=C(CCC(=O)O)OOC(=O)CCC(=O)O	676
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1944 # number of heavy atoms wrong for molecule O=C(CCC(=O)O)OOC(=O)CCC(=O)O	676
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1945 # SMILES read failed, buffer was N=c1sc(c2ccccc2)n[nH]1	677&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1946 # SMARTS did not match for molecule N=c1[nH]nc(s1)c1ccccc1	677
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1947 # number of heavy atoms wrong for molecule N=c1[nH]nc(s1)c1ccccc1	677
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1948 # SMILES read failed, buffer was S=c1[nH]c(c2ccccc2)cs1	678&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1949 # SMARTS did not match for molecule S=c1scc([nH]1)c1ccccc1	678
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1950 # number of heavy atoms wrong for molecule S=c1scc([nH]1)c1ccccc1	678
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1951 # SMILES read failed, buffer was c12c(nsn1)cccc2	679&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1952 # SMARTS did not match for molecule c1ccc2nsnc2c1	679
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1953 # number of heavy atoms wrong for molecule c1ccc2nsnc2c1	679
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1954 # SMILES read failed, buffer was S=C1NCCS1	680&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1955 # SMARTS did not match for molecule S=C1NCCS1	680
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1956 # number of heavy atoms wrong for molecule S=C1NCCS1	680
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1957 # SMILES read failed, buffer was Cc1c(C)sc([nH]1)=S	681&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1958 # SMARTS did not match for molecule S=c1[nH]c(C)c(C)s1	681
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1959 # number of heavy atoms wrong for molecule S=c1[nH]c(C)c(C)s1	681
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1960 # SMILES read failed, buffer was N(C(Nc1ccc(N(C)C)cc1)=S)c1ccc(OCCCC)cc1	682&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1961 # SMARTS did not match for molecule CCCCOc1ccc(cc1)NC(=S)Nc1ccc(cc1)N(C)C	682
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1962 # number of heavy atoms wrong for molecule CCCCOc1ccc(cc1)NC(=S)Nc1ccc(cc1)N(C)C	682
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1963 # SMILES read failed, buffer was N(C(Nc1c(CC)cccc1)=S)c1c(CC)cccc1	683&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1964 # SMARTS did not match for molecule CCc1ccccc1NC(=S)Nc1ccccc1CC	683
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1965 # number of heavy atoms wrong for molecule CCc1ccccc1NC(=S)Nc1ccccc1CC	683
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1966 # SMILES read failed, buffer was N(C(Nc1ccccc1)=S)c1ccccc1	686&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1967 # SMARTS did not match for molecule S=C(Nc1ccccc1)Nc1ccccc1	686
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1968 # number of heavy atoms wrong for molecule S=C(Nc1ccccc1)Nc1ccccc1	686
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1969 # SMILES read failed, buffer was N(C(Nc1ccc(C)cc1)=S)c1ccc(C)cc1	687&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1970 # SMARTS did not match for molecule S=C(Nc1ccc(C)cc1)Nc1ccc(C)cc1	687
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1971 # number of heavy atoms wrong for molecule S=C(Nc1ccc(C)cc1)Nc1ccc(C)cc1	687
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1972 # SMILES read failed, buffer was N(NC(NNc1ccccc1)=S)c1ccccc1	688&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1973 # SMARTS did not match for molecule S=C(NNc1ccccc1)NNc1ccccc1	688
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1974 # number of heavy atoms wrong for molecule S=C(NNc1ccccc1)NNc1ccccc1	688
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1975 # SMILES read failed, buffer was C(NN)(NN)=S	689&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1976 # SMARTS did not match for molecule NNC(=S)NN	689
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1977 # number of heavy atoms wrong for molecule NNC(=S)NN	689
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1978 # SMILES read failed, buffer was N(C(C)=O)c1ccc(/C=N/NC(NN)=S)cc1	690&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1979 # SMARTS did not match for molecule NNC(=S)N/N=C/c1ccc(cc1)NC(=O)C	690
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1980 # number of heavy atoms wrong for molecule NNC(=S)N/N=C/c1ccc(cc1)NC(=O)C	690
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1981 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1ccccc1	691&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1982 # SMARTS did not match for molecule NNC(=S)N/N=C\c1ccccc1	691
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1983 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1ccccc1	691
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1984 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1ccco1	692&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1985 # SMARTS did not match for molecule NNC(=S)N/N=C\c1ccco1	692
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1986 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1ccco1	692
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1987 # SMILES read failed, buffer was N(=O)(=O)c1ccc(/C=N/NC(NN)=S)cc1	693&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1988 # SMARTS did not match for molecule NNC(=S)N/N=C/c1ccc(cc1)N(=O)=O	693
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1989 # number of heavy atoms wrong for molecule NNC(=S)N/N=C/c1ccc(cc1)N(=O)=O	693
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1990 # SMILES read failed, buffer was N(=O)(=O)c1cc(/C=N/NC(NN)=S)ccc1	694&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1991 # SMARTS did not match for molecule NNC(=S)N/N=C/c1cccc(c1)N(=O)=O	694
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1992 # number of heavy atoms wrong for molecule NNC(=S)N/N=C/c1cccc(c1)N(=O)=O	694
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1993 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1cccnc1	695&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1994 # SMARTS did not match for molecule NNC(=S)N/N=C\c1cccnc1	695
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1995 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1cccnc1	695
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1996 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1ccc[nH]1	696&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 1997 # SMARTS did not match for molecule NNC(=S)N/N=C\c1ccc[nH]1	696
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 1998 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1ccc[nH]1	696
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 1999 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1nc2c(cccc2)cc1	697&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2000 # SMARTS did not match for molecule NNC(=S)N/N=C\c1ccc2ccccc2n1	697
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2001 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1ccc2ccccc2n1	697
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2002 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1c2c(ncc1)cccc2	698&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2003 # SMARTS did not match for molecule NNC(=S)N/N=C\c1ccnc2ccccc12	698
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2004 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1ccnc2ccccc12	698
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2005 # SMILES read failed, buffer was C(=N/NC(NN)=S)/c1cccs1	699&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2006 # SMARTS did not match for molecule NNC(=S)N/N=C\c1cccs1	699
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2007 # number of heavy atoms wrong for molecule NNC(=S)N/N=C\c1cccs1	699
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2008 # SMILES read failed, buffer was S(NNC(N)=S)(=O)(=O)c1ccccc1	700&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2009 # SMARTS did not match for molecule NC(=S)NNS(=O)(=O)c1ccccc1	700
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2010 # number of heavy atoms wrong for molecule NC(=S)NNS(=O)(=O)c1ccccc1	700
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2011 # SMILES read failed, buffer was C(NNC(N)=S)(=O)c1ccccc1	701&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2012 # SMARTS did not match for molecule NC(=S)NNC(=O)c1ccccc1	701
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2013 # number of heavy atoms wrong for molecule NC(=S)NNC(=O)c1ccccc1	701
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2014 # SMILES read failed, buffer was C(NNC(N)=S)(=O)c1ccc([N+](=O)[O-])cc1	702&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2015 # SMARTS did not match for molecule NC(=S)NNC(=O)c1ccc(cc1)[N+](=O)[O-]	702
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2016 # number of heavy atoms wrong for molecule NC(=S)NNC(=O)c1ccc(cc1)[N+](=O)[O-]	702
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2017 # SMILES read failed, buffer was C(NNC(N)=S)(=O)c1cc([N+](=O)[O-])ccc1	703&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2018 # SMARTS did not match for molecule NC(=S)NNC(=O)c1cccc(c1)[N+](=O)[O-]	703
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2019 # number of heavy atoms wrong for molecule NC(=S)NNC(=O)c1cccc(c1)[N+](=O)[O-]	703
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2020 # SMILES read failed, buffer was N(C(NN)=S)c1ccccc1	704&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2021 # SMARTS did not match for molecule NNC(=S)Nc1ccccc1	704
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2022 # number of heavy atoms wrong for molecule NNC(=S)Nc1ccccc1	704
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2023 # SMILES read failed, buffer was C(=N\NC(N)=S)(/C)c1ccc(Cl)cc1	705&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2024 # SMARTS did not match for molecule NC(=S)N\N=C(\C)/c1ccc(Cl)cc1	705
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2025 # number of heavy atoms wrong for molecule NC(=S)N\N=C(\C)/c1ccc(Cl)cc1	705
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2026 # SMILES read failed, buffer was C(=C/C=N/NC(N)=S)/c1ccccc1	706&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2027 # SMARTS did not match for molecule NC(=S)N/N=C\C=C\c1ccccc1	706
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2028 # number of heavy atoms wrong for molecule NC(=S)N/N=C\C=C\c1ccccc1	706
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2029 # SMILES read failed, buffer was C(=N\NC(N)=S)(/C)c1cccs1	707&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2030 # SMARTS did not match for molecule NC(=S)N\N=C(\C)/c1cccs1	707
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2031 # number of heavy atoms wrong for molecule NC(=S)N\N=C(\C)/c1cccs1	707
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2032 # SMILES read failed, buffer was C(=N/NC(N)=S)(/C(=N/O)C)C	708&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2033 # SMARTS did not match for molecule C/C(=N/NC(=S)N)/C(=N/O)\C	708
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2034 # number of heavy atoms wrong for molecule C/C(=N/NC(=S)N)/C(=N/O)\C	708
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2035 # SMILES read failed, buffer was C(=N/NC(N)=S)(/CC)C	709&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2036 # SMARTS did not match for molecule C/C(=N/NC(=S)N)/CC	709
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2037 # number of heavy atoms wrong for molecule C/C(=N/NC(=S)N)/CC	709
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2038 # SMILES read failed, buffer was C(/C(=N/NC(N)=S)C)C(OCC)=O	710&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2039 # SMARTS did not match for molecule C/C(=N\NC(=S)N)/CC(=O)OCC	710
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2040 # number of heavy atoms wrong for molecule C/C(=N\NC(=S)N)/CC(=O)OCC	710
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2041 # SMILES read failed, buffer was N(/NC(N)=S)=C(\C)C	711&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2042 # SMARTS did not match for molecule NC(=S)NN=C(C)C	711
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2043 # number of heavy atoms wrong for molecule NC(=S)NN=C(C)C	711
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2044 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1ccc(OC)cc1	712&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2045 # SMARTS did not match for molecule COc1ccc(\C=N\NC(=S)N)cc1	712
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2046 # number of heavy atoms wrong for molecule COc1ccc(\C=N\NC(=S)N)cc1	712
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2047 # SMILES read failed, buffer was C(=N\NC(N)=S)(/C)c1ccccc1	713&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2048 # SMARTS did not match for molecule NC(=S)N\N=C(\C)/c1ccccc1	713
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2049 # number of heavy atoms wrong for molecule NC(=S)N\N=C(\C)/c1ccccc1	713
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2050 # SMILES read failed, buffer was N(C(C)=O)c1ccc(/C=N/NC(NCC(C)C)=S)cc1	714&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2051 # SMARTS did not match for molecule CC(C)CNC(=S)N/N=C/c1ccc(cc1)NC(=O)C	714
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2052 # number of heavy atoms wrong for molecule CC(C)CNC(=S)N/N=C/c1ccc(cc1)NC(=O)C	714
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2053 # SMILES read failed, buffer was N(/NC(N)=S)=C/C=C/C	716&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2054 # SMARTS did not match for molecule C/C=C\C=N\NC(=S)N	716
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2055 # number of heavy atoms wrong for molecule C/C=C\C=N\NC(=S)N	716
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2056 # SMILES read failed, buffer was N(/NC(N)=S)=C1/CCCCC1	717&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2057 # SMARTS did not match for molecule NC(=S)NN=C1CCCCC1	717
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2058 # number of heavy atoms wrong for molecule NC(=S)NN=C1CCCCC1	717
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2059 # SMILES read failed, buffer was S(CC)(=O)(=O)c1ccc(/C=N/NC(N)=S)cc1	718&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2060 # SMARTS did not match for molecule CCS(=O)(=O)c1ccc(/C=N\NC(=S)N)cc1	718
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2061 # number of heavy atoms wrong for molecule CCS(=O)(=O)c1ccc(/C=N\NC(=S)N)cc1	718
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2062 # SMILES read failed, buffer was C(/CCCCCC)=N/NC(N)=S	719&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2063 # SMARTS did not match for molecule CCCCCC/C=N\NC(=S)N	719
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2064 # number of heavy atoms wrong for molecule CCCCCC/C=N\NC(=S)N	719
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2065 # SMILES read failed, buffer was C(=N\NC(N)=S)(/C)c1ccc(O)cc1	720&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2066 # SMARTS did not match for molecule NC(=S)N\N=C(\C)/c1ccc(O)cc1	720
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2067 # number of heavy atoms wrong for molecule NC(=S)N\N=C(\C)/c1ccc(O)cc1	720
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2068 # SMILES read failed, buffer was N(/NC(N)=S)=C1/c2c(cccc2)NC1=O	721&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2069 # SMARTS did not match for molecule NC(=S)N/N=C1/C(=O)Nc2ccccc\12	721
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2070 # number of heavy atoms wrong for molecule NC(=S)N/N=C1/C(=O)Nc2ccccc\12	721
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2071 # SMILES read failed, buffer was C(=N\NC(N)=S)(/C)c1ccc(OC)cc1	722&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2072 # SMARTS did not match for molecule COc1ccc(cc1)/C(=N/NC(=S)N)\C	722
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2073 # number of heavy atoms wrong for molecule COc1ccc(cc1)/C(=N/NC(=S)N)\C	722
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2074 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1c2c(ccc1)cccc2	723&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2075 # SMARTS did not match for molecule NC(=S)N/N=C\c1cccc2ccccc12	723
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2076 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1cccc2ccccc12	723
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2077 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1cc([N+](=O)[O-])ccc1O	724&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2078 # SMARTS did not match for molecule [O-][N+](=O)c1cc(\C=N\NC(=S)N)c(O)cc1	724
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2079 # number of heavy atoms wrong for molecule [O-][N+](=O)c1cc(\C=N\NC(=S)N)c(O)cc1	724
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2080 # SMILES read failed, buffer was N(=O)(=O)c1sc(/C=N/NC(N)=S)cc1	725&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2081 # SMARTS did not match for molecule NC(=S)N/N=C/c1ccc(s1)N(=O)=O	725
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2082 # number of heavy atoms wrong for molecule NC(=S)N/N=C/c1ccc(s1)N(=O)=O	725
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2083 # SMILES read failed, buffer was C(=N/NC(N)=S)/[C@@H]1[C@@H]2C(C)(C)[C@@H](C2)CC1	726&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2084 # SMARTS did not match for molecule NC(=S)N/N=C\[C@@H]1CC[C@@H]2C[C@@H]1C2(C)C	726
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2085 # number of heavy atoms wrong for molecule NC(=S)N/N=C\[C@@H]1CC[C@@H]2C[C@@H]1C2(C)C	726
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2086 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1cc2c(OCO2)cc1	727&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2087 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccc2OCOc2c1	727
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2088 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccc2OCOc2c1	727
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2089 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1ccc(OCCC)cc1	728&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2090 # SMARTS did not match for molecule CCCOc1ccc(\C=N\NC(=S)N)cc1	728
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2091 # number of heavy atoms wrong for molecule CCCOc1ccc(\C=N\NC(=S)N)cc1	728
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2092 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1ccccn1	729&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2093 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccccn1	729
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2094 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccccn1	729
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2095 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1cccnc1	730&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2096 # SMARTS did not match for molecule NC(=S)N/N=C\c1cccnc1	730
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2097 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1cccnc1	730
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2098 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1ccncc1	731&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2099 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccncc1	731
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2100 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccncc1	731
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2101 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1c2c(ncc1)cccc2	732&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2102 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccnc2ccccc12	732
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2103 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccnc2ccccc12	732
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2104 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1c(O)cccc1	733&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2105 # SMARTS did not match for molecule NC(=S)N/N=C\c1ccccc1O	733
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2106 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1ccccc1O	733
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2107 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1cccs1	734&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2108 # SMARTS did not match for molecule NC(=S)N/N=C\c1cccs1	734
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2109 # number of heavy atoms wrong for molecule NC(=S)N/N=C\c1cccs1	734
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2110 # SMILES read failed, buffer was C(=N/NC(N)=S)/c1cc(OC)c(O)cc1	735&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2111 # SMARTS did not match for molecule COc1cc(\C=N\NC(=S)N)ccc1O	735
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2112 # number of heavy atoms wrong for molecule COc1cc(\C=N\NC(=S)N)ccc1O	735
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2113 # SMILES read failed, buffer was C(=N/c1ccccc1)/c1ccccc1	736&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2114 # SMARTS did not match for molecule c1ccc(cc1)\N=C\c1ccccc1	736
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2115 # number of heavy atoms wrong for molecule c1ccc(cc1)\N=C\c1ccccc1	736
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2116 # SMILES read failed, buffer was N(C)(C)C=1S[Zn]2(SC(N(C)C)=[S+]2)[S+]1	737&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2117 # SMARTS did not match for molecule CN(C)C1=[S+][Zn]2(S1)SC(=[S+]2)N(C)C	737
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2118 # number of heavy atoms wrong for molecule CN(C)C1=[S+][Zn]2(S1)SC(=[S+]2)N(C)C	737
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2119 # SMILES read failed, buffer was C(CC(C)(C)C)(C)(C)c1ccc(OCCOCCSC(=[NH2])N)cc1	738&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2120 # SMARTS did not match for molecule NC(=[NH2])SCCOCCOc1ccc(cc1)C(C)(C)CC(C)(C)C	738
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2121 # number of heavy atoms wrong for molecule NC(=[NH2])SCCOCCOc1ccc(cc1)C(C)(C)CC(C)(C)C	738
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2122 # SMILES read failed, buffer was Nc1c2c(ncc(n2)CNc2ccc(C(N[C@@H](CCC(=O)O)C(=O)O)=O)cc2)nc(n1)N	739&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2123 # SMARTS did not match for molecule OC(=O)CC[C@@H](NC(=O)c1ccc(NCc2cnc3nc(N)nc(N)c3n2)cc1)C(=O)O	739
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2124 # number of heavy atoms wrong for molecule OC(=O)CC[C@@H](NC(=O)c1ccc(NCc2cnc3nc(N)nc(N)c3n2)cc1)C(=O)O	739
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2125 # SMILES read failed, buffer was Nc1c2c(ncc(n2)CN(C)c2ccc(C(N[C@@H](CCC(=O)O)C(=O)O)=O)cc2)nc(n1)N	740&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2126 # SMARTS did not match for molecule OC(=O)CC[C@@H](NC(=O)c1ccc(cc1)N(C)Cc1cnc2nc(N)nc(N)c2n1)C(=O)O	740
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2127 # number of heavy atoms wrong for molecule OC(=O)CC[C@@H](NC(=O)c1ccc(cc1)N(C)Cc1cnc2nc(N)nc(N)c2n1)C(=O)O	740
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2128 # SMILES read failed, buffer was C[C@@]12[C@@H]([C@@H]3[C@@H]([C@@]4(C)C(=CC(=O)CC4)CC3)[C@@H](C2)O)CC[C@@]1(C(COC(C)=O)=O)O	741&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2129 # SMARTS did not match for molecule CC(=O)OCC(=O)[C@@]1(O)CC[C@@H]2[C@@H]3CCC4=CC(=O)CC[C@@]4(C)[C@@H]3[C@@H](O)C[C@@]12C	741
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2130 # number of heavy atoms wrong for molecule CC(=O)OCC(=O)[C@@]1(O)CC[C@@H]2[C@@H]3CCC4=CC(=O)CC[C@@]4(C)[C@@H]3[C@@H](O)C[C@@]12C	741
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2131 # SMILES read failed, buffer was O(C[C@@H](C(=O)O)N)C(C=[N+]=[N-])=O	742&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2132 # SMARTS did not match for molecule [N-]=[N+]=CC(=O)OC[C@@H](N)C(=O)O	742
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2133 # number of heavy atoms wrong for molecule [N-]=[N+]=CC(=O)OC[C@@H](N)C(=O)O	742
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2134 # SMILES read failed, buffer was Nc1c2c(nc(n1)N)[nH]cn2	743&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2135 # SMARTS did not match for molecule Nc1nc(N)c2nc[nH]c2n1	743
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2136 # number of heavy atoms wrong for molecule Nc1nc(N)c2nc[nH]c2n1	743
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2137 # SMILES read failed, buffer was Clc1c2c(ncn1)[nH]cn2	744&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2138 # SMARTS did not match for molecule Clc1ncnc2[nH]cnc12	744
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2139 # number of heavy atoms wrong for molecule Clc1ncnc2[nH]cnc12	744
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2140 # SMILES read failed, buffer was P(=O)(N1CC1)(N1CC1)N1CCOCC1	745&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2141 # SMARTS did not match for molecule O=P(N1CCOCC1)(N1CC1)N1CC1	745
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2142 # number of heavy atoms wrong for molecule O=P(N1CCOCC1)(N1CC1)N1CC1	745
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2143 # SMILES read failed, buffer was O(C(N)=O)CC	746&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2144 # SMARTS did not match for molecule CCOC(=O)N	746
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2145 # number of heavy atoms wrong for molecule CCOC(=O)N	746
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2146 # SMILES read failed, buffer was C(NC)(C)=O	747&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2147 # SMARTS did not match for molecule CNC(=O)C	747
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2148 # number of heavy atoms wrong for molecule CNC(=O)C	747
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2149 # SMILES read failed, buffer was C(N)=O	748&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2150 # SMARTS did not match for molecule NC=O	748
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2151 # number of heavy atoms wrong for molecule NC=O	748
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2152 # SMILES read failed, buffer was Oc1c2c(nc(n1)N)[nH]nn2	749&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2153 # SMARTS did not match for molecule Nc1nc(O)c2nn[nH]c2n1	749
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2154 # number of heavy atoms wrong for molecule Nc1nc(O)c2nn[nH]c2n1	749
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2155 # SMILES read failed, buffer was O(S(C)(=O)=O)CCCCOS(C)(=O)=O	750&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2156 # SMARTS did not match for molecule CS(=O)(=O)OCCCCOS(=O)(=O)C	750
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2157 # number of heavy atoms wrong for molecule CS(=O)(=O)OCCCCOS(=O)(=O)C	750
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2158 # SMILES read failed, buffer was C([C@@H](C(=O)O)N)CSCC	751&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2159 # SMARTS did not match for molecule CCSCC[C@@H](N)C(=O)O	751
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2160 # number of heavy atoms wrong for molecule CCSCC[C@@H](N)C(=O)O	751
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2161 # SMILES read failed, buffer was Sc1c2c(nc(n1)N)[nH]cn2	752&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2162 # SMARTS did not match for molecule Nc1nc(S)c2nc[nH]c2n1	752
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2163 # number of heavy atoms wrong for molecule Nc1nc(S)c2nc[nH]c2n1	752
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2164 # SMILES read failed, buffer was c12c([nH]cn1)ncnc2	753&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2165 # SMARTS did not match for molecule c1ncc2nc[nH]c2n1	753
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2166 # number of heavy atoms wrong for molecule c1ncc2nc[nH]c2n1	753
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2167 # SMILES read failed, buffer was C([C@@H](C(=O)O)N)c1cccs1	754&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2168 # SMARTS did not match for molecule OC(=O)[C@@H](N)Cc1cccs1	754
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2169 # number of heavy atoms wrong for molecule OC(=O)[C@@H](N)Cc1cccs1	754
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2170 # SMILES read failed, buffer was Sc1c2c(ncn1)[nH]cn2	755&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2171 # SMARTS did not match for molecule Sc1ncnc2[nH]cnc12	755
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2172 # number of heavy atoms wrong for molecule Sc1ncnc2[nH]cnc12	755
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2173 # SMILES read failed, buffer was Oc1c2c(nc(n1)O)[nH]nn2	756&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2174 # SMARTS did not match for molecule Oc1nc(O)c2nn[nH]c2n1	756
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2175 # number of heavy atoms wrong for molecule Oc1nc(O)c2nn[nH]c2n1	756
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2176 # SMILES read failed, buffer was O(C)c1c2c3c([C@H](NC(C)=O)CCc2cc(c1OC)OC)cc(=O)c(cc3)OC	757&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2177 # SMARTS did not match for molecule COc1c(OC)cc2CC[C@H](NC(=O)C)c3cc(=O)c(OC)ccc3c2c1OC	757
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2178 # number of heavy atoms wrong for molecule COc1c(OC)cc2CC[C@H](NC(=O)C)c3cc(=O)c(OC)ccc3c2c1OC	757
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2179 # SMILES read failed, buffer was O[C@@H]([C@@H]([C@@H](CO)O)O)[C@@H](C=O)N	758&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2180 # SMARTS did not match for molecule OC[C@@H](O)[C@@H](O)[C@@H](O)[C@@H](N)C=O	758
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2181 # number of heavy atoms wrong for molecule OC[C@@H](O)[C@@H](O)[C@@H](O)[C@@H](N)C=O	758
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2182 # SMILES read failed, buffer was c12c([nH]cn1)cccc2	759&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2183 # SMARTS did not match for molecule c1ccc2nc[nH]c2c1	759
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2184 # number of heavy atoms wrong for molecule c1ccc2nc[nH]c2c1	759
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2185 # SMILES read failed, buffer was Oc1c2c(nc(n1)N)[nH]nc2	760&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2186 # SMARTS did not match for molecule Nc1nc(O)c2cn[nH]c2n1	760
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2187 # number of heavy atoms wrong for molecule Nc1nc(O)c2cn[nH]c2n1	760
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2188 # SMILES read failed, buffer was C(C)(=O)c1cccnc1	761&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2189 # SMARTS did not match for molecule CC(=O)c1cccnc1	761
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2190 # number of heavy atoms wrong for molecule CC(=O)c1cccnc1	761
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2191 # SMILES read failed, buffer was N(CCCl)(CCCl)C	762&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2192 # SMARTS did not match for molecule ClCCN(C)CCCl	762
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2193 # number of heavy atoms wrong for molecule ClCCN(C)CCCl	762
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2194 # SMILES read failed, buffer was S(C)(C)=O	763&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2195 # SMARTS did not match for molecule CS(=O)C	763
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2196 # number of heavy atoms wrong for molecule CS(=O)C	763
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2197 # SMILES read failed, buffer was N([C@@H](C(Cl)Cl)O)C(C)=O	764&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2198 # SMARTS did not match for molecule CC(=O)N[C@@H](O)C(Cl)Cl	764
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2199 # number of heavy atoms wrong for molecule CC(=O)N[C@@H](O)C(Cl)Cl	764
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2200 # SMILES read failed, buffer was C(N[C@@H](C(Cl)Cl)O)(=O)c1ccccc1	765&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2201 # SMARTS did not match for molecule O[C@@H](NC(=O)c1ccccc1)C(Cl)Cl	765
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2202 # number of heavy atoms wrong for molecule O[C@@H](NC(=O)c1ccccc1)C(Cl)Cl	765
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2203 # SMILES read failed, buffer was C(C(N[C@@H](C(Cl)Cl)O)=O)c1ccccc1	766&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2204 # SMARTS did not match for molecule O=C(Cc1ccccc1)N[C@@H](O)C(Cl)Cl	766
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2205 # number of heavy atoms wrong for molecule O=C(Cc1ccccc1)N[C@@H](O)C(Cl)Cl	766
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2206 # SMILES read failed, buffer was C(/C(=N/O)Cl)(=O)c1ccc(C)cc1	767&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2207 # SMARTS did not match for molecule O/N=C(\Cl)/C(=O)c1ccc(C)cc1	767
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2208 # number of heavy atoms wrong for molecule O/N=C(\Cl)/C(=O)c1ccc(C)cc1	767
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2209 # SMILES read failed, buffer was N(C(C)=O)c1ccc(C(CCl)=O)cc1	768&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2210 # SMARTS did not match for molecule ClCC(=O)c1ccc(cc1)NC(=O)C	768
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2211 # number of heavy atoms wrong for molecule ClCC(=O)c1ccc(cc1)NC(=O)C	768
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2212 # SMILES read failed, buffer was C(/C(=N/O)Cl)(=O)c1ccc(c2ccccc2)cc1	769&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2213 # SMARTS did not match for molecule O/N=C(\Cl)/C(=O)c1ccc(cc1)c1ccccc1	769
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2214 # number of heavy atoms wrong for molecule O/N=C(\Cl)/C(=O)c1ccc(cc1)c1ccccc1	769
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2215 # SMILES read failed, buffer was O=C1c2c(cccc2)C(N1O)=O	770&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2216 # SMARTS did not match for molecule O=C1c2ccccc2C(=O)N1O	770
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2217 # number of heavy atoms wrong for molecule O=C1c2ccccc2C(=O)N1O	770
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2218 # SMILES read failed, buffer was N(C(SCCC(N)=O)=S)(CC)CC	771&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2219 # SMARTS did not match for molecule CCN(CC)C(=S)SCCC(=O)N	771
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2220 # number of heavy atoms wrong for molecule CCN(CC)C(=S)SCCC(=O)N	771
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2221 # SMILES read failed, buffer was C(SCCC(N)=O)(=S)N1CCOCC1	772&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2222 # SMARTS did not match for molecule NC(=O)CCSC(=S)N1CCOCC1	772
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2223 # number of heavy atoms wrong for molecule NC(=O)CCSC(=S)N1CCOCC1	772
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2224 # SMILES read failed, buffer was C(CCCCCCCCCCCCCC)c1ccc(O)cc1	773&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2225 # SMARTS did not match for molecule CCCCCCCCCCCCCCCc1ccc(O)cc1	773
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2226 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCc1ccc(O)cc1	773
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2227 # SMILES read failed, buffer was C(CCCCCCCCCCCCCC)c1cc(O)c(O)cc1	774&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2228 # SMARTS did not match for molecule CCCCCCCCCCCCCCCc1ccc(O)c(O)c1	774
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2229 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCc1ccc(O)c(O)c1	774
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2230 # SMILES read failed, buffer was C(CCCCCCCCCCCCCC)c1c(O)cc(O)cc1	775&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2231 # SMARTS did not match for molecule CCCCCCCCCCCCCCCc1ccc(O)cc1O	775
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2232 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCc1ccc(O)cc1O	775
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2233 # SMILES read failed, buffer was C(CCCCCCCCCCCCCC)c1cc(O)cc(c1)O	776&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2234 # SMARTS did not match for molecule CCCCCCCCCCCCCCCc1cc(O)cc(O)c1	776
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2235 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCc1cc(O)cc(O)c1	776
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2236 # SMILES read failed, buffer was B(OC)(OC)OC	777&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2237 # SMARTS did not match for molecule COB(OC)OC	777
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2238 # number of heavy atoms wrong for molecule COB(OC)OC	777
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2239 # SMILES read failed, buffer was B(OCCC)(OCCC)OCCC	778&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2240 # SMARTS did not match for molecule CCCOB(OCCC)OCCC	778
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2241 # number of heavy atoms wrong for molecule CCCOB(OCCC)OCCC	778
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2242 # SMILES read failed, buffer was B(OCCCC)(OCCCC)OCCCC	779&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2243 # SMARTS did not match for molecule CCCCOB(OCCCC)OCCCC	779
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2244 # number of heavy atoms wrong for molecule CCCCOB(OCCCC)OCCCC	779
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2245 # SMILES read failed, buffer was B(OCCCCC)(OCCCCC)OCCCCC	780&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2246 # SMARTS did not match for molecule CCCCCOB(OCCCCC)OCCCCC	780
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2247 # number of heavy atoms wrong for molecule CCCCCOB(OCCCCC)OCCCCC	780
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2248 # SMILES read failed, buffer was B(OCCCCCC)(OCCCCCC)OCCCCCC	781&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2249 # SMARTS did not match for molecule CCCCCCOB(OCCCCCC)OCCCCCC	781
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2250 # number of heavy atoms wrong for molecule CCCCCCOB(OCCCCCC)OCCCCCC	781
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2251 # SMILES read failed, buffer was B(O[C@@H](CC(C)C)C)(O[C@@H](CC(C)C)C)O[C@@H](CC(C)C)C	782&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2252 # SMARTS did not match for molecule CC(C)C[C@@H](C)OB(O[C@@H](C)CC(C)C)O[C@@H](C)CC(C)C	782
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2253 # number of heavy atoms wrong for molecule CC(C)C[C@@H](C)OB(O[C@@H](C)CC(C)C)O[C@@H](C)CC(C)C	782
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2254 # SMILES read failed, buffer was B(OCCCCCCCC)(OCCCCCCCC)OCCCCCCCC	783&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2255 # SMARTS did not match for molecule CCCCCCCCOB(OCCCCCCCC)OCCCCCCCC	783
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2256 # number of heavy atoms wrong for molecule CCCCCCCCOB(OCCCCCCCC)OCCCCCCCC	783
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2257 # SMILES read failed, buffer was B(OC(CC(C)C)CC(C)C)(OC(CC(C)C)CC(C)C)OC(CC(C)C)CC(C)C	784&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2258 # SMARTS did not match for molecule CC(C)CC(CC(C)C)OB(OC(CC(C)C)CC(C)C)OC(CC(C)C)CC(C)C	784
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2259 # number of heavy atoms wrong for molecule CC(C)CC(CC(C)C)OB(OC(CC(C)C)CC(C)C)OC(CC(C)C)CC(C)C	784
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2260 # SMILES read failed, buffer was B(OCCCCCCCCCCCC)(OCCCCCCCCCCCC)OCCCCCCCCCCCC	785&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2261 # SMARTS did not match for molecule CCCCCCCCCCCCOB(OCCCCCCCCCCCC)OCCCCCCCCCCCC	785
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2262 # number of heavy atoms wrong for molecule CCCCCCCCCCCCOB(OCCCCCCCCCCCC)OCCCCCCCCCCCC	785
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2263 # SMILES read failed, buffer was B(OCCCCCCCCCCCCCCCCCC)(OCCCCCCCCCCCCCCCCCC)OCCCCCCCCCCCCCCCCCC	786&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2264 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCCCOB(OCCCCCCCCCCCCCCCCCC)OCCCCCCCCCCCCCCCCCC	786
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2265 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCCCOB(OCCCCCCCCCCCCCCCCCC)OCCCCCCCCCCCCCCCCCC	786
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2266 # SMILES read failed, buffer was O(C(C[C@@H](OB1OC(C)(C)C[C@@H](O1)C)C)(C)C)B1OC(C)(C)C[C@@H](O1)C	788&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2267 # SMARTS did not match for molecule C[C@@H](OB1O[C@@H](C)CC(C)(C)O1)CC(C)(C)OB1O[C@@H](C)CC(C)(C)O1	788
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2268 # number of heavy atoms wrong for molecule C[C@@H](OB1O[C@@H](C)CC(C)(C)O1)CC(C)(C)OB1O[C@@H](C)CC(C)(C)O1	788
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2269 # SMILES read failed, buffer was C(Oc1ccccc1)(=O)c1ccc(C)cc1	789&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2270 # SMARTS did not match for molecule Cc1ccc(cc1)C(=O)Oc1ccccc1	789
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2271 # number of heavy atoms wrong for molecule Cc1ccc(cc1)C(=O)Oc1ccccc1	789
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2272 # SMILES read failed, buffer was C[C@@]12[C@@H]3[C@@H]([C@@H]4[C@@](C)([C@@H]([C@@H](CCCC(C)C)C)CC4)CC3)C[C@@H]([C@@]1(Br)C[C@@H](Cl)CC2)Br	790&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2273 # SMARTS did not match for molecule CC(C)CCC[C@@H](C)[C@@H]1CC[C@@H]2[C@@H]3C[C@@H](Br)[C@@]4(Br)C[C@@H](Cl)CC[C@@]4(C)[C@@H]3CC[C@@]12C	790
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2274 # number of heavy atoms wrong for molecule CC(C)CCC[C@@H](C)[C@@H]1CC[C@@H]2[C@@H]3C[C@@H](Br)[C@@]4(Br)C[C@@H](Cl)CC[C@@]4(C)[C@@H]3CC[C@@]12C	790
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2275 # SMILES read failed, buffer was C(CCCC)(C(=O)O)C(=O)O	791&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2276 # SMARTS did not match for molecule CCCCC(C(=O)O)C(=O)O	791
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2277 # number of heavy atoms wrong for molecule CCCCC(C(=O)O)C(=O)O	791
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2278 # SMILES read failed, buffer was N(C(N)=S)c1c(Br)cc(Br)cc1Br	792&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2279 # SMARTS did not match for molecule NC(=S)Nc1c(Br)cc(Br)cc1Br	792
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2280 # number of heavy atoms wrong for molecule NC(=S)Nc1c(Br)cc(Br)cc1Br	792
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2281 # SMILES read failed, buffer was C(CC(=O)c1ccccc1)(CC(=O)c1ccccc1)c1ccccn1	793&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2282 # SMARTS did not match for molecule O=C(CC(CC(=O)c1ccccc1)c1ccccn1)c1ccccc1	793
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2283 # number of heavy atoms wrong for molecule O=C(CC(CC(=O)c1ccccc1)c1ccccn1)c1ccccc1	793
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2284 # SMILES read failed, buffer was C(CC(=O)c1ccccc1)(CC(=O)c1ccccc1)c1ccncc1	794&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2285 # SMARTS did not match for molecule O=C(CC(CC(=O)c1ccccc1)c1ccncc1)c1ccccc1	794
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2286 # number of heavy atoms wrong for molecule O=C(CC(CC(=O)c1ccccc1)c1ccncc1)c1ccccc1	794
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2287 # SMILES read failed, buffer was C(=C/c1ccc(CC)cn1)/c1ccc([N+](=O)[O-])cc1	795&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2288 # SMARTS did not match for molecule CCc1ccc(\C=C\c2ccc(cc2)[N+](=O)[O-])nc1	795
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2289 # number of heavy atoms wrong for molecule CCc1ccc(\C=C\c2ccc(cc2)[N+](=O)[O-])nc1	795
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2290 # SMILES read failed, buffer was C(C[C@@H](O)c1ccncc1)(=O)c1ccccc1	796&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2291 # SMARTS did not match for molecule O[C@@H](CC(=O)c1ccccc1)c1ccncc1	796
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2292 # number of heavy atoms wrong for molecule O[C@@H](CC(=O)c1ccccc1)c1ccncc1	796
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2293 # SMILES read failed, buffer was C(/C=C/c1ccccn1)(=O)c1ccc(Cl)cc1	797&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2294 # SMARTS did not match for molecule Clc1ccc(cc1)C(=O)/C=C\c1ccccn1	797
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2295 # number of heavy atoms wrong for molecule Clc1ccc(cc1)C(=O)/C=C\c1ccccn1	797
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2296 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(=O)c1ccccn1	798&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2297 # SMARTS did not match for molecule O=C(/C=C\c1ccccc1)c1ccccn1	798
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2298 # number of heavy atoms wrong for molecule O=C(/C=C\c1ccccc1)c1ccccn1	798
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2299 # SMILES read failed, buffer was C(/C=C/c1ccccn1)(=O)c1ccccc1	799&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2300 # SMARTS did not match for molecule O=C(/C=C\c1ccccn1)c1ccccc1	799
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2301 # number of heavy atoms wrong for molecule O=C(/C=C\c1ccccn1)c1ccccc1	799
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2302 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(C#Cc1ccccc1)(C#Cc1ccccc1)O	800&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2303 # SMARTS did not match for molecule OC(\C=C\c1ccccc1)(C#Cc1ccccc1)C#Cc1ccccc1	800
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2304 # number of heavy atoms wrong for molecule OC(\C=C\c1ccccc1)(C#Cc1ccccc1)C#Cc1ccccc1	800
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2305 # SMILES read failed, buffer was C(=O)(c1ccc(C)cc1)c1ccc(O)cc1	801&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2306 # SMARTS did not match for molecule Cc1ccc(cc1)C(=O)c1ccc(O)cc1	801
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2307 # number of heavy atoms wrong for molecule Cc1ccc(cc1)C(=O)c1ccc(O)cc1	801
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2308 # SMILES read failed, buffer was Brc1c2c(cc3c1cccc3)cccc2	803&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2309 # SMARTS did not match for molecule Brc1c2ccccc2cc2ccccc12	803
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2310 # number of heavy atoms wrong for molecule Brc1c2ccccc2cc2ccccc12	803
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2311 # SMILES read failed, buffer was N(=O)(=O)c1c2c(cc(c1O)C(OC)=O)cccc2	804&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2312 # SMARTS did not match for molecule COC(=O)c1cc2ccccc2c(N(=O)=O)c1O	804
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2313 # number of heavy atoms wrong for molecule COC(=O)c1cc2ccccc2c(N(=O)=O)c1O	804
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2314 # SMILES read failed, buffer was C(=O)(O)c1oc(C(=O)O)cc(c1O)=O	805&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2315 # SMARTS did not match for molecule OC(=O)c1cc(=O)c(O)c(o1)C(=O)O	805
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2316 # number of heavy atoms wrong for molecule OC(=O)c1cc(=O)c(O)c(o1)C(=O)O	805
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2317 # SMILES read failed, buffer was B(Oc1ccccc1)(Oc1ccccc1)Oc1ccccc1	806&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2318 # SMARTS did not match for molecule c1ccc(cc1)OB(Oc1ccccc1)Oc1ccccc1	806
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2319 # number of heavy atoms wrong for molecule c1ccc(cc1)OB(Oc1ccccc1)Oc1ccccc1	806
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2320 # SMILES read failed, buffer was B(Oc1c(C)cccc1)(Oc1c(C)cccc1)Oc1c(C)cccc1	807&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2321 # SMARTS did not match for molecule Cc1ccccc1OB(Oc1ccccc1C)Oc1ccccc1C	807
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2322 # number of heavy atoms wrong for molecule Cc1ccccc1OB(Oc1ccccc1C)Oc1ccccc1C	807
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2323 # SMILES read failed, buffer was B(Oc1c(Cl)cccc1)(Oc1c(Cl)cccc1)Oc1c(Cl)cccc1	808&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2324 # SMARTS did not match for molecule Clc1ccccc1OB(Oc1ccccc1Cl)Oc1ccccc1Cl	808
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2325 # number of heavy atoms wrong for molecule Clc1ccccc1OB(Oc1ccccc1Cl)Oc1ccccc1Cl	808
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2326 # SMILES read failed, buffer was C(CCCCCCCCCCCCCCCCCC)(CO)CO	809&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2327 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCCCC(CO)CO	809
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2328 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCCCC(CO)CO	809
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2329 # SMILES read failed, buffer was C[N@]1[C@@H](CCC1)[C@@H]1CCCNC1	811&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2330 # SMARTS did not match for molecule C[N@]1CCC[C@@H]1[C@@H]1CCCNC1	811
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2331 # number of heavy atoms wrong for molecule C[N@]1CCC[C@@H]1[C@@H]1CCCNC1	811
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2332 # SMILES read failed, buffer was C([C@@H](CCc1ccccc1)C(C)=O)(OCC)=O	812&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2333 # SMARTS did not match for molecule CCOC(=O)[C@@H](CCc1ccccc1)C(=O)C	812
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2334 # number of heavy atoms wrong for molecule CCOC(=O)[C@@H](CCc1ccccc1)C(=O)C	812
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2335 # SMILES read failed, buffer was C(CC(C)=O)c1ccccc1	813&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2336 # SMARTS did not match for molecule CC(=O)CCc1ccccc1	813
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2337 # number of heavy atoms wrong for molecule CC(=O)CCc1ccccc1	813
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2338 # SMILES read failed, buffer was C(CCCCCC)CCCCCS	814&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2339 # SMARTS did not match for molecule CCCCCCCCCCCCS	814
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2340 # number of heavy atoms wrong for molecule CCCCCCCCCCCCS	814
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2341 # SMILES read failed, buffer was O(CCCN)C(C)C	815&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2342 # SMARTS did not match for molecule NCCCOC(C)C	815
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2343 # number of heavy atoms wrong for molecule NCCCOC(C)C	815
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2344 # SMILES read failed, buffer was C(C(OC=O)(C)C)(OCC)OCC	816&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2345 # SMARTS did not match for molecule CCOC(OCC)C(C)(C)OC=O	816
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2346 # number of heavy atoms wrong for molecule CCOC(OCC)C(C)(C)OC=O	816
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2347 # SMILES read failed, buffer was CC1CSSC1	817&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2348 # SMARTS did not match for molecule CC1CSSC1	817
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2349 # number of heavy atoms wrong for molecule CC1CSSC1	817
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2350 # SMILES read failed, buffer was C(=O)(C1CCCCC1)c1ccccc1	818&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2351 # SMARTS did not match for molecule O=C(C1CCCCC1)c1ccccc1	818
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2352 # number of heavy atoms wrong for molecule O=C(C1CCCCC1)c1ccccc1	818
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2353 # SMILES read failed, buffer was C(OCCC(C)C)(OCCC(C)C)OCCC(C)C	819&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2354 # SMARTS did not match for molecule CC(C)CCOC(OCCC(C)C)OCCC(C)C	819
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2355 # number of heavy atoms wrong for molecule CC(C)CCOC(OCCC(C)C)OCCC(C)C	819
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2356 # SMILES read failed, buffer was C(C(C(=O)O)(F)F)(C(F)(F)F)(F)F	820&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2357 # SMARTS did not match for molecule OC(=O)C(F)(F)C(F)(F)C(F)(F)F	820
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2358 # number of heavy atoms wrong for molecule OC(=O)C(F)(F)C(F)(F)C(F)(F)F	820
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2359 # SMILES read failed, buffer was OC1[C@@H](C)CCC[C@@H]1C	821&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2360 # SMARTS did not match for molecule OC1[C@@H](C)CCC[C@@H]1C	821
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2361 # number of heavy atoms wrong for molecule OC1[C@@H](C)CCC[C@@H]1C	821
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2362 # SMILES read failed, buffer was C(C)c1ccncc1	822&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2363 # SMARTS did not match for molecule CCc1ccncc1	822
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2364 # number of heavy atoms wrong for molecule CCc1ccncc1	822
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2365 # SMILES read failed, buffer was S(SCCCCCCCCCCCCCCCC)CCCCCCCCCCCCCCCC	823&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2366 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCSSCCCCCCCCCCCCCCCC	823
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2367 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCSSCCCCCCCCCCCCCCCC	823
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2368 # SMILES read failed, buffer was C(=O)(c1c(C)cc(C)cc1)c1ccccc1	825&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2369 # SMARTS did not match for molecule Cc1ccc(c(C)c1)C(=O)c1ccccc1	825
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2370 # number of heavy atoms wrong for molecule Cc1ccc(c(C)c1)C(=O)c1ccccc1	825
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2371 # SMILES read failed, buffer was C(C)(C)(C)c1ccc(C(C)=O)cc1	826&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2372 # SMARTS did not match for molecule CC(=O)c1ccc(cc1)C(C)(C)C	826
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2373 # number of heavy atoms wrong for molecule CC(=O)c1ccc(cc1)C(C)(C)C	826
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2374 # SMILES read failed, buffer was C(C(OCC)=O)(C(OCC)=O)CCCCCCC	827&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2375 # SMARTS did not match for molecule CCCCCCCC(C(=O)OCC)C(=O)OCC	827
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2376 # number of heavy atoms wrong for molecule CCCCCCCC(C(=O)OCC)C(=O)OCC	827
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2377 # SMILES read failed, buffer was C(C)C1(C)OCCO1	829&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2378 # SMARTS did not match for molecule CCC1(C)OCCO1	829
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2379 # number of heavy atoms wrong for molecule CCC1(C)OCCO1	829
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2380 # SMILES read failed, buffer was C(=C/C(=O)O)/c1ccncc1	830&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2381 # SMARTS did not match for molecule OC(=O)\C=C\c1ccncc1	830
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2382 # number of heavy atoms wrong for molecule OC(=O)\C=C\c1ccncc1	830
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2383 # SMILES read failed, buffer was C(C(OCC)=O)(C(OCC)=O)CCCCC(C(OCC)=O)C(OCC)=O	831&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2384 # SMARTS did not match for molecule CCOC(=O)C(CCCCC(C(=O)OCC)C(=O)OCC)C(=O)OCC	831
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2385 # number of heavy atoms wrong for molecule CCOC(=O)C(CCCCC(C(=O)OCC)C(=O)OCC)C(=O)OCC	831
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2386 # SMILES read failed, buffer was C([C@@H](CC(OCC)=O)c1ccccc1)(C(OCC)=O)C(OCC)=O	832&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2387 # SMARTS did not match for molecule CCOC(=O)C[C@@H](c1ccccc1)C(C(=O)OCC)C(=O)OCC	832
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2388 # number of heavy atoms wrong for molecule CCOC(=O)C[C@@H](c1ccccc1)C(C(=O)OCC)C(=O)OCC	832
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2389 # SMILES read failed, buffer was C(C)(=O)c1c(C)cc(C)c(c1)C	833&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2390 # SMARTS did not match for molecule Cc1cc(C(=O)C)c(C)cc1C	833
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2391 # number of heavy atoms wrong for molecule Cc1cc(C(=O)C)c(C)cc1C	833
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2392 # SMILES read failed, buffer was C(#CCO)CO	834&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2393 # SMARTS did not match for molecule OCC#CCO	834
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2394 # number of heavy atoms wrong for molecule OCC#CCO	834
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2395 # SMILES read failed, buffer was C(=C1/c2c(cccc2)C=C1)/c1ccccc1	835&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2396 # SMARTS did not match for molecule c1ccc(cc1)/C=C1\C=Cc2ccccc/12	835
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2397 # number of heavy atoms wrong for molecule c1ccc(cc1)/C=C1\C=Cc2ccccc/12	835
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2398 # SMILES read failed, buffer was C(C(=O)O)(C(=O)O)(C)C	836&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2399 # SMARTS did not match for molecule OC(=O)C(C)(C)C(=O)O	836
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2400 # number of heavy atoms wrong for molecule OC(=O)C(C)(C)C(=O)O	836
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2401 # SMILES read failed, buffer was O([C@@H](C(=O)O)c1ccccc1)C(C)C	837&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2402 # SMARTS did not match for molecule CC(C)O[C@@H](C(=O)O)c1ccccc1	837
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2403 # number of heavy atoms wrong for molecule CC(C)O[C@@H](C(=O)O)c1ccccc1	837
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2404 # SMILES read failed, buffer was c12n(nnn1)cccc2	838&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2405 # SMARTS did not match for molecule c1ccc2nnnn2c1	838
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2406 # number of heavy atoms wrong for molecule c1ccc2nnnn2c1	838
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2407 # SMILES read failed, buffer was c12n(nnc1)cccc2	839&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2408 # SMARTS did not match for molecule c1ccc2cnnn2c1	839
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2409 # number of heavy atoms wrong for molecule c1ccc2cnnn2c1	839
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2410 # SMILES read failed, buffer was N(=O)(=O)c1c2n(cc(c1)C)nnn2	840&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2411 # SMARTS did not match for molecule Cc1cn2nnnc2c(c1)N(=O)=O	840
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2412 # number of heavy atoms wrong for molecule Cc1cn2nnnc2c(c1)N(=O)=O	840
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2413 # SMILES read failed, buffer was C(CCCC)(CCCC)C(=O)O	843&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2414 # SMARTS did not match for molecule CCCCC(CCCC)C(=O)O	843
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2415 # number of heavy atoms wrong for molecule CCCCC(CCCC)C(=O)O	843
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2416 # SMILES read failed, buffer was C(C)(=C)[C@@H]1CCC(C)=CC1	844&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2417 # SMARTS did not match for molecule CC1=CC[C@@H](CC1)C(=C)C	844
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2418 # number of heavy atoms wrong for molecule CC1=CC[C@@H](CC1)C(=C)C	844
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2419 # SMILES read failed, buffer was C[C@H]1CC(C)=CC(C1)=O	845&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2420 # SMARTS did not match for molecule C[C@H]1CC(=CC(=O)C1)C	845
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2421 # number of heavy atoms wrong for molecule C[C@H]1CC(=CC(=O)C1)C	845
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2422 # SMILES read failed, buffer was CC=1C[C@@H](CC(C1)=O)c1ccccc1	846&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2423 # SMARTS did not match for molecule CC1=CC(=O)C[C@@H](C1)c1ccccc1	846
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2424 # number of heavy atoms wrong for molecule CC1=CC(=O)C[C@@H](C1)c1ccccc1	846
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2425 # SMILES read failed, buffer was N(CCCN)C(C)C	847&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2426 # SMARTS did not match for molecule NCCCNC(C)C	847
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2427 # number of heavy atoms wrong for molecule NCCCNC(C)C	847
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2428 # SMILES read failed, buffer was C(C(C)(C)C)(C(C)(C)C)=O	848&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2429 # SMARTS did not match for molecule O=C(C(C)(C)C)C(C)(C)C	848
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2430 # number of heavy atoms wrong for molecule O=C(C(C)(C)C)C(C)(C)C	848
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2431 # SMILES read failed, buffer was O(CC=C)c1c(C)ccc(c1)C	849&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2432 # SMARTS did not match for molecule Cc1ccc(C)cc1OCC=C	849
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2433 # number of heavy atoms wrong for molecule Cc1ccc(C)cc1OCC=C	849
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2434 # SMILES read failed, buffer was C(CCCCC)CCCCS	850&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2435 # SMARTS did not match for molecule CCCCCCCCCCS	850
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2436 # number of heavy atoms wrong for molecule CCCCCCCCCCS	850
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2437 # SMILES read failed, buffer was C(CCCCCCS)CCCCCC	851&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2438 # SMARTS did not match for molecule CCCCCCCCCCCCCS	851
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2439 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCS	851
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2440 # SMILES read failed, buffer was C(CC)(=O)c1ccc(C)cc1	852&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2441 # SMARTS did not match for molecule CCC(=O)c1ccc(C)cc1	852
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2442 # number of heavy atoms wrong for molecule CCC(=O)c1ccc(C)cc1	852
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2443 # SMILES read failed, buffer was CC1(C)Oc2ccc(cc2C1)Br	853&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2444 # SMARTS did not match for molecule Brc1ccc2OC(C)(C)Cc2c1	853
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2445 # number of heavy atoms wrong for molecule Brc1ccc2OC(C)(C)Cc2c1	853
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2446 # SMILES read failed, buffer was C(CS)(CS)C	854&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2447 # SMARTS did not match for molecule SCC(C)CS	854
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2448 # number of heavy atoms wrong for molecule SCC(C)CS	854
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2449 # SMILES read failed, buffer was C(SC(=[NH2])N)CCCCSC(=[NH2])N	855&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2450 # SMARTS did not match for molecule NC(=[NH2])SCCCCCSC(=[NH2])N	855
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2451 # number of heavy atoms wrong for molecule NC(=[NH2])SCCCCCSC(=[NH2])N	855
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2452 # SMILES read failed, buffer was C(CCC)(=O)c1c(OC)ccc(c1)C	856&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2453 # SMARTS did not match for molecule CCCC(=O)c1cc(C)ccc1OC	856
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2454 # number of heavy atoms wrong for molecule CCCC(=O)c1cc(C)ccc1OC	856
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2455 # SMILES read failed, buffer was C(CCCC)(=O)c1cc(C)c(OC)cc1	857&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2456 # SMARTS did not match for molecule CCCCC(=O)c1ccc(OC)c(C)c1	857
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2457 # number of heavy atoms wrong for molecule CCCCC(=O)c1ccc(OC)c(C)c1	857
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2458 # SMILES read failed, buffer was N(=O)(=O)c1ccc(CC)cc1	858&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2459 # SMARTS did not match for molecule CCc1ccc(cc1)N(=O)=O	858
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2460 # number of heavy atoms wrong for molecule CCc1ccc(cc1)N(=O)=O	858
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2461 # SMILES read failed, buffer was S(OCCCCl)(=O)(=O)c1ccc(C)cc1	859&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2462 # SMARTS did not match for molecule ClCCCOS(=O)(=O)c1ccc(C)cc1	859
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2463 # number of heavy atoms wrong for molecule ClCCCOS(=O)(=O)c1ccc(C)cc1	859
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2464 # SMILES read failed, buffer was C(CC)c1c(C)c(C)ccc1O	860&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2465 # SMARTS did not match for molecule CCCc1c(O)ccc(C)c1C	860
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2466 # number of heavy atoms wrong for molecule CCCc1c(O)ccc(C)c1C	860
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2467 # SMILES read failed, buffer was C(CBr)(=O)c1c(C)cc(C)cc1C	861&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2468 # SMARTS did not match for molecule BrCC(=O)c1c(C)cc(C)cc1C	861
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2469 # number of heavy atoms wrong for molecule BrCC(=O)c1c(C)cc(C)cc1C	861
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2470 # SMILES read failed, buffer was C(SCCCCCCCCCCCC)(SCCCCCCCCCCCC)SCCCCCCCCCCCC	862&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2471 # SMARTS did not match for molecule CCCCCCCCCCCCSC(SCCCCCCCCCCCC)SCCCCCCCCCCCC	862
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2472 # number of heavy atoms wrong for molecule CCCCCCCCCCCCSC(SCCCCCCCCCCCC)SCCCCCCCCCCCC	862
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2473 # SMILES read failed, buffer was N(=O)(=O)c1ccc(/C=N/N=C/c2ccc([N+](=O)[O-])cc2)cc1	863&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2474 # SMARTS did not match for molecule O=N(=O)c1ccc(/C=N\N=C\c2ccc(cc2)[N+](=O)[O-])cc1	863
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2475 # number of heavy atoms wrong for molecule O=N(=O)c1ccc(/C=N\N=C\c2ccc(cc2)[N+](=O)[O-])cc1	863
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2476 # SMILES read failed, buffer was C(=N/N=C/c1c(O)cccc1)/c1c(O)cccc1	864&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2477 # SMARTS did not match for molecule Oc1ccccc1\C=N\N=C\c1ccccc1O	864
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2478 # number of heavy atoms wrong for molecule Oc1ccccc1\C=N\N=C\c1ccccc1O	864
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2479 # SMILES read failed, buffer was C(=N/N=C/c1ccc(Cl)cc1)/c1ccc(Cl)cc1	865&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2480 # SMARTS did not match for molecule Clc1ccc(\C=N\N=C\c2ccc(Cl)cc2)cc1	865
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2481 # number of heavy atoms wrong for molecule Clc1ccc(\C=N\N=C\c2ccc(Cl)cc2)cc1	865
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2482 # SMILES read failed, buffer was C(=N\N=C(/C)c1cc([N+](=O)[O-])ccc1)(/C)c1cc([N+](=O)[O-])ccc1	866&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2483 # SMARTS did not match for molecule C/C(=N/N=C(\C)/c1cccc(c1)[N+](=O)[O-])/c1cccc(c1)[N+](=O)[O-]	866
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2484 # number of heavy atoms wrong for molecule C/C(=N/N=C(\C)/c1cccc(c1)[N+](=O)[O-])/c1cccc(c1)[N+](=O)[O-]	866
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2485 # SMILES read failed, buffer was C(=C/C=N/N=C/C=C/c1ccccc1)/c1ccccc1	867&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2486 # SMARTS did not match for molecule N(=C\C=C\c1ccccc1)\N=C\C=C\c1ccccc1	867
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2487 # number of heavy atoms wrong for molecule N(=C\C=C\c1ccccc1)\N=C\C=C\c1ccccc1	867
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2488 # SMILES read failed, buffer was C(=N/CC/N=C/c1ccc(O)cc1)/c1ccc(O)cc1	868&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2489 # SMARTS did not match for molecule Oc1ccc(\C=N\CC/N=C/c2ccc(O)cc2)cc1	868
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2490 # number of heavy atoms wrong for molecule Oc1ccc(\C=N\CC/N=C/c2ccc(O)cc2)cc1	868
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2491 # SMILES read failed, buffer was N(=C/c1ccc(Cl)cc1)/c1ccc([N+](=O)[O-])cc1	869&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2492 # SMARTS did not match for molecule Clc1ccc(\C=N\c2ccc(cc2)[N+](=O)[O-])cc1	869
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2493 # number of heavy atoms wrong for molecule Clc1ccc(\C=N\c2ccc(cc2)[N+](=O)[O-])cc1	869
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2494 # SMILES read failed, buffer was [Cu]123[N+](=Cc4ccccc4O3)CC[N+]1=Cc1ccccc1O2	870&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2495 # SMARTS did not match for molecule c1ccc2O[Cu]34Oc5ccccc5C=[N+]4CC[N+]3=Cc2c1	870
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2496 # number of heavy atoms wrong for molecule c1ccc2O[Cu]34Oc5ccccc5C=[N+]4CC[N+]3=Cc2c1	870
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2497 # SMILES read failed, buffer was [Zn]123[N+](=Cc4ccccc4O3)CC[N+]1=Cc1ccccc1O2	872&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2498 # SMARTS did not match for molecule c1ccc2O[Zn]34Oc5ccccc5C=[N+]4CC[N+]3=Cc2c1	872
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2499 # number of heavy atoms wrong for molecule c1ccc2O[Zn]34Oc5ccccc5C=[N+]4CC[N+]3=Cc2c1	872
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2500 # SMILES read failed, buffer was C(C(OCCCCCCCCCCCCCCCC)=O)C(OCCCCCCCCCCCCCCCC)=O	873&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2501 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCOC(=O)CC(=O)OCCCCCCCCCCCCCCCC	873
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2502 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCOC(=O)CC(=O)OCCCCCCCCCCCCCCCC	873
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2503 # SMILES read failed, buffer was C(=C/c1ccccc1)/c1ccc(Cl)cc1	874&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2504 # SMARTS did not match for molecule Clc1ccc(\C=C\c2ccccc2)cc1	874
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2505 # number of heavy atoms wrong for molecule Clc1ccc(\C=C\c2ccccc2)cc1	874
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2506 # SMILES read failed, buffer was C(C[C@@H](N(C)C)C)(CCC(=O)O)(c1ccccc1)c1ccccc1	875&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2507 # SMARTS did not match for molecule OC(=O)CCC(C[C@@H](C)N(C)C)(c1ccccc1)c1ccccc1	875
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2508 # number of heavy atoms wrong for molecule OC(=O)CCC(C[C@@H](C)N(C)C)(c1ccccc1)c1ccccc1	875
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2509 # SMILES read failed, buffer was C(C[C@@H](N(C)C)C)([C@@H](CC)O)(c1ccccc1)c1ccccc1	876&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2510 # SMARTS did not match for molecule CC[C@@H](O)C(C[C@@H](C)N(C)C)(c1ccccc1)c1ccccc1	876
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2511 # number of heavy atoms wrong for molecule CC[C@@H](O)C(C[C@@H](C)N(C)C)(c1ccccc1)c1ccccc1	876
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2512 # SMILES read failed, buffer was C(C[C@@H]([N+](C)(C)C)C)(C(CC)=O)(c1ccccc1)c1ccccc1	877&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2513 # SMARTS did not match for molecule CCC(=O)C(C[C@@H](C)[N+](C)(C)C)(c1ccccc1)c1ccccc1	877
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2514 # number of heavy atoms wrong for molecule CCC(=O)C(C[C@@H](C)[N+](C)(C)C)(c1ccccc1)c1ccccc1	877
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2515 # SMILES read failed, buffer was C(C[C@@H]([N+](C)(C)C)C)(c1ccccc1)c1ccccc1	878&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2516 # SMARTS did not match for molecule C[C@@H](CC(c1ccccc1)c1ccccc1)[N+](C)(C)C	878
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2517 # number of heavy atoms wrong for molecule C[C@@H](CC(c1ccccc1)c1ccccc1)[N+](C)(C)C	878
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2518 # SMILES read failed, buffer was Cl(=O)(=O)(=O)O.C(CN(C)C)C1(CCN(C)C)c2c(CCC1=O)cccc2	879&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2519 # SMARTS did not match for molecule CN(C)CCC1(CCN(C)C)C(=O)CCc2ccccc12.OCl(=O)(=O)=O	879
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2520 # number of heavy atoms wrong for molecule CN(C)CCC1(CCN(C)C)C(=O)CCc2ccccc12.OCl(=O)(=O)=O	879
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2521 # SMILES read failed, buffer was C1[C@H]2[C@@H](CCCC2)NCC1	880&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2522 # SMARTS did not match for molecule C1CC[C@H]2CCCN[C@@H]2C1	880
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2523 # number of heavy atoms wrong for molecule C1CC[C@H]2CCCN[C@@H]2C1	880
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2524 # SMILES read failed, buffer was C(=O)c1cc([N+](=O)[O-])ccc1O	881&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2525 # SMARTS did not match for molecule O=Cc1cc(ccc1O)[N+](=O)[O-]	881
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2526 # number of heavy atoms wrong for molecule O=Cc1cc(ccc1O)[N+](=O)[O-]	881
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2527 # SMILES read failed, buffer was N(=O)(=O)c1cc(O)c(C(=O)O)cc1	882&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2528 # SMARTS did not match for molecule OC(=O)c1ccc(cc1O)N(=O)=O	882
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2529 # number of heavy atoms wrong for molecule OC(=O)c1ccc(cc1O)N(=O)=O	882
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2530 # SMILES read failed, buffer was O(Cc1ccccc1)c1c(C(=O)O)ccc(c1)[N+](=O)[O-]	883&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2531 # SMARTS did not match for molecule OC(=O)c1ccc(cc1OCc1ccccc1)[N+](=O)[O-]	883
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2532 # number of heavy atoms wrong for molecule OC(=O)c1ccc(cc1OCc1ccccc1)[N+](=O)[O-]	883
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2533 # SMILES read failed, buffer was C(C#N)(c1ccccc1)c1ccccc1	884&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2534 # SMARTS did not match for molecule N#CC(c1ccccc1)c1ccccc1	884
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2535 # number of heavy atoms wrong for molecule N#CC(c1ccccc1)c1ccccc1	884
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2536 # SMILES read failed, buffer was C(=O)(c1cc(N)c(N(C)C)cc1)c1cc(N)c(N(C)C)cc1	885&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2537 # SMARTS did not match for molecule O=C(c1ccc(N(C)C)c(N)c1)c1ccc(N(C)C)c(N)c1	885
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2538 # number of heavy atoms wrong for molecule O=C(c1ccc(N(C)C)c(N)c1)c1ccc(N(C)C)c(N)c1	885
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2539 # SMILES read failed, buffer was C(=O)(O)c1c(N)c(Br)cc(c1)Br	886&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2540 # SMARTS did not match for molecule Brc1cc(Br)c(N)c(c1)C(=O)O	886
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2541 # number of heavy atoms wrong for molecule Brc1cc(Br)c(N)c(c1)C(=O)O	886
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2542 # SMILES read failed, buffer was C(CCCCCCCCCCCCCCCS)CCCCCCCCCCCCCCC	887&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2543 # SMARTS did not match for molecule CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCS	887
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2544 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCS	887
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2545 # SMILES read failed, buffer was C(CCCCCCCC)CCC(N)=O	889&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2546 # SMARTS did not match for molecule CCCCCCCCCCCC(=O)N	889
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2547 # number of heavy atoms wrong for molecule CCCCCCCCCCCC(=O)N	889
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2548 # SMILES read failed, buffer was C(C#N)(C)(C)C	890&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2549 # SMARTS did not match for molecule N#CC(C)(C)C	890
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2550 # number of heavy atoms wrong for molecule N#CC(C)(C)C	890
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2551 # SMILES read failed, buffer was O(C(C(C)(C)C)=O)CC(C)(C)C	891&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2552 # SMARTS did not match for molecule O=C(OCC(C)(C)C)C(C)(C)C	891
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2553 # number of heavy atoms wrong for molecule O=C(OCC(C)(C)C)C(C)(C)C	891
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2554 # SMILES read failed, buffer was C(C(C)(C)C)(C(C)C)=O	892&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2555 # SMARTS did not match for molecule CC(C)C(=O)C(C)(C)C	892
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2556 # number of heavy atoms wrong for molecule CC(C)C(=O)C(C)(C)C	892
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2557 # SMILES read failed, buffer was C(C(CC(C)(C)C)(C)C)(OCC(C)(C)C)=O	893&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2558 # SMARTS did not match for molecule O=C(OCC(C)(C)C)C(C)(C)CC(C)(C)C	893
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2559 # number of heavy atoms wrong for molecule O=C(OCC(C)(C)C)C(C)(C)CC(C)(C)C	893
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2560 # SMILES read failed, buffer was C(C(OCC(C)(C)C)=O)(CC)CC	894&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2561 # SMARTS did not match for molecule CCC(CC)C(=O)OCC(C)(C)C	894
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2562 # number of heavy atoms wrong for molecule CCC(CC)C(=O)OCC(C)(C)C	894
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2563 # SMILES read failed, buffer was C(OCC(C)(C)C)(=O)c1ccccc1	895&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2564 # SMARTS did not match for molecule O=C(OCC(C)(C)C)c1ccccc1	895
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2565 # number of heavy atoms wrong for molecule O=C(OCC(C)(C)C)c1ccccc1	895
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2566 # SMILES read failed, buffer was C(C(C)(C)C)C(CC)=O	896&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2567 # SMARTS did not match for molecule CCC(=O)CC(C)(C)C	896
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2568 # number of heavy atoms wrong for molecule CCC(=O)CC(C)(C)C	896
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2569 # SMILES read failed, buffer was C(C(CCCCC)(C)O)CCCC	897&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2570 # SMARTS did not match for molecule CCCCCC(C)(O)CCCCC	897
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2571 # number of heavy atoms wrong for molecule CCCCCC(C)(O)CCCCC	897
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2572 # SMILES read failed, buffer was C(C(C)(C)O)CCCC	898&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2573 # SMARTS did not match for molecule CCCCCC(C)(C)O	898
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2574 # number of heavy atoms wrong for molecule CCCCCC(C)(C)O	898
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2575 # SMILES read failed, buffer was C(C(CC)(C)C)(C(C)(C)C)=O	899&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2576 # SMARTS did not match for molecule CCC(C)(C)C(=O)C(C)(C)C	899
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2577 # number of heavy atoms wrong for molecule CCC(C)(C)C(=O)C(C)(C)C	899
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2578 # SMILES read failed, buffer was C(C(C)C)(CC)(CC)O	900&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2579 # SMARTS did not match for molecule CCC(O)(CC)C(C)C	900
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2580 # number of heavy atoms wrong for molecule CCC(O)(CC)C(C)C	900
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2581 # SMILES read failed, buffer was C(CCCCC)(CCCC)(CCCC)O	901&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2582 # SMARTS did not match for molecule CCCCCC(O)(CCCC)CCCC	901
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2583 # number of heavy atoms wrong for molecule CCCCCC(O)(CCCC)CCCC	901
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2584 # SMILES read failed, buffer was C(CCCC)(C(C)C)(C(C)C)O	902&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2585 # SMARTS did not match for molecule CCCCC(O)(C(C)C)C(C)C	902
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2586 # number of heavy atoms wrong for molecule CCCCC(O)(C(C)C)C(C)C	902
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2587 # SMILES read failed, buffer was C([C@@](CC)(C)O)CCCC	903&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2588 # SMARTS did not match for molecule CCCCC[C@@](C)(O)CC	903
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2589 # number of heavy atoms wrong for molecule CCCCC[C@@](C)(O)CC	903
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2590 # SMILES read failed, buffer was C(C(C)(C)C)C(C)(C)O	904&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2591 # SMARTS did not match for molecule CC(C)(C)CC(C)(C)O	904
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2592 # number of heavy atoms wrong for molecule CC(C)(C)CC(C)(C)O	904
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2593 # SMILES read failed, buffer was C(C(CCCC)(CCCC)O)C(C)(C)C	905&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2594 # SMARTS did not match for molecule CCCCC(O)(CCCC)CC(C)(C)C	905
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2595 # number of heavy atoms wrong for molecule CCCCC(O)(CCCC)CC(C)(C)C	905
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2596 # SMILES read failed, buffer was C(C(OCCC)=O)(CC(C)(C)C)CC(C)(C)C	906&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2597 # SMARTS did not match for molecule CCCOC(=O)C(CC(C)(C)C)CC(C)(C)C	906
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2598 # number of heavy atoms wrong for molecule CCCOC(=O)C(CC(C)(C)C)CC(C)(C)C	906
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2599 # SMILES read failed, buffer was C(CC[C@@H](C(=O)O)O)CCCCCCCCCCCCC	907&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2600 # SMARTS did not match for molecule CCCCCCCCCCCCCCCC[C@@H](O)C(=O)O	907
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2601 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCC[C@@H](O)C(=O)O	907
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2602 # SMILES read failed, buffer was C([C@@](CCC)(C)O)(C)(C)C	908&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2603 # SMARTS did not match for molecule CCC[C@@](C)(O)C(C)(C)C	908
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2604 # number of heavy atoms wrong for molecule CCC[C@@](C)(O)C(C)(C)C	908
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2605 # SMILES read failed, buffer was C([C@@H](C(Cl)=O)C)C(C)(C)C	909&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2606 # SMARTS did not match for molecule C[C@@H](CC(C)(C)C)C(=O)Cl	909
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2607 # number of heavy atoms wrong for molecule C[C@@H](CC(C)(C)C)C(=O)Cl	909
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2608 # SMILES read failed, buffer was C(CCCCCCC)CCCCCC#N	910&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2609 # SMARTS did not match for molecule CCCCCCCCCCCCCC#N	910
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2610 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCC#N	910
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2611 # SMILES read failed, buffer was C(=C\C)(/C)c1ccccc1	911&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2612 # SMARTS did not match for molecule C/C=C(/C)\c1ccccc1	911
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2613 # number of heavy atoms wrong for molecule C/C=C(/C)\c1ccccc1	911
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2614 # SMILES read failed, buffer was C([C@@H](C(C)=O)C)(C)(C)C	912&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2615 # SMARTS did not match for molecule CC(=O)[C@@H](C)C(C)(C)C	912
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2616 # number of heavy atoms wrong for molecule CC(=O)[C@@H](C)C(C)(C)C	912
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2617 # SMILES read failed, buffer was C(C(C(C)(C)C)=O)(C(C)(C)C)(C)C	913&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2618 # SMARTS did not match for molecule O=C(C(C)(C)C)C(C)(C)C(C)(C)C	913
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2619 # number of heavy atoms wrong for molecule O=C(C(C)(C)C)C(C)(C)C(C)(C)C	913
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2620 # SMILES read failed, buffer was C(C(C)C)(C(C)=O)(C)C	914&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2621 # SMARTS did not match for molecule CC(C)C(C)(C)C(=O)C	914
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2622 # number of heavy atoms wrong for molecule CC(C)C(C)(C)C(=O)C	914
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2623 # SMILES read failed, buffer was C(CCC)(CCC)(CCC)C#N	915&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2624 # SMARTS did not match for molecule CCCC(C#N)(CCC)CCC	915
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2625 # number of heavy atoms wrong for molecule CCCC(C#N)(CCC)CCC	915
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2626 # SMILES read failed, buffer was C(CC(C)(C)C)(CCC)=O	916&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2627 # SMARTS did not match for molecule CCCC(=O)CC(C)(C)C	916
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2628 # number of heavy atoms wrong for molecule CCCC(=O)CC(C)(C)C	916
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2629 # SMILES read failed, buffer was C(CCCCC)(CCCCC)(CC)O	917&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2630 # SMARTS did not match for molecule CCCCCC(O)(CC)CCCCC	917
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2631 # number of heavy atoms wrong for molecule CCCCCC(O)(CC)CCCCC	917
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2632 # SMILES read failed, buffer was C(CCCC)(CCCC)(CC)O	918&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2633 # SMARTS did not match for molecule CCCCC(O)(CC)CCCC	918
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2634 # number of heavy atoms wrong for molecule CCCCC(O)(CC)CCCC	918
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2635 # SMILES read failed, buffer was C(CCCC)(CCCC)(CCC)O	919&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2636 # SMARTS did not match for molecule CCCCC(O)(CCC)CCCC	919
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2637 # number of heavy atoms wrong for molecule CCCCC(O)(CCC)CCCC	919
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2638 # SMILES read failed, buffer was C(CCCCCCC)(CCCCCCC)(CCCCCCC)O	920&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2639 # SMARTS did not match for molecule CCCCCCCC(O)(CCCCCCC)CCCCCCC	920
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2640 # number of heavy atoms wrong for molecule CCCCCCCC(O)(CCCCCCC)CCCCCCC	920
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2641 # SMILES read failed, buffer was C(CCCCC)(CCCCC)(CCCC)O	921&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2642 # SMARTS did not match for molecule CCCCCC(O)(CCCC)CCCCC	921
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2643 # number of heavy atoms wrong for molecule CCCCCC(O)(CCCC)CCCCC	921
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2644 # SMILES read failed, buffer was C([C@@](CCCC)(C)O)C(C)(C)C	922&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2645 # SMARTS did not match for molecule CCCC[C@@](C)(O)CC(C)(C)C	922
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2646 # number of heavy atoms wrong for molecule CCCC[C@@](C)(O)CC(C)(C)C	922
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2647 # SMILES read failed, buffer was C(CCl)(C)(C)c1ccccc1	923&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2648 # SMARTS did not match for molecule ClCC(C)(C)c1ccccc1	923
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2649 # number of heavy atoms wrong for molecule ClCC(C)(C)c1ccccc1	923
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2650 # SMILES read failed, buffer was C(CCCCCCCCCCCCCCC)[C@@H](C(OCC)=O)Br	924&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2651 # SMARTS did not match for molecule CCCCCCCCCCCCCCCC[C@@H](Br)C(=O)OCC	924
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2652 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCC[C@@H](Br)C(=O)OCC	924
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2653 # SMILES read failed, buffer was C(CCl)(C)(C)c1ccc(C(CCl)(C)C)cc1	925&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2654 # SMARTS did not match for molecule ClCC(C)(C)c1ccc(cc1)C(C)(C)CCl	925
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2655 # number of heavy atoms wrong for molecule ClCC(C)(C)c1ccc(cc1)C(C)(C)CCl	925
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2656 # SMILES read failed, buffer was C([C@@H](C(=O)O)C)C(C)(C)C	926&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2657 # SMARTS did not match for molecule C[C@@H](CC(C)(C)C)C(=O)O	926
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2658 # number of heavy atoms wrong for molecule C[C@@H](CC(C)(C)C)C(=O)O	926
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2659 # SMILES read failed, buffer was C(CCCCCC)(CCCCCC)(CCCCCC)O	927&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2660 # SMARTS did not match for molecule CCCCCCC(O)(CCCCCC)CCCCCC	927
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2661 # number of heavy atoms wrong for molecule CCCCCCC(O)(CCCCCC)CCCCCC	927
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2662 # SMILES read failed, buffer was C(CC(C)(C)C)(CC(C)(C)C)C(CC)=O	928&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2663 # SMARTS did not match for molecule CCC(=O)C(CC(C)(C)C)CC(C)(C)C	928
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2664 # number of heavy atoms wrong for molecule CCC(=O)C(CC(C)(C)C)CC(C)(C)C	928
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2665 # SMILES read failed, buffer was C(Cl)c1ccco1	929&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2666 # SMARTS did not match for molecule ClCc1ccco1	929
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2667 # number of heavy atoms wrong for molecule ClCc1ccco1	929
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2668 # SMILES read failed, buffer was C(CC(C)(C)C)(CC)(CC)O	930&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2669 # SMARTS did not match for molecule CCC(O)(CC)CC(C)(C)C	930
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2670 # number of heavy atoms wrong for molecule CCC(O)(CC)CC(C)(C)C	930
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2671 # SMILES read failed, buffer was C(CCCCCCCCCCC)CCC/C=C/C(=O)O	931&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2672 # SMARTS did not match for molecule CCCCCCCCCCCCCCC/C=C/C(=O)O	931
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2673 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCC/C=C/C(=O)O	931
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2674 # SMILES read failed, buffer was C(C(C)(C)C)OC=O	932&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2675 # SMARTS did not match for molecule O=COCC(C)(C)C	932
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2676 # number of heavy atoms wrong for molecule O=COCC(C)(C)C	932
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2677 # SMILES read failed, buffer was C(CCCCC)(C(C)(C)C)=O	933&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2678 # SMARTS did not match for molecule CCCCCC(=O)C(C)(C)C	933
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2679 # number of heavy atoms wrong for molecule CCCCCC(=O)C(C)(C)C	933
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2680 # SMILES read failed, buffer was C([C@@](CCCCC)(C)O)C(C)(C)C	934&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2681 # SMARTS did not match for molecule CCCCC[C@@](C)(O)CC(C)(C)C	934
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2682 # number of heavy atoms wrong for molecule CCCCC[C@@](C)(O)CC(C)(C)C	934
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2683 # SMILES read failed, buffer was C(C(C)=O)(C)(C)C	935&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2684 # SMARTS did not match for molecule CC(=O)C(C)(C)C	935
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2685 # number of heavy atoms wrong for molecule CC(=O)C(C)(C)C	935
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2686 # SMILES read failed, buffer was C([C@@H](CC(C)(C)C)C)(OCC(C)(C)C)=O	936&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2687 # SMARTS did not match for molecule O=C(OCC(C)(C)C)[C@@H](C)CC(C)(C)C	936
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2688 # number of heavy atoms wrong for molecule O=C(OCC(C)(C)C)[C@@H](C)CC(C)(C)C	936
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2689 # SMILES read failed, buffer was C(OCC(C)(C)C)(CC(C)C)=O	937&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2690 # SMARTS did not match for molecule CC(C)CC(=O)OCC(C)(C)C	937
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2691 # number of heavy atoms wrong for molecule CC(C)CC(=O)OCC(C)(C)C	937
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2692 # SMILES read failed, buffer was C(C(=O)O)(CC)(CC)CC	938&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2693 # SMARTS did not match for molecule CCC(CC)(CC)C(=O)O	938
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2694 # number of heavy atoms wrong for molecule CCC(CC)(CC)C(=O)O	938
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2695 # SMILES read failed, buffer was C([C@@H](C)O)(C)(C)C	939&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2696 # SMARTS did not match for molecule C[C@@H](O)C(C)(C)C	939
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2697 # number of heavy atoms wrong for molecule C[C@@H](O)C(C)(C)C	939
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2698 # SMILES read failed, buffer was C(CC(C)C)(C(C)C)=O	940&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2699 # SMARTS did not match for molecule CC(C)CC(=O)C(C)C	940
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2700 # number of heavy atoms wrong for molecule CC(C)CC(=O)C(C)C	940
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2701 # SMILES read failed, buffer was C([C@@](C(C)C)(C)O)C(C)(C)C	941&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2702 # SMARTS did not match for molecule CC(C)[C@@](C)(O)CC(C)(C)C	941
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2703 # number of heavy atoms wrong for molecule CC(C)[C@@](C)(O)CC(C)(C)C	941
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2704 # SMILES read failed, buffer was N(=O)(=O)c1c2c(c(O)nnc2O)ccc1	942&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2705 # SMARTS did not match for molecule O=N(=O)c1cccc2c(O)nnc(O)c12	942
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2706 # number of heavy atoms wrong for molecule O=N(=O)c1cccc2c(O)nnc(O)c12	942
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2707 # SMILES read failed, buffer was C(CCCC)(CCCC)(CCCC)O	943&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2708 # SMARTS did not match for molecule CCCCC(O)(CCCC)CCCC	943
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2709 # number of heavy atoms wrong for molecule CCCCC(O)(CCCC)CCCC	943
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2710 # SMILES read failed, buffer was C(C(C)(C)C)C(C)=O	944&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2711 # SMARTS did not match for molecule CC(=O)CC(C)(C)C	944
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2712 # number of heavy atoms wrong for molecule CC(=O)CC(C)(C)C	944
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2713 # SMILES read failed, buffer was C(C(C)(C)C)OC(C)=O	945&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2714 # SMARTS did not match for molecule CC(=O)OCC(C)(C)C	945
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2715 # number of heavy atoms wrong for molecule CC(=O)OCC(C)(C)C	945
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2716 # SMILES read failed, buffer was O(C(CC)=O)CC(C)(C)C	946&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2717 # SMARTS did not match for molecule CCC(=O)OCC(C)(C)C	946
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2718 # number of heavy atoms wrong for molecule CCC(=O)OCC(C)(C)C	946
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2719 # SMILES read failed, buffer was C(C(CCl)(C)C)(C(C)(C)C)=O	947&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2720 # SMARTS did not match for molecule ClCC(C)(C)C(=O)C(C)(C)C	947
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2721 # number of heavy atoms wrong for molecule ClCC(C)(C)C(=O)C(C)(C)C	947
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2722 # SMILES read failed, buffer was C(CCCCC)(CCC)(CCC)O	948&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2723 # SMARTS did not match for molecule CCCCCC(O)(CCC)CCC	948
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2724 # number of heavy atoms wrong for molecule CCCCCC(O)(CCC)CCC	948
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2725 # SMILES read failed, buffer was C(CC(C)(C)C)(OCC)=O	949&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2726 # SMARTS did not match for molecule CCOC(=O)CC(C)(C)C	949
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2727 # number of heavy atoms wrong for molecule CCOC(=O)CC(C)(C)C	949
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2728 # SMILES read failed, buffer was C(CCCCCC)(C(=O)O)=O	950&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2729 # SMARTS did not match for molecule CCCCCCC(=O)C(=O)O	950
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2730 # number of heavy atoms wrong for molecule CCCCCCC(=O)C(=O)O	950
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2731 # SMILES read failed, buffer was C(C(C)(C)C)(CCCC)(CCCC)O	951&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2732 # SMARTS did not match for molecule CCCCC(O)(CCCC)C(C)(C)C	951
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2733 # number of heavy atoms wrong for molecule CCCCC(O)(CCCC)C(C)(C)C	951
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2734 # SMILES read failed, buffer was C(C(C(C(C)C)(C)C)=O)(C(C)(C)C)(C)C	952&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2735 # SMARTS did not match for molecule CC(C)C(C)(C)C(=O)C(C)(C)C(C)(C)C	952
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2736 # number of heavy atoms wrong for molecule CC(C)C(C)(C)C(=O)C(C)(C)C(C)(C)C	952
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2737 # SMILES read failed, buffer was C(CCCCCCCCCCCCCCC)(CCCCCCCCCCCCCCC)=O	953&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2738 # SMARTS did not match for molecule CCCCCCCCCCCCCCCC(=O)CCCCCCCCCCCCCCC	953
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2739 # number of heavy atoms wrong for molecule CCCCCCCCCCCCCCCC(=O)CCCCCCCCCCCCCCC	953
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2740 # SMILES read failed, buffer was C(CCC(C)C)(C(C)C)(C(C)C)O	954&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2741 # SMARTS did not match for molecule CC(C)CCC(O)(C(C)C)C(C)C	954
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2742 # number of heavy atoms wrong for molecule CC(C)CCC(O)(C(C)C)C(C)C	954
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2743 # SMILES read failed, buffer was C([C@@](C(C)(C)C)(C(=O)O)C)C(C)(C)C	955&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2744 # SMARTS did not match for molecule OC(=O)[C@@](C)(CC(C)(C)C)C(C)(C)C	955
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2745 # number of heavy atoms wrong for molecule OC(=O)[C@@](C)(CC(C)(C)C)C(C)(C)C	955
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2746 # SMILES read failed, buffer was C(CO)(C)(C)c1ccccc1	956&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2747 # SMARTS did not match for molecule OCC(C)(C)c1ccccc1	956
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2748 # number of heavy atoms wrong for molecule OCC(C)(C)c1ccccc1	956
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2749 # SMILES read failed, buffer was C(CC(C)(C)O)(C)(C)c1ccccc1	957&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2750 # SMARTS did not match for molecule CC(C)(O)CC(C)(C)c1ccccc1	957
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2751 # number of heavy atoms wrong for molecule CC(C)(O)CC(C)(C)c1ccccc1	957
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2752 # SMILES read failed, buffer was C(C(C)(C)C)C(CC(C)(C)C)=O	958&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2753 # SMARTS did not match for molecule O=C(CC(C)(C)C)CC(C)(C)C	958
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2754 # number of heavy atoms wrong for molecule O=C(CC(C)(C)C)CC(C)(C)C	958
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2755 # SMILES read failed, buffer was C(OCC)(=O)c1ccccn1	959&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2756 # SMARTS did not match for molecule CCOC(=O)c1ccccn1	959
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2757 # number of heavy atoms wrong for molecule CCOC(=O)c1ccccn1	959
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2758 # SMILES read failed, buffer was C(OCCCC)(=O)c1ccccn1	960&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2759 # SMARTS did not match for molecule CCCCOC(=O)c1ccccn1	960
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2760 # number of heavy atoms wrong for molecule CCCCOC(=O)c1ccccn1	960
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2761 # SMILES read failed, buffer was C(OCCCCCC)(=O)c1ccccn1	961&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2762 # SMARTS did not match for molecule CCCCCCOC(=O)c1ccccn1	961
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2763 # number of heavy atoms wrong for molecule CCCCCCOC(=O)c1ccccn1	961
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2764 # SMILES read failed, buffer was C(OCCCCCCCC)(=O)c1ccccn1	962&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2765 # SMARTS did not match for molecule CCCCCCCCOC(=O)c1ccccn1	962
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2766 # number of heavy atoms wrong for molecule CCCCCCCCOC(=O)c1ccccn1	962
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2767 # SMILES read failed, buffer was C(OCCCCCCCCCC)(=O)c1ccccn1	963&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2768 # SMARTS did not match for molecule CCCCCCCCCCOC(=O)c1ccccn1	963
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2769 # number of heavy atoms wrong for molecule CCCCCCCCCCOC(=O)c1ccccn1	963
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2770 # SMILES read failed, buffer was C(C)c1ccccn1	964&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2771 # SMARTS did not match for molecule CCc1ccccn1	964
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2772 # number of heavy atoms wrong for molecule CCc1ccccn1	964
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2773 # SMILES read failed, buffer was C(C)c1ccncc1	965&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2774 # SMARTS did not match for molecule CCc1ccncc1	965
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2775 # number of heavy atoms wrong for molecule CCc1ccncc1	965
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2776 # SMILES read failed, buffer was C(CC)c1ccccn1	966&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2777 # SMARTS did not match for molecule CCCc1ccccn1	966
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2778 # number of heavy atoms wrong for molecule CCCc1ccccn1	966
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2779 # SMILES read failed, buffer was C(CC)c1ccncc1	967&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2780 # SMARTS did not match for molecule CCCc1ccncc1	967
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2781 # number of heavy atoms wrong for molecule CCCc1ccncc1	967
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2782 # SMILES read failed, buffer was C(CC)c1nc(C)ccc1	968&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2783 # SMARTS did not match for molecule CCCc1cccc(C)n1	968
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2784 # number of heavy atoms wrong for molecule CCCc1cccc(C)n1	968
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2785 # SMILES read failed, buffer was C(CCC)c1ccccn1	969&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2786 # SMARTS did not match for molecule CCCCc1ccccn1	969
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2787 # number of heavy atoms wrong for molecule CCCCc1ccccn1	969
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2788 # SMILES read failed, buffer was C(CCC)c1ccncc1	970&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2789 # SMARTS did not match for molecule CCCCc1ccncc1	970
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2790 # number of heavy atoms wrong for molecule CCCCc1ccncc1	970
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2791 # SMILES read failed, buffer was C(CCC)c1nc(C)ccc1	971&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2792 # SMARTS did not match for molecule CCCCc1cccc(C)n1	971
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2793 # number of heavy atoms wrong for molecule CCCCc1cccc(C)n1	971
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2794 # SMILES read failed, buffer was C(CCCC)c1nc(C)ccc1	972&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2795 # SMARTS did not match for molecule CCCCCc1cccc(C)n1	972
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2796 # number of heavy atoms wrong for molecule CCCCCc1cccc(C)n1	972
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2797 # SMILES read failed, buffer was C(CCCCC)c1nc(C)ccc1	973&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2798 # SMARTS did not match for molecule CCCCCCc1cccc(C)n1	973
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2799 # number of heavy atoms wrong for molecule CCCCCCc1cccc(C)n1	973
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2800 # SMILES read failed, buffer was C(CCCCC)(CCCCC)c1ccccn1	974&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2801 # SMARTS did not match for molecule CCCCCC(CCCCC)c1ccccn1	974
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2802 # number of heavy atoms wrong for molecule CCCCCC(CCCCC)c1ccccn1	974
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2803 # SMILES read failed, buffer was C([C@@](C#C)(C)O)C	975&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2804 # SMARTS did not match for molecule C[C@@](O)(CC)C#C	975
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2805 # number of heavy atoms wrong for molecule C[C@@](O)(CC)C#C	975
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2806 # SMILES read failed, buffer was C(=C/CO)/CO	976&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2807 # SMARTS did not match for molecule OC/C=C\CO	976
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2808 # number of heavy atoms wrong for molecule OC/C=C\CO	976
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2809 # SMILES read failed, buffer was C(C#N)(C)(C)O	977&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2810 # SMARTS did not match for molecule N#CC(C)(C)O	977
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2811 # number of heavy atoms wrong for molecule N#CC(C)(C)O	977
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2812 # SMILES read failed, buffer was C([C@@](C#C)(C)O)C(C)C	978&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2813 # SMARTS did not match for molecule C#C[C@@](C)(O)CC(C)C	978
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2814 # number of heavy atoms wrong for molecule C#C[C@@](C)(O)CC(C)C	978
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2815 # SMILES read failed, buffer was O(C(C)=O)[C@@H]1[C@@H](OC(C)=O)[C@@H](Sc2c(Cl)ccc(c2)Cl)O[C@@H]([C@@H]1OC(C)=O)COC(C)=O	979&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2816 # SMARTS did not match for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2cc(Cl)ccc2Cl)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	979
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2817 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2cc(Cl)ccc2Cl)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	979
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2818 # SMILES read failed, buffer was S(C#N)c1c2c(c(N)c(c1)SC#N)cccc2	980&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2819 # SMARTS did not match for molecule N#CSc1cc(SC#N)c2ccccc2c1N	980
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2820 # number of heavy atoms wrong for molecule N#CSc1cc(SC#N)c2ccccc2c1N	980
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2821 # SMILES read failed, buffer was N(CC)(CC)c1ccc(SSc2ccc(N(CC)CC)cc2)cc1	981&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2822 # SMARTS did not match for molecule CCN(CC)c1ccc(SSc2ccc(cc2)N(CC)CC)cc1	981
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2823 # number of heavy atoms wrong for molecule CCN(CC)c1ccc(SSc2ccc(cc2)N(CC)CC)cc1	981
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2824 # SMILES read failed, buffer was S(Sc1c(Cl)ccc(c1)Cl)c1c(Cl)ccc(c1)Cl	982&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2825 # SMARTS did not match for molecule Clc1ccc(Cl)c(SSc2cc(Cl)ccc2Cl)c1	982
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2826 # number of heavy atoms wrong for molecule Clc1ccc(Cl)c(SSc2cc(Cl)ccc2Cl)c1	982
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2827 # SMILES read failed, buffer was O(C(C)=O)[C@@H]1[C@@H](Sc2c3c(ccc2)cccc3)O[C@@H](COC(C)=O)[C@@H]([C@@H]1OC(C)=O)OC(C)=O	983&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2828 # SMARTS did not match for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2cccc3ccccc23)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	983
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2829 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2cccc3ccccc23)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	983
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2830 # SMILES read failed, buffer was O(C(C)=O)[C@@H]1[C@@H](OC(C)=O)[C@@H](Sc2c(NC(C)=O)cc(Cl)cc2)O[C@@H]([C@@H]1OC(C)=O)COC(C)=O	984&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2831 # SMARTS did not match for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2ccc(Cl)cc2NC(=O)C)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	984
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2832 # number of heavy atoms wrong for molecule CC(=O)OC[C@@H]1O[C@@H](Sc2ccc(Cl)cc2NC(=O)C)[C@@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C	984
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2833 # SMILES read failed, buffer was S(Sc1c(N)cc(Cl)cc1)c1c(N)cc(Cl)cc1	985&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2834 # SMARTS did not match for molecule Clc1ccc(SSc2ccc(Cl)cc2N)c(N)c1	985
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2835 # number of heavy atoms wrong for molecule Clc1ccc(SSc2ccc(Cl)cc2N)c(N)c1	985
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2836 # SMILES read failed, buffer was C(C)(=O)c1ccc(SSc2ccc(C(C)=O)cc2)cc1	986&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2837 # SMARTS did not match for molecule CC(=O)c1ccc(SSc2ccc(cc2)C(=O)C)cc1	986
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2838 # number of heavy atoms wrong for molecule CC(=O)c1ccc(SSc2ccc(cc2)C(=O)C)cc1	986
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2839 # SMILES read failed, buffer was N(CCC)(CCC)c1ccc(SC#N)cc1	987&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2840 # SMARTS did not match for molecule N#CSc1ccc(cc1)N(CCC)CCC	987
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2841 # number of heavy atoms wrong for molecule N#CSc1ccc(cc1)N(CCC)CCC	987
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2842 # SMILES read failed, buffer was N(CC)(CC)c1ccc(SC#N)cc1	988&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2843 # SMARTS did not match for molecule N#CSc1ccc(cc1)N(CC)CC	988
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2844 # number of heavy atoms wrong for molecule N#CSc1ccc(cc1)N(CC)CC	988
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2845 # SMILES read failed, buffer was N(C)(C)c1ccc(SSc2ccc(N(C)C)cc2)cc1	989&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2846 # SMARTS did not match for molecule CN(C)c1ccc(SSc2ccc(cc2)N(C)C)cc1	989
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2847 # number of heavy atoms wrong for molecule CN(C)c1ccc(SSc2ccc(cc2)N(C)C)cc1	989
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2848 # SMILES read failed, buffer was S(Sc1ccc(Br)cc1)c1ccc(Br)cc1	992&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2849 # SMARTS did not match for molecule Brc1ccc(SSc2ccc(Br)cc2)cc1	992
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2850 # number of heavy atoms wrong for molecule Brc1ccc(SSc2ccc(Br)cc2)cc1	992
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2851 # SMILES read failed, buffer was N(Cc1ccccc1)(CC)c1ccc(SC#N)cc1	993&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2852 # SMARTS did not match for molecule N#CSc1ccc(cc1)N(CC)Cc1ccccc1	993
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2853 # number of heavy atoms wrong for molecule N#CSc1ccc(cc1)N(CC)Cc1ccccc1	993
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2854 # SMILES read failed, buffer was S(Sc1ccc(C)cc1)c1ccc(C)cc1	994&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2855 # SMARTS did not match for molecule Cc1ccc(SSc2ccc(C)cc2)cc1	994
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2856 # number of heavy atoms wrong for molecule Cc1ccc(SSc2ccc(C)cc2)cc1	994
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2857 # SMILES read failed, buffer was S(Sc1ccc(OC)cc1)c1ccc(OC)cc1	995&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2858 # SMARTS did not match for molecule COc1ccc(SSc2ccc(OC)cc2)cc1	995
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2859 # number of heavy atoms wrong for molecule COc1ccc(SSc2ccc(OC)cc2)cc1	995
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2860 # SMILES read failed, buffer was N([C@@H]1O[C@@H](CO)[C@@H](O)[C@@H]([C@@H]1O)O)c1ccc(OCC)cc1	996&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2861 # SMARTS did not match for molecule CCOc1ccc(cc1)N[C@@H]1O[C@@H](CO)[C@@H](O)[C@@H](O)[C@@H]1O	996
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2862 # number of heavy atoms wrong for molecule CCOc1ccc(cc1)N[C@@H]1O[C@@H](CO)[C@@H](O)[C@@H](O)[C@@H]1O	996
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2863 # SMILES read failed, buffer was S([C@@H]1[C@@H](O)[C@@H](O)[C@@H](O)[C@@H](O1)CO)c1c(Cl)ccc(c1)Cl	997&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2864 # SMARTS did not match for molecule OC[C@@H]1O[C@@H](Sc2cc(Cl)ccc2Cl)[C@@H](O)[C@@H](O)[C@@H]1O	997
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2865 # number of heavy atoms wrong for molecule OC[C@@H]1O[C@@H](Sc2cc(Cl)ccc2Cl)[C@@H](O)[C@@H](O)[C@@H]1O	997
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2866 # SMILES read failed, buffer was N(=O)(=O)c1c(N/N=C(/CC(C)C)CC(C)C)ccc(c1)[N+](=O)[O-]	998&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2867 # SMARTS did not match for molecule CC(C)CC(=NNc1ccc(cc1N(=O)=O)[N+](=O)[O-])CC(C)C	998
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2868 # number of heavy atoms wrong for molecule CC(C)CC(=NNc1ccc(cc1N(=O)=O)[N+](=O)[O-])CC(C)C	998
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2869 # SMILES read failed, buffer was N(=O)(=O)c1c(N/N=C/c2ccccc2)cccc1	999&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2870 # SMARTS did not match for molecule O=N(=O)c1ccccc1N/N=C/c1ccccc1	999
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2871 # number of heavy atoms wrong for molecule O=N(=O)c1ccccc1N/N=C/c1ccccc1	999
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2872 # SMILES read failed, buffer was N(C(NC(C)=O)C)C(C)=O	1000&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2873 # SMARTS did not match for molecule CC(=O)NC(C)NC(=O)C	1000
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2874 # number of heavy atoms wrong for molecule CC(=O)NC(C)NC(=O)C	1000
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2875 # SMILES read failed, buffer was C(NC(C)=O)NC(C)=O	1002&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2876 # SMARTS did not match for molecule CC(=O)NCNC(=O)C	1002
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2877 # number of heavy atoms wrong for molecule CC(=O)NCNC(=O)C	1002
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2878 # SMILES read failed, buffer was N(Cc1ccccc1)(CC(=O)O)CC(=O)O	1003&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2879 # SMARTS did not match for molecule OC(=O)CN(CC(=O)O)Cc1ccccc1	1003
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2880 # number of heavy atoms wrong for molecule OC(=O)CN(CC(=O)O)Cc1ccccc1	1003
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2881 # SMILES read failed, buffer was N(CC(=O)O)(CC(=O)O)C(C)C	1004&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2882 # SMARTS did not match for molecule OC(=O)CN(CC(=O)O)C(C)C	1004
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2883 # number of heavy atoms wrong for molecule OC(=O)CN(CC(=O)O)C(C)C	1004
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2884 # SMILES read failed, buffer was C(/N=C/c1ccccc1)(/N=C/c1ccccc1)c1ccccc1	1005&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2885 # SMARTS did not match for molecule c1ccc(cc1)\C=N/C(\N=C\c1ccccc1)c1ccccc1	1005
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2886 # number of heavy atoms wrong for molecule c1ccc(cc1)\C=N/C(\N=C\c1ccccc1)c1ccccc1	1005
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2887 # SMILES read failed, buffer was C(C(C)(C)C)[C@@]1(C)NC(=O)NC1=O	1006&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2888 # SMARTS did not match for molecule O=C1NC(=O)[C@@](C)(N1)CC(C)(C)C	1006
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2889 # number of heavy atoms wrong for molecule O=C1NC(=O)[C@@](C)(N1)CC(C)(C)C	1006
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2890 # SMILES read failed, buffer was C(C(OCC)=O)(C(OCC)=O)C(C)C	1007&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2891 # SMARTS did not match for molecule CCOC(=O)C(C(C)C)C(=O)OCC	1007
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2892 # number of heavy atoms wrong for molecule CCOC(=O)C(C(C)C)C(=O)OCC	1007
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2893 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1ccccc1	1008&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2894 # SMARTS did not match for molecule Oc1c(ccc2cccnc12)[C@@H](Nc1ccccc1)c1ccccc1	1008
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2895 # number of heavy atoms wrong for molecule Oc1c(ccc2cccnc12)[C@@H](Nc1ccccc1)c1ccccc1	1008
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2896 # SMILES read failed, buffer was N([C@@H](c1oc(CO)cc(c1O)=O)c1ccccc1)c1ccccc1	1009&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2897 # SMARTS did not match for molecule OCc1cc(=O)c(O)c(o1)[C@@H](Nc1ccccc1)c1ccccc1	1009
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2898 # number of heavy atoms wrong for molecule OCc1cc(=O)c(O)c(o1)[C@@H](Nc1ccccc1)c1ccccc1	1009
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2899 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1ccc([N+](=O)[O-])cc1	1010&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2900 # SMARTS did not match for molecule Oc1c(ccc2cccnc12)[C@@H](Nc1ccc(cc1)[N+](=O)[O-])c1ccccc1	1010
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2901 # number of heavy atoms wrong for molecule Oc1c(ccc2cccnc12)[C@@H](Nc1ccc(cc1)[N+](=O)[O-])c1ccccc1	1010
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2902 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1ccc(C(=O)O)cc1	1011&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2903 # SMARTS did not match for molecule OC(=O)c1ccc(cc1)N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1011
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2904 # number of heavy atoms wrong for molecule OC(=O)c1ccc(cc1)N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1011
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2905 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1c(C(=O)O)cccc1	1012&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2906 # SMARTS did not match for molecule OC(=O)c1ccccc1N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1012
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2907 # number of heavy atoms wrong for molecule OC(=O)c1ccccc1N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1012
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2908 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1cc(C)ccn1	1014&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2909 # SMARTS did not match for molecule Cc1ccnc(c1)N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1014
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2910 # number of heavy atoms wrong for molecule Cc1ccnc(c1)N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1014
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2911 # SMILES read failed, buffer was N([C@@H](c1c(O)c2c(cccn2)cc1)c1ccccc1)c1c(C(OCC)=O)cccc1	1015&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2912 # SMARTS did not match for molecule CCOC(=O)c1ccccc1N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1015
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2913 # number of heavy atoms wrong for molecule CCOC(=O)c1ccccc1N[C@@H](c1ccccc1)c1ccc2cccnc2c1O	1015
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2914 # SMILES read failed, buffer was N([C@@H](c1oc(CO)cc(c1O)=O)c1ccccc1)c1cc(Cl)ccc1	1017&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2915 # SMARTS did not match for molecule OCc1cc(=O)c(O)c(o1)[C@@H](Nc1cccc(Cl)c1)c1ccccc1	1017
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2916 # number of heavy atoms wrong for molecule OCc1cc(=O)c(O)c(o1)[C@@H](Nc1cccc(Cl)c1)c1ccccc1	1017
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2917 # SMILES read failed, buffer was N(/N=C(/CCCCCC)C)c1c([N+](=O)[O-])cc([N+](=O)[O-])cc1	1018&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2918 # SMARTS did not match for molecule CCCCCC\C(=N\Nc1ccc(cc1[N+](=O)[O-])[N+](=O)[O-])\C	1018
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2919 # number of heavy atoms wrong for molecule CCCCCC\C(=N\Nc1ccc(cc1[N+](=O)[O-])[N+](=O)[O-])\C	1018
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2920 # SMILES read failed, buffer was C([C@@](CC)(C)N)(=O)O	1019&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2921 # SMARTS did not match for molecule C[C@@](N)(CC)C(=O)O	1019
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2922 # number of heavy atoms wrong for molecule C[C@@](N)(CC)C(=O)O	1019
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2923 # SMILES read failed, buffer was C(C)[C@@]1(C)C(=O)NC(N1)=O	1020&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2924 # SMARTS did not match for molecule C[C@@]1(CC)NC(=O)NC1=O	1020
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2925 # number of heavy atoms wrong for molecule C[C@@]1(CC)NC(=O)NC1=O	1020
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2926 # SMILES read failed, buffer was C(CCCCC)[C@@]1(C)NC(=O)NC1=O	1021&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2927 # SMARTS did not match for molecule CCCCCC[C@@]1(C)NC(=O)NC1=O	1021
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2928 # number of heavy atoms wrong for molecule CCCCCC[C@@]1(C)NC(=O)NC1=O	1021
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2929 # SMILES read failed, buffer was N(=O)(=O)c1cc(C)c(O)cc1	1022&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2930 # SMARTS did not match for molecule O=N(=O)c1ccc(O)c(C)c1	1022
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2931 # number of heavy atoms wrong for molecule O=N(=O)c1ccc(O)c(C)c1	1022
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2932 # SMILES read failed, buffer was C(CC)[C@]1(NC(=O)NC1=O)c1ccccc1	1023&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2933 # SMARTS did not match for molecule CCC[C@]1(NC(=O)NC1=O)c1ccccc1	1023
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2934 # number of heavy atoms wrong for molecule CCC[C@]1(NC(=O)NC1=O)c1ccccc1	1023
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2935 # SMILES read failed, buffer was O=C1C2(NC(N1)=O)CCCC2	1024&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2936 # SMARTS did not match for molecule O=C1NC(=O)C2(CCCC2)N1	1024
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2937 # number of heavy atoms wrong for molecule O=C1NC(=O)C2(CCCC2)N1	1024
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2938 # SMILES read failed, buffer was C([C@@](CC)(C)O)#C[C@@](CC)(C)O	1025&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2939 # SMARTS did not match for molecule CC[C@@](C)(O)C#C[C@@](C)(O)CC	1025
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2940 # number of heavy atoms wrong for molecule CC[C@@](C)(O)C#C[C@@](C)(O)CC	1025
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2941 # SMILES read failed, buffer was C(=O)(O)C1(N)CCCC1	1026&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2942 # SMARTS did not match for molecule OC(=O)C1(N)CCCC1	1026
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2943 # number of heavy atoms wrong for molecule OC(=O)C1(N)CCCC1	1026
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2944 # SMILES read failed, buffer was C(C(Br)(C)C)(C(Br)Br)=O	1027&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2945 # SMARTS did not match for molecule BrC(Br)C(=O)C(C)(C)Br	1027
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2946 # number of heavy atoms wrong for molecule BrC(Br)C(=O)C(C)(C)Br	1027
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2947 # SMILES read failed, buffer was C(/C=C/c1ccccc1)(NC(OCC)=O)NC(OCC)=O	1028&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2948 # SMARTS did not match for molecule CCOC(=O)NC(/C=C/c1ccccc1)NC(=O)OCC	1028
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2949 # number of heavy atoms wrong for molecule CCOC(=O)NC(/C=C/c1ccccc1)NC(=O)OCC	1028
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2950 # SMILES read failed, buffer was C(C(C)C)CO	1029&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2951 # SMARTS did not match for molecule OCCC(C)C	1029
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2952 # number of heavy atoms wrong for molecule OCCC(C)C	1029
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2953 # SMILES read failed, buffer was C(O)[C@H]1[C@@H](O)[C@@H](O)C(O1)=O	1031&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2954 # SMARTS did not match for molecule OC[C@H]1OC(=O)[C@@H](O)[C@@H]1O	1031
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2955 # number of heavy atoms wrong for molecule OC[C@H]1OC(=O)[C@@H](O)[C@@H]1O	1031
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2956 # SMILES read failed, buffer was N(C(N[C@@H](C#N)C)=O)[C@@H](C(N)=O)C	1032&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2957 # SMARTS did not match for molecule N#C[C@@H](C)NC(=O)N[C@@H](C)C(=O)N	1032
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2958 # number of heavy atoms wrong for molecule N#C[C@@H](C)NC(=O)N[C@@H](C)C(=O)N	1032
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2959 # SMILES read failed, buffer was N(C(NC(C#N)(C)C)=O)C(C(N)=O)(C)C	1033&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2960 # SMARTS did not match for molecule N#CC(C)(C)NC(=O)NC(C)(C)C(=O)N	1033
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2961 # number of heavy atoms wrong for molecule N#CC(C)(C)NC(=O)NC(C)(C)C(=O)N	1033
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2962 # SMILES read failed, buffer was C(NC(OCC)=O)(NC(OCC)=O)CC	1034&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2963 # SMARTS did not match for molecule CCOC(=O)NC(CC)NC(=O)OCC	1034
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2964 # number of heavy atoms wrong for molecule CCOC(=O)NC(CC)NC(=O)OCC	1034
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2965 # SMILES read failed, buffer was C(NC(OCC)=O)(NC(OCC)=O)C	1035&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2966 # SMARTS did not match for molecule CCOC(=O)NC(C)NC(=O)OCC	1035
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2967 # number of heavy atoms wrong for molecule CCOC(=O)NC(C)NC(=O)OCC	1035
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2968 # SMILES read failed, buffer was C([C@@H](CC)Cl)(NC(OCC)=O)NC(OCC)=O	1036&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2969 # SMARTS did not match for molecule CCOC(=O)NC(NC(=O)OCC)[C@@H](Cl)CC	1036
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2970 # number of heavy atoms wrong for molecule CCOC(=O)NC(NC(=O)OCC)[C@@H](Cl)CC	1036
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2971 # SMILES read failed, buffer was C(NC(OCC)=O)(NC(OCC)=O)CCl	1037&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2972 # SMARTS did not match for molecule CCOC(=O)NC(CCl)NC(=O)OCC	1037
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2973 # number of heavy atoms wrong for molecule CCOC(=O)NC(CCl)NC(=O)OCC	1037
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2974 # SMILES read failed, buffer was C(NC(OCC)=O)(NC(OCC)=O)C(Cl)Cl	1038&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2975 # SMARTS did not match for molecule CCOC(=O)NC(NC(=O)OCC)C(Cl)Cl	1038
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2976 # number of heavy atoms wrong for molecule CCOC(=O)NC(NC(=O)OCC)C(Cl)Cl	1038
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2977 # SMILES read failed, buffer was Oc1c(c2c(nc3ccccc3n2)c2c(O)cc(O)cc2)ccc(c1)O	1039&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2978 # SMARTS did not match for molecule Oc1ccc(c(O)c1)c1nc2ccccc2nc1c1ccc(O)cc1O	1039
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2979 # number of heavy atoms wrong for molecule Oc1ccc(c(O)c1)c1nc2ccccc2nc1c1ccc(O)cc1O	1039
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2980 # SMILES read failed, buffer was N(CCN(C)C)(CC(=O)O)CC(=O)O	1040&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2981 # SMARTS did not match for molecule CN(C)CCN(CC(=O)O)CC(=O)O	1040
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2982 # number of heavy atoms wrong for molecule CN(C)CCN(CC(=O)O)CC(=O)O	1040
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2983 # SMILES read failed, buffer was N(CCN(CC)CC)(CC(=O)O)CC(=O)O	1041&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2984 # SMARTS did not match for molecule CCN(CC)CCN(CC(=O)O)CC(=O)O	1041
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2985 # number of heavy atoms wrong for molecule CCN(CC)CCN(CC(=O)O)CC(=O)O	1041
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2986 # SMILES read failed, buffer was N(CC(=O)O)(CC(=O)O)CC	1042&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2987 # SMARTS did not match for molecule CCN(CC(=O)O)CC(=O)O	1042
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2988 # number of heavy atoms wrong for molecule CCN(CC(=O)O)CC(=O)O	1042
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2989 # SMILES read failed, buffer was c1ccncc1.O(C(C)=O)c1c(S(=O)(=O)O)ccc(c1)NC(C)=O	1043&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2990 # SMARTS did not match for molecule CC(=O)Nc1ccc(c(OC(=O)C)c1)S(=O)(=O)O.c1cccnc1	1043
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2991 # number of heavy atoms wrong for molecule CC(=O)Nc1ccc(c(OC(=O)C)c1)S(=O)(=O)O.c1cccnc1	1043
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2992 # SMILES read failed, buffer was N(CCC([N+](=O)[O-])(C)C)(CC(=O)O)CC(=O)O	1044&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2993 # SMARTS did not match for molecule OC(=O)CN(CCC(C)(C)[N+](=O)[O-])CC(=O)O	1044
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2994 # number of heavy atoms wrong for molecule OC(=O)CN(CCC(C)(C)[N+](=O)[O-])CC(=O)O	1044
&apos; passed</Info><Info file="cansmi.cpp" line="65">check &apos;not ok 2995 # SMILES read failed, buffer was C(CCN)([N+](=O)[O-])(C)C	1045&apos; passed</Info><Info file="cansmi.cpp" line="74">check &apos;not ok 2996 # SMARTS did not match for molecule NCCC(C)(C)[N+](=O)[O-]	1045
&apos; passed</Info><Info file="cansmi.cpp" line="79">check &apos;not ok 2997 # number of heavy atoms wrong for molecule NCCC(C)(C)[N+](=O)[O-]	1045
&apos; passed</Info><TestingTime>8680000</TestingTime></TestCase><TestCase name="cmlreadfile_test"># Unit tests for OBMol 
ok 1
<Info file="cmlreadfile.cpp" line="45">check &apos;Bail out! Fail format isn&apos;t loaded!&apos; passed</Info><Info file="cmlreadfile.cpp" line="49">check obconv_first.ReadFile(&amp;obmol_first, cmlfile) passed</Info><Info file="cmlreadfile.cpp" line="52">check &apos;Bail out! Fail format isn&apos;t loaded!&apos; passed</Info><Info file="cmlreadfile.cpp" line="56">check obconv.ReadFile(&amp;obmol, cmlfile_multi) passed</Info><Info file="cmlreadfile.cpp" line="59">check obconv.Read(&amp;obmol) passed</Info><Info file="cmlreadfile.cpp" line="60">check obmol.NumAtoms() == 28 passed</Info><TestingTime>0</TestingTime></TestCase><TestCase name="conversion_test"># Unit tests for OBConversion 
<Info file="conversion.cpp" line="41">check obConversion.SetInAndOutFormats(&quot;smi&quot;, &quot;mdl&quot;) passed</Info><Info file="conversion.cpp" line="43">check obConversion.ReadString(&amp;obMol, &quot;C1=CC=CS1&quot;) passed</Info><Info file="conversion.cpp" line="45">check obMol.NumAtoms() == 5 passed</Info><Info file="conversion.cpp" line="47">check obMol.AddHydrogens() passed</Info><Info file="conversion.cpp" line="48">check obMol.NumAtoms() == 9 passed</Info><Info file="conversion.cpp" line="50">check (obConversion.WriteString(&amp;obMol)).length() passed</Info><Info file="conversion.cpp" line="53">check obConversion.WriteFile(&amp;obMol, &quot;test.mdl&quot;) passed</Info><Info file="conversion.cpp" line="55">check ifs.good() passed</Info><Info file="conversion.cpp" line="58">check obConversion.SetInFormat(&quot;mdl&quot;) passed</Info><Info file="conversion.cpp" line="59">check obConversion.ReadFile(&amp;obMol, &quot;test.mdl&quot;) passed</Info><Info file="conversion.cpp" line="60">check remove(&quot;test.mdl&quot;) != -1 passed</Info><Info file="conversion.cpp" line="116">check !obConversion.ReadString(&amp;obMol, &quot;&quot;) passed</Info><Info file="conversion.cpp" line="117">check !obConversion.Read(&amp;obMol) passed</Info><TestingTime>0</TestingTime></TestCase><TestCase name="data_test"># Unit tests for data tables 
<Info file="data.cpp" line="40">check fabs(etab.GetMass(2) - 4.0026 ) &lt; 2e-3 passed</Info><TestingTime>0</TestingTime></TestCase><TestCase name="formalcharge_test"># Testing molecular formal charges...
<Info file="formalcharge.cpp" line="47">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="formalcharge.cpp" line="50">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="formalcharge.cpp" line="59">check &apos;Bail out! SMILES format is not loaded&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formalcharge.cpp" line="67">check &apos;Bail out! error reading reference data&apos; passed</Info><TestingTime>860000</TestingTime></TestCase><TestCase name="format_test"># Unit tests for OBFormat 
<Info file="format.cpp" line="40">check obConversion.SetInAndOutFormats(&quot;smi&quot;, &quot;mdl&quot;) passed</Info><Info file="format.cpp" line="43">check inFormat passed</Info><Info file="format.cpp" line="46">check outFormat passed</Info><TestingTime>0</TestingTime></TestCase><TestCase name="formula_test"># Testing molecular formulas...
<Info file="formula.cpp" line="51">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="formula.cpp" line="54">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="formula.cpp" line="64">check &apos;Bail out! SMILES format is not loaded&apos; passed</Info><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1 # molecular formula incorrect for molecule BIONET_10A-002 aryl # Expected Oc1ccccc1c2nnco2, found C8H6N2O2</Error><Error file="formula.cpp" line="87">not ok 2 # molecular weight incorrect for molecule BIONET_10A-002 aryl # Expected 0.000000, found 162.145440 </Error><Error file="formula.cpp" line="93">not ok 3 # exact mass incorrect for molecule BIONET_10A-002 aryl # Expected 0.000000, found 162.042927 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 4 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-002 aryl</Error><Error file="formula.cpp" line="110">not ok 5 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-002 aryl # Expected 0.000000, found 162.145440 </Error><Error file="formula.cpp" line="116">not ok 6 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-002 aryl # Expected 0.000000, found 162.042927 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 7 # molecular formula incorrect for molecule BIONET_10A-004 aryl # Expected CC(=O)c1ccc(cc1)n2ccnc2, found C11H10N2O</Error><Error file="formula.cpp" line="87">not ok 8 # molecular weight incorrect for molecule BIONET_10A-004 aryl # Expected 0.000000, found 186.209900 </Error><Error file="formula.cpp" line="93">not ok 9 # exact mass incorrect for molecule BIONET_10A-004 aryl # Expected 0.000000, found 186.079313 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 10 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-004 aryl</Error><Error file="formula.cpp" line="110">not ok 11 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-004 aryl # Expected 0.000000, found 186.209900 </Error><Error file="formula.cpp" line="116">not ok 12 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-004 aryl # Expected 0.000000, found 186.079313 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 13 # molecular formula incorrect for molecule BIONET_10A-007 hetatm # Expected CN(C)/C=C/1\CCNC1=O, found C7H12N2O</Error><Error file="formula.cpp" line="87">not ok 14 # molecular weight incorrect for molecule BIONET_10A-007 hetatm # Expected 0.000000, found 140.182980 </Error><Error file="formula.cpp" line="93">not ok 15 # exact mass incorrect for molecule BIONET_10A-007 hetatm # Expected 0.000000, found 140.094963 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 16 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-007 hetatm</Error><Error file="formula.cpp" line="110">not ok 17 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-007 hetatm # Expected 0.000000, found 140.182980 </Error><Error file="formula.cpp" line="116">not ok 18 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-007 hetatm # Expected 0.000000, found 140.094963 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 19 # molecular formula incorrect for molecule BIONET_10A-008 aryl # Expected Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3, found C15H12N2O4S</Error><Error file="formula.cpp" line="87">not ok 20 # molecular weight incorrect for molecule BIONET_10A-008 aryl # Expected 0.000000, found 316.331780 </Error><Error file="formula.cpp" line="93">not ok 21 # exact mass incorrect for molecule BIONET_10A-008 aryl # Expected 0.000000, found 316.051778 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 22 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-008 aryl</Error><Error file="formula.cpp" line="110">not ok 23 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-008 aryl # Expected 0.000000, found 316.331780 </Error><Error file="formula.cpp" line="116">not ok 24 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-008 aryl # Expected 0.000000, found 316.051778 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 25 # molecular formula incorrect for molecule BIONET_10A-009 arene # Expected Clc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3, found C14H9ClN2O4S</Error><Error file="formula.cpp" line="87">not ok 26 # molecular weight incorrect for molecule BIONET_10A-009 arene # Expected 0.000000, found 336.750260 </Error><Error file="formula.cpp" line="93">not ok 27 # exact mass incorrect for molecule BIONET_10A-009 arene # Expected 0.000000, found 335.997155 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 28 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-009 arene</Error><Error file="formula.cpp" line="110">not ok 29 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-009 arene # Expected 0.000000, found 336.750260 </Error><Error file="formula.cpp" line="116">not ok 30 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-009 arene # Expected 0.000000, found 335.997155 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 31 # molecular formula incorrect for molecule BIONET_10A-010 arene # Expected COc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3, found C15H12N2O5S</Error><Error file="formula.cpp" line="87">not ok 32 # molecular weight incorrect for molecule BIONET_10A-010 arene # Expected 0.000000, found 332.331180 </Error><Error file="formula.cpp" line="93">not ok 33 # exact mass incorrect for molecule BIONET_10A-010 arene # Expected 0.000000, found 332.046692 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 34 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-010 arene</Error><Error file="formula.cpp" line="110">not ok 35 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-010 arene # Expected 0.000000, found 332.331180 </Error><Error file="formula.cpp" line="116">not ok 36 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-010 arene # Expected 0.000000, found 332.046692 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 37 # molecular formula incorrect for molecule BIONET_10A-011 hetatm # Expected CN(C)/C=C/N(=O)=O, found C4H8N2O2</Error><Error file="formula.cpp" line="87">not ok 38 # molecular weight incorrect for molecule BIONET_10A-011 hetatm # Expected 0.000000, found 116.118520 </Error><Error file="formula.cpp" line="93">not ok 39 # exact mass incorrect for molecule BIONET_10A-011 hetatm # Expected 0.000000, found 116.058578 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 40 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-011 hetatm</Error><Error file="formula.cpp" line="110">not ok 41 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-011 hetatm # Expected 0.000000, found 116.118520 </Error><Error file="formula.cpp" line="116">not ok 42 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-011 hetatm # Expected 0.000000, found 116.058578 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 43 # molecular formula incorrect for molecule BIONET_10A-013 arene # Expected O=S(=O)(Oc1ccccc1c2nnco2)c3ccccc3, found C14H10N2O4S</Error><Error file="formula.cpp" line="87">not ok 44 # molecular weight incorrect for molecule BIONET_10A-013 arene # Expected 0.000000, found 302.305200 </Error><Error file="formula.cpp" line="93">not ok 45 # exact mass incorrect for molecule BIONET_10A-013 arene # Expected 0.000000, found 302.036128 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 46 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-013 arene</Error><Error file="formula.cpp" line="110">not ok 47 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-013 arene # Expected 0.000000, found 302.305200 </Error><Error file="formula.cpp" line="116">not ok 48 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-013 arene # Expected 0.000000, found 302.036128 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 49 # molecular formula incorrect for molecule BIONET_10A-015 hetatm # Expected CCO/C=C/1\CCNC1=O, found C7H11NO2</Error><Error file="formula.cpp" line="87">not ok 50 # molecular weight incorrect for molecule BIONET_10A-015 hetatm # Expected 0.000000, found 141.167740 </Error><Error file="formula.cpp" line="93">not ok 51 # exact mass incorrect for molecule BIONET_10A-015 hetatm # Expected 0.000000, found 141.078979 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 52 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-015 hetatm</Error><Error file="formula.cpp" line="110">not ok 53 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-015 hetatm # Expected 0.000000, found 141.167740 </Error><Error file="formula.cpp" line="116">not ok 54 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-015 hetatm # Expected 0.000000, found 141.078979 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 55 # molecular formula incorrect for molecule BIONET_10A-016 ring # Expected O=C1NCCC1/C=C/2\CCNC2=O, found C9H12N2O2</Error><Error file="formula.cpp" line="87">not ok 56 # molecular weight incorrect for molecule BIONET_10A-016 ring # Expected 0.000000, found 180.203780 </Error><Error file="formula.cpp" line="93">not ok 57 # exact mass incorrect for molecule BIONET_10A-016 ring # Expected 0.000000, found 180.089878 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 58 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-016 ring</Error><Error file="formula.cpp" line="110">not ok 59 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-016 ring # Expected 0.000000, found 180.203780 </Error><Error file="formula.cpp" line="116">not ok 60 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-016 ring # Expected 0.000000, found 180.089878 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 61 # molecular formula incorrect for molecule BIONET_10A-017 halide # Expected Clc1ccc(N/C=C/2\CCNC2=O)cc1, found C11H11ClN2O</Error><Error file="formula.cpp" line="87">not ok 62 # molecular weight incorrect for molecule BIONET_10A-017 halide # Expected 0.000000, found 222.670840 </Error><Error file="formula.cpp" line="93">not ok 63 # exact mass incorrect for molecule BIONET_10A-017 halide # Expected 0.000000, found 222.055991 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 64 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-017 halide</Error><Error file="formula.cpp" line="110">not ok 65 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-017 halide # Expected 0.000000, found 222.670840 </Error><Error file="formula.cpp" line="116">not ok 66 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-017 halide # Expected 0.000000, found 222.055991 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 67 # molecular formula incorrect for molecule BIONET_10A-019 pseudo_amine # Expected O=C/1NCC\C1=C/Nc2ccccc2, found C11H12N2O</Error><Error file="formula.cpp" line="87">not ok 68 # molecular weight incorrect for molecule BIONET_10A-019 pseudo_amine # Expected 0.000000, found 188.225780 </Error><Error file="formula.cpp" line="93">not ok 69 # exact mass incorrect for molecule BIONET_10A-019 pseudo_amine # Expected 0.000000, found 188.094963 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 70 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-019 pseudo_amine</Error><Error file="formula.cpp" line="110">not ok 71 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-019 pseudo_amine # Expected 0.000000, found 188.225780 </Error><Error file="formula.cpp" line="116">not ok 72 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-019 pseudo_amine # Expected 0.000000, found 188.094963 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 73 # molecular formula incorrect for molecule BIONET_10A-020 pseudo_amine # Expected Cc1ccc(N/C=C/2\CCNC2=O)cc1, found C12H14N2O</Error><Error file="formula.cpp" line="87">not ok 74 # molecular weight incorrect for molecule BIONET_10A-020 pseudo_amine # Expected 0.000000, found 202.252360 </Error><Error file="formula.cpp" line="93">not ok 75 # exact mass incorrect for molecule BIONET_10A-020 pseudo_amine # Expected 0.000000, found 202.110613 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 76 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-020 pseudo_amine</Error><Error file="formula.cpp" line="110">not ok 77 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-020 pseudo_amine # Expected 0.000000, found 202.252360 </Error><Error file="formula.cpp" line="116">not ok 78 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-020 pseudo_amine # Expected 0.000000, found 202.110613 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 79 # molecular formula incorrect for molecule BIONET_10A-021 pseudo_amine # Expected COc1ccc(N/C=C/2\CCNC2=O)cc1, found C12H14N2O2</Error><Error file="formula.cpp" line="87">not ok 80 # molecular weight incorrect for molecule BIONET_10A-021 pseudo_amine # Expected 0.000000, found 218.251760 </Error><Error file="formula.cpp" line="93">not ok 81 # exact mass incorrect for molecule BIONET_10A-021 pseudo_amine # Expected 0.000000, found 218.105528 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 82 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-021 pseudo_amine</Error><Error file="formula.cpp" line="110">not ok 83 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-021 pseudo_amine # Expected 0.000000, found 218.251760 </Error><Error file="formula.cpp" line="116">not ok 84 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-021 pseudo_amine # Expected 0.000000, found 218.105528 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 85 # molecular formula incorrect for molecule BIONET_10A-022 halide # Expected FC(F)(F)c1cccc(N/C=C/2\CCNC2=O)c1, found C12H11F3N2O</Error><Error file="formula.cpp" line="87">not ok 86 # molecular weight incorrect for molecule BIONET_10A-022 halide # Expected 0.000000, found 256.223750 </Error><Error file="formula.cpp" line="93">not ok 87 # exact mass incorrect for molecule BIONET_10A-022 halide # Expected 0.000000, found 256.082348 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 88 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-022 halide</Error><Error file="formula.cpp" line="110">not ok 89 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-022 halide # Expected 0.000000, found 256.223750 </Error><Error file="formula.cpp" line="116">not ok 90 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-022 halide # Expected 0.000000, found 256.082348 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 91 # molecular formula incorrect for molecule BIONET_10A-023 halide # Expected Clc1cccc(N/C=C/2\CCNC2=O)c1, found C11H11ClN2O</Error><Error file="formula.cpp" line="87">not ok 92 # molecular weight incorrect for molecule BIONET_10A-023 halide # Expected 0.000000, found 222.670840 </Error><Error file="formula.cpp" line="93">not ok 93 # exact mass incorrect for molecule BIONET_10A-023 halide # Expected 0.000000, found 222.055991 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 94 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-023 halide</Error><Error file="formula.cpp" line="110">not ok 95 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-023 halide # Expected 0.000000, found 222.670840 </Error><Error file="formula.cpp" line="116">not ok 96 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-023 halide # Expected 0.000000, found 222.055991 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 97 # molecular formula incorrect for molecule BIONET_10A-025 ring # Expected COc1cccc(N/C=C/2\CCNC2=O)c1, found C12H14N2O2</Error><Error file="formula.cpp" line="87">not ok 98 # molecular weight incorrect for molecule BIONET_10A-025 ring # Expected 0.000000, found 218.251760 </Error><Error file="formula.cpp" line="93">not ok 99 # exact mass incorrect for molecule BIONET_10A-025 ring # Expected 0.000000, found 218.105528 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 100 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-025 ring</Error><Error file="formula.cpp" line="110">not ok 101 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-025 ring # Expected 0.000000, found 218.251760 </Error><Error file="formula.cpp" line="116">not ok 102 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-025 ring # Expected 0.000000, found 218.105528 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 103 # molecular formula incorrect for molecule BIONET_10A-026 ring # Expected O=C(Oc1ccccc1c2nnco2)c3ccccc3, found C15H10N2O3</Error><Error file="formula.cpp" line="87">not ok 104 # molecular weight incorrect for molecule BIONET_10A-026 ring # Expected 0.000000, found 266.251500 </Error><Error file="formula.cpp" line="93">not ok 105 # exact mass incorrect for molecule BIONET_10A-026 ring # Expected 0.000000, found 266.069142 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 106 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-026 ring</Error><Error file="formula.cpp" line="110">not ok 107 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-026 ring # Expected 0.000000, found 266.251500 </Error><Error file="formula.cpp" line="116">not ok 108 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-026 ring # Expected 0.000000, found 266.069142 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 109 # molecular formula incorrect for molecule BIONET_10A-027 ester # Expected Cc1cccc(c1)C(=O)Oc2ccccc2c3nnco3, found C16H12N2O3</Error><Error file="formula.cpp" line="87">not ok 110 # molecular weight incorrect for molecule BIONET_10A-027 ester # Expected 0.000000, found 280.278080 </Error><Error file="formula.cpp" line="93">not ok 111 # exact mass incorrect for molecule BIONET_10A-027 ester # Expected 0.000000, found 280.084792 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 112 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-027 ester</Error><Error file="formula.cpp" line="110">not ok 113 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-027 ester # Expected 0.000000, found 280.278080 </Error><Error file="formula.cpp" line="116">not ok 114 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-027 ester # Expected 0.000000, found 280.084792 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 115 # molecular formula incorrect for molecule BIONET_10A-028 aryl_halide # Expected Clc1ccc(cc1)C(=O)Oc2ccccc2c3nnco3, found C15H9ClN2O3</Error><Error file="formula.cpp" line="87">not ok 116 # molecular weight incorrect for molecule BIONET_10A-028 aryl_halide # Expected 0.000000, found 300.696560 </Error><Error file="formula.cpp" line="93">not ok 117 # exact mass incorrect for molecule BIONET_10A-028 aryl_halide # Expected 0.000000, found 300.030170 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 118 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-028 aryl_halide</Error><Error file="formula.cpp" line="110">not ok 119 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-028 aryl_halide # Expected 0.000000, found 300.696560 </Error><Error file="formula.cpp" line="116">not ok 120 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-028 aryl_halide # Expected 0.000000, found 300.030170 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 121 # molecular formula incorrect for molecule BIONET_10A-029 carbonyl # Expected O=C(Nc1ccccc1)Oc2ccccc2c3nnco3, found C15H11N3O3</Error><Error file="formula.cpp" line="87">not ok 122 # molecular weight incorrect for molecule BIONET_10A-029 carbonyl # Expected 0.000000, found 281.266140 </Error><Error file="formula.cpp" line="93">not ok 123 # exact mass incorrect for molecule BIONET_10A-029 carbonyl # Expected 0.000000, found 281.080041 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 124 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-029 carbonyl</Error><Error file="formula.cpp" line="110">not ok 125 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-029 carbonyl # Expected 0.000000, found 281.266140 </Error><Error file="formula.cpp" line="116">not ok 126 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-029 carbonyl # Expected 0.000000, found 281.080041 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 127 # molecular formula incorrect for molecule BIONET_10A-031 hydroxyl # Expected Oc1ccccc1c2nnc3CCCCn23, found C12H13N3O</Error><Error file="formula.cpp" line="87">not ok 128 # molecular weight incorrect for molecule BIONET_10A-031 hydroxyl # Expected 0.000000, found 215.251120 </Error><Error file="formula.cpp" line="93">not ok 129 # exact mass incorrect for molecule BIONET_10A-031 hydroxyl # Expected 0.000000, found 215.105862 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 130 # molecular formula incorrect for hydrogen-added molecule BIONET_10A-031 hydroxyl</Error><Error file="formula.cpp" line="110">not ok 131 # molecular weight incorrect for hydrogen-added molecule BIONET_10A-031 hydroxyl # Expected 0.000000, found 215.251120 </Error><Error file="formula.cpp" line="116">not ok 132 # exact mass  incorrect for hydrogen-added molecule BIONET_10A-031 hydroxyl # Expected 0.000000, found 215.105862 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 133 # molecular formula incorrect for molecule BIONET_10B-001 amine # Expected CN1CCN(CC1)c2ccc(cc2)c3ccno3, found C14H17N3O</Error><Error file="formula.cpp" line="87">not ok 134 # molecular weight incorrect for molecule BIONET_10B-001 amine # Expected 0.000000, found 243.304280 </Error><Error file="formula.cpp" line="93">not ok 135 # exact mass incorrect for molecule BIONET_10B-001 amine # Expected 0.000000, found 243.137162 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 136 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-001 amine</Error><Error file="formula.cpp" line="110">not ok 137 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-001 amine # Expected 0.000000, found 243.304280 </Error><Error file="formula.cpp" line="116">not ok 138 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-001 amine # Expected 0.000000, found 243.137162 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 139 # molecular formula incorrect for molecule BIONET_10B-003 thioether # Expected CCSC(SCC)C(=O)NC, found C7H15NOS2</Error><Error file="formula.cpp" line="87">not ok 140 # molecular weight incorrect for molecule BIONET_10B-003 thioether # Expected 0.000000, found 193.330100 </Error><Error file="formula.cpp" line="93">not ok 141 # exact mass incorrect for molecule BIONET_10B-003 thioether # Expected 0.000000, found 193.059506 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 142 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-003 thioether</Error><Error file="formula.cpp" line="110">not ok 143 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-003 thioether # Expected 0.000000, found 193.330100 </Error><Error file="formula.cpp" line="116">not ok 144 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-003 thioether # Expected 0.000000, found 193.059506 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 145 # molecular formula incorrect for molecule BIONET_10B-004 aryl_halide # Expected Fc1ccccc1n2ncnc2/C=C/c3ccccc3, found C16H12FN3</Error><Error file="formula.cpp" line="87">not ok 146 # molecular weight incorrect for molecule BIONET_10B-004 aryl_halide # Expected 0.000000, found 265.284983 </Error><Error file="formula.cpp" line="93">not ok 147 # exact mass incorrect for molecule BIONET_10B-004 aryl_halide # Expected 0.000000, found 265.101526 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 148 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-004 aryl_halide</Error><Error file="formula.cpp" line="110">not ok 149 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-004 aryl_halide # Expected 0.000000, found 265.284983 </Error><Error file="formula.cpp" line="116">not ok 150 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-004 aryl_halide # Expected 0.000000, found 265.101526 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 151 # molecular formula incorrect for molecule BIONET_10B-006 aniline_unsubstituted # Expected Nc1nccc(n1)c2ccccn2, found C9H8N4</Error><Error file="formula.cpp" line="87">not ok 152 # molecular weight incorrect for molecule BIONET_10B-006 aniline_unsubstituted # Expected 0.000000, found 172.186620 </Error><Error file="formula.cpp" line="93">not ok 153 # exact mass incorrect for molecule BIONET_10B-006 aniline_unsubstituted # Expected 0.000000, found 172.074896 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 154 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-006 aniline_unsubstituted</Error><Error file="formula.cpp" line="110">not ok 155 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-006 aniline_unsubstituted # Expected 0.000000, found 172.186620 </Error><Error file="formula.cpp" line="116">not ok 156 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-006 aniline_unsubstituted # Expected 0.000000, found 172.074896 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 157 # molecular formula incorrect for molecule BIONET_10B-007 carbonyl # Expected O=C(Nc1ccccc1)Nc2nccc(n2)c3ccccn3, found C16H13N5O</Error><Error file="formula.cpp" line="87">not ok 158 # molecular weight incorrect for molecule BIONET_10B-007 carbonyl # Expected 0.000000, found 291.307320 </Error><Error file="formula.cpp" line="93">not ok 159 # exact mass incorrect for molecule BIONET_10B-007 carbonyl # Expected 0.000000, found 291.112010 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 160 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-007 carbonyl</Error><Error file="formula.cpp" line="110">not ok 161 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-007 carbonyl # Expected 0.000000, found 291.307320 </Error><Error file="formula.cpp" line="116">not ok 162 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-007 carbonyl # Expected 0.000000, found 291.112010 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 163 # molecular formula incorrect for molecule BIONET_10B-008 amine # Expected CN(C)/C=C/C(=O)c1ccc(Cl)c(c1)N(=O)=O, found C11H11ClN2O3</Error><Error file="formula.cpp" line="87">not ok 164 # molecular weight incorrect for molecule BIONET_10B-008 amine # Expected 0.000000, found 254.669640 </Error><Error file="formula.cpp" line="93">not ok 165 # exact mass incorrect for molecule BIONET_10B-008 amine # Expected 0.000000, found 254.045820 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 166 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-008 amine</Error><Error file="formula.cpp" line="110">not ok 167 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-008 amine # Expected 0.000000, found 254.669640 </Error><Error file="formula.cpp" line="116">not ok 168 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-008 amine # Expected 0.000000, found 254.045820 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 169 # molecular formula incorrect for molecule BIONET_10B-010 aryl_halide # Expected Clc1ccc(cc1N(=O)=O)c2ccn[nH]2, found C9H6ClN3O2</Error><Error file="formula.cpp" line="87">not ok 170 # molecular weight incorrect for molecule BIONET_10B-010 aryl_halide # Expected 0.000000, found 223.615840 </Error><Error file="formula.cpp" line="93">not ok 171 # exact mass incorrect for molecule BIONET_10B-010 aryl_halide # Expected 0.000000, found 223.014854 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 172 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-010 aryl_halide</Error><Error file="formula.cpp" line="110">not ok 173 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-010 aryl_halide # Expected 0.000000, found 223.615840 </Error><Error file="formula.cpp" line="116">not ok 174 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-010 aryl_halide # Expected 0.000000, found 223.014854 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 175 # molecular formula incorrect for molecule BIONET_10B-011 enamine # Expected Cc1noc(/C=C/Nc2ccccc2)c1N(=O)=O, found C12H11N3O3</Error><Error file="formula.cpp" line="87">not ok 176 # molecular weight incorrect for molecule BIONET_10B-011 enamine # Expected 0.000000, found 245.234040 </Error><Error file="formula.cpp" line="93">not ok 177 # exact mass incorrect for molecule BIONET_10B-011 enamine # Expected 0.000000, found 245.080041 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 178 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-011 enamine</Error><Error file="formula.cpp" line="110">not ok 179 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-011 enamine # Expected 0.000000, found 245.234040 </Error><Error file="formula.cpp" line="116">not ok 180 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-011 enamine # Expected 0.000000, found 245.080041 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 181 # molecular formula incorrect for molecule BIONET_10B-013 acetal # Expected CCOC(CC(=O)NN)OCC, found C7H16N2O3</Error><Error file="formula.cpp" line="87">not ok 182 # molecular weight incorrect for molecule BIONET_10B-013 acetal # Expected 0.000000, found 176.213540 </Error><Error file="formula.cpp" line="93">not ok 183 # exact mass incorrect for molecule BIONET_10B-013 acetal # Expected 0.000000, found 176.116092 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 184 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-013 acetal</Error><Error file="formula.cpp" line="110">not ok 185 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-013 acetal # Expected 0.000000, found 176.213540 </Error><Error file="formula.cpp" line="116">not ok 186 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-013 acetal # Expected 0.000000, found 176.116092 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 187 # molecular formula incorrect for molecule BIONET_10B-015 acetal # Expected COC(CC(=O)NNC(=S)Nc1ccccc1)OC, found C12H17N3O3S</Error><Error file="formula.cpp" line="87">not ok 188 # molecular weight incorrect for molecule BIONET_10B-015 acetal # Expected 0.000000, found 283.346680 </Error><Error file="formula.cpp" line="93">not ok 189 # exact mass incorrect for molecule BIONET_10B-015 acetal # Expected 0.000000, found 283.099062 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 190 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-015 acetal</Error><Error file="formula.cpp" line="110">not ok 191 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-015 acetal # Expected 0.000000, found 283.346680 </Error><Error file="formula.cpp" line="116">not ok 192 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-015 acetal # Expected 0.000000, found 283.099062 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 193 # molecular formula incorrect for molecule BIONET_10B-016 acetal # Expected CCOC(CNC(=O)Nc1ccc(Cl)cc1)OCC, found C13H19ClN2O3</Error><Error file="formula.cpp" line="87">not ok 194 # molecular weight incorrect for molecule BIONET_10B-016 acetal # Expected 0.000000, found 286.754560 </Error><Error file="formula.cpp" line="93">not ok 195 # exact mass incorrect for molecule BIONET_10B-016 acetal # Expected 0.000000, found 286.108420 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 196 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-016 acetal</Error><Error file="formula.cpp" line="110">not ok 197 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-016 acetal # Expected 0.000000, found 286.754560 </Error><Error file="formula.cpp" line="116">not ok 198 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-016 acetal # Expected 0.000000, found 286.108420 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 199 # molecular formula incorrect for molecule BIONET_10B-017 carbonyl # Expected O=C(Nc1nccc(n1)c2ccccn2)c3ccccc3, found C16H12N4O</Error><Error file="formula.cpp" line="87">not ok 200 # molecular weight incorrect for molecule BIONET_10B-017 carbonyl # Expected 0.000000, found 276.292680 </Error><Error file="formula.cpp" line="93">not ok 201 # exact mass incorrect for molecule BIONET_10B-017 carbonyl # Expected 0.000000, found 276.101111 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 202 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-017 carbonyl</Error><Error file="formula.cpp" line="110">not ok 203 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-017 carbonyl # Expected 0.000000, found 276.292680 </Error><Error file="formula.cpp" line="116">not ok 204 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-017 carbonyl # Expected 0.000000, found 276.101111 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 205 # molecular formula incorrect for molecule BIONET_10B-018 alkyl_halide # Expected NNc1ncc(cc1C(F)(F)F)C(F)(F)F, found C7H5F6N3</Error><Error file="formula.cpp" line="87">not ok 206 # molecular weight incorrect for molecule BIONET_10B-018 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="93">not ok 207 # exact mass incorrect for molecule BIONET_10B-018 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 208 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-018 alkyl_halide</Error><Error file="formula.cpp" line="110">not ok 209 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-018 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="116">not ok 210 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-018 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 211 # molecular formula incorrect for molecule BIONET_10B-019 alkyl_halide # Expected NNc1cc(cc(n1)C(F)(F)F)C(F)(F)F, found C7H5F6N3</Error><Error file="formula.cpp" line="87">not ok 212 # molecular weight incorrect for molecule BIONET_10B-019 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="93">not ok 213 # exact mass incorrect for molecule BIONET_10B-019 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 214 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-019 alkyl_halide</Error><Error file="formula.cpp" line="110">not ok 215 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-019 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="116">not ok 216 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-019 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 217 # molecular formula incorrect for molecule BIONET_10B-020 alkyl_halide # Expected NNc1cc(nc(c1)C(F)(F)F)C(F)(F)F, found C7H5F6N3</Error><Error file="formula.cpp" line="87">not ok 218 # molecular weight incorrect for molecule BIONET_10B-020 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="93">not ok 219 # exact mass incorrect for molecule BIONET_10B-020 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 220 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-020 alkyl_halide</Error><Error file="formula.cpp" line="110">not ok 221 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-020 alkyl_halide # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="116">not ok 222 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-020 alkyl_halide # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 223 # molecular formula incorrect for molecule BIONET_10B-021 hydrazine # Expected NNc1cc(c(cn1)C(F)(F)F)C(F)(F)F, found C7H5F6N3</Error><Error file="formula.cpp" line="87">not ok 224 # molecular weight incorrect for molecule BIONET_10B-021 hydrazine # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="93">not ok 225 # exact mass incorrect for molecule BIONET_10B-021 hydrazine # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 226 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-021 hydrazine</Error><Error file="formula.cpp" line="110">not ok 227 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-021 hydrazine # Expected 0.000000, found 245.125119 </Error><Error file="formula.cpp" line="116">not ok 228 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-021 hydrazine # Expected 0.000000, found 245.038766 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 229 # molecular formula incorrect for molecule BIONET_10B-022 ether # Expected COC(Cc1n[nH]c(=S)n1c2ccccc2)OC, found C12H15N3O2S</Error><Error file="formula.cpp" line="87">not ok 230 # molecular weight incorrect for molecule BIONET_10B-022 ether # Expected 0.000000, found 265.331400 </Error><Error file="formula.cpp" line="93">not ok 231 # exact mass incorrect for molecule BIONET_10B-022 ether # Expected 0.000000, found 265.088498 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 232 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-022 ether</Error><Error file="formula.cpp" line="110">not ok 233 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-022 ether # Expected 0.000000, found 265.331400 </Error><Error file="formula.cpp" line="116">not ok 234 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-022 ether # Expected 0.000000, found 265.088498 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 235 # molecular formula incorrect for molecule BIONET_10B-023 ether # Expected C1CN(CCO1)c2n[nH]cc2c3ccccn3, found C12H14N4O</Error><Error file="formula.cpp" line="87">not ok 236 # molecular weight incorrect for molecule BIONET_10B-023 ether # Expected 0.000000, found 230.265760 </Error><Error file="formula.cpp" line="93">not ok 237 # exact mass incorrect for molecule BIONET_10B-023 ether # Expected 0.000000, found 230.116761 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 238 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-023 ether</Error><Error file="formula.cpp" line="110">not ok 239 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-023 ether # Expected 0.000000, found 230.265760 </Error><Error file="formula.cpp" line="116">not ok 240 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-023 ether # Expected 0.000000, found 230.116761 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 241 # molecular formula incorrect for molecule BIONET_10B-029 amide # Expected FC(F)(F)c1cc(NNC(=O)c2c(Cl)cccc2Cl)cc(n1)C(F)(F)F, found C14H7Cl2F6N3O</Error><Error file="formula.cpp" line="87">not ok 242 # molecular weight incorrect for molecule BIONET_10B-029 amide # Expected 0.000000, found 418.121299 </Error><Error file="formula.cpp" line="93">not ok 243 # exact mass incorrect for molecule BIONET_10B-029 amide # Expected 0.000000, found 416.987037 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 244 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-029 amide</Error><Error file="formula.cpp" line="110">not ok 245 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-029 amide # Expected 0.000000, found 418.121299 </Error><Error file="formula.cpp" line="116">not ok 246 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-029 amide # Expected 0.000000, found 416.987037 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 247 # molecular formula incorrect for molecule BIONET_10B-031 amine # Expected FC(F)(F)C/1=NNC(=O)\C1=C/NCc2ccccn2, found C11H9F3N4O</Error><Error file="formula.cpp" line="87">not ok 248 # molecular weight incorrect for molecule BIONET_10B-031 amine # Expected 0.000000, found 270.210570 </Error><Error file="formula.cpp" line="93">not ok 249 # exact mass incorrect for molecule BIONET_10B-031 amine # Expected 0.000000, found 270.072846 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 250 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-031 amine</Error><Error file="formula.cpp" line="110">not ok 251 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-031 amine # Expected 0.000000, found 270.210570 </Error><Error file="formula.cpp" line="116">not ok 252 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-031 amine # Expected 0.000000, found 270.072846 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 253 # molecular formula incorrect for molecule BIONET_10B-032 enamine # Expected FC(F)(F)C/1=NNC(=O)\C1=C/NCc2cccnc2, found C11H9F3N4O</Error><Error file="formula.cpp" line="87">not ok 254 # molecular weight incorrect for molecule BIONET_10B-032 enamine # Expected 0.000000, found 270.210570 </Error><Error file="formula.cpp" line="93">not ok 255 # exact mass incorrect for molecule BIONET_10B-032 enamine # Expected 0.000000, found 270.072846 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 256 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-032 enamine</Error><Error file="formula.cpp" line="110">not ok 257 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-032 enamine # Expected 0.000000, found 270.210570 </Error><Error file="formula.cpp" line="116">not ok 258 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-032 enamine # Expected 0.000000, found 270.072846 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 259 # molecular formula incorrect for molecule BIONET_10B-033 enamine # Expected FC(F)(F)C/1=NNC(=O)\C1=C/NN2CCOCC2, found C9H11F3N4O2</Error><Error file="formula.cpp" line="87">not ok 260 # molecular weight incorrect for molecule BIONET_10B-033 enamine # Expected 0.000000, found 264.204450 </Error><Error file="formula.cpp" line="93">not ok 261 # exact mass incorrect for molecule BIONET_10B-033 enamine # Expected 0.000000, found 264.083410 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 262 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-033 enamine</Error><Error file="formula.cpp" line="110">not ok 263 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-033 enamine # Expected 0.000000, found 264.204450 </Error><Error file="formula.cpp" line="116">not ok 264 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-033 enamine # Expected 0.000000, found 264.083410 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 265 # molecular formula incorrect for molecule BIONET_10B-035 ether # Expected CC/1=NNC(=O)\C1=C/NN2CCOCC2, found C9H14N4O2</Error><Error file="formula.cpp" line="87">not ok 266 # molecular weight incorrect for molecule BIONET_10B-035 ether # Expected 0.000000, found 210.233060 </Error><Error file="formula.cpp" line="93">not ok 267 # exact mass incorrect for molecule BIONET_10B-035 ether # Expected 0.000000, found 210.111676 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 268 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-035 ether</Error><Error file="formula.cpp" line="110">not ok 269 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-035 ether # Expected 0.000000, found 210.233060 </Error><Error file="formula.cpp" line="116">not ok 270 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-035 ether # Expected 0.000000, found 210.111676 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 271 # molecular formula incorrect for molecule BIONET_10B-036 secondary_amine # Expected CC/1=NNC(=O)\C1=C/NCc2cccs2, found C10H11N3OS</Error><Error file="formula.cpp" line="87">not ok 272 # molecular weight incorrect for molecule BIONET_10B-036 secondary_amine # Expected 0.000000, found 221.278840 </Error><Error file="formula.cpp" line="93">not ok 273 # exact mass incorrect for molecule BIONET_10B-036 secondary_amine # Expected 0.000000, found 221.062283 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 274 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-036 secondary_amine</Error><Error file="formula.cpp" line="110">not ok 275 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-036 secondary_amine # Expected 0.000000, found 221.278840 </Error><Error file="formula.cpp" line="116">not ok 276 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-036 secondary_amine # Expected 0.000000, found 221.062283 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 277 # molecular formula incorrect for molecule BIONET_10B-037 secondary_amine # Expected FC(F)(F)C/1=NNC(=O)\C1=C/NCc2cccs2, found C10H8F3N3OS</Error><Error file="formula.cpp" line="87">not ok 278 # molecular weight incorrect for molecule BIONET_10B-037 secondary_amine # Expected 0.000000, found 275.250230 </Error><Error file="formula.cpp" line="93">not ok 279 # exact mass incorrect for molecule BIONET_10B-037 secondary_amine # Expected 0.000000, found 275.034018 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 280 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-037 secondary_amine</Error><Error file="formula.cpp" line="110">not ok 281 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-037 secondary_amine # Expected 0.000000, found 275.250230 </Error><Error file="formula.cpp" line="116">not ok 282 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-037 secondary_amine # Expected 0.000000, found 275.034018 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 283 # molecular formula incorrect for molecule BIONET_10B-040 amide # Expected CCOC(CNC(=O)NC(=O)c1cccnc1)OCC, found C13H19N3O4</Error><Error file="formula.cpp" line="87">not ok 284 # molecular weight incorrect for molecule BIONET_10B-040 amide # Expected 0.000000, found 281.307660 </Error><Error file="formula.cpp" line="93">not ok 285 # exact mass incorrect for molecule BIONET_10B-040 amide # Expected 0.000000, found 281.137556 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 286 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-040 amide</Error><Error file="formula.cpp" line="110">not ok 287 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-040 amide # Expected 0.000000, found 281.307660 </Error><Error file="formula.cpp" line="116">not ok 288 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-040 amide # Expected 0.000000, found 281.137556 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 289 # molecular formula incorrect for molecule BIONET_10B-046 hydroxyl # Expected OC(=O)c1c[nH]c(=O)c2ccccc12, found C10H7NO3</Error><Error file="formula.cpp" line="87">not ok 290 # molecular weight incorrect for molecule BIONET_10B-046 hydroxyl # Expected 0.000000, found 189.167480 </Error><Error file="formula.cpp" line="93">not ok 291 # exact mass incorrect for molecule BIONET_10B-046 hydroxyl # Expected 0.000000, found 189.042593 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 292 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-046 hydroxyl</Error><Error file="formula.cpp" line="110">not ok 293 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-046 hydroxyl # Expected 0.000000, found 189.167480 </Error><Error file="formula.cpp" line="116">not ok 294 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-046 hydroxyl # Expected 0.000000, found 189.042593 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 295 # molecular formula incorrect for molecule BIONET_10B-048 secondary_amine # Expected O=C/1NN=C(\C1=C\NCc2cccs2)c3ccccc3, found C15H13N3OS</Error><Error file="formula.cpp" line="87">not ok 296 # molecular weight incorrect for molecule BIONET_10B-048 secondary_amine # Expected 0.000000, found 283.348220 </Error><Error file="formula.cpp" line="93">not ok 297 # exact mass incorrect for molecule BIONET_10B-048 secondary_amine # Expected 0.000000, found 283.077933 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 298 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-048 secondary_amine</Error><Error file="formula.cpp" line="110">not ok 299 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-048 secondary_amine # Expected 0.000000, found 283.348220 </Error><Error file="formula.cpp" line="116">not ok 300 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-048 secondary_amine # Expected 0.000000, found 283.077933 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 301 # molecular formula incorrect for molecule BIONET_10B-049 hydrazone # Expected O=C/1NN=C(\C1=C\NN2CCOCC2)c3ccccc3, found C14H16N4O2</Error><Error file="formula.cpp" line="87">not ok 302 # molecular weight incorrect for molecule BIONET_10B-049 hydrazone # Expected 0.000000, found 272.302440 </Error><Error file="formula.cpp" line="93">not ok 303 # exact mass incorrect for molecule BIONET_10B-049 hydrazone # Expected 0.000000, found 272.127326 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 304 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-049 hydrazone</Error><Error file="formula.cpp" line="110">not ok 305 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-049 hydrazone # Expected 0.000000, found 272.302440 </Error><Error file="formula.cpp" line="116">not ok 306 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-049 hydrazone # Expected 0.000000, found 272.127326 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 307 # molecular formula incorrect for molecule BIONET_10B-051 amide # Expected Cc1onc(c1C(=O)N)c2ccccc2, found C11H10N2O2</Error><Error file="formula.cpp" line="87">not ok 308 # molecular weight incorrect for molecule BIONET_10B-051 amide # Expected 0.000000, found 202.209300 </Error><Error file="formula.cpp" line="93">not ok 309 # exact mass incorrect for molecule BIONET_10B-051 amide # Expected 0.000000, found 202.074228 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 310 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-051 amide</Error><Error file="formula.cpp" line="110">not ok 311 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-051 amide # Expected 0.000000, found 202.209300 </Error><Error file="formula.cpp" line="116">not ok 312 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-051 amide # Expected 0.000000, found 202.074228 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 313 # molecular formula incorrect for molecule BIONET_10B-052 urea # Expected CCOC(CNC(=O)NC(=O)c1ccncc1)OCC, found C13H19N3O4</Error><Error file="formula.cpp" line="87">not ok 314 # molecular weight incorrect for molecule BIONET_10B-052 urea # Expected 0.000000, found 281.307660 </Error><Error file="formula.cpp" line="93">not ok 315 # exact mass incorrect for molecule BIONET_10B-052 urea # Expected 0.000000, found 281.137556 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 316 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-052 urea</Error><Error file="formula.cpp" line="110">not ok 317 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-052 urea # Expected 0.000000, found 281.307660 </Error><Error file="formula.cpp" line="116">not ok 318 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-052 urea # Expected 0.000000, found 281.137556 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 319 # molecular formula incorrect for molecule BIONET_10B-055 alkyl # Expected Cn1ccc2nc3oc4ccccc4c(=O)c3cc2c1=O, found C16H10N2O3</Error><Error file="formula.cpp" line="87">not ok 320 # molecular weight incorrect for molecule BIONET_10B-055 alkyl # Expected 0.000000, found 278.262200 </Error><Error file="formula.cpp" line="93">not ok 321 # exact mass incorrect for molecule BIONET_10B-055 alkyl # Expected 0.000000, found 278.069142 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 322 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-055 alkyl</Error><Error file="formula.cpp" line="110">not ok 323 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-055 alkyl # Expected 0.000000, found 278.262200 </Error><Error file="formula.cpp" line="116">not ok 324 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-055 alkyl # Expected 0.000000, found 278.069142 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 325 # molecular formula incorrect for molecule BIONET_10B-057 alkyl # Expected O=c1n(Cc2ccccc2)ccc3nc4oc5ccccc5c(=O)c4cc13, found C22H14N2O3</Error><Error file="formula.cpp" line="87">not ok 326 # molecular weight incorrect for molecule BIONET_10B-057 alkyl # Expected 0.000000, found 354.358160 </Error><Error file="formula.cpp" line="93">not ok 327 # exact mass incorrect for molecule BIONET_10B-057 alkyl # Expected 0.000000, found 354.100442 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 328 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-057 alkyl</Error><Error file="formula.cpp" line="110">not ok 329 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-057 alkyl # Expected 0.000000, found 354.358160 </Error><Error file="formula.cpp" line="116">not ok 330 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-057 alkyl # Expected 0.000000, found 354.100442 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 331 # molecular formula incorrect for molecule BIONET_10B-058 nitrile # Expected Cc1onc(c1C#N)c2ccccc2, found C11H8N2O</Error><Error file="formula.cpp" line="87">not ok 332 # molecular weight incorrect for molecule BIONET_10B-058 nitrile # Expected 0.000000, found 184.194020 </Error><Error file="formula.cpp" line="93">not ok 333 # exact mass incorrect for molecule BIONET_10B-058 nitrile # Expected 0.000000, found 184.063663 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 334 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-058 nitrile</Error><Error file="formula.cpp" line="110">not ok 335 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-058 nitrile # Expected 0.000000, found 184.194020 </Error><Error file="formula.cpp" line="116">not ok 336 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-058 nitrile # Expected 0.000000, found 184.063663 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 337 # molecular formula incorrect for molecule BIONET_10B-059 nitro # Expected Cc1noc(/C=C/Nc2cccc(C)c2)c1N(=O)=O, found C13H13N3O3</Error><Error file="formula.cpp" line="87">not ok 338 # molecular weight incorrect for molecule BIONET_10B-059 nitro # Expected 0.000000, found 259.260620 </Error><Error file="formula.cpp" line="93">not ok 339 # exact mass incorrect for molecule BIONET_10B-059 nitro # Expected 0.000000, found 259.095691 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 340 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-059 nitro</Error><Error file="formula.cpp" line="110">not ok 341 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-059 nitro # Expected 0.000000, found 259.260620 </Error><Error file="formula.cpp" line="116">not ok 342 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-059 nitro # Expected 0.000000, found 259.095691 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 343 # molecular formula incorrect for molecule BIONET_10B-060 nitro # Expected COc1cccc(N/C=C/c2onc(C)c2N(=O)=O)c1, found C13H13N3O4</Error><Error file="formula.cpp" line="87">not ok 344 # molecular weight incorrect for molecule BIONET_10B-060 nitro # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="93">not ok 345 # exact mass incorrect for molecule BIONET_10B-060 nitro # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 346 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-060 nitro</Error><Error file="formula.cpp" line="110">not ok 347 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-060 nitro # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="116">not ok 348 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-060 nitro # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 349 # molecular formula incorrect for molecule BIONET_10B-061 urea # Expected CCOC(CNC(=O)NC(=O)c1ccc(OC)nc1)OCC, found C14H21N3O5</Error><Error file="formula.cpp" line="87">not ok 350 # molecular weight incorrect for molecule BIONET_10B-061 urea # Expected 0.000000, found 311.333640 </Error><Error file="formula.cpp" line="93">not ok 351 # exact mass incorrect for molecule BIONET_10B-061 urea # Expected 0.000000, found 311.148121 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 352 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-061 urea</Error><Error file="formula.cpp" line="110">not ok 353 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-061 urea # Expected 0.000000, found 311.333640 </Error><Error file="formula.cpp" line="116">not ok 354 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-061 urea # Expected 0.000000, found 311.148121 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 355 # molecular formula incorrect for molecule BIONET_10B-062 nitro # Expected Cc1noc(/C=C/Nc2ccc(Cl)cc2)c1N(=O)=O, found C12H10ClN3O3</Error><Error file="formula.cpp" line="87">not ok 356 # molecular weight incorrect for molecule BIONET_10B-062 nitro # Expected 0.000000, found 279.679100 </Error><Error file="formula.cpp" line="93">not ok 357 # exact mass incorrect for molecule BIONET_10B-062 nitro # Expected 0.000000, found 279.041069 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 358 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-062 nitro</Error><Error file="formula.cpp" line="110">not ok 359 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-062 nitro # Expected 0.000000, found 279.679100 </Error><Error file="formula.cpp" line="116">not ok 360 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-062 nitro # Expected 0.000000, found 279.041069 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 361 # molecular formula incorrect for molecule BIONET_10B-063 hydroxyl # Expected Cc1noc(/C=C/Nc2ccc(cc2)C(=O)O)c1N(=O)=O, found C13H11N3O5</Error><Error file="formula.cpp" line="87">not ok 362 # molecular weight incorrect for molecule BIONET_10B-063 hydroxyl # Expected 0.000000, found 289.243540 </Error><Error file="formula.cpp" line="93">not ok 363 # exact mass incorrect for molecule BIONET_10B-063 hydroxyl # Expected 0.000000, found 289.069870 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 364 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-063 hydroxyl</Error><Error file="formula.cpp" line="110">not ok 365 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-063 hydroxyl # Expected 0.000000, found 289.243540 </Error><Error file="formula.cpp" line="116">not ok 366 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-063 hydroxyl # Expected 0.000000, found 289.069870 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 367 # molecular formula incorrect for molecule BIONET_10B-064 aniline # Expected Cc1noc(/C=C/Nc2ccc(F)cc2F)c1N(=O)=O, found C12H9F2N3O3</Error><Error file="formula.cpp" line="87">not ok 368 # molecular weight incorrect for molecule BIONET_10B-064 aniline # Expected 0.000000, found 281.214966 </Error><Error file="formula.cpp" line="93">not ok 369 # exact mass incorrect for molecule BIONET_10B-064 aniline # Expected 0.000000, found 281.061198 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 370 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-064 aniline</Error><Error file="formula.cpp" line="110">not ok 371 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-064 aniline # Expected 0.000000, found 281.214966 </Error><Error file="formula.cpp" line="116">not ok 372 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-064 aniline # Expected 0.000000, found 281.061198 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 373 # molecular formula incorrect for molecule BIONET_10B-065 urea # Expected CCOC(CNC(=O)NC(=O)c1cnccn1)OCC, found C12H18N4O4</Error><Error file="formula.cpp" line="87">not ok 374 # molecular weight incorrect for molecule BIONET_10B-065 urea # Expected 0.000000, found 282.295720 </Error><Error file="formula.cpp" line="93">not ok 375 # exact mass incorrect for molecule BIONET_10B-065 urea # Expected 0.000000, found 282.132805 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 376 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-065 urea</Error><Error file="formula.cpp" line="110">not ok 377 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-065 urea # Expected 0.000000, found 282.295720 </Error><Error file="formula.cpp" line="116">not ok 378 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-065 urea # Expected 0.000000, found 282.132805 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 379 # molecular formula incorrect for molecule BIONET_10B-066 ester # Expected COC(=O)c1sccc1N/C=C/c2onc(C)c2N(=O)=O, found C12H11N3O5S</Error><Error file="formula.cpp" line="87">not ok 380 # molecular weight incorrect for molecule BIONET_10B-066 ester # Expected 0.000000, found 309.297840 </Error><Error file="formula.cpp" line="93">not ok 381 # exact mass incorrect for molecule BIONET_10B-066 ester # Expected 0.000000, found 309.041941 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 382 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-066 ester</Error><Error file="formula.cpp" line="110">not ok 383 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-066 ester # Expected 0.000000, found 309.297840 </Error><Error file="formula.cpp" line="116">not ok 384 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-066 ester # Expected 0.000000, found 309.041941 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 385 # molecular formula incorrect for molecule BIONET_10B-067 sulfide # Expected COC(Cc1nnc(SCc2ccccc2)n1c3ccccc3)OC, found C19H21N3O2S</Error><Error file="formula.cpp" line="87">not ok 386 # molecular weight incorrect for molecule BIONET_10B-067 sulfide # Expected 0.000000, found 355.453940 </Error><Error file="formula.cpp" line="93">not ok 387 # exact mass incorrect for molecule BIONET_10B-067 sulfide # Expected 0.000000, found 355.135448 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 388 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-067 sulfide</Error><Error file="formula.cpp" line="110">not ok 389 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-067 sulfide # Expected 0.000000, found 355.453940 </Error><Error file="formula.cpp" line="116">not ok 390 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-067 sulfide # Expected 0.000000, found 355.135448 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 391 # molecular formula incorrect for molecule BIONET_10B-068 ester # Expected COC(=O)c1cccc(N(=O)=O)c1C, found C9H9NO4</Error><Error file="formula.cpp" line="87">not ok 392 # molecular weight incorrect for molecule BIONET_10B-068 ester # Expected 0.000000, found 195.172060 </Error><Error file="formula.cpp" line="93">not ok 393 # exact mass incorrect for molecule BIONET_10B-068 ester # Expected 0.000000, found 195.053158 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 394 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-068 ester</Error><Error file="formula.cpp" line="110">not ok 395 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-068 ester # Expected 0.000000, found 195.172060 </Error><Error file="formula.cpp" line="116">not ok 396 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-068 ester # Expected 0.000000, found 195.053158 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 397 # molecular formula incorrect for molecule BIONET_10B-069 alkyl # Expected CCOC(CNC(=O)NC(=O)c1cccnc1OC)OCC, found C14H21N3O5</Error><Error file="formula.cpp" line="87">not ok 398 # molecular weight incorrect for molecule BIONET_10B-069 alkyl # Expected 0.000000, found 311.333640 </Error><Error file="formula.cpp" line="93">not ok 399 # exact mass incorrect for molecule BIONET_10B-069 alkyl # Expected 0.000000, found 311.148121 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 400 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-069 alkyl</Error><Error file="formula.cpp" line="110">not ok 401 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-069 alkyl # Expected 0.000000, found 311.333640 </Error><Error file="formula.cpp" line="116">not ok 402 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-069 alkyl # Expected 0.000000, found 311.148121 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 403 # molecular formula incorrect for molecule BIONET_10B-070 thiocarbonyl # Expected CNC(=S)NNC(=O)CC(OC)OC, found C7H15N3O3S</Error><Error file="formula.cpp" line="87">not ok 404 # molecular weight incorrect for molecule BIONET_10B-070 thiocarbonyl # Expected 0.000000, found 221.277300 </Error><Error file="formula.cpp" line="93">not ok 405 # exact mass incorrect for molecule BIONET_10B-070 thiocarbonyl # Expected 0.000000, found 221.083412 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 406 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-070 thiocarbonyl</Error><Error file="formula.cpp" line="110">not ok 407 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-070 thiocarbonyl # Expected 0.000000, found 221.277300 </Error><Error file="formula.cpp" line="116">not ok 408 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-070 thiocarbonyl # Expected 0.000000, found 221.083412 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 409 # molecular formula incorrect for molecule BIONET_10B-073 base # Expected Cc1onc(c1NC(=O)Nc2c(C)onc2c3ccccc3)c4ccccc4, found C21H18N4O3</Error><Error file="formula.cpp" line="87">not ok 410 # molecular weight incorrect for molecule BIONET_10B-073 base # Expected 0.000000, found 374.392620 </Error><Error file="formula.cpp" line="93">not ok 411 # exact mass incorrect for molecule BIONET_10B-073 base # Expected 0.000000, found 374.137890 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 412 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-073 base</Error><Error file="formula.cpp" line="110">not ok 413 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-073 base # Expected 0.000000, found 374.392620 </Error><Error file="formula.cpp" line="116">not ok 414 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-073 base # Expected 0.000000, found 374.137890 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 415 # molecular formula incorrect for molecule BIONET_10B-074 base # Expected CN(C(=O)Nc1ccc(Cl)cc1)c2c3CCCCc3nn2C, found C16H19ClN4O</Error><Error file="formula.cpp" line="87">not ok 416 # molecular weight incorrect for molecule BIONET_10B-074 base # Expected 0.000000, found 318.801260 </Error><Error file="formula.cpp" line="93">not ok 417 # exact mass incorrect for molecule BIONET_10B-074 base # Expected 0.000000, found 318.124739 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 418 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-074 base</Error><Error file="formula.cpp" line="110">not ok 419 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-074 base # Expected 0.000000, found 318.801260 </Error><Error file="formula.cpp" line="116">not ok 420 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-074 base # Expected 0.000000, found 318.124739 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 421 # molecular formula incorrect for molecule BIONET_10B-075 sulfonamide # Expected CN(c1c2CCCCc2nn1C)S(=O)(=O)c3ccccc3, found C15H19N3O2S</Error><Error file="formula.cpp" line="87">not ok 422 # molecular weight incorrect for molecule BIONET_10B-075 sulfonamide # Expected 0.000000, found 305.395260 </Error><Error file="formula.cpp" line="93">not ok 423 # exact mass incorrect for molecule BIONET_10B-075 sulfonamide # Expected 0.000000, found 305.119798 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 424 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-075 sulfonamide</Error><Error file="formula.cpp" line="110">not ok 425 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-075 sulfonamide # Expected 0.000000, found 305.395260 </Error><Error file="formula.cpp" line="116">not ok 426 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-075 sulfonamide # Expected 0.000000, found 305.119798 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 427 # molecular formula incorrect for molecule BIONET_10B-079 tertiary_amine # Expected COCC/1=NNC(=O)\C1=C/N(C)C, found C8H13N3O2</Error><Error file="formula.cpp" line="87">not ok 428 # molecular weight incorrect for molecule BIONET_10B-079 tertiary_amine # Expected 0.000000, found 183.207720 </Error><Error file="formula.cpp" line="93">not ok 429 # exact mass incorrect for molecule BIONET_10B-079 tertiary_amine # Expected 0.000000, found 183.100777 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 430 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-079 tertiary_amine</Error><Error file="formula.cpp" line="110">not ok 431 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-079 tertiary_amine # Expected 0.000000, found 183.207720 </Error><Error file="formula.cpp" line="116">not ok 432 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-079 tertiary_amine # Expected 0.000000, found 183.100777 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 433 # molecular formula incorrect for molecule BIONET_10B-083 base # Expected Clc1ccc(NC(=O)c2cnc(Cl)c3ccccc23)cc1, found C16H10Cl2N2O</Error><Error file="formula.cpp" line="87">not ok 434 # molecular weight incorrect for molecule BIONET_10B-083 base # Expected 0.000000, found 317.169400 </Error><Error file="formula.cpp" line="93">not ok 435 # exact mass incorrect for molecule BIONET_10B-083 base # Expected 0.000000, found 316.017018 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 436 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-083 base</Error><Error file="formula.cpp" line="110">not ok 437 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-083 base # Expected 0.000000, found 317.169400 </Error><Error file="formula.cpp" line="116">not ok 438 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-083 base # Expected 0.000000, found 316.017018 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 439 # molecular formula incorrect for molecule BIONET_10B-086 sulfonamide # Expected CN(c1c2CCCCc2nn1C)S(=O)(=O)C, found C10H17N3O2S</Error><Error file="formula.cpp" line="87">not ok 440 # molecular weight incorrect for molecule BIONET_10B-086 sulfonamide # Expected 0.000000, found 243.325880 </Error><Error file="formula.cpp" line="93">not ok 441 # exact mass incorrect for molecule BIONET_10B-086 sulfonamide # Expected 0.000000, found 243.104148 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 442 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-086 sulfonamide</Error><Error file="formula.cpp" line="110">not ok 443 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-086 sulfonamide # Expected 0.000000, found 243.325880 </Error><Error file="formula.cpp" line="116">not ok 444 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-086 sulfonamide # Expected 0.000000, found 243.104148 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 445 # molecular formula incorrect for molecule BIONET_10B-088 charge # Expected CN(C(=O)c1cnc(Cl)c2ccccc12)c3ccc(Cl)cc3, found C17H12Cl2N2O</Error><Error file="formula.cpp" line="87">not ok 446 # molecular weight incorrect for molecule BIONET_10B-088 charge # Expected 0.000000, found 331.195980 </Error><Error file="formula.cpp" line="93">not ok 447 # exact mass incorrect for molecule BIONET_10B-088 charge # Expected 0.000000, found 330.032668 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 448 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-088 charge</Error><Error file="formula.cpp" line="110">not ok 449 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-088 charge # Expected 0.000000, found 331.195980 </Error><Error file="formula.cpp" line="116">not ok 450 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-088 charge # Expected 0.000000, found 330.032668 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 451 # molecular formula incorrect for molecule BIONET_10B-089 charge # Expected CN(C)C(=O)c1cnc(Cl)c2ccccc12, found C12H11ClN2O</Error><Error file="formula.cpp" line="87">not ok 452 # molecular weight incorrect for molecule BIONET_10B-089 charge # Expected 0.000000, found 234.681540 </Error><Error file="formula.cpp" line="93">not ok 453 # exact mass incorrect for molecule BIONET_10B-089 charge # Expected 0.000000, found 234.055991 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 454 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-089 charge</Error><Error file="formula.cpp" line="110">not ok 455 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-089 charge # Expected 0.000000, found 234.681540 </Error><Error file="formula.cpp" line="116">not ok 456 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-089 charge # Expected 0.000000, found 234.055991 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 457 # molecular formula incorrect for molecule BIONET_10B-090 hydrazone # Expected COCC/1=NNC(=O)\C1=C/Nc2ccccc2, found C12H13N3O2</Error><Error file="formula.cpp" line="87">not ok 458 # molecular weight incorrect for molecule BIONET_10B-090 hydrazone # Expected 0.000000, found 231.250520 </Error><Error file="formula.cpp" line="93">not ok 459 # exact mass incorrect for molecule BIONET_10B-090 hydrazone # Expected 0.000000, found 231.100777 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 460 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-090 hydrazone</Error><Error file="formula.cpp" line="110">not ok 461 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-090 hydrazone # Expected 0.000000, found 231.250520 </Error><Error file="formula.cpp" line="116">not ok 462 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-090 hydrazone # Expected 0.000000, found 231.100777 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 463 # molecular formula incorrect for molecule BIONET_10B-091 hydrazone # Expected COCC/1=NNC(=O)\C1=C/Nc2ccc(Cl)cc2, found C12H12ClN3O2</Error><Error file="formula.cpp" line="87">not ok 464 # molecular weight incorrect for molecule BIONET_10B-091 hydrazone # Expected 0.000000, found 265.695580 </Error><Error file="formula.cpp" line="93">not ok 465 # exact mass incorrect for molecule BIONET_10B-091 hydrazone # Expected 0.000000, found 265.061804 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 466 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-091 hydrazone</Error><Error file="formula.cpp" line="110">not ok 467 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-091 hydrazone # Expected 0.000000, found 265.695580 </Error><Error file="formula.cpp" line="116">not ok 468 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-091 hydrazone # Expected 0.000000, found 265.061804 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 469 # molecular formula incorrect for molecule BIONET_10B-092 aniline # Expected COCC/1=NNC(=O)\C1=C/Nc2cc(Cl)cc(Cl)c2, found C12H11Cl2N3O2</Error><Error file="formula.cpp" line="87">not ok 470 # molecular weight incorrect for molecule BIONET_10B-092 aniline # Expected 0.000000, found 300.140640 </Error><Error file="formula.cpp" line="93">not ok 471 # exact mass incorrect for molecule BIONET_10B-092 aniline # Expected 0.000000, found 299.022832 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 472 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-092 aniline</Error><Error file="formula.cpp" line="110">not ok 473 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-092 aniline # Expected 0.000000, found 300.140640 </Error><Error file="formula.cpp" line="116">not ok 474 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-092 aniline # Expected 0.000000, found 299.022832 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 475 # molecular formula incorrect for molecule BIONET_10B-093 aniline # Expected COCC/1=NNC(=O)\C1=C/Nc2ccc(F)cc2F, found C12H11F2N3O2</Error><Error file="formula.cpp" line="87">not ok 476 # molecular weight incorrect for molecule BIONET_10B-093 aniline # Expected 0.000000, found 267.231446 </Error><Error file="formula.cpp" line="93">not ok 477 # exact mass incorrect for molecule BIONET_10B-093 aniline # Expected 0.000000, found 267.081933 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 478 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-093 aniline</Error><Error file="formula.cpp" line="110">not ok 479 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-093 aniline # Expected 0.000000, found 267.231446 </Error><Error file="formula.cpp" line="116">not ok 480 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-093 aniline # Expected 0.000000, found 267.081933 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 481 # molecular formula incorrect for molecule BIONET_10B-095 phenol # Expected Cc1noc(/C=C/Nc2cc(Cl)ccc2O)c1N(=O)=O, found C12H10ClN3O4</Error><Error file="formula.cpp" line="87">not ok 482 # molecular weight incorrect for molecule BIONET_10B-095 phenol # Expected 0.000000, found 295.678500 </Error><Error file="formula.cpp" line="93">not ok 483 # exact mass incorrect for molecule BIONET_10B-095 phenol # Expected 0.000000, found 295.035983 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 484 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-095 phenol</Error><Error file="formula.cpp" line="110">not ok 485 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-095 phenol # Expected 0.000000, found 295.678500 </Error><Error file="formula.cpp" line="116">not ok 486 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-095 phenol # Expected 0.000000, found 295.035983 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 487 # molecular formula incorrect for molecule BIONET_10B-096 alkene # Expected Cc1noc(/C=C/Nc2cc(Cl)cc(Cl)c2)c1N(=O)=O, found C12H9Cl2N3O3</Error><Error file="formula.cpp" line="87">not ok 488 # molecular weight incorrect for molecule BIONET_10B-096 alkene # Expected 0.000000, found 314.124160 </Error><Error file="formula.cpp" line="93">not ok 489 # exact mass incorrect for molecule BIONET_10B-096 alkene # Expected 0.000000, found 313.002097 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 490 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-096 alkene</Error><Error file="formula.cpp" line="110">not ok 491 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-096 alkene # Expected 0.000000, found 314.124160 </Error><Error file="formula.cpp" line="116">not ok 492 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-096 alkene # Expected 0.000000, found 313.002097 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 493 # molecular formula incorrect for molecule BIONET_10B-097 alkene # Expected Cc1noc(/C=C/Nc2c(C)cccc2C)c1N(=O)=O, found C14H15N3O3</Error><Error file="formula.cpp" line="87">not ok 494 # molecular weight incorrect for molecule BIONET_10B-097 alkene # Expected 0.000000, found 273.287200 </Error><Error file="formula.cpp" line="93">not ok 495 # exact mass incorrect for molecule BIONET_10B-097 alkene # Expected 0.000000, found 273.111341 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 496 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-097 alkene</Error><Error file="formula.cpp" line="110">not ok 497 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-097 alkene # Expected 0.000000, found 273.287200 </Error><Error file="formula.cpp" line="116">not ok 498 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-097 alkene # Expected 0.000000, found 273.111341 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 499 # molecular formula incorrect for molecule BIONET_10B-099 charge # Expected O=N(=O)c1cccc2c(=O)[nH]ccc12, found C9H6N2O3</Error><Error file="formula.cpp" line="87">not ok 500 # molecular weight incorrect for molecule BIONET_10B-099 charge # Expected 0.000000, found 190.155540 </Error><Error file="formula.cpp" line="93">not ok 501 # exact mass incorrect for molecule BIONET_10B-099 charge # Expected 0.000000, found 190.037842 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 502 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-099 charge</Error><Error file="formula.cpp" line="110">not ok 503 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-099 charge # Expected 0.000000, found 190.155540 </Error><Error file="formula.cpp" line="116">not ok 504 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-099 charge # Expected 0.000000, found 190.037842 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 505 # molecular formula incorrect for molecule BIONET_10B-100 lactam # Expected COCC/1=NNC(=O)\C1=C/NCc2cccs2, found C11H13N3O2S</Error><Error file="formula.cpp" line="87">not ok 506 # molecular weight incorrect for molecule BIONET_10B-100 lactam # Expected 0.000000, found 251.304820 </Error><Error file="formula.cpp" line="93">not ok 507 # exact mass incorrect for molecule BIONET_10B-100 lactam # Expected 0.000000, found 251.072848 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 508 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-100 lactam</Error><Error file="formula.cpp" line="110">not ok 509 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-100 lactam # Expected 0.000000, found 251.304820 </Error><Error file="formula.cpp" line="116">not ok 510 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-100 lactam # Expected 0.000000, found 251.072848 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 511 # molecular formula incorrect for molecule BIONET_10B-101 lactam # Expected COCC/1=NNC(=O)\C1=C/NN2CCOCC2, found C10H16N4O3</Error><Error file="formula.cpp" line="87">not ok 512 # molecular weight incorrect for molecule BIONET_10B-101 lactam # Expected 0.000000, found 240.259040 </Error><Error file="formula.cpp" line="93">not ok 513 # exact mass incorrect for molecule BIONET_10B-101 lactam # Expected 0.000000, found 240.122240 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 514 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-101 lactam</Error><Error file="formula.cpp" line="110">not ok 515 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-101 lactam # Expected 0.000000, found 240.259040 </Error><Error file="formula.cpp" line="116">not ok 516 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-101 lactam # Expected 0.000000, found 240.122240 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 517 # molecular formula incorrect for molecule BIONET_10B-104 alkene # Expected Cc1noc(/C=C/Nc2ccc(C)cc2)c1N(=O)=O, found C13H13N3O3</Error><Error file="formula.cpp" line="87">not ok 518 # molecular weight incorrect for molecule BIONET_10B-104 alkene # Expected 0.000000, found 259.260620 </Error><Error file="formula.cpp" line="93">not ok 519 # exact mass incorrect for molecule BIONET_10B-104 alkene # Expected 0.000000, found 259.095691 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 520 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-104 alkene</Error><Error file="formula.cpp" line="110">not ok 521 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-104 alkene # Expected 0.000000, found 259.260620 </Error><Error file="formula.cpp" line="116">not ok 522 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-104 alkene # Expected 0.000000, found 259.095691 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 523 # molecular formula incorrect for molecule BIONET_10B-105 nucleophile # Expected COc1ccccc1N/C=C/c2onc(C)c2N(=O)=O, found C13H13N3O4</Error><Error file="formula.cpp" line="87">not ok 524 # molecular weight incorrect for molecule BIONET_10B-105 nucleophile # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="93">not ok 525 # exact mass incorrect for molecule BIONET_10B-105 nucleophile # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 526 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-105 nucleophile</Error><Error file="formula.cpp" line="110">not ok 527 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-105 nucleophile # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="116">not ok 528 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-105 nucleophile # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 529 # molecular formula incorrect for molecule BIONET_10B-107 tertiary_amine # Expected CN(C)/C=C/c1onc(c1C#N)c2ccccc2, found C14H13N3O</Error><Error file="formula.cpp" line="87">not ok 530 # molecular weight incorrect for molecule BIONET_10B-107 tertiary_amine # Expected 0.000000, found 239.272520 </Error><Error file="formula.cpp" line="93">not ok 531 # exact mass incorrect for molecule BIONET_10B-107 tertiary_amine # Expected 0.000000, found 239.105862 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 532 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-107 tertiary_amine</Error><Error file="formula.cpp" line="110">not ok 533 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-107 tertiary_amine # Expected 0.000000, found 239.272520 </Error><Error file="formula.cpp" line="116">not ok 534 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-107 tertiary_amine # Expected 0.000000, found 239.105862 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 535 # molecular formula incorrect for molecule BIONET_10B-108 lactam # Expected COCC/1=NNC(=O)\C1=C/NCc2ccccn2, found C12H14N4O2</Error><Error file="formula.cpp" line="87">not ok 536 # molecular weight incorrect for molecule BIONET_10B-108 lactam # Expected 0.000000, found 246.265160 </Error><Error file="formula.cpp" line="93">not ok 537 # exact mass incorrect for molecule BIONET_10B-108 lactam # Expected 0.000000, found 246.111676 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 538 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-108 lactam</Error><Error file="formula.cpp" line="110">not ok 539 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-108 lactam # Expected 0.000000, found 246.265160 </Error><Error file="formula.cpp" line="116">not ok 540 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-108 lactam # Expected 0.000000, found 246.111676 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 541 # molecular formula incorrect for molecule BIONET_10B-109 nucleophile # Expected COCC/1=NNC(=O)\C1=C/NCc2ccc(Cl)cc2, found C13H14ClN3O2</Error><Error file="formula.cpp" line="87">not ok 542 # molecular weight incorrect for molecule BIONET_10B-109 nucleophile # Expected 0.000000, found 279.722160 </Error><Error file="formula.cpp" line="93">not ok 543 # exact mass incorrect for molecule BIONET_10B-109 nucleophile # Expected 0.000000, found 279.077454 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 544 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-109 nucleophile</Error><Error file="formula.cpp" line="110">not ok 545 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-109 nucleophile # Expected 0.000000, found 279.722160 </Error><Error file="formula.cpp" line="116">not ok 546 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-109 nucleophile # Expected 0.000000, found 279.077454 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 547 # molecular formula incorrect for molecule BIONET_10B-110 nucleophile # Expected COCC/1=NNC(=O)\C1=C/NCc2cccnc2, found C12H14N4O2</Error><Error file="formula.cpp" line="87">not ok 548 # molecular weight incorrect for molecule BIONET_10B-110 nucleophile # Expected 0.000000, found 246.265160 </Error><Error file="formula.cpp" line="93">not ok 549 # exact mass incorrect for molecule BIONET_10B-110 nucleophile # Expected 0.000000, found 246.111676 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 550 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-110 nucleophile</Error><Error file="formula.cpp" line="110">not ok 551 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-110 nucleophile # Expected 0.000000, found 246.265160 </Error><Error file="formula.cpp" line="116">not ok 552 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-110 nucleophile # Expected 0.000000, found 246.111676 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 553 # molecular formula incorrect for molecule BIONET_10B-111 sulfide # Expected COC(Cc1nnc(SCc2ccccc2)n1C)OC, found C14H19N3O2S</Error><Error file="formula.cpp" line="87">not ok 554 # molecular weight incorrect for molecule BIONET_10B-111 sulfide # Expected 0.000000, found 293.384560 </Error><Error file="formula.cpp" line="93">not ok 555 # exact mass incorrect for molecule BIONET_10B-111 sulfide # Expected 0.000000, found 293.119798 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 556 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-111 sulfide</Error><Error file="formula.cpp" line="110">not ok 557 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-111 sulfide # Expected 0.000000, found 293.384560 </Error><Error file="formula.cpp" line="116">not ok 558 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-111 sulfide # Expected 0.000000, found 293.119798 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 559 # molecular formula incorrect for molecule BIONET_10B-112 tertiary_amine # Expected CN(C)/C=C(/C#N)\c1cccs1, found C9H10N2S</Error><Error file="formula.cpp" line="87">not ok 560 # molecular weight incorrect for molecule BIONET_10B-112 tertiary_amine # Expected 0.000000, found 178.254100 </Error><Error file="formula.cpp" line="93">not ok 561 # exact mass incorrect for molecule BIONET_10B-112 tertiary_amine # Expected 0.000000, found 178.056469 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 562 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-112 tertiary_amine</Error><Error file="formula.cpp" line="110">not ok 563 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-112 tertiary_amine # Expected 0.000000, found 178.254100 </Error><Error file="formula.cpp" line="116">not ok 564 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-112 tertiary_amine # Expected 0.000000, found 178.056469 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 565 # molecular formula incorrect for molecule BIONET_10B-113 nitrile # Expected CN(C)/C=C(/C#N)\c1ccsc1, found C9H10N2S</Error><Error file="formula.cpp" line="87">not ok 566 # molecular weight incorrect for molecule BIONET_10B-113 nitrile # Expected 0.000000, found 178.254100 </Error><Error file="formula.cpp" line="93">not ok 567 # exact mass incorrect for molecule BIONET_10B-113 nitrile # Expected 0.000000, found 178.056469 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 568 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-113 nitrile</Error><Error file="formula.cpp" line="110">not ok 569 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-113 nitrile # Expected 0.000000, found 178.254100 </Error><Error file="formula.cpp" line="116">not ok 570 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-113 nitrile # Expected 0.000000, found 178.056469 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 571 # molecular formula incorrect for molecule BIONET_10B-120 sulfide # Expected CSc1cccc(N/C=C/c2onc(C)c2N(=O)=O)c1, found C13H13N3O3S</Error><Error file="formula.cpp" line="87">not ok 572 # molecular weight incorrect for molecule BIONET_10B-120 sulfide # Expected 0.000000, found 291.325620 </Error><Error file="formula.cpp" line="93">not ok 573 # exact mass incorrect for molecule BIONET_10B-120 sulfide # Expected 0.000000, found 291.067762 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 574 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-120 sulfide</Error><Error file="formula.cpp" line="110">not ok 575 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-120 sulfide # Expected 0.000000, found 291.325620 </Error><Error file="formula.cpp" line="116">not ok 576 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-120 sulfide # Expected 0.000000, found 291.067762 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 577 # molecular formula incorrect for molecule BIONET_10B-121 phenol # Expected Cc1noc(/C=C/Nc2ccc(O)cc2C)c1N(=O)=O, found C13H13N3O4</Error><Error file="formula.cpp" line="87">not ok 578 # molecular weight incorrect for molecule BIONET_10B-121 phenol # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="93">not ok 579 # exact mass incorrect for molecule BIONET_10B-121 phenol # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 580 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-121 phenol</Error><Error file="formula.cpp" line="110">not ok 581 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-121 phenol # Expected 0.000000, found 275.260020 </Error><Error file="formula.cpp" line="116">not ok 582 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-121 phenol # Expected 0.000000, found 275.090606 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 583 # molecular formula incorrect for molecule BIONET_10B-124 imino # Expected N=C(NNC(=O)CC#N)c1cccnc1, found C9H9N5O</Error><Error file="formula.cpp" line="87">not ok 584 # molecular weight incorrect for molecule BIONET_10B-124 imino # Expected 0.000000, found 203.200660 </Error><Error file="formula.cpp" line="93">not ok 585 # exact mass incorrect for molecule BIONET_10B-124 imino # Expected 0.000000, found 203.080710 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 586 # molecular formula incorrect for hydrogen-added molecule BIONET_10B-124 imino</Error><Error file="formula.cpp" line="110">not ok 587 # molecular weight incorrect for hydrogen-added molecule BIONET_10B-124 imino # Expected 0.000000, found 203.200660 </Error><Error file="formula.cpp" line="116">not ok 588 # exact mass  incorrect for hydrogen-added molecule BIONET_10B-124 imino # Expected 0.000000, found 203.080710 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 589 # molecular formula incorrect for molecule BIONET_10C-003 sulfone # Expected CC(C)(C)S(=O)(=O)C(=NNc1ccc(Br)cc1)C#N, found C12H14BrN3O2S</Error><Error file="formula.cpp" line="87">not ok 590 # molecular weight incorrect for molecule BIONET_10C-003 sulfone # Expected 0.000000, found 344.227460 </Error><Error file="formula.cpp" line="93">not ok 591 # exact mass incorrect for molecule BIONET_10C-003 sulfone # Expected 0.000000, found 342.999010 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 592 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-003 sulfone</Error><Error file="formula.cpp" line="110">not ok 593 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-003 sulfone # Expected 0.000000, found 344.227460 </Error><Error file="formula.cpp" line="116">not ok 594 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-003 sulfone # Expected 0.000000, found 342.999010 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 595 # molecular formula incorrect for molecule BIONET_10C-010 sulfone # Expected CC(C)(C)S(=O)(=O)C(=NNc1ccc(C#N)cc1)C#N, found C13H14N4O2S</Error><Error file="formula.cpp" line="87">not ok 596 # molecular weight incorrect for molecule BIONET_10C-010 sulfone # Expected 0.000000, found 290.340860 </Error><Error file="formula.cpp" line="93">not ok 597 # exact mass incorrect for molecule BIONET_10C-010 sulfone # Expected 0.000000, found 290.083747 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 598 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-010 sulfone</Error><Error file="formula.cpp" line="110">not ok 599 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-010 sulfone # Expected 0.000000, found 290.340860 </Error><Error file="formula.cpp" line="116">not ok 600 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-010 sulfone # Expected 0.000000, found 290.083747 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 601 # molecular formula incorrect for molecule BIONET_10C-011 sulfone # Expected CC(C)(C)S(=O)(=O)C(=NNc1ccc(cc1)N(=O)=O)C#N, found C12H14N4O4S</Error><Error file="formula.cpp" line="87">not ok 602 # molecular weight incorrect for molecule BIONET_10C-011 sulfone # Expected 0.000000, found 310.328960 </Error><Error file="formula.cpp" line="93">not ok 603 # exact mass incorrect for molecule BIONET_10C-011 sulfone # Expected 0.000000, found 310.073576 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 604 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-011 sulfone</Error><Error file="formula.cpp" line="110">not ok 605 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-011 sulfone # Expected 0.000000, found 310.328960 </Error><Error file="formula.cpp" line="116">not ok 606 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-011 sulfone # Expected 0.000000, found 310.073576 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 607 # molecular formula incorrect for molecule BIONET_10C-012 nitrile # Expected CC(C)(C)S(=O)(=O)C(=NNc1ccccc1F)C#N, found C12H14FN3O2S</Error><Error file="formula.cpp" line="87">not ok 608 # molecular weight incorrect for molecule BIONET_10C-012 nitrile # Expected 0.000000, found 283.321863 </Error><Error file="formula.cpp" line="93">not ok 609 # exact mass incorrect for molecule BIONET_10C-012 nitrile # Expected 0.000000, found 283.079076 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 610 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-012 nitrile</Error><Error file="formula.cpp" line="110">not ok 611 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-012 nitrile # Expected 0.000000, found 283.321863 </Error><Error file="formula.cpp" line="116">not ok 612 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-012 nitrile # Expected 0.000000, found 283.079076 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 613 # molecular formula incorrect for molecule BIONET_10C-026 sulfonamide # Expected CC(C)(C)S(=O)(=O)C(=NNc1ccc(cc1)S(=O)(=O)N)C#N, found C12H16N4O4S2</Error><Error file="formula.cpp" line="87">not ok 614 # molecular weight incorrect for molecule BIONET_10C-026 sulfonamide # Expected 0.000000, found 344.409840 </Error><Error file="formula.cpp" line="93">not ok 615 # exact mass incorrect for molecule BIONET_10C-026 sulfonamide # Expected 0.000000, found 344.061297 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 616 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-026 sulfonamide</Error><Error file="formula.cpp" line="110">not ok 617 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-026 sulfonamide # Expected 0.000000, found 344.409840 </Error><Error file="formula.cpp" line="116">not ok 618 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-026 sulfonamide # Expected 0.000000, found 344.061297 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 619 # molecular formula incorrect for molecule BIONET_10C-033 alkylating_agent # Expected BrCC(=O)CC(=O)Nc1ccccc1, found C10H10BrNO2</Error><Error file="formula.cpp" line="87">not ok 620 # molecular weight incorrect for molecule BIONET_10C-033 alkylating_agent # Expected 0.000000, found 256.095900 </Error><Error file="formula.cpp" line="93">not ok 621 # exact mass incorrect for molecule BIONET_10C-033 alkylating_agent # Expected 0.000000, found 254.989491 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 622 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-033 alkylating_agent</Error><Error file="formula.cpp" line="110">not ok 623 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-033 alkylating_agent # Expected 0.000000, found 256.095900 </Error><Error file="formula.cpp" line="116">not ok 624 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-033 alkylating_agent # Expected 0.000000, found 254.989491 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 625 # molecular formula incorrect for molecule BIONET_10C-036 ketone # Expected C[N+](C)(CC(=O)c1ccc(Cl)cc1)CC(=O)c2ccc(Cl)cc2, found C18H18Cl2NO2</Error><Error file="formula.cpp" line="87">not ok 626 # molecular weight incorrect for molecule BIONET_10C-036 ketone # Expected 0.000000, found 351.247020 </Error><Error file="formula.cpp" line="93">not ok 627 # exact mass incorrect for molecule BIONET_10C-036 ketone # Expected 0.000000, found 350.071459 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 628 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-036 ketone</Error><Error file="formula.cpp" line="110">not ok 629 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-036 ketone # Expected 0.000000, found 351.247020 </Error><Error file="formula.cpp" line="116">not ok 630 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-036 ketone # Expected 0.000000, found 350.071459 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 631 # molecular formula incorrect for molecule BIONET_10C-047 imino # Expected CSC(=NC#N)N1CCN(CC1)c2ccccc2, found C13H16N4S</Error><Error file="formula.cpp" line="87">not ok 632 # molecular weight incorrect for molecule BIONET_10C-047 imino # Expected 0.000000, found 260.357940 </Error><Error file="formula.cpp" line="93">not ok 633 # exact mass incorrect for molecule BIONET_10C-047 imino # Expected 0.000000, found 260.109568 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 634 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-047 imino</Error><Error file="formula.cpp" line="110">not ok 635 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-047 imino # Expected 0.000000, found 260.357940 </Error><Error file="formula.cpp" line="116">not ok 636 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-047 imino # Expected 0.000000, found 260.109568 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 637 # molecular formula incorrect for molecule BIONET_10C-054 aniline_unsubstituted # Expected Nc1n[nH]c(n1)N2CCN(CC2)c3ccccc3, found C12H16N6</Error><Error file="formula.cpp" line="87">not ok 638 # molecular weight incorrect for molecule BIONET_10C-054 aniline_unsubstituted # Expected 0.000000, found 244.295640 </Error><Error file="formula.cpp" line="93">not ok 639 # exact mass incorrect for molecule BIONET_10C-054 aniline_unsubstituted # Expected 0.000000, found 244.143645 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 640 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-054 aniline_unsubstituted</Error><Error file="formula.cpp" line="110">not ok 641 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-054 aniline_unsubstituted # Expected 0.000000, found 244.295640 </Error><Error file="formula.cpp" line="116">not ok 642 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-054 aniline_unsubstituted # Expected 0.000000, found 244.143645 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 643 # molecular formula incorrect for molecule BIONET_10C-055 aniline_unsubstituted # Expected Nc1n[nH]c(n1)N2CCN(CC2)c3ccc(F)cc3, found C12H15FN6</Error><Error file="formula.cpp" line="87">not ok 644 # molecular weight incorrect for molecule BIONET_10C-055 aniline_unsubstituted # Expected 0.000000, found 262.286103 </Error><Error file="formula.cpp" line="93">not ok 645 # exact mass incorrect for molecule BIONET_10C-055 aniline_unsubstituted # Expected 0.000000, found 262.134223 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 646 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-055 aniline_unsubstituted</Error><Error file="formula.cpp" line="110">not ok 647 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-055 aniline_unsubstituted # Expected 0.000000, found 262.286103 </Error><Error file="formula.cpp" line="116">not ok 648 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-055 aniline_unsubstituted # Expected 0.000000, found 262.134223 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 649 # molecular formula incorrect for molecule BIONET_10C-065 phenol # Expected CN(C)/C=C/C(=O)c1ccccc1O, found C11H13NO2</Error><Error file="formula.cpp" line="87">not ok 650 # molecular weight incorrect for molecule BIONET_10C-065 phenol # Expected 0.000000, found 191.226420 </Error><Error file="formula.cpp" line="93">not ok 651 # exact mass incorrect for molecule BIONET_10C-065 phenol # Expected 0.000000, found 191.094629 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 652 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-065 phenol</Error><Error file="formula.cpp" line="110">not ok 653 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-065 phenol # Expected 0.000000, found 191.226420 </Error><Error file="formula.cpp" line="116">not ok 654 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-065 phenol # Expected 0.000000, found 191.094629 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 655 # molecular formula incorrect for molecule BIONET_10C-066 ketone # Expected CON=CCC(=O)c1ccccc1O, found C10H11NO3</Error><Error file="formula.cpp" line="87">not ok 656 # molecular weight incorrect for molecule BIONET_10C-066 ketone # Expected 0.000000, found 193.199240 </Error><Error file="formula.cpp" line="93">not ok 657 # exact mass incorrect for molecule BIONET_10C-066 ketone # Expected 0.000000, found 193.073893 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 658 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-066 ketone</Error><Error file="formula.cpp" line="110">not ok 659 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-066 ketone # Expected 0.000000, found 193.199240 </Error><Error file="formula.cpp" line="116">not ok 660 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-066 ketone # Expected 0.000000, found 193.073893 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 661 # molecular formula incorrect for molecule BIONET_10C-067 ketone # Expected CN(C)/C=C/C(=O)c1ccc(F)cc1, found C11H12FNO</Error><Error file="formula.cpp" line="87">not ok 662 # molecular weight incorrect for molecule BIONET_10C-067 ketone # Expected 0.000000, found 193.217483 </Error><Error file="formula.cpp" line="93">not ok 663 # exact mass incorrect for molecule BIONET_10C-067 ketone # Expected 0.000000, found 193.090292 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 664 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-067 ketone</Error><Error file="formula.cpp" line="110">not ok 665 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-067 ketone # Expected 0.000000, found 193.217483 </Error><Error file="formula.cpp" line="116">not ok 666 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-067 ketone # Expected 0.000000, found 193.090292 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 667 # molecular formula incorrect for molecule BIONET_10C-077 malonic # Expected CON=CC1C(=O)CCCC1=O, found C8H11NO3</Error><Error file="formula.cpp" line="87">not ok 668 # molecular weight incorrect for molecule BIONET_10C-077 malonic # Expected 0.000000, found 169.177840 </Error><Error file="formula.cpp" line="93">not ok 669 # exact mass incorrect for molecule BIONET_10C-077 malonic # Expected 0.000000, found 169.073893 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 670 # molecular formula incorrect for hydrogen-added molecule BIONET_10C-077 malonic</Error><Error file="formula.cpp" line="110">not ok 671 # molecular weight incorrect for hydrogen-added molecule BIONET_10C-077 malonic # Expected 0.000000, found 169.177840 </Error><Error file="formula.cpp" line="116">not ok 672 # exact mass  incorrect for hydrogen-added molecule BIONET_10C-077 malonic # Expected 0.000000, found 169.073893 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 673 # molecular formula incorrect for molecule BIONET_10D-003 carboxylic_acid # Expected COC(=O)c1sccc1c2ccc(o2)C(=O)O, found C11H8O5S</Error><Error file="formula.cpp" line="87">not ok 674 # molecular weight incorrect for molecule BIONET_10D-003 carboxylic_acid # Expected 0.000000, found 252.243220 </Error><Error file="formula.cpp" line="93">not ok 675 # exact mass incorrect for molecule BIONET_10D-003 carboxylic_acid # Expected 0.000000, found 252.009244 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 676 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-003 carboxylic_acid</Error><Error file="formula.cpp" line="110">not ok 677 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-003 carboxylic_acid # Expected 0.000000, found 252.243220 </Error><Error file="formula.cpp" line="116">not ok 678 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-003 carboxylic_acid # Expected 0.000000, found 252.009244 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 679 # molecular formula incorrect for molecule BIONET_10D-013 imino # Expected C[N+](=CN=C(Nc1ccccc1)SCc2c(Cl)cccc2Cl)C, found C17H18Cl2N3S</Error><Error file="formula.cpp" line="87">not ok 680 # molecular weight incorrect for molecule BIONET_10D-013 imino # Expected 0.000000, found 367.315920 </Error><Error file="formula.cpp" line="93">not ok 681 # exact mass incorrect for molecule BIONET_10D-013 imino # Expected 0.000000, found 366.059849 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 682 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-013 imino</Error><Error file="formula.cpp" line="110">not ok 683 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-013 imino # Expected 0.000000, found 367.315920 </Error><Error file="formula.cpp" line="116">not ok 684 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-013 imino # Expected 0.000000, found 366.059849 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 685 # molecular formula incorrect for molecule BIONET_10D-016 hydrazine # Expected NNc1ccc2c(cc(nc2n1)C(F)(F)F)C(F)(F)F, found C10H6F6N4</Error><Error file="formula.cpp" line="87">not ok 686 # molecular weight incorrect for molecule BIONET_10D-016 hydrazine # Expected 0.000000, found 296.171859 </Error><Error file="formula.cpp" line="93">not ok 687 # exact mass incorrect for molecule BIONET_10D-016 hydrazine # Expected 0.000000, found 296.049666 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 688 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-016 hydrazine</Error><Error file="formula.cpp" line="110">not ok 689 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-016 hydrazine # Expected 0.000000, found 296.171859 </Error><Error file="formula.cpp" line="116">not ok 690 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-016 hydrazine # Expected 0.000000, found 296.049666 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 691 # molecular formula incorrect for molecule BIONET_10D-048 malonic # Expected Clc1ccccc1Nc2ncc(s2)C(=O)CC(=O)Nc3ccccc3, found C18H14ClN3O2S</Error><Error file="formula.cpp" line="87">not ok 692 # molecular weight incorrect for molecule BIONET_10D-048 malonic # Expected 0.000000, found 371.840660 </Error><Error file="formula.cpp" line="93">not ok 693 # exact mass incorrect for molecule BIONET_10D-048 malonic # Expected 0.000000, found 371.049525 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 694 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-048 malonic</Error><Error file="formula.cpp" line="110">not ok 695 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-048 malonic # Expected 0.000000, found 371.840660 </Error><Error file="formula.cpp" line="116">not ok 696 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-048 malonic # Expected 0.000000, found 371.049525 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 697 # molecular formula incorrect for molecule BIONET_10D-050 malonic # Expected CC(=O)CC(=O)Nc1ccc(Cl)cc1Cl, found C10H9Cl2NO2</Error><Error file="formula.cpp" line="87">not ok 698 # molecular weight incorrect for molecule BIONET_10D-050 malonic # Expected 0.000000, found 246.089960 </Error><Error file="formula.cpp" line="93">not ok 699 # exact mass incorrect for molecule BIONET_10D-050 malonic # Expected 0.000000, found 245.001034 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 700 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-050 malonic</Error><Error file="formula.cpp" line="110">not ok 701 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-050 malonic # Expected 0.000000, found 246.089960 </Error><Error file="formula.cpp" line="116">not ok 702 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-050 malonic # Expected 0.000000, found 245.001034 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 703 # molecular formula incorrect for molecule BIONET_10D-060 acid # Expected CNc1ncc(s1)C(=O)CC(=O)Nc2ccccc2, found C13H13N3O2S</Error><Error file="formula.cpp" line="87">not ok 704 # molecular weight incorrect for molecule BIONET_10D-060 acid # Expected 0.000000, found 275.326220 </Error><Error file="formula.cpp" line="93">not ok 705 # exact mass incorrect for molecule BIONET_10D-060 acid # Expected 0.000000, found 275.072848 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 706 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-060 acid</Error><Error file="formula.cpp" line="110">not ok 707 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-060 acid # Expected 0.000000, found 275.326220 </Error><Error file="formula.cpp" line="116">not ok 708 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-060 acid # Expected 0.000000, found 275.072848 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 709 # molecular formula incorrect for molecule BIONET_10D-061 carboxylic_acid # Expected OC(=O)CC(=O)Nc1ccc(Cl)cc1, found C9H8ClNO3</Error><Error file="formula.cpp" line="87">not ok 710 # molecular weight incorrect for molecule BIONET_10D-061 carboxylic_acid # Expected 0.000000, found 213.617720 </Error><Error file="formula.cpp" line="93">not ok 711 # exact mass incorrect for molecule BIONET_10D-061 carboxylic_acid # Expected 0.000000, found 213.019271 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 712 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-061 carboxylic_acid</Error><Error file="formula.cpp" line="110">not ok 713 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-061 carboxylic_acid # Expected 0.000000, found 213.617720 </Error><Error file="formula.cpp" line="116">not ok 714 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-061 carboxylic_acid # Expected 0.000000, found 213.019271 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 715 # molecular formula incorrect for molecule BIONET_10D-066 acid # Expected CC(=O)CC(=O)Nc1ccc(Cl)cc1, found C10H10ClNO2</Error><Error file="formula.cpp" line="87">not ok 716 # molecular weight incorrect for molecule BIONET_10D-066 acid # Expected 0.000000, found 211.644900 </Error><Error file="formula.cpp" line="93">not ok 717 # exact mass incorrect for molecule BIONET_10D-066 acid # Expected 0.000000, found 211.040006 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 718 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-066 acid</Error><Error file="formula.cpp" line="110">not ok 719 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-066 acid # Expected 0.000000, found 211.644900 </Error><Error file="formula.cpp" line="116">not ok 720 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-066 acid # Expected 0.000000, found 211.040006 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 721 # molecular formula incorrect for molecule BIONET_10D-067 acid # Expected CC(=O)CC(=O)Nc1cccc(c1)C(F)(F)F, found C11H10F3NO2</Error><Error file="formula.cpp" line="87">not ok 722 # molecular weight incorrect for molecule BIONET_10D-067 acid # Expected 0.000000, found 245.197810 </Error><Error file="formula.cpp" line="93">not ok 723 # exact mass incorrect for molecule BIONET_10D-067 acid # Expected 0.000000, found 245.066363 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 724 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-067 acid</Error><Error file="formula.cpp" line="110">not ok 725 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-067 acid # Expected 0.000000, found 245.197810 </Error><Error file="formula.cpp" line="116">not ok 726 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-067 acid # Expected 0.000000, found 245.066363 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 727 # molecular formula incorrect for molecule BIONET_10D-075 carbamate # Expected COC(=O)c1sccc1c2ccc(COC(=O)Nc3ccc(Cl)cc3)o2, found C18H14ClNO5S</Error><Error file="formula.cpp" line="87">not ok 728 # molecular weight incorrect for molecule BIONET_10D-075 carbamate # Expected 0.000000, found 391.825460 </Error><Error file="formula.cpp" line="93">not ok 729 # exact mass incorrect for molecule BIONET_10D-075 carbamate # Expected 0.000000, found 391.028121 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 730 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-075 carbamate</Error><Error file="formula.cpp" line="110">not ok 731 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-075 carbamate # Expected 0.000000, found 391.825460 </Error><Error file="formula.cpp" line="116">not ok 732 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-075 carbamate # Expected 0.000000, found 391.028121 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 733 # molecular formula incorrect for molecule BIONET_10D-084 aryl_mono_BrI # Expected Clc1ccc(Cc2ccc(SCc3ccc(Br)cc3)nn2)c(Cl)c1, found C18H13BrCl2N2S</Error><Error file="formula.cpp" line="87">not ok 734 # molecular weight incorrect for molecule BIONET_10D-084 aryl_mono_BrI # Expected 0.000000, found 440.184220 </Error><Error file="formula.cpp" line="93">not ok 735 # exact mass incorrect for molecule BIONET_10D-084 aryl_mono_BrI # Expected 0.000000, found 437.935987 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 736 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-084 aryl_mono_BrI</Error><Error file="formula.cpp" line="110">not ok 737 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-084 aryl_mono_BrI # Expected 0.000000, found 440.184220 </Error><Error file="formula.cpp" line="116">not ok 738 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-084 aryl_mono_BrI # Expected 0.000000, found 437.935987 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 739 # molecular formula incorrect for molecule BIONET_10D-086 oxime # Expected ON=CCC(=O)Nc1ccc(Cl)cc1, found C9H9ClN2O2</Error><Error file="formula.cpp" line="87">not ok 740 # molecular weight incorrect for molecule BIONET_10D-086 oxime # Expected 0.000000, found 212.632960 </Error><Error file="formula.cpp" line="93">not ok 741 # exact mass incorrect for molecule BIONET_10D-086 oxime # Expected 0.000000, found 212.035255 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 742 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-086 oxime</Error><Error file="formula.cpp" line="110">not ok 743 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-086 oxime # Expected 0.000000, found 212.632960 </Error><Error file="formula.cpp" line="116">not ok 744 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-086 oxime # Expected 0.000000, found 212.035255 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 745 # molecular formula incorrect for molecule BIONET_10D-090 carboxylic_acid # Expected OC(=O)CC(=O)Nc1ccc(OC(F)(F)F)cc1, found C10H8F3NO4</Error><Error file="formula.cpp" line="87">not ok 746 # molecular weight incorrect for molecule BIONET_10D-090 carboxylic_acid # Expected 0.000000, found 263.170030 </Error><Error file="formula.cpp" line="93">not ok 747 # exact mass incorrect for molecule BIONET_10D-090 carboxylic_acid # Expected 0.000000, found 263.040542 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 748 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-090 carboxylic_acid</Error><Error file="formula.cpp" line="110">not ok 749 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-090 carboxylic_acid # Expected 0.000000, found 263.170030 </Error><Error file="formula.cpp" line="116">not ok 750 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-090 carboxylic_acid # Expected 0.000000, found 263.040542 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 751 # molecular formula incorrect for molecule BIONET_10D-095 oxime # Expected ON=CCC(=O)Nc1ccc(Oc2ccccc2)cc1, found C15H14N2O3</Error><Error file="formula.cpp" line="87">not ok 752 # molecular weight incorrect for molecule BIONET_10D-095 oxime # Expected 0.000000, found 270.283260 </Error><Error file="formula.cpp" line="93">not ok 753 # exact mass incorrect for molecule BIONET_10D-095 oxime # Expected 0.000000, found 270.100442 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 754 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-095 oxime</Error><Error file="formula.cpp" line="110">not ok 755 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-095 oxime # Expected 0.000000, found 270.283260 </Error><Error file="formula.cpp" line="116">not ok 756 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-095 oxime # Expected 0.000000, found 270.100442 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 757 # molecular formula incorrect for molecule BIONET_10D-500 lactone # Expected CC1(C)OC(=O)C(=C2C3CC4CC(C3)CC2C4)C(=O)O1, found C16H20O4</Error><Error file="formula.cpp" line="87">not ok 758 # molecular weight incorrect for molecule BIONET_10D-500 lactone # Expected 0.000000, found 276.327600 </Error><Error file="formula.cpp" line="93">not ok 759 # exact mass incorrect for molecule BIONET_10D-500 lactone # Expected 0.000000, found 276.136159 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 760 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-500 lactone</Error><Error file="formula.cpp" line="110">not ok 761 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-500 lactone # Expected 0.000000, found 276.327600 </Error><Error file="formula.cpp" line="116">not ok 762 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-500 lactone # Expected 0.000000, found 276.136159 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 763 # molecular formula incorrect for molecule BIONET_10D-504 disulfide # Expected NC(=O)CCSSCCC(=O)N, found C6H12N2O2S2</Error><Error file="formula.cpp" line="87">not ok 764 # molecular weight incorrect for molecule BIONET_10D-504 disulfide # Expected 0.000000, found 208.301680 </Error><Error file="formula.cpp" line="93">not ok 765 # exact mass incorrect for molecule BIONET_10D-504 disulfide # Expected 0.000000, found 208.034020 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 766 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-504 disulfide</Error><Error file="formula.cpp" line="110">not ok 767 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-504 disulfide # Expected 0.000000, found 208.301680 </Error><Error file="formula.cpp" line="116">not ok 768 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-504 disulfide # Expected 0.000000, found 208.034020 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 769 # molecular formula incorrect for molecule BIONET_10D-505 lactone # Expected CC1(C)OC(=O)C(C(=O)O1)C2(C3CC4CC(C3)CC2C4)c5ccccc5, found C22H26O4</Error><Error file="formula.cpp" line="87">not ok 770 # molecular weight incorrect for molecule BIONET_10D-505 lactone # Expected 0.000000, found 354.439440 </Error><Error file="formula.cpp" line="93">not ok 771 # exact mass incorrect for molecule BIONET_10D-505 lactone # Expected 0.000000, found 354.183109 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 772 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-505 lactone</Error><Error file="formula.cpp" line="110">not ok 773 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-505 lactone # Expected 0.000000, found 354.439440 </Error><Error file="formula.cpp" line="116">not ok 774 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-505 lactone # Expected 0.000000, found 354.183109 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 775 # molecular formula incorrect for molecule BIONET_10D-506 alcohol # Expected OCC1CC2CCCCN2O1, found C8H15NO2</Error><Error file="formula.cpp" line="87">not ok 776 # molecular weight incorrect for molecule BIONET_10D-506 alcohol # Expected 0.000000, found 157.210200 </Error><Error file="formula.cpp" line="93">not ok 777 # exact mass incorrect for molecule BIONET_10D-506 alcohol # Expected 0.000000, found 157.110279 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 778 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-506 alcohol</Error><Error file="formula.cpp" line="110">not ok 779 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-506 alcohol # Expected 0.000000, found 157.210200 </Error><Error file="formula.cpp" line="116">not ok 780 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-506 alcohol # Expected 0.000000, found 157.110279 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 781 # molecular formula incorrect for molecule BIONET_10D-509 alcohol # Expected OC1(C2CC3CC(C2)CC1C3)c4ccccc4NC=O, found C17H21NO2</Error><Error file="formula.cpp" line="87">not ok 782 # molecular weight incorrect for molecule BIONET_10D-509 alcohol # Expected 0.000000, found 271.354140 </Error><Error file="formula.cpp" line="93">not ok 783 # exact mass incorrect for molecule BIONET_10D-509 alcohol # Expected 0.000000, found 271.157229 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 784 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-509 alcohol</Error><Error file="formula.cpp" line="110">not ok 785 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-509 alcohol # Expected 0.000000, found 271.354140 </Error><Error file="formula.cpp" line="116">not ok 786 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-509 alcohol # Expected 0.000000, found 271.157229 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 787 # molecular formula incorrect for molecule BIONET_10D-526 disulfide # Expected CNC(=O)CCSSCCC(=O)NC, found C8H16N2O2S2</Error><Error file="formula.cpp" line="87">not ok 788 # molecular weight incorrect for molecule BIONET_10D-526 disulfide # Expected 0.000000, found 236.354840 </Error><Error file="formula.cpp" line="93">not ok 789 # exact mass incorrect for molecule BIONET_10D-526 disulfide # Expected 0.000000, found 236.065320 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 790 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-526 disulfide</Error><Error file="formula.cpp" line="110">not ok 791 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-526 disulfide # Expected 0.000000, found 236.354840 </Error><Error file="formula.cpp" line="116">not ok 792 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-526 disulfide # Expected 0.000000, found 236.065320 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 793 # molecular formula incorrect for molecule BIONET_10D-527 disulfide # Expected O=C(CCSSCCC(=O)NCc1ccccc1)NCc2ccccc2, found C20H24N2O2S2</Error><Error file="formula.cpp" line="87">not ok 794 # molecular weight incorrect for molecule BIONET_10D-527 disulfide # Expected 0.000000, found 388.546760 </Error><Error file="formula.cpp" line="93">not ok 795 # exact mass incorrect for molecule BIONET_10D-527 disulfide # Expected 0.000000, found 388.127920 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 796 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-527 disulfide</Error><Error file="formula.cpp" line="110">not ok 797 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-527 disulfide # Expected 0.000000, found 388.546760 </Error><Error file="formula.cpp" line="116">not ok 798 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-527 disulfide # Expected 0.000000, found 388.127920 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 799 # molecular formula incorrect for molecule BIONET_10D-587 alcohol # Expected OC1(C2CC3CC(C2)CC1C3)c4ccccc4NC(=O)C5CC5, found C20H25NO2</Error><Error file="formula.cpp" line="87">not ok 800 # molecular weight incorrect for molecule BIONET_10D-587 alcohol # Expected 0.000000, found 311.418000 </Error><Error file="formula.cpp" line="93">not ok 801 # exact mass incorrect for molecule BIONET_10D-587 alcohol # Expected 0.000000, found 311.188529 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 802 # molecular formula incorrect for hydrogen-added molecule BIONET_10D-587 alcohol</Error><Error file="formula.cpp" line="110">not ok 803 # molecular weight incorrect for hydrogen-added molecule BIONET_10D-587 alcohol # Expected 0.000000, found 311.418000 </Error><Error file="formula.cpp" line="116">not ok 804 # exact mass  incorrect for hydrogen-added molecule BIONET_10D-587 alcohol # Expected 0.000000, found 311.188529 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 805 # molecular formula incorrect for molecule BIONET_10E-007 oxime # Expected CC1(C)CC(=NO)CC2(CC=NO2)C1, found C10H16N2O2</Error><Error file="formula.cpp" line="87">not ok 806 # molecular weight incorrect for molecule BIONET_10E-007 oxime # Expected 0.000000, found 196.246240 </Error><Error file="formula.cpp" line="93">not ok 807 # exact mass incorrect for molecule BIONET_10E-007 oxime # Expected 0.000000, found 196.121178 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 808 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-007 oxime</Error><Error file="formula.cpp" line="110">not ok 809 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-007 oxime # Expected 0.000000, found 196.246240 </Error><Error file="formula.cpp" line="116">not ok 810 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-007 oxime # Expected 0.000000, found 196.121178 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 811 # molecular formula incorrect for molecule BIONET_10E-044 primary_amine # Expected CN(C)/C=C(\C#N)/C(=C(C#N)C#N)N, found C9H9N5</Error><Error file="formula.cpp" line="87">not ok 812 # molecular weight incorrect for molecule BIONET_10E-044 primary_amine # Expected 0.000000, found 187.201260 </Error><Error file="formula.cpp" line="93">not ok 813 # exact mass incorrect for molecule BIONET_10E-044 primary_amine # Expected 0.000000, found 187.085795 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 814 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-044 primary_amine</Error><Error file="formula.cpp" line="110">not ok 815 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-044 primary_amine # Expected 0.000000, found 187.201260 </Error><Error file="formula.cpp" line="116">not ok 816 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-044 primary_amine # Expected 0.000000, found 187.085795 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 817 # molecular formula incorrect for molecule BIONET_10E-061 lactone # Expected FC(F)(F)c1cnc(Oc2cccc(N/C=C/3\OC(=O)c4ccccc34)c2)c(Cl)c1, found C21H12ClF3N2O3</Error><Error file="formula.cpp" line="87">not ok 818 # molecular weight incorrect for molecule BIONET_10E-061 lactone # Expected 0.000000, found 432.779790 </Error><Error file="formula.cpp" line="93">not ok 819 # exact mass incorrect for molecule BIONET_10E-061 lactone # Expected 0.000000, found 432.048855 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 820 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-061 lactone</Error><Error file="formula.cpp" line="110">not ok 821 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-061 lactone # Expected 0.000000, found 432.779790 </Error><Error file="formula.cpp" line="116">not ok 822 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-061 lactone # Expected 0.000000, found 432.048855 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 823 # molecular formula incorrect for molecule BIONET_10E-344S hydrazine # Expected NNC(=O)c1cccn(Cc2ccc(Cl)c(Cl)c2)c1=O, found C13H11Cl2N3O2</Error><Error file="formula.cpp" line="87">not ok 824 # molecular weight incorrect for molecule BIONET_10E-344S hydrazine # Expected 0.000000, found 312.151340 </Error><Error file="formula.cpp" line="93">not ok 825 # exact mass incorrect for molecule BIONET_10E-344S hydrazine # Expected 0.000000, found 311.022832 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 826 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-344S hydrazine</Error><Error file="formula.cpp" line="110">not ok 827 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-344S hydrazine # Expected 0.000000, found 312.151340 </Error><Error file="formula.cpp" line="116">not ok 828 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-344S hydrazine # Expected 0.000000, found 311.022832 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 829 # molecular formula incorrect for molecule BIONET_10E-347S thiocarbonyl # Expected CNC(=S)NNC(=O)c1cccn(Cc2cccc(c2)C(F)(F)F)c1=O, found C16H15F3N4O2S</Error><Error file="formula.cpp" line="87">not ok 830 # molecular weight incorrect for molecule BIONET_10E-347S thiocarbonyl # Expected 0.000000, found 384.376110 </Error><Error file="formula.cpp" line="93">not ok 831 # exact mass incorrect for molecule BIONET_10E-347S thiocarbonyl # Expected 0.000000, found 384.086781 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 832 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-347S thiocarbonyl</Error><Error file="formula.cpp" line="110">not ok 833 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-347S thiocarbonyl # Expected 0.000000, found 384.376110 </Error><Error file="formula.cpp" line="116">not ok 834 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-347S thiocarbonyl # Expected 0.000000, found 384.086781 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 835 # molecular formula incorrect for molecule BIONET_10E-348S thiocarbonyl # Expected CNC(=S)NNC(=O)c1cccn(Cc2ccc(Cl)c(Cl)c2)c1=O, found C15H14Cl2N4O2S</Error><Error file="formula.cpp" line="87">not ok 836 # molecular weight incorrect for molecule BIONET_10E-348S thiocarbonyl # Expected 0.000000, found 385.268260 </Error><Error file="formula.cpp" line="93">not ok 837 # exact mass incorrect for molecule BIONET_10E-348S thiocarbonyl # Expected 0.000000, found 384.021452 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 838 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-348S thiocarbonyl</Error><Error file="formula.cpp" line="110">not ok 839 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-348S thiocarbonyl # Expected 0.000000, found 385.268260 </Error><Error file="formula.cpp" line="116">not ok 840 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-348S thiocarbonyl # Expected 0.000000, found 384.021452 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 841 # molecular formula incorrect for molecule BIONET_10E-355S thiourea # Expected FC(F)(F)c1cccc(Cn2cccc(C(=O)NNC(=S)Nc3ccccc3)c2=O)c1, found C21H17F3N4O2S</Error><Error file="formula.cpp" line="87">not ok 842 # molecular weight incorrect for molecule BIONET_10E-355S thiourea # Expected 0.000000, found 446.445490 </Error><Error file="formula.cpp" line="93">not ok 843 # exact mass incorrect for molecule BIONET_10E-355S thiourea # Expected 0.000000, found 446.102431 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 844 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-355S thiourea</Error><Error file="formula.cpp" line="110">not ok 845 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-355S thiourea # Expected 0.000000, found 446.445490 </Error><Error file="formula.cpp" line="116">not ok 846 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-355S thiourea # Expected 0.000000, found 446.102431 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 847 # molecular formula incorrect for molecule BIONET_10E-357S thiourea # Expected CNC(=S)NNC(=O)c1cccn(Cc2ccc(Cl)cc2Cl)c1=O, found C15H14Cl2N4O2S</Error><Error file="formula.cpp" line="87">not ok 848 # molecular weight incorrect for molecule BIONET_10E-357S thiourea # Expected 0.000000, found 385.268260 </Error><Error file="formula.cpp" line="93">not ok 849 # exact mass incorrect for molecule BIONET_10E-357S thiourea # Expected 0.000000, found 384.021452 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 850 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-357S thiourea</Error><Error file="formula.cpp" line="110">not ok 851 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-357S thiourea # Expected 0.000000, found 385.268260 </Error><Error file="formula.cpp" line="116">not ok 852 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-357S thiourea # Expected 0.000000, found 384.021452 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 853 # molecular formula incorrect for molecule BIONET_10E-358S thiourea # Expected CCNC(=S)NNC(=O)c1cccn(Cc2ccc(Cl)cc2Cl)c1=O, found C16H16Cl2N4O2S</Error><Error file="formula.cpp" line="87">not ok 854 # molecular weight incorrect for molecule BIONET_10E-358S thiourea # Expected 0.000000, found 399.294840 </Error><Error file="formula.cpp" line="93">not ok 855 # exact mass incorrect for molecule BIONET_10E-358S thiourea # Expected 0.000000, found 398.037102 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 856 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-358S thiourea</Error><Error file="formula.cpp" line="110">not ok 857 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-358S thiourea # Expected 0.000000, found 399.294840 </Error><Error file="formula.cpp" line="116">not ok 858 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-358S thiourea # Expected 0.000000, found 398.037102 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 859 # molecular formula incorrect for molecule BIONET_10E-369S alkyne # Expected Clc1ccc(Cn2cc(cc(Cl)c2=O)C(=O)OCC#C)c(Cl)c1, found C16H10Cl3NO3</Error><Error file="formula.cpp" line="87">not ok 860 # molecular weight incorrect for molecule BIONET_10E-369S alkyne # Expected 0.000000, found 370.614500 </Error><Error file="formula.cpp" line="93">not ok 861 # exact mass incorrect for molecule BIONET_10E-369S alkyne # Expected 0.000000, found 368.972626 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 862 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-369S alkyne</Error><Error file="formula.cpp" line="110">not ok 863 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-369S alkyne # Expected 0.000000, found 370.614500 </Error><Error file="formula.cpp" line="116">not ok 864 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-369S alkyne # Expected 0.000000, found 368.972626 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 865 # molecular formula incorrect for molecule BIONET_10E-955 aryl_mono_BrI # Expected Clc1ccc(C(=O)Oc2cccnc2I)c(Cl)c1, found C12H6Cl2INO2</Error><Error file="formula.cpp" line="87">not ok 866 # molecular weight incorrect for molecule BIONET_10E-955 aryl_mono_BrI # Expected 0.000000, found 393.992010 </Error><Error file="formula.cpp" line="93">not ok 867 # exact mass incorrect for molecule BIONET_10E-955 aryl_mono_BrI # Expected 0.000000, found 392.882032 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 868 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-955 aryl_mono_BrI</Error><Error file="formula.cpp" line="110">not ok 869 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-955 aryl_mono_BrI # Expected 0.000000, found 393.992010 </Error><Error file="formula.cpp" line="116">not ok 870 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-955 aryl_mono_BrI # Expected 0.000000, found 392.882032 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 871 # molecular formula incorrect for molecule BIONET_10E-961 aryl_mono_BrI # Expected COc1ccc(cc1)C(=O)Oc2cccnc2I, found C13H10INO3</Error><Error file="formula.cpp" line="87">not ok 872 # molecular weight incorrect for molecule BIONET_10E-961 aryl_mono_BrI # Expected 0.000000, found 355.127870 </Error><Error file="formula.cpp" line="93">not ok 873 # exact mass incorrect for molecule BIONET_10E-961 aryl_mono_BrI # Expected 0.000000, found 354.970541 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 874 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-961 aryl_mono_BrI</Error><Error file="formula.cpp" line="110">not ok 875 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-961 aryl_mono_BrI # Expected 0.000000, found 355.127870 </Error><Error file="formula.cpp" line="116">not ok 876 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-961 aryl_mono_BrI # Expected 0.000000, found 354.970541 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 877 # molecular formula incorrect for molecule BIONET_10E-967 carbamate # Expected Ic1ncccc1OC(=O)Nc2ccc(cc2)N(=O)=O, found C12H8IN3O4</Error><Error file="formula.cpp" line="87">not ok 878 # molecular weight incorrect for molecule BIONET_10E-967 carbamate # Expected 0.000000, found 385.114090 </Error><Error file="formula.cpp" line="93">not ok 879 # exact mass incorrect for molecule BIONET_10E-967 carbamate # Expected 0.000000, found 384.955954 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 880 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-967 carbamate</Error><Error file="formula.cpp" line="110">not ok 881 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-967 carbamate # Expected 0.000000, found 385.114090 </Error><Error file="formula.cpp" line="116">not ok 882 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-967 carbamate # Expected 0.000000, found 384.955954 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 883 # molecular formula incorrect for molecule BIONET_10E-968 carbamate # Expected CCNC(=O)Oc1cccnc1I, found C8H9IN2O2</Error><Error file="formula.cpp" line="87">not ok 884 # molecular weight incorrect for molecule BIONET_10E-968 carbamate # Expected 0.000000, found 292.073730 </Error><Error file="formula.cpp" line="93">not ok 885 # exact mass incorrect for molecule BIONET_10E-968 carbamate # Expected 0.000000, found 291.970876 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 886 # molecular formula incorrect for hydrogen-added molecule BIONET_10E-968 carbamate</Error><Error file="formula.cpp" line="110">not ok 887 # molecular weight incorrect for hydrogen-added molecule BIONET_10E-968 carbamate # Expected 0.000000, found 292.073730 </Error><Error file="formula.cpp" line="116">not ok 888 # exact mass  incorrect for hydrogen-added molecule BIONET_10E-968 carbamate # Expected 0.000000, found 291.970876 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 889 # molecular formula incorrect for molecule BIONET_10F-302S sulfoxide # Expected COC(=O)c1ccccc1S(=O)c2snnc2C, found C11H10N2O3S2</Error><Error file="formula.cpp" line="87">not ok 890 # molecular weight incorrect for molecule BIONET_10F-302S sulfoxide # Expected 0.000000, found 282.338700 </Error><Error file="formula.cpp" line="93">not ok 891 # exact mass incorrect for molecule BIONET_10F-302S sulfoxide # Expected 0.000000, found 282.013284 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 892 # molecular formula incorrect for hydrogen-added molecule BIONET_10F-302S sulfoxide</Error><Error file="formula.cpp" line="110">not ok 893 # molecular weight incorrect for hydrogen-added molecule BIONET_10F-302S sulfoxide # Expected 0.000000, found 282.338700 </Error><Error file="formula.cpp" line="116">not ok 894 # exact mass  incorrect for hydrogen-added molecule BIONET_10F-302S sulfoxide # Expected 0.000000, found 282.013284 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 895 # molecular formula incorrect for molecule BIONET_10F-331S sulfoxide # Expected Cc1nnsc1S(=O)c2ccc(Br)cc2, found C9H7BrN2OS2</Error><Error file="formula.cpp" line="87">not ok 896 # molecular weight incorrect for molecule BIONET_10F-331S sulfoxide # Expected 0.000000, found 303.198680 </Error><Error file="formula.cpp" line="93">not ok 897 # exact mass incorrect for molecule BIONET_10F-331S sulfoxide # Expected 0.000000, found 301.918317 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 898 # molecular formula incorrect for hydrogen-added molecule BIONET_10F-331S sulfoxide</Error><Error file="formula.cpp" line="110">not ok 899 # molecular weight incorrect for hydrogen-added molecule BIONET_10F-331S sulfoxide # Expected 0.000000, found 303.198680 </Error><Error file="formula.cpp" line="116">not ok 900 # exact mass  incorrect for hydrogen-added molecule BIONET_10F-331S sulfoxide # Expected 0.000000, found 301.918317 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 901 # molecular formula incorrect for molecule BIONET_10F-332S sulfoxide # Expected Cc1nnsc1S(=O)c2ccc(cc2)C(F)(F)F, found C10H7F3N2OS2</Error><Error file="formula.cpp" line="87">not ok 902 # molecular weight incorrect for molecule BIONET_10F-332S sulfoxide # Expected 0.000000, found 292.300590 </Error><Error file="formula.cpp" line="93">not ok 903 # exact mass incorrect for molecule BIONET_10F-332S sulfoxide # Expected 0.000000, found 291.995190 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 904 # molecular formula incorrect for hydrogen-added molecule BIONET_10F-332S sulfoxide</Error><Error file="formula.cpp" line="110">not ok 905 # molecular weight incorrect for hydrogen-added molecule BIONET_10F-332S sulfoxide # Expected 0.000000, found 292.300590 </Error><Error file="formula.cpp" line="116">not ok 906 # exact mass  incorrect for hydrogen-added molecule BIONET_10F-332S sulfoxide # Expected 0.000000, found 291.995190 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 907 # molecular formula incorrect for molecule BIONET_10F-349S alkyne # Expected Cn1c(SCC#C)nnc1c2cccn(Cc3ccccc3)c2=O, found C18H16N4OS</Error><Error file="formula.cpp" line="87">not ok 908 # molecular weight incorrect for molecule BIONET_10F-349S alkyne # Expected 0.000000, found 336.410840 </Error><Error file="formula.cpp" line="93">not ok 909 # exact mass incorrect for molecule BIONET_10F-349S alkyne # Expected 0.000000, found 336.104482 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 910 # molecular formula incorrect for hydrogen-added molecule BIONET_10F-349S alkyne</Error><Error file="formula.cpp" line="110">not ok 911 # molecular weight incorrect for hydrogen-added molecule BIONET_10F-349S alkyne # Expected 0.000000, found 336.410840 </Error><Error file="formula.cpp" line="116">not ok 912 # exact mass  incorrect for hydrogen-added molecule BIONET_10F-349S alkyne # Expected 0.000000, found 336.104482 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 913 # molecular formula incorrect for molecule BIONET_10G-047 sulfonic_ester # Expected FC(F)(F)c1cccc(c1)S(=O)(=O)Oc2cccc(Oc3ncc(cc3Cl)C(F)(F)F)c2, found C19H10ClF6NO4S</Error><Error file="formula.cpp" line="87">not ok 914 # molecular weight incorrect for molecule BIONET_10G-047 sulfonic_ester # Expected 0.000000, found 497.795419 </Error><Error file="formula.cpp" line="93">not ok 915 # exact mass incorrect for molecule BIONET_10G-047 sulfonic_ester # Expected 0.000000, found 496.992326 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 916 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-047 sulfonic_ester</Error><Error file="formula.cpp" line="110">not ok 917 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-047 sulfonic_ester # Expected 0.000000, found 497.795419 </Error><Error file="formula.cpp" line="116">not ok 918 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-047 sulfonic_ester # Expected 0.000000, found 496.992326 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 919 # molecular formula incorrect for molecule BIONET_10G-048 sulfonic_ester # Expected Cc1ccc(cc1)S(=O)(=O)Oc2cccc(Oc3ncc(cc3Cl)C(F)(F)F)c2, found C19H13ClF3NO4S</Error><Error file="formula.cpp" line="87">not ok 920 # molecular weight incorrect for molecule BIONET_10G-048 sulfonic_ester # Expected 0.000000, found 443.824030 </Error><Error file="formula.cpp" line="93">not ok 921 # exact mass incorrect for molecule BIONET_10G-048 sulfonic_ester # Expected 0.000000, found 443.020591 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 922 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-048 sulfonic_ester</Error><Error file="formula.cpp" line="110">not ok 923 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-048 sulfonic_ester # Expected 0.000000, found 443.824030 </Error><Error file="formula.cpp" line="116">not ok 924 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-048 sulfonic_ester # Expected 0.000000, found 443.020591 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 925 # molecular formula incorrect for molecule BIONET_10G-306S mercapto # Expected OC(=O)c1sccc1S, found C5H4O2S2</Error><Error file="formula.cpp" line="87">not ok 926 # molecular weight incorrect for molecule BIONET_10G-306S mercapto # Expected 0.000000, found 160.214060 </Error><Error file="formula.cpp" line="93">not ok 927 # exact mass incorrect for molecule BIONET_10G-306S mercapto # Expected 0.000000, found 159.965271 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 928 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-306S mercapto</Error><Error file="formula.cpp" line="110">not ok 929 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-306S mercapto # Expected 0.000000, found 160.214060 </Error><Error file="formula.cpp" line="116">not ok 930 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-306S mercapto # Expected 0.000000, found 159.965271 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 931 # molecular formula incorrect for molecule BIONET_10G-966 primary_amine # Expected NC1(CCN(Cc2ccccc2)CC1)C(=O)O, found C13H18N2O2</Error><Error file="formula.cpp" line="87">not ok 932 # molecular weight incorrect for molecule BIONET_10G-966 primary_amine # Expected 0.000000, found 234.294220 </Error><Error file="formula.cpp" line="93">not ok 933 # exact mass incorrect for molecule BIONET_10G-966 primary_amine # Expected 0.000000, found 234.136828 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 934 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-966 primary_amine</Error><Error file="formula.cpp" line="110">not ok 935 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-966 primary_amine # Expected 0.000000, found 234.294220 </Error><Error file="formula.cpp" line="116">not ok 936 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-966 primary_amine # Expected 0.000000, found 234.136828 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 937 # molecular formula incorrect for molecule BIONET_10G-967 ketal # Expected BrCC1(OCCO1)c2ccccc2, found C10H11BrO2</Error><Error file="formula.cpp" line="87">not ok 938 # molecular weight incorrect for molecule BIONET_10G-967 ketal # Expected 0.000000, found 243.097140 </Error><Error file="formula.cpp" line="93">not ok 939 # exact mass incorrect for molecule BIONET_10G-967 ketal # Expected 0.000000, found 241.994242 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 940 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-967 ketal</Error><Error file="formula.cpp" line="110">not ok 941 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-967 ketal # Expected 0.000000, found 243.097140 </Error><Error file="formula.cpp" line="116">not ok 942 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-967 ketal # Expected 0.000000, found 241.994242 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 943 # molecular formula incorrect for molecule BIONET_10G-970 hydroxylamine # Expected CN(O)/C=C/C(=O)c1ccc(Br)cc1, found C10H10BrNO2</Error><Error file="formula.cpp" line="87">not ok 944 # molecular weight incorrect for molecule BIONET_10G-970 hydroxylamine # Expected 0.000000, found 256.095900 </Error><Error file="formula.cpp" line="93">not ok 945 # exact mass incorrect for molecule BIONET_10G-970 hydroxylamine # Expected 0.000000, found 254.989491 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 946 # molecular formula incorrect for hydrogen-added molecule BIONET_10G-970 hydroxylamine</Error><Error file="formula.cpp" line="110">not ok 947 # molecular weight incorrect for hydrogen-added molecule BIONET_10G-970 hydroxylamine # Expected 0.000000, found 256.095900 </Error><Error file="formula.cpp" line="116">not ok 948 # exact mass  incorrect for hydrogen-added molecule BIONET_10G-970 hydroxylamine # Expected 0.000000, found 254.989491 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 949 # molecular formula incorrect for molecule BIONET_10H-008 thioether # Expected CSCC(=O)/C(=C\N(C)C)/C#N, found C8H12N2OS</Error><Error file="formula.cpp" line="87">not ok 950 # molecular weight incorrect for molecule BIONET_10H-008 thioether # Expected 0.000000, found 184.258680 </Error><Error file="formula.cpp" line="93">not ok 951 # exact mass incorrect for molecule BIONET_10H-008 thioether # Expected 0.000000, found 184.067034 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 952 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-008 thioether</Error><Error file="formula.cpp" line="110">not ok 953 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-008 thioether # Expected 0.000000, found 184.258680 </Error><Error file="formula.cpp" line="116">not ok 954 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-008 thioether # Expected 0.000000, found 184.067034 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 955 # molecular formula incorrect for molecule BIONET_10H-009 thioether # Expected CSCC(=O)/C(=C\Nc1ccc(Oc2ncc(cc2Cl)C(F)(F)F)cc1)/C#N, found C18H13ClF3N3O2S</Error><Error file="formula.cpp" line="87">not ok 956 # molecular weight incorrect for molecule BIONET_10H-009 thioether # Expected 0.000000, found 427.827930 </Error><Error file="formula.cpp" line="93">not ok 957 # exact mass incorrect for molecule BIONET_10H-009 thioether # Expected 0.000000, found 427.036910 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 958 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-009 thioether</Error><Error file="formula.cpp" line="110">not ok 959 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-009 thioether # Expected 0.000000, found 427.827930 </Error><Error file="formula.cpp" line="116">not ok 960 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-009 thioether # Expected 0.000000, found 427.036910 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 961 # molecular formula incorrect for molecule BIONET_10H-900 ketal # Expected NNC(=O)C1=NOC2COC3(CCN(CC3)c4ccc(cc4)N(=O)=O)OCC21, found C17H21N5O6</Error><Error file="formula.cpp" line="87">not ok 962 # molecular weight incorrect for molecule BIONET_10H-900 ketal # Expected 0.000000, found 391.378540 </Error><Error file="formula.cpp" line="93">not ok 963 # exact mass incorrect for molecule BIONET_10H-900 ketal # Expected 0.000000, found 391.149183 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 964 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-900 ketal</Error><Error file="formula.cpp" line="110">not ok 965 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-900 ketal # Expected 0.000000, found 391.378540 </Error><Error file="formula.cpp" line="116">not ok 966 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-900 ketal # Expected 0.000000, found 391.149183 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 967 # molecular formula incorrect for molecule BIONET_10H-912 primary_amine # Expected CN(N/C(=C/C#N)/N)c1ncc(cc1Cl)C(F)(F)F, found C10H9ClF3N5</Error><Error file="formula.cpp" line="87">not ok 968 # molecular weight incorrect for molecule BIONET_10H-912 primary_amine # Expected 0.000000, found 291.660170 </Error><Error file="formula.cpp" line="93">not ok 969 # exact mass incorrect for molecule BIONET_10H-912 primary_amine # Expected 0.000000, found 291.049858 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 970 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-912 primary_amine</Error><Error file="formula.cpp" line="110">not ok 971 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-912 primary_amine # Expected 0.000000, found 291.660170 </Error><Error file="formula.cpp" line="116">not ok 972 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-912 primary_amine # Expected 0.000000, found 291.049858 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 973 # molecular formula incorrect for molecule BIONET_10H-927 ketal # Expected CC1(OCCO1)c2ccc3noc(c4ccc(Cl)cc4)c3c2, found C17H14ClNO3</Error><Error file="formula.cpp" line="87">not ok 974 # molecular weight incorrect for molecule BIONET_10H-927 ketal # Expected 0.000000, found 315.750960 </Error><Error file="formula.cpp" line="93">not ok 975 # exact mass incorrect for molecule BIONET_10H-927 ketal # Expected 0.000000, found 315.066221 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 976 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-927 ketal</Error><Error file="formula.cpp" line="110">not ok 977 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-927 ketal # Expected 0.000000, found 315.750960 </Error><Error file="formula.cpp" line="116">not ok 978 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-927 ketal # Expected 0.000000, found 315.066221 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 979 # molecular formula incorrect for molecule BIONET_10H-953 alkylating_agent # Expected Clc1ccc(C2OCC(Br)C(Br)CO2)c(Cl)c1, found C11H10Br2Cl2O2</Error><Error file="formula.cpp" line="87">not ok 980 # molecular weight incorrect for molecule BIONET_10H-953 alkylating_agent # Expected 0.000000, found 404.909900 </Error><Error file="formula.cpp" line="93">not ok 981 # exact mass incorrect for molecule BIONET_10H-953 alkylating_agent # Expected 0.000000, found 401.842459 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 982 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-953 alkylating_agent</Error><Error file="formula.cpp" line="110">not ok 983 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-953 alkylating_agent # Expected 0.000000, found 404.909900 </Error><Error file="formula.cpp" line="116">not ok 984 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-953 alkylating_agent # Expected 0.000000, found 401.842459 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 985 # molecular formula incorrect for molecule BIONET_10H-954 alkylating_agent # Expected FC(F)(F)c1cnc(N2CCC3(CC2)OCC(Br)C(Br)CO3)c(Cl)c1, found C15H16Br2ClF3N2O2</Error><Error file="formula.cpp" line="87">not ok 986 # molecular weight incorrect for molecule BIONET_10H-954 alkylating_agent # Expected 0.000000, found 508.555950 </Error><Error file="formula.cpp" line="93">not ok 987 # exact mass incorrect for molecule BIONET_10H-954 alkylating_agent # Expected 0.000000, found 505.921914 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 988 # molecular formula incorrect for hydrogen-added molecule BIONET_10H-954 alkylating_agent</Error><Error file="formula.cpp" line="110">not ok 989 # molecular weight incorrect for hydrogen-added molecule BIONET_10H-954 alkylating_agent # Expected 0.000000, found 508.555950 </Error><Error file="formula.cpp" line="116">not ok 990 # exact mass  incorrect for hydrogen-added molecule BIONET_10H-954 alkylating_agent # Expected 0.000000, found 505.921914 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 991 # molecular formula incorrect for molecule BIONET_10L-011 sulfonic_ester # Expected COc1ccc(CNS(=O)(=O)Oc2ccccc2O)cc1OC, found C15H17NO6S</Error><Error file="formula.cpp" line="87">not ok 992 # molecular weight incorrect for molecule BIONET_10L-011 sulfonic_ester # Expected 0.000000, found 339.363580 </Error><Error file="formula.cpp" line="93">not ok 993 # exact mass incorrect for molecule BIONET_10L-011 sulfonic_ester # Expected 0.000000, found 339.077658 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 994 # molecular formula incorrect for hydrogen-added molecule BIONET_10L-011 sulfonic_ester</Error><Error file="formula.cpp" line="110">not ok 995 # molecular weight incorrect for hydrogen-added molecule BIONET_10L-011 sulfonic_ester # Expected 0.000000, found 339.363580 </Error><Error file="formula.cpp" line="116">not ok 996 # exact mass  incorrect for hydrogen-added molecule BIONET_10L-011 sulfonic_ester # Expected 0.000000, found 339.077658 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 997 # molecular formula incorrect for molecule BIONET_10L-757 anhydride # Expected O=C1OC(=O)c2ccccc2C1=NNc3ccc(C#N)cc3, found C16H9N3O3</Error><Error file="formula.cpp" line="87">not ok 998 # molecular weight incorrect for molecule BIONET_10L-757 anhydride # Expected 0.000000, found 291.260960 </Error><Error file="formula.cpp" line="93">not ok 999 # exact mass incorrect for molecule BIONET_10L-757 anhydride # Expected 0.000000, found 291.064391 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1000 # molecular formula incorrect for hydrogen-added molecule BIONET_10L-757 anhydride</Error><Error file="formula.cpp" line="110">not ok 1001 # molecular weight incorrect for hydrogen-added molecule BIONET_10L-757 anhydride # Expected 0.000000, found 291.260960 </Error><Error file="formula.cpp" line="116">not ok 1002 # exact mass  incorrect for hydrogen-added molecule BIONET_10L-757 anhydride # Expected 0.000000, found 291.064391 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1003 # molecular formula incorrect for molecule BIONET_10M-001 oxalyl # Expected Cc1ccccc1CN2C(=O)N(Cc3cccc(c3)C(F)(F)F)C(=O)C2=O, found C19H15F3N2O3</Error><Error file="formula.cpp" line="87">not ok 1004 # molecular weight incorrect for molecule BIONET_10M-001 oxalyl # Expected 0.000000, found 376.329210 </Error><Error file="formula.cpp" line="93">not ok 1005 # exact mass incorrect for molecule BIONET_10M-001 oxalyl # Expected 0.000000, found 376.103477 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1006 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-001 oxalyl</Error><Error file="formula.cpp" line="110">not ok 1007 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-001 oxalyl # Expected 0.000000, found 376.329210 </Error><Error file="formula.cpp" line="116">not ok 1008 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-001 oxalyl # Expected 0.000000, found 376.103477 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1009 # molecular formula incorrect for molecule BIONET_10M-002 oxalyl # Expected COc1ccc(CN2C(=O)N(Cc3ccccc3C)C(=O)C2=O)cc1OC, found C20H20N2O5</Error><Error file="formula.cpp" line="87">not ok 1010 # molecular weight incorrect for molecule BIONET_10M-002 oxalyl # Expected 0.000000, found 368.383200 </Error><Error file="formula.cpp" line="93">not ok 1011 # exact mass incorrect for molecule BIONET_10M-002 oxalyl # Expected 0.000000, found 368.137222 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1012 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-002 oxalyl</Error><Error file="formula.cpp" line="110">not ok 1013 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-002 oxalyl # Expected 0.000000, found 368.383200 </Error><Error file="formula.cpp" line="116">not ok 1014 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-002 oxalyl # Expected 0.000000, found 368.137222 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1015 # molecular formula incorrect for molecule BIONET_10M-003 oxalyl # Expected Clc1cccc(CN2C(=O)NC(=O)C2=O)c1, found C10H7ClN2O3</Error><Error file="formula.cpp" line="87">not ok 1016 # molecular weight incorrect for molecule BIONET_10M-003 oxalyl # Expected 0.000000, found 238.627180 </Error><Error file="formula.cpp" line="93">not ok 1017 # exact mass incorrect for molecule BIONET_10M-003 oxalyl # Expected 0.000000, found 238.014520 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1018 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-003 oxalyl</Error><Error file="formula.cpp" line="110">not ok 1019 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-003 oxalyl # Expected 0.000000, found 238.627180 </Error><Error file="formula.cpp" line="116">not ok 1020 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-003 oxalyl # Expected 0.000000, found 238.014520 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1021 # molecular formula incorrect for molecule BIONET_10M-031 enol_ether # Expected COC(=C(C#N)C#N)/C=C/Nc1ccc(Cl)cc1, found C13H10ClN3O</Error><Error file="formula.cpp" line="87">not ok 1022 # molecular weight incorrect for molecule BIONET_10M-031 enol_ether # Expected 0.000000, found 259.691000 </Error><Error file="formula.cpp" line="93">not ok 1023 # exact mass incorrect for molecule BIONET_10M-031 enol_ether # Expected 0.000000, found 259.051240 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1024 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-031 enol_ether</Error><Error file="formula.cpp" line="110">not ok 1025 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-031 enol_ether # Expected 0.000000, found 259.691000 </Error><Error file="formula.cpp" line="116">not ok 1026 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-031 enol_ether # Expected 0.000000, found 259.051240 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1027 # molecular formula incorrect for molecule BIONET_10M-038 enol_ether # Expected COC(=C(C#N)C#N)/C=C/Nc1ccc(Br)cc1, found C13H10BrN3O</Error><Error file="formula.cpp" line="87">not ok 1028 # molecular weight incorrect for molecule BIONET_10M-038 enol_ether # Expected 0.000000, found 304.142000 </Error><Error file="formula.cpp" line="93">not ok 1029 # exact mass incorrect for molecule BIONET_10M-038 enol_ether # Expected 0.000000, found 303.000724 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1030 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-038 enol_ether</Error><Error file="formula.cpp" line="110">not ok 1031 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-038 enol_ether # Expected 0.000000, found 304.142000 </Error><Error file="formula.cpp" line="116">not ok 1032 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-038 enol_ether # Expected 0.000000, found 303.000724 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1033 # molecular formula incorrect for molecule BIONET_10M-040 enol_ether # Expected COC(=C(C#N)C#N)/C=C/Nc1ccc(I)cc1, found C13H10IN3O</Error><Error file="formula.cpp" line="87">not ok 1034 # molecular weight incorrect for molecule BIONET_10M-040 enol_ether # Expected 0.000000, found 351.142470 </Error><Error file="formula.cpp" line="93">not ok 1035 # exact mass incorrect for molecule BIONET_10M-040 enol_ether # Expected 0.000000, found 350.986860 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1036 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-040 enol_ether</Error><Error file="formula.cpp" line="110">not ok 1037 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-040 enol_ether # Expected 0.000000, found 351.142470 </Error><Error file="formula.cpp" line="116">not ok 1038 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-040 enol_ether # Expected 0.000000, found 350.986860 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1039 # molecular formula incorrect for molecule BIONET_10M-709 alkyne # Expected Cc1ccc(C)n1c2ccc(C#Cc3ccc(cc3)n4c(C)ccc4C)cc2, found C26H24N2</Error><Error file="formula.cpp" line="87">not ok 1040 # molecular weight incorrect for molecule BIONET_10M-709 alkyne # Expected 0.000000, found 364.482160 </Error><Error file="formula.cpp" line="93">not ok 1041 # exact mass incorrect for molecule BIONET_10M-709 alkyne # Expected 0.000000, found 364.193949 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1042 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-709 alkyne</Error><Error file="formula.cpp" line="110">not ok 1043 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-709 alkyne # Expected 0.000000, found 364.482160 </Error><Error file="formula.cpp" line="116">not ok 1044 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-709 alkyne # Expected 0.000000, found 364.193949 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1045 # molecular formula incorrect for molecule BIONET_10M-911 azide # Expected N=[N+]=Nc1ccn(=O)cc1, found C5H5N4O</Error><Error file="formula.cpp" line="87">not ok 1046 # molecular weight incorrect for molecule BIONET_10M-911 azide # Expected 0.000000, found 137.119400 </Error><Error file="formula.cpp" line="93">not ok 1047 # exact mass incorrect for molecule BIONET_10M-911 azide # Expected 0.000000, found 137.046336 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1048 # molecular formula incorrect for hydrogen-added molecule BIONET_10M-911 azide</Error><Error file="formula.cpp" line="110">not ok 1049 # molecular weight incorrect for hydrogen-added molecule BIONET_10M-911 azide # Expected 0.000000, found 137.119400 </Error><Error file="formula.cpp" line="116">not ok 1050 # exact mass  incorrect for hydrogen-added molecule BIONET_10M-911 azide # Expected 0.000000, found 137.046336 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1051 # molecular formula incorrect for molecule BIONET_10P-010 epoxide # Expected CCOC(=O)C(CSCC1CO1)NC(=O)OC(C)(C)C, found C13H23NO5S</Error><Error file="formula.cpp" line="87">not ok 1052 # molecular weight incorrect for molecule BIONET_10P-010 epoxide # Expected 0.000000, found 305.390420 </Error><Error file="formula.cpp" line="93">not ok 1053 # exact mass incorrect for molecule BIONET_10P-010 epoxide # Expected 0.000000, found 305.129694 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1054 # molecular formula incorrect for hydrogen-added molecule BIONET_10P-010 epoxide</Error><Error file="formula.cpp" line="110">not ok 1055 # molecular weight incorrect for hydrogen-added molecule BIONET_10P-010 epoxide # Expected 0.000000, found 305.390420 </Error><Error file="formula.cpp" line="116">not ok 1056 # exact mass  incorrect for hydrogen-added molecule BIONET_10P-010 epoxide # Expected 0.000000, found 305.129694 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1057 # molecular formula incorrect for molecule BIONET_10P-974 thiocarbamate # Expected Fc1ccccc1/C=C\2/C(OC(=S)Nc3ccccc3)C4CCN2CC4, found C21H21FN2OS</Error><Error file="formula.cpp" line="87">not ok 1058 # molecular weight incorrect for molecule BIONET_10P-974 thiocarbamate # Expected 0.000000, found 368.467643 </Error><Error file="formula.cpp" line="93">not ok 1059 # exact mass incorrect for molecule BIONET_10P-974 thiocarbamate # Expected 0.000000, found 368.135863 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1060 # molecular formula incorrect for hydrogen-added molecule BIONET_10P-974 thiocarbamate</Error><Error file="formula.cpp" line="110">not ok 1061 # molecular weight incorrect for hydrogen-added molecule BIONET_10P-974 thiocarbamate # Expected 0.000000, found 368.467643 </Error><Error file="formula.cpp" line="116">not ok 1062 # exact mass  incorrect for hydrogen-added molecule BIONET_10P-974 thiocarbamate # Expected 0.000000, found 368.135863 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1063 # molecular formula incorrect for molecule BIONET_11D-094 anhydride # Expected Clc1ccc(SC2CC(=O)OC2=O)cc1, found C10H7ClO3S</Error><Error file="formula.cpp" line="87">not ok 1064 # molecular weight incorrect for molecule BIONET_11D-094 anhydride # Expected 0.000000, found 242.678780 </Error><Error file="formula.cpp" line="93">not ok 1065 # exact mass incorrect for molecule BIONET_11D-094 anhydride # Expected 0.000000, found 241.980443 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1066 # molecular formula incorrect for hydrogen-added molecule BIONET_11D-094 anhydride</Error><Error file="formula.cpp" line="110">not ok 1067 # molecular weight incorrect for hydrogen-added molecule BIONET_11D-094 anhydride # Expected 0.000000, found 242.678780 </Error><Error file="formula.cpp" line="116">not ok 1068 # exact mass  incorrect for hydrogen-added molecule BIONET_11D-094 anhydride # Expected 0.000000, found 241.980443 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1069 # molecular formula incorrect for molecule BIONET_11E-062 azide # Expected Clc1ccc(C(=O)c2c[nH]c(c2)C(=O)N=[N+]=N)c(Cl)c1, found C12H7Cl2N4O2</Error><Error file="formula.cpp" line="87">not ok 1070 # molecular weight incorrect for molecule BIONET_11E-062 azide # Expected 0.000000, found 310.115580 </Error><Error file="formula.cpp" line="93">not ok 1071 # exact mass incorrect for molecule BIONET_11E-062 azide # Expected 0.000000, found 308.994606 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1072 # molecular formula incorrect for hydrogen-added molecule BIONET_11E-062 azide</Error><Error file="formula.cpp" line="110">not ok 1073 # molecular weight incorrect for hydrogen-added molecule BIONET_11E-062 azide # Expected 0.000000, found 310.115580 </Error><Error file="formula.cpp" line="116">not ok 1074 # exact mass  incorrect for hydrogen-added molecule BIONET_11E-062 azide # Expected 0.000000, found 308.994606 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1075 # molecular formula incorrect for molecule BIONET_11F-052 azo # Expected FC(F)(F)c1ccc(NN=C(N=Nc2ccc(cc2)C(F)(F)F)C#N)cc1, found C16H9F6N5</Error><Error file="formula.cpp" line="87">not ok 1076 # molecular weight incorrect for molecule BIONET_11F-052 azo # Expected 0.000000, found 385.266579 </Error><Error file="formula.cpp" line="93">not ok 1077 # exact mass incorrect for molecule BIONET_11F-052 azo # Expected 0.000000, found 385.076215 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1078 # molecular formula incorrect for hydrogen-added molecule BIONET_11F-052 azo</Error><Error file="formula.cpp" line="110">not ok 1079 # molecular weight incorrect for hydrogen-added molecule BIONET_11F-052 azo # Expected 0.000000, found 385.266579 </Error><Error file="formula.cpp" line="116">not ok 1080 # exact mass  incorrect for hydrogen-added molecule BIONET_11F-052 azo # Expected 0.000000, found 385.076215 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1081 # molecular formula incorrect for molecule BIONET_11J-013 thioamide # Expected NC(=S)Cc1ccc(s1)C(=O)c2ccc(Cl)cc2, found C13H10ClNOS2</Error><Error file="formula.cpp" line="87">not ok 1082 # molecular weight incorrect for molecule BIONET_11J-013 thioamide # Expected 0.000000, found 295.807600 </Error><Error file="formula.cpp" line="93">not ok 1083 # exact mass incorrect for molecule BIONET_11J-013 thioamide # Expected 0.000000, found 294.989234 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1084 # molecular formula incorrect for hydrogen-added molecule BIONET_11J-013 thioamide</Error><Error file="formula.cpp" line="110">not ok 1085 # molecular weight incorrect for hydrogen-added molecule BIONET_11J-013 thioamide # Expected 0.000000, found 295.807600 </Error><Error file="formula.cpp" line="116">not ok 1086 # exact mass  incorrect for hydrogen-added molecule BIONET_11J-013 thioamide # Expected 0.000000, found 294.989234 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1087 # molecular formula incorrect for molecule BIONET_11L-708 anhydride # Expected O=C1OC(=O)c2ccccc2C1=NNc3cccc(c3)N(=O)=O, found C15H9N3O5</Error><Error file="formula.cpp" line="87">not ok 1088 # molecular weight incorrect for molecule BIONET_11L-708 anhydride # Expected 0.000000, found 311.249060 </Error><Error file="formula.cpp" line="93">not ok 1089 # exact mass incorrect for molecule BIONET_11L-708 anhydride # Expected 0.000000, found 311.054220 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1090 # molecular formula incorrect for hydrogen-added molecule BIONET_11L-708 anhydride</Error><Error file="formula.cpp" line="110">not ok 1091 # molecular weight incorrect for hydrogen-added molecule BIONET_11L-708 anhydride # Expected 0.000000, found 311.249060 </Error><Error file="formula.cpp" line="116">not ok 1092 # exact mass  incorrect for hydrogen-added molecule BIONET_11L-708 anhydride # Expected 0.000000, found 311.054220 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1093 # molecular formula incorrect for molecule BIONET_11N-406S thioamide # Expected CN1c2ccsc2C(=C(C(=S)Nc3ccccc3)S1(=O)=O)O, found C14H12N2O3S3</Error><Error file="formula.cpp" line="87">not ok 1094 # molecular weight incorrect for molecule BIONET_11N-406S thioamide # Expected 0.000000, found 352.451680 </Error><Error file="formula.cpp" line="93">not ok 1095 # exact mass incorrect for molecule BIONET_11N-406S thioamide # Expected 0.000000, found 352.001005 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1096 # molecular formula incorrect for hydrogen-added molecule BIONET_11N-406S thioamide</Error><Error file="formula.cpp" line="110">not ok 1097 # molecular weight incorrect for hydrogen-added molecule BIONET_11N-406S thioamide # Expected 0.000000, found 352.451680 </Error><Error file="formula.cpp" line="116">not ok 1098 # exact mass  incorrect for hydrogen-added molecule BIONET_11N-406S thioamide # Expected 0.000000, found 352.001005 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1099 # molecular formula incorrect for molecule BIONET_11P-086 mercapto # Expected CCOC(=O)C(CS)NC(=O)OCc1ccccc1, found C13H17NO4S</Error><Error file="formula.cpp" line="87">not ok 1100 # molecular weight incorrect for molecule BIONET_11P-086 mercapto # Expected 0.000000, found 283.343380 </Error><Error file="formula.cpp" line="93">not ok 1101 # exact mass incorrect for molecule BIONET_11P-086 mercapto # Expected 0.000000, found 283.087829 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1102 # molecular formula incorrect for hydrogen-added molecule BIONET_11P-086 mercapto</Error><Error file="formula.cpp" line="110">not ok 1103 # molecular weight incorrect for hydrogen-added molecule BIONET_11P-086 mercapto # Expected 0.000000, found 283.343380 </Error><Error file="formula.cpp" line="116">not ok 1104 # exact mass  incorrect for hydrogen-added molecule BIONET_11P-086 mercapto # Expected 0.000000, found 283.087829 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1105 # molecular formula incorrect for molecule BIONET_12A-035 triazine # Expected Clc1ccc(N=NN2CCC(=O)N2)cc1, found C9H9ClN4O</Error><Error file="formula.cpp" line="87">not ok 1106 # molecular weight incorrect for molecule BIONET_12A-035 triazine # Expected 0.000000, found 224.646960 </Error><Error file="formula.cpp" line="93">not ok 1107 # exact mass incorrect for molecule BIONET_12A-035 triazine # Expected 0.000000, found 224.046489 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1108 # molecular formula incorrect for hydrogen-added molecule BIONET_12A-035 triazine</Error><Error file="formula.cpp" line="110">not ok 1109 # molecular weight incorrect for hydrogen-added molecule BIONET_12A-035 triazine # Expected 0.000000, found 224.646960 </Error><Error file="formula.cpp" line="116">not ok 1110 # exact mass  incorrect for hydrogen-added molecule BIONET_12A-035 triazine # Expected 0.000000, found 224.046489 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1111 # molecular formula incorrect for molecule BIONET_12A-036 triazine # Expected O=C1CCN(N1)N=Nc2ccccc2, found C9H10N4O</Error><Error file="formula.cpp" line="87">not ok 1112 # molecular weight incorrect for molecule BIONET_12A-036 triazine # Expected 0.000000, found 190.201900 </Error><Error file="formula.cpp" line="93">not ok 1113 # exact mass incorrect for molecule BIONET_12A-036 triazine # Expected 0.000000, found 190.085461 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1114 # molecular formula incorrect for hydrogen-added molecule BIONET_12A-036 triazine</Error><Error file="formula.cpp" line="110">not ok 1115 # molecular weight incorrect for hydrogen-added molecule BIONET_12A-036 triazine # Expected 0.000000, found 190.201900 </Error><Error file="formula.cpp" line="116">not ok 1116 # exact mass  incorrect for hydrogen-added molecule BIONET_12A-036 triazine # Expected 0.000000, found 190.085461 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1117 # molecular formula incorrect for molecule BIONET_12A-037 triazine # Expected Cc1ccc(N=NN2CCC(=O)N2)cc1, found C10H12N4O</Error><Error file="formula.cpp" line="87">not ok 1118 # molecular weight incorrect for molecule BIONET_12A-037 triazine # Expected 0.000000, found 204.228480 </Error><Error file="formula.cpp" line="93">not ok 1119 # exact mass incorrect for molecule BIONET_12A-037 triazine # Expected 0.000000, found 204.101111 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1120 # molecular formula incorrect for hydrogen-added molecule BIONET_12A-037 triazine</Error><Error file="formula.cpp" line="110">not ok 1121 # molecular weight incorrect for hydrogen-added molecule BIONET_12A-037 triazine # Expected 0.000000, found 204.228480 </Error><Error file="formula.cpp" line="116">not ok 1122 # exact mass  incorrect for hydrogen-added molecule BIONET_12A-037 triazine # Expected 0.000000, found 204.101111 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1123 # molecular formula incorrect for molecule BIONET_12C-045 mercapto # Expected SC(=NNc1ccccc1)Nc2ccccc2, found C13H13N3S</Error><Error file="formula.cpp" line="87">not ok 1124 # molecular weight incorrect for molecule BIONET_12C-045 mercapto # Expected 0.000000, found 243.327420 </Error><Error file="formula.cpp" line="93">not ok 1125 # exact mass incorrect for molecule BIONET_12C-045 mercapto # Expected 0.000000, found 243.083018 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1126 # molecular formula incorrect for hydrogen-added molecule BIONET_12C-045 mercapto</Error><Error file="formula.cpp" line="110">not ok 1127 # molecular weight incorrect for hydrogen-added molecule BIONET_12C-045 mercapto # Expected 0.000000, found 243.327420 </Error><Error file="formula.cpp" line="116">not ok 1128 # exact mass  incorrect for hydrogen-added molecule BIONET_12C-045 mercapto # Expected 0.000000, found 243.083018 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1129 # molecular formula incorrect for molecule BIONET_12F-026 azo # Expected FC(F)(F)c1ccc(NN=C(N=Nc2ccc(cc2)C(F)(F)F)c3ncc(cc3Cl)C(F)(F)F)cc1, found C21H11ClF9N5</Error><Error file="formula.cpp" line="87">not ok 1130 # molecular weight incorrect for molecule BIONET_12F-026 azo # Expected 0.000000, found 539.784169 </Error><Error file="formula.cpp" line="93">not ok 1131 # exact mass incorrect for molecule BIONET_12F-026 azo # Expected 0.000000, found 539.055927 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1132 # molecular formula incorrect for hydrogen-added molecule BIONET_12F-026 azo</Error><Error file="formula.cpp" line="110">not ok 1133 # molecular weight incorrect for hydrogen-added molecule BIONET_12F-026 azo # Expected 0.000000, found 539.784169 </Error><Error file="formula.cpp" line="116">not ok 1134 # exact mass  incorrect for hydrogen-added molecule BIONET_12F-026 azo # Expected 0.000000, found 539.055927 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1135 # molecular formula incorrect for molecule BIONET_12L-001 sulfonyl_halide # Expected ClS(=O)(=O)c1ccc(s1)c2csnn2, found C6H3ClN2O2S3</Error><Error file="formula.cpp" line="87">not ok 1136 # molecular weight incorrect for molecule BIONET_12L-001 sulfonyl_halide # Expected 0.000000, found 266.748220 </Error><Error file="formula.cpp" line="93">not ok 1137 # exact mass incorrect for molecule BIONET_12L-001 sulfonyl_halide # Expected 0.000000, found 265.904518 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1138 # molecular formula incorrect for hydrogen-added molecule BIONET_12L-001 sulfonyl_halide</Error><Error file="formula.cpp" line="110">not ok 1139 # molecular weight incorrect for hydrogen-added molecule BIONET_12L-001 sulfonyl_halide # Expected 0.000000, found 266.748220 </Error><Error file="formula.cpp" line="116">not ok 1140 # exact mass  incorrect for hydrogen-added molecule BIONET_12L-001 sulfonyl_halide # Expected 0.000000, found 265.904518 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1141 # molecular formula incorrect for molecule BIONET_12N-302S thioamide # Expected CN1c2ccsc2C(=C(C(=S)Nc3ccc(Cl)cc3)S1(=O)=O)O, found C14H11ClN2O3S3</Error><Error file="formula.cpp" line="87">not ok 1142 # molecular weight incorrect for molecule BIONET_12N-302S thioamide # Expected 0.000000, found 386.896740 </Error><Error file="formula.cpp" line="93">not ok 1143 # exact mass incorrect for molecule BIONET_12N-302S thioamide # Expected 0.000000, found 385.962033 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1144 # molecular formula incorrect for hydrogen-added molecule BIONET_12N-302S thioamide</Error><Error file="formula.cpp" line="110">not ok 1145 # molecular weight incorrect for hydrogen-added molecule BIONET_12N-302S thioamide # Expected 0.000000, found 386.896740 </Error><Error file="formula.cpp" line="116">not ok 1146 # exact mass  incorrect for hydrogen-added molecule BIONET_12N-302S thioamide # Expected 0.000000, found 385.962033 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1147 # molecular formula incorrect for molecule BIONET_1D-038 epoxide # Expected Clc1ccc(cc1)C2OC2C(=O)c3ccccc3, found C15H11ClO2</Error><Error file="formula.cpp" line="87">not ok 1148 # molecular weight incorrect for molecule BIONET_1D-038 epoxide # Expected 0.000000, found 258.699640 </Error><Error file="formula.cpp" line="93">not ok 1149 # exact mass incorrect for molecule BIONET_1D-038 epoxide # Expected 0.000000, found 258.044757 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1150 # molecular formula incorrect for hydrogen-added molecule BIONET_1D-038 epoxide</Error><Error file="formula.cpp" line="110">not ok 1151 # molecular weight incorrect for hydrogen-added molecule BIONET_1D-038 epoxide # Expected 0.000000, found 258.699640 </Error><Error file="formula.cpp" line="116">not ok 1152 # exact mass  incorrect for hydrogen-added molecule BIONET_1D-038 epoxide # Expected 0.000000, found 258.044757 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1153 # molecular formula incorrect for molecule BIONET_1D-040 epoxide # Expected Clc1ccc(cc1)C(=O)C2OC2c3ccccc3, found C15H11ClO2</Error><Error file="formula.cpp" line="87">not ok 1154 # molecular weight incorrect for molecule BIONET_1D-040 epoxide # Expected 0.000000, found 258.699640 </Error><Error file="formula.cpp" line="93">not ok 1155 # exact mass incorrect for molecule BIONET_1D-040 epoxide # Expected 0.000000, found 258.044757 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1156 # molecular formula incorrect for hydrogen-added molecule BIONET_1D-040 epoxide</Error><Error file="formula.cpp" line="110">not ok 1157 # molecular weight incorrect for hydrogen-added molecule BIONET_1D-040 epoxide # Expected 0.000000, found 258.699640 </Error><Error file="formula.cpp" line="116">not ok 1158 # exact mass  incorrect for hydrogen-added molecule BIONET_1D-040 epoxide # Expected 0.000000, found 258.044757 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1159 # molecular formula incorrect for molecule BIONET_1J-022 thiol # Expected CC(C)(S)CNc1ncc(cc1Cl)C(F)(F)F, found C10H12ClF3N2S</Error><Error file="formula.cpp" line="87">not ok 1160 # molecular weight incorrect for molecule BIONET_1J-022 thiol # Expected 0.000000, found 284.728890 </Error><Error file="formula.cpp" line="93">not ok 1161 # exact mass incorrect for molecule BIONET_1J-022 thiol # Expected 0.000000, found 284.036182 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1162 # molecular formula incorrect for hydrogen-added molecule BIONET_1J-022 thiol</Error><Error file="formula.cpp" line="110">not ok 1163 # molecular weight incorrect for hydrogen-added molecule BIONET_1J-022 thiol # Expected 0.000000, found 284.728890 </Error><Error file="formula.cpp" line="116">not ok 1164 # exact mass  incorrect for hydrogen-added molecule BIONET_1J-022 thiol # Expected 0.000000, found 284.036182 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1165 # molecular formula incorrect for molecule BIONET_2G-003 azo # Expected Cc1ccc(NN=C(N=Nc2ccc(C)cc2)C(=O)Nc3ccc(Cl)cc3)cc1, found C22H20ClN5O</Error><Error file="formula.cpp" line="87">not ok 1166 # molecular weight incorrect for molecule BIONET_2G-003 azo # Expected 0.000000, found 405.880100 </Error><Error file="formula.cpp" line="93">not ok 1167 # exact mass incorrect for molecule BIONET_2G-003 azo # Expected 0.000000, found 405.135638 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1168 # molecular formula incorrect for hydrogen-added molecule BIONET_2G-003 azo</Error><Error file="formula.cpp" line="110">not ok 1169 # molecular weight incorrect for hydrogen-added molecule BIONET_2G-003 azo # Expected 0.000000, found 405.880100 </Error><Error file="formula.cpp" line="116">not ok 1170 # exact mass  incorrect for hydrogen-added molecule BIONET_2G-003 azo # Expected 0.000000, found 405.135638 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1171 # molecular formula incorrect for molecule BIONET_2G-909 hydroxylamine # Expected ON(Cc1ccc(Cl)cc1)Cc2ccc(Cl)cc2, found C14H13Cl2NO</Error><Error file="formula.cpp" line="87">not ok 1172 # molecular weight incorrect for molecule BIONET_2G-909 hydroxylamine # Expected 0.000000, found 282.165120 </Error><Error file="formula.cpp" line="93">not ok 1173 # exact mass incorrect for molecule BIONET_2G-909 hydroxylamine # Expected 0.000000, found 281.037419 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1174 # molecular formula incorrect for hydrogen-added molecule BIONET_2G-909 hydroxylamine</Error><Error file="formula.cpp" line="110">not ok 1175 # molecular weight incorrect for hydrogen-added molecule BIONET_2G-909 hydroxylamine # Expected 0.000000, found 282.165120 </Error><Error file="formula.cpp" line="116">not ok 1176 # exact mass  incorrect for hydrogen-added molecule BIONET_2G-909 hydroxylamine # Expected 0.000000, found 281.037419 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1177 # molecular formula incorrect for molecule BIONET_2H-005 acid_chloride # Expected FC(F)(F)c1cnc(c(Cl)c1)n2cccc2C(=O)Cl, found C11H5Cl2F3N2O</Error><Error file="formula.cpp" line="87">not ok 1178 # molecular weight incorrect for molecule BIONET_2H-005 acid_chloride # Expected 0.000000, found 309.071410 </Error><Error file="formula.cpp" line="93">not ok 1179 # exact mass incorrect for molecule BIONET_2H-005 acid_chloride # Expected 0.000000, found 307.973103 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1180 # molecular formula incorrect for hydrogen-added molecule BIONET_2H-005 acid_chloride</Error><Error file="formula.cpp" line="110">not ok 1181 # molecular weight incorrect for hydrogen-added molecule BIONET_2H-005 acid_chloride # Expected 0.000000, found 309.071410 </Error><Error file="formula.cpp" line="116">not ok 1182 # exact mass  incorrect for hydrogen-added molecule BIONET_2H-005 acid_chloride # Expected 0.000000, found 307.973103 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1183 # molecular formula incorrect for molecule BIONET_2H-054 sulfonyl_halide # Expected FC(F)(F)c1cnc(c(Cl)c1)n2cccc2S(=O)(=O)Cl, found C10H5Cl2F3N2O2S</Error><Error file="formula.cpp" line="87">not ok 1184 # molecular weight incorrect for molecule BIONET_2H-054 sulfonyl_halide # Expected 0.000000, found 345.125110 </Error><Error file="formula.cpp" line="93">not ok 1185 # exact mass incorrect for molecule BIONET_2H-054 sulfonyl_halide # Expected 0.000000, found 343.940088 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1186 # molecular formula incorrect for hydrogen-added molecule BIONET_2H-054 sulfonyl_halide</Error><Error file="formula.cpp" line="110">not ok 1187 # molecular weight incorrect for hydrogen-added molecule BIONET_2H-054 sulfonyl_halide # Expected 0.000000, found 345.125110 </Error><Error file="formula.cpp" line="116">not ok 1188 # exact mass  incorrect for hydrogen-added molecule BIONET_2H-054 sulfonyl_halide # Expected 0.000000, found 343.940088 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1189 # molecular formula incorrect for molecule BIONET_3E-349S thiol # Expected Sc1nc2sccn2c1C=O, found C6H4N2OS2</Error><Error file="formula.cpp" line="87">not ok 1190 # molecular weight incorrect for molecule BIONET_3E-349S thiol # Expected 0.000000, found 184.238760 </Error><Error file="formula.cpp" line="93">not ok 1191 # exact mass incorrect for molecule BIONET_3E-349S thiol # Expected 0.000000, found 183.976505 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1192 # molecular formula incorrect for hydrogen-added molecule BIONET_3E-349S thiol</Error><Error file="formula.cpp" line="110">not ok 1193 # molecular weight incorrect for hydrogen-added molecule BIONET_3E-349S thiol # Expected 0.000000, found 184.238760 </Error><Error file="formula.cpp" line="116">not ok 1194 # exact mass  incorrect for hydrogen-added molecule BIONET_3E-349S thiol # Expected 0.000000, found 183.976505 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1195 # molecular formula incorrect for molecule BIONET_3H-053 peroxide # Expected CC(C)(CCOO)Cc1cn(=O)c2ccccc2n1, found C14H18N2O3</Error><Error file="formula.cpp" line="87">not ok 1196 # molecular weight incorrect for molecule BIONET_3H-053 peroxide # Expected 0.000000, found 262.304320 </Error><Error file="formula.cpp" line="93">not ok 1197 # exact mass incorrect for molecule BIONET_3H-053 peroxide # Expected 0.000000, found 262.131742 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1198 # molecular formula incorrect for hydrogen-added molecule BIONET_3H-053 peroxide</Error><Error file="formula.cpp" line="110">not ok 1199 # molecular weight incorrect for hydrogen-added molecule BIONET_3H-053 peroxide # Expected 0.000000, found 262.304320 </Error><Error file="formula.cpp" line="116">not ok 1200 # exact mass  incorrect for hydrogen-added molecule BIONET_3H-053 peroxide # Expected 0.000000, found 262.131742 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1201 # molecular formula incorrect for molecule BIONET_3H-372S thiol # Expected Sc1snnc1c2ccccc2, found C8H6N2S2</Error><Error file="formula.cpp" line="87">not ok 1202 # molecular weight incorrect for molecule BIONET_3H-372S thiol # Expected 0.000000, found 194.276640 </Error><Error file="formula.cpp" line="93">not ok 1203 # exact mass incorrect for molecule BIONET_3H-372S thiol # Expected 0.000000, found 193.997240 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1204 # molecular formula incorrect for hydrogen-added molecule BIONET_3H-372S thiol</Error><Error file="formula.cpp" line="110">not ok 1205 # molecular weight incorrect for hydrogen-added molecule BIONET_3H-372S thiol # Expected 0.000000, found 194.276640 </Error><Error file="formula.cpp" line="116">not ok 1206 # exact mass  incorrect for hydrogen-added molecule BIONET_3H-372S thiol # Expected 0.000000, found 193.997240 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1207 # molecular formula incorrect for molecule BIONET_3H-936 dithioacetal # Expected FC(F)(F)c1cnc(c(Cl)c1)n2cc(C3SCCCS3)c4ccccc24, found C18H14ClF3N2S2</Error><Error file="formula.cpp" line="87">not ok 1208 # molecular weight incorrect for molecule BIONET_3H-936 dithioacetal # Expected 0.000000, found 414.895370 </Error><Error file="formula.cpp" line="93">not ok 1209 # exact mass incorrect for molecule BIONET_3H-936 dithioacetal # Expected 0.000000, found 414.023903 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1210 # molecular formula incorrect for hydrogen-added molecule BIONET_3H-936 dithioacetal</Error><Error file="formula.cpp" line="110">not ok 1211 # molecular weight incorrect for hydrogen-added molecule BIONET_3H-936 dithioacetal # Expected 0.000000, found 414.895370 </Error><Error file="formula.cpp" line="116">not ok 1212 # exact mass  incorrect for hydrogen-added molecule BIONET_3H-936 dithioacetal # Expected 0.000000, found 414.023903 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1213 # molecular formula incorrect for molecule BIONET_3K-002 sulfonyl_halide # Expected FC(F)(F)c1cc(c2ccc(Oc3ccc(cc3)S(=O)(=O)Cl)nc2n1)C(F)(F)F, found C16H7ClF6N2O3S</Error><Error file="formula.cpp" line="87">not ok 1214 # molecular weight incorrect for molecule BIONET_3K-002 sulfonyl_halide # Expected 0.000000, found 456.746799 </Error><Error file="formula.cpp" line="93">not ok 1215 # exact mass incorrect for molecule BIONET_3K-002 sulfonyl_halide # Expected 0.000000, found 455.977010 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1216 # molecular formula incorrect for hydrogen-added molecule BIONET_3K-002 sulfonyl_halide</Error><Error file="formula.cpp" line="110">not ok 1217 # molecular weight incorrect for hydrogen-added molecule BIONET_3K-002 sulfonyl_halide # Expected 0.000000, found 456.746799 </Error><Error file="formula.cpp" line="116">not ok 1218 # exact mass  incorrect for hydrogen-added molecule BIONET_3K-002 sulfonyl_halide # Expected 0.000000, found 455.977010 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1219 # molecular formula incorrect for molecule BIONET_4G-049 azide # Expected FC(F)(F)c1cnc(C#N)c(N=[N+]=N)c1, found C7H3F3N5</Error><Error file="formula.cpp" line="87">not ok 1220 # molecular weight incorrect for molecule BIONET_4G-049 azide # Expected 0.000000, found 214.127430 </Error><Error file="formula.cpp" line="93">not ok 1221 # exact mass incorrect for molecule BIONET_4G-049 azide # Expected 0.000000, found 214.034055 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1222 # molecular formula incorrect for hydrogen-added molecule BIONET_4G-049 azide</Error><Error file="formula.cpp" line="110">not ok 1223 # molecular weight incorrect for hydrogen-added molecule BIONET_4G-049 azide # Expected 0.000000, found 214.127430 </Error><Error file="formula.cpp" line="116">not ok 1224 # exact mass  incorrect for hydrogen-added molecule BIONET_4G-049 azide # Expected 0.000000, found 214.034055 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1225 # molecular formula incorrect for molecule BIONET_4J-923 hydroxylamine # Expected CC1=NN(C(=O)C1C(N(O)c2ccccc2)c3ccccc3)c4ccccc4, found C23H21N3O2</Error><Error file="formula.cpp" line="87">not ok 1226 # molecular weight incorrect for molecule BIONET_4J-923 hydroxylamine # Expected 0.000000, found 371.431740 </Error><Error file="formula.cpp" line="93">not ok 1227 # exact mass incorrect for molecule BIONET_4J-923 hydroxylamine # Expected 0.000000, found 371.163377 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1228 # molecular formula incorrect for hydrogen-added molecule BIONET_4J-923 hydroxylamine</Error><Error file="formula.cpp" line="110">not ok 1229 # molecular weight incorrect for hydrogen-added molecule BIONET_4J-923 hydroxylamine # Expected 0.000000, found 371.431740 </Error><Error file="formula.cpp" line="116">not ok 1230 # exact mass  incorrect for hydrogen-added molecule BIONET_4J-923 hydroxylamine # Expected 0.000000, found 371.163377 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1231 # molecular formula incorrect for molecule BIONET_4L-360S carbonate # Expected CCOC(=O)Oc1cc(N(=O)=O)c(Cl)cc1Cl, found C9H7Cl2NO5</Error><Error file="formula.cpp" line="87">not ok 1232 # molecular weight incorrect for molecule BIONET_4L-360S carbonate # Expected 0.000000, found 280.061580 </Error><Error file="formula.cpp" line="93">not ok 1233 # exact mass incorrect for molecule BIONET_4L-360S carbonate # Expected 0.000000, found 278.970128 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1234 # molecular formula incorrect for hydrogen-added molecule BIONET_4L-360S carbonate</Error><Error file="formula.cpp" line="110">not ok 1235 # molecular weight incorrect for hydrogen-added molecule BIONET_4L-360S carbonate # Expected 0.000000, found 280.061580 </Error><Error file="formula.cpp" line="116">not ok 1236 # exact mass  incorrect for hydrogen-added molecule BIONET_4L-360S carbonate # Expected 0.000000, found 278.970128 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1237 # molecular formula incorrect for molecule BIONET_5G-055 phosphoric_ester # Expected OC(c1ccncc1)P(=O)(Oc2ccccc2)Oc3ccccc3, found C18H16NO4P</Error><Error file="formula.cpp" line="87">not ok 1238 # molecular weight incorrect for molecule BIONET_5G-055 phosphoric_ester # Expected 0.000000, found 341.297701 </Error><Error file="formula.cpp" line="93">not ok 1239 # exact mass incorrect for molecule BIONET_5G-055 phosphoric_ester # Expected 0.000000, found 341.081695 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1240 # molecular formula incorrect for hydrogen-added molecule BIONET_5G-055 phosphoric_ester</Error><Error file="formula.cpp" line="110">not ok 1241 # molecular weight incorrect for hydrogen-added molecule BIONET_5G-055 phosphoric_ester # Expected 0.000000, found 341.297701 </Error><Error file="formula.cpp" line="116">not ok 1242 # exact mass  incorrect for hydrogen-added molecule BIONET_5G-055 phosphoric_ester # Expected 0.000000, found 341.081695 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1243 # molecular formula incorrect for molecule BIONET_5G-056 phosphoric_ester # Expected OC(c1ccc(Cl)cc1Cl)P(=O)(Oc2ccccc2)Oc3ccccc3, found C19H15Cl2O4P</Error><Error file="formula.cpp" line="87">not ok 1244 # molecular weight incorrect for molecule BIONET_5G-056 phosphoric_ester # Expected 0.000000, found 409.199761 </Error><Error file="formula.cpp" line="93">not ok 1245 # exact mass incorrect for molecule BIONET_5G-056 phosphoric_ester # Expected 0.000000, found 408.008501 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1246 # molecular formula incorrect for hydrogen-added molecule BIONET_5G-056 phosphoric_ester</Error><Error file="formula.cpp" line="110">not ok 1247 # molecular weight incorrect for hydrogen-added molecule BIONET_5G-056 phosphoric_ester # Expected 0.000000, found 409.199761 </Error><Error file="formula.cpp" line="116">not ok 1248 # exact mass  incorrect for hydrogen-added molecule BIONET_5G-056 phosphoric_ester # Expected 0.000000, found 408.008501 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1249 # molecular formula incorrect for molecule BIONET_6P-110 hemiacetal # Expected OC1CSC(O1)C(=O)O, found C4H6O4S</Error><Error file="formula.cpp" line="87">not ok 1250 # molecular weight incorrect for molecule BIONET_6P-110 hemiacetal # Expected 0.000000, found 150.153040 </Error><Error file="formula.cpp" line="93">not ok 1251 # exact mass incorrect for molecule BIONET_6P-110 hemiacetal # Expected 0.000000, found 149.998680 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1252 # molecular formula incorrect for hydrogen-added molecule BIONET_6P-110 hemiacetal</Error><Error file="formula.cpp" line="110">not ok 1253 # molecular weight incorrect for hydrogen-added molecule BIONET_6P-110 hemiacetal # Expected 0.000000, found 150.153040 </Error><Error file="formula.cpp" line="116">not ok 1254 # exact mass  incorrect for hydrogen-added molecule BIONET_6P-110 hemiacetal # Expected 0.000000, found 149.998680 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1255 # molecular formula incorrect for molecule BIONET_7G-062 sulfonic_acid # Expected OS(=O)(=O)c1ccc(Cc2ncc(cc2Cl)C(F)(F)F)s1, found C11H7ClF3NO3S2</Error><Error file="formula.cpp" line="87">not ok 1256 # molecular weight incorrect for molecule BIONET_7G-062 sulfonic_acid # Expected 0.000000, found 357.756390 </Error><Error file="formula.cpp" line="93">not ok 1257 # exact mass incorrect for molecule BIONET_7G-062 sulfonic_acid # Expected 0.000000, found 356.950797 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1258 # molecular formula incorrect for hydrogen-added molecule BIONET_7G-062 sulfonic_acid</Error><Error file="formula.cpp" line="110">not ok 1259 # molecular weight incorrect for hydrogen-added molecule BIONET_7G-062 sulfonic_acid # Expected 0.000000, found 357.756390 </Error><Error file="formula.cpp" line="116">not ok 1260 # exact mass  incorrect for hydrogen-added molecule BIONET_7G-062 sulfonic_acid # Expected 0.000000, found 356.950797 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1261 # molecular formula incorrect for molecule BIONET_7J-349S thiocarbamate # Expected CN(C)C(=S)Oc1c(C)cc(cc1C)C(=O)CSc2ccc(Cl)cc2, found C19H20ClNO2S2</Error><Error file="formula.cpp" line="87">not ok 1262 # molecular weight incorrect for molecule BIONET_7J-349S thiocarbamate # Expected 0.000000, found 393.950600 </Error><Error file="formula.cpp" line="93">not ok 1263 # exact mass incorrect for molecule BIONET_7J-349S thiocarbamate # Expected 0.000000, found 393.062399 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1264 # molecular formula incorrect for hydrogen-added molecule BIONET_7J-349S thiocarbamate</Error><Error file="formula.cpp" line="110">not ok 1265 # molecular weight incorrect for hydrogen-added molecule BIONET_7J-349S thiocarbamate # Expected 0.000000, found 393.950600 </Error><Error file="formula.cpp" line="116">not ok 1266 # exact mass  incorrect for hydrogen-added molecule BIONET_7J-349S thiocarbamate # Expected 0.000000, found 393.062399 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1267 # molecular formula incorrect for molecule BIONET_7J-351S thiocarbamate # Expected CN(C)C(=S)Oc1c(C)cc(cc1C)C(=O)CSc2cccc(c2)C(F)(F)F, found C20H20F3NO2S2</Error><Error file="formula.cpp" line="87">not ok 1268 # molecular weight incorrect for molecule BIONET_7J-351S thiocarbamate # Expected 0.000000, found 427.503510 </Error><Error file="formula.cpp" line="93">not ok 1269 # exact mass incorrect for molecule BIONET_7J-351S thiocarbamate # Expected 0.000000, found 427.088756 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1270 # molecular formula incorrect for hydrogen-added molecule BIONET_7J-351S thiocarbamate</Error><Error file="formula.cpp" line="110">not ok 1271 # molecular weight incorrect for hydrogen-added molecule BIONET_7J-351S thiocarbamate # Expected 0.000000, found 427.503510 </Error><Error file="formula.cpp" line="116">not ok 1272 # exact mass  incorrect for hydrogen-added molecule BIONET_7J-351S thiocarbamate # Expected 0.000000, found 427.088756 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1273 # molecular formula incorrect for molecule BIONET_7K-383S sulfonic_acid # Expected Cc1ccc(cc1)c2cc3ccccc3nc2Cl.OS(=O)(=O)O, found C16H14ClNO4S</Error><Error file="formula.cpp" line="87">not ok 1274 # molecular weight incorrect for molecule BIONET_7K-383S sulfonic_acid # Expected 0.000000, found 351.804660 </Error><Error file="formula.cpp" line="93">not ok 1275 # exact mass incorrect for molecule BIONET_7K-383S sulfonic_acid # Expected 0.000000, found 351.033207 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1276 # molecular formula incorrect for hydrogen-added molecule BIONET_7K-383S sulfonic_acid</Error><Error file="formula.cpp" line="110">not ok 1277 # molecular weight incorrect for hydrogen-added molecule BIONET_7K-383S sulfonic_acid # Expected 0.000000, found 351.804660 </Error><Error file="formula.cpp" line="116">not ok 1278 # exact mass  incorrect for hydrogen-added molecule BIONET_7K-383S sulfonic_acid # Expected 0.000000, found 351.033207 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1279 # molecular formula incorrect for molecule BIONET_7L-324S carbonate # Expected CCOC(=O)Oc1cc(N)c(Cl)cc1Cl, found C9H9Cl2NO3</Error><Error file="formula.cpp" line="87">not ok 1280 # molecular weight incorrect for molecule BIONET_7L-324S carbonate # Expected 0.000000, found 250.078660 </Error><Error file="formula.cpp" line="93">not ok 1281 # exact mass incorrect for molecule BIONET_7L-324S carbonate # Expected 0.000000, found 248.995949 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1282 # molecular formula incorrect for hydrogen-added molecule BIONET_7L-324S carbonate</Error><Error file="formula.cpp" line="110">not ok 1283 # molecular weight incorrect for hydrogen-added molecule BIONET_7L-324S carbonate # Expected 0.000000, found 250.078660 </Error><Error file="formula.cpp" line="116">not ok 1284 # exact mass  incorrect for hydrogen-added molecule BIONET_7L-324S carbonate # Expected 0.000000, found 248.995949 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1285 # molecular formula incorrect for molecule BIONET_7M-824 sulfonic_acid # Expected Cc1cc(=O)[nH]c(SCCS(=O)(=O)O)n1, found C7H10N2O4S2</Error><Error file="formula.cpp" line="87">not ok 1286 # molecular weight incorrect for molecule BIONET_7M-824 sulfonic_acid # Expected 0.000000, found 250.295300 </Error><Error file="formula.cpp" line="93">not ok 1287 # exact mass incorrect for molecule BIONET_7M-824 sulfonic_acid # Expected 0.000000, found 250.008199 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1288 # molecular formula incorrect for hydrogen-added molecule BIONET_7M-824 sulfonic_acid</Error><Error file="formula.cpp" line="110">not ok 1289 # molecular weight incorrect for hydrogen-added molecule BIONET_7M-824 sulfonic_acid # Expected 0.000000, found 250.295300 </Error><Error file="formula.cpp" line="116">not ok 1290 # exact mass  incorrect for hydrogen-added molecule BIONET_7M-824 sulfonic_acid # Expected 0.000000, found 250.008199 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1291 # molecular formula incorrect for molecule BUTTPARK_26\07-82 phosphoric_ester # Expected COP(=O)(OC)C1Sc2ccccc2NC1=O, found C10H12NO4PS</Error><Error file="formula.cpp" line="87">not ok 1292 # molecular weight incorrect for molecule BUTTPARK_26\07-82 phosphoric_ester # Expected 0.000000, found 273.245341 </Error><Error file="formula.cpp" line="93">not ok 1293 # exact mass incorrect for molecule BUTTPARK_26\07-82 phosphoric_ester # Expected 0.000000, found 273.022465 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1294 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_26\07-82 phosphoric_ester</Error><Error file="formula.cpp" line="110">not ok 1295 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_26\07-82 phosphoric_ester # Expected 0.000000, found 273.245341 </Error><Error file="formula.cpp" line="116">not ok 1296 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_26\07-82 phosphoric_ester # Expected 0.000000, found 273.022465 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1297 # molecular formula incorrect for molecule BUTTPARK_27\06-91 acid_chloride # Expected Cc1nc(ccc1C(=O)Cl)C(F)(F)F, found C8H5ClF3NO</Error><Error file="formula.cpp" line="87">not ok 1298 # molecular weight incorrect for molecule BUTTPARK_27\06-91 acid_chloride # Expected 0.000000, found 223.579610 </Error><Error file="formula.cpp" line="93">not ok 1299 # exact mass incorrect for molecule BUTTPARK_27\06-91 acid_chloride # Expected 0.000000, found 223.001176 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1300 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_27\06-91 acid_chloride</Error><Error file="formula.cpp" line="110">not ok 1301 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_27\06-91 acid_chloride # Expected 0.000000, found 223.579610 </Error><Error file="formula.cpp" line="116">not ok 1302 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_27\06-91 acid_chloride # Expected 0.000000, found 223.001176 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1303 # molecular formula incorrect for molecule BUTTPARK_27\08-42 acid_chloride # Expected ClC(=O)c1ccno1, found C4H2ClNO2</Error><Error file="formula.cpp" line="87">not ok 1304 # molecular weight incorrect for molecule BUTTPARK_27\08-42 acid_chloride # Expected 0.000000, found 131.517180 </Error><Error file="formula.cpp" line="93">not ok 1305 # exact mass incorrect for molecule BUTTPARK_27\08-42 acid_chloride # Expected 0.000000, found 130.977406 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1306 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_27\08-42 acid_chloride</Error><Error file="formula.cpp" line="110">not ok 1307 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_27\08-42 acid_chloride # Expected 0.000000, found 131.517180 </Error><Error file="formula.cpp" line="116">not ok 1308 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_27\08-42 acid_chloride # Expected 0.000000, found 130.977406 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1309 # molecular formula incorrect for molecule BUTTPARK_27\08-44 acid_halide # Expected Cc1noc(C)c1C(=O)Cl, found C6H6ClNO2</Error><Error file="formula.cpp" line="87">not ok 1310 # molecular weight incorrect for molecule BUTTPARK_27\08-44 acid_halide # Expected 0.000000, found 159.570340 </Error><Error file="formula.cpp" line="93">not ok 1311 # exact mass incorrect for molecule BUTTPARK_27\08-44 acid_halide # Expected 0.000000, found 159.008706 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1312 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_27\08-44 acid_halide</Error><Error file="formula.cpp" line="110">not ok 1313 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_27\08-44 acid_halide # Expected 0.000000, found 159.570340 </Error><Error file="formula.cpp" line="116">not ok 1314 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_27\08-44 acid_halide # Expected 0.000000, found 159.008706 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1315 # molecular formula incorrect for molecule BUTTPARK_27\08-46 acid_halide # Expected Cc1noc(c1C(=O)Cl)C(F)(F)F, found C6H3ClF3NO2</Error><Error file="formula.cpp" line="87">not ok 1316 # molecular weight incorrect for molecule BUTTPARK_27\08-46 acid_halide # Expected 0.000000, found 213.541730 </Error><Error file="formula.cpp" line="93">not ok 1317 # exact mass incorrect for molecule BUTTPARK_27\08-46 acid_halide # Expected 0.000000, found 212.980441 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1318 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_27\08-46 acid_halide</Error><Error file="formula.cpp" line="110">not ok 1319 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_27\08-46 acid_halide # Expected 0.000000, found 213.541730 </Error><Error file="formula.cpp" line="116">not ok 1320 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_27\08-46 acid_halide # Expected 0.000000, found 212.980441 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1321 # molecular formula incorrect for molecule BUTTPARK_27\08-48 acid_halide # Expected Cc1cc(no1)C(=O)Cl, found C5H4ClNO2</Error><Error file="formula.cpp" line="87">not ok 1322 # molecular weight incorrect for molecule BUTTPARK_27\08-48 acid_halide # Expected 0.000000, found 145.543760 </Error><Error file="formula.cpp" line="93">not ok 1323 # exact mass incorrect for molecule BUTTPARK_27\08-48 acid_halide # Expected 0.000000, found 144.993056 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1324 # molecular formula incorrect for hydrogen-added molecule BUTTPARK_27\08-48 acid_halide</Error><Error file="formula.cpp" line="110">not ok 1325 # molecular weight incorrect for hydrogen-added molecule BUTTPARK_27\08-48 acid_halide # Expected 0.000000, found 145.543760 </Error><Error file="formula.cpp" line="116">not ok 1326 # exact mass  incorrect for hydrogen-added molecule BUTTPARK_27\08-48 acid_halide # Expected 0.000000, found 144.993056 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1327 # molecular formula incorrect for molecule CHEMBRDG_5106736 phosphoric_acid # Expected NCCSP(=O)(O)O, found C2H8NO3PS</Error><Error file="formula.cpp" line="87">not ok 1328 # molecular weight incorrect for molecule CHEMBRDG_5106736 phosphoric_acid # Expected 0.000000, found 157.128581 </Error><Error file="formula.cpp" line="93">not ok 1329 # exact mass incorrect for molecule CHEMBRDG_5106736 phosphoric_acid # Expected 0.000000, found 156.996251 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1330 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5106736 phosphoric_acid</Error><Error file="formula.cpp" line="110">not ok 1331 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5106736 phosphoric_acid # Expected 0.000000, found 157.128581 </Error><Error file="formula.cpp" line="116">not ok 1332 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5106736 phosphoric_acid # Expected 0.000000, found 156.996251 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1333 # molecular formula incorrect for molecule CHEMBRDG_5106739 phosphoric_acid # Expected OCC(O)COP(=O)(O)O, found C3H9O6P</Error><Error file="formula.cpp" line="87">not ok 1334 # molecular weight incorrect for molecule CHEMBRDG_5106739 phosphoric_acid # Expected 0.000000, found 172.073721 </Error><Error file="formula.cpp" line="93">not ok 1335 # exact mass incorrect for molecule CHEMBRDG_5106739 phosphoric_acid # Expected 0.000000, found 172.013675 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1336 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5106739 phosphoric_acid</Error><Error file="formula.cpp" line="110">not ok 1337 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5106739 phosphoric_acid # Expected 0.000000, found 172.073721 </Error><Error file="formula.cpp" line="116">not ok 1338 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5106739 phosphoric_acid # Expected 0.000000, found 172.013675 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1339 # molecular formula incorrect for molecule CHEMBRDG_5110414 phosphoric_acid # Expected NCCC(O)(P(=O)(O)O)P(=O)(O)O, found C3H11NO7P2</Error><Error file="formula.cpp" line="87">not ok 1340 # molecular weight incorrect for molecule CHEMBRDG_5110414 phosphoric_acid # Expected 0.000000, found 235.069462 </Error><Error file="formula.cpp" line="93">not ok 1341 # exact mass incorrect for molecule CHEMBRDG_5110414 phosphoric_acid # Expected 0.000000, found 235.001075 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1342 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5110414 phosphoric_acid</Error><Error file="formula.cpp" line="110">not ok 1343 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5110414 phosphoric_acid # Expected 0.000000, found 235.069462 </Error><Error file="formula.cpp" line="116">not ok 1344 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5110414 phosphoric_acid # Expected 0.000000, found 235.001075 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1345 # molecular formula incorrect for molecule CHEMBRDG_5117510 carbonate # Expected COC(=O)OC1=C(C(=O)c2ccccc12)c3ccccc3, found C17H12O4</Error><Error file="formula.cpp" line="87">not ok 1346 # molecular weight incorrect for molecule CHEMBRDG_5117510 carbonate # Expected 0.000000, found 280.274780 </Error><Error file="formula.cpp" line="93">not ok 1347 # exact mass incorrect for molecule CHEMBRDG_5117510 carbonate # Expected 0.000000, found 280.073559 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1348 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5117510 carbonate</Error><Error file="formula.cpp" line="110">not ok 1349 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5117510 carbonate # Expected 0.000000, found 280.274780 </Error><Error file="formula.cpp" line="116">not ok 1350 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5117510 carbonate # Expected 0.000000, found 280.073559 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1351 # molecular formula incorrect for molecule CHEMBRDG_5152335 hemiacetal # Expected NC1C(O)OC(CO)C(O)C1O, found C6H13NO5</Error><Error file="formula.cpp" line="87">not ok 1352 # molecular weight incorrect for molecule CHEMBRDG_5152335 hemiacetal # Expected 0.000000, found 179.171120 </Error><Error file="formula.cpp" line="93">not ok 1353 # exact mass incorrect for molecule CHEMBRDG_5152335 hemiacetal # Expected 0.000000, found 179.079373 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1354 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5152335 hemiacetal</Error><Error file="formula.cpp" line="110">not ok 1355 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5152335 hemiacetal # Expected 0.000000, found 179.171120 </Error><Error file="formula.cpp" line="116">not ok 1356 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5152335 hemiacetal # Expected 0.000000, found 179.079373 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1357 # molecular formula incorrect for molecule CHEMBRDG_5573964 hemiketal # Expected CC1(C)CC(=O)C2=C(C1)OC3(O)CC2C4COC3O4, found C14H18O5</Error><Error file="formula.cpp" line="87">not ok 1358 # molecular weight incorrect for molecule CHEMBRDG_5573964 hemiketal # Expected 0.000000, found 266.289720 </Error><Error file="formula.cpp" line="93">not ok 1359 # exact mass incorrect for molecule CHEMBRDG_5573964 hemiketal # Expected 0.000000, found 266.115424 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1360 # molecular formula incorrect for hydrogen-added molecule CHEMBRDG_5573964 hemiketal</Error><Error file="formula.cpp" line="110">not ok 1361 # molecular weight incorrect for hydrogen-added molecule CHEMBRDG_5573964 hemiketal # Expected 0.000000, found 266.289720 </Error><Error file="formula.cpp" line="116">not ok 1362 # exact mass  incorrect for hydrogen-added molecule CHEMBRDG_5573964 hemiketal # Expected 0.000000, found 266.115424 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1363 # molecular formula incorrect for molecule CHEMSTAR_CHS_0022416 hemiacetal # Expected OCC1OC(O)C(O)C1O, found C5H10O5</Error><Error file="formula.cpp" line="87">not ok 1364 # molecular weight incorrect for molecule CHEMSTAR_CHS_0022416 hemiacetal # Expected 0.000000, found 150.129900 </Error><Error file="formula.cpp" line="93">not ok 1365 # exact mass incorrect for molecule CHEMSTAR_CHS_0022416 hemiacetal # Expected 0.000000, found 150.052823 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1366 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_0022416 hemiacetal</Error><Error file="formula.cpp" line="110">not ok 1367 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_0022416 hemiacetal # Expected 0.000000, found 150.129900 </Error><Error file="formula.cpp" line="116">not ok 1368 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_0022416 hemiacetal # Expected 0.000000, found 150.052823 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1369 # molecular formula incorrect for molecule CHEMSTAR_CHS_0062621 hemiketal # Expected CO[C@@H]1C[C@@H](C[C@H]2CC[C@H](C)[C@@H](O2)[C@@H](C)C(=O)O)O[C@]3(O[C@@](C)(C[C@H]3C)[C@@H]4CC[C@@](C)(O4)[C@H]5O[C@@H](C[C@H]5C)[C@@H]6O[C@](O)(CO)[C@@H](C)C[C@H]6C)[C@@H]1C, found C40H68O11</Error><Error file="formula.cpp" line="87">not ok 1370 # molecular weight incorrect for molecule CHEMSTAR_CHS_0062621 hemiketal # Expected 0.000000, found 724.961320 </Error><Error file="formula.cpp" line="93">not ok 1371 # exact mass incorrect for molecule CHEMSTAR_CHS_0062621 hemiketal # Expected 0.000000, found 724.476163 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1372 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_0062621 hemiketal</Error><Error file="formula.cpp" line="110">not ok 1373 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_0062621 hemiketal # Expected 0.000000, found 724.961320 </Error><Error file="formula.cpp" line="116">not ok 1374 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_0062621 hemiketal # Expected 0.000000, found 724.476163 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1375 # molecular formula incorrect for molecule CHEMSTAR_CHS_0296374 isocyanate # Expected O=C=NC1CCS(=O)(=O)C1, found C5H7NO3S</Error><Error file="formula.cpp" line="87">not ok 1376 # molecular weight incorrect for molecule CHEMSTAR_CHS_0296374 isocyanate # Expected 0.000000, found 161.178980 </Error><Error file="formula.cpp" line="93">not ok 1377 # exact mass incorrect for molecule CHEMSTAR_CHS_0296374 isocyanate # Expected 0.000000, found 161.014664 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1378 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_0296374 isocyanate</Error><Error file="formula.cpp" line="110">not ok 1379 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_0296374 isocyanate # Expected 0.000000, found 161.178980 </Error><Error file="formula.cpp" line="116">not ok 1380 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_0296374 isocyanate # Expected 0.000000, found 161.014664 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1381 # molecular formula incorrect for molecule CHEMSTAR_CHS_1054457 aldehyde # Expected CCOC(=O)C1=C(C)N=C2S/C(=C\c3cccc(OCc4ccc(Cl)cc4)c3)/CN2C1c5cccc(OC)c5.C=O, found C32H31ClN2O5S</Error><Error file="formula.cpp" line="87">not ok 1382 # molecular weight incorrect for molecule CHEMSTAR_CHS_1054457 aldehyde # Expected 0.000000, found 591.116940 </Error><Error file="formula.cpp" line="93">not ok 1383 # exact mass incorrect for molecule CHEMSTAR_CHS_1054457 aldehyde # Expected 0.000000, found 590.164221 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1384 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054457 aldehyde</Error><Error file="formula.cpp" line="110">not ok 1385 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054457 aldehyde # Expected 0.000000, found 591.116940 </Error><Error file="formula.cpp" line="116">not ok 1386 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054457 aldehyde # Expected 0.000000, found 590.164221 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1387 # molecular formula incorrect for molecule CHEMSTAR_CHS_1054529 aldehyde # Expected CCOC(=O)C1=C(C)N=C2S/C(=C\c3ccc(OC)c(OC)c3)/CN2C1c4cccc(OC)c4.C=O, found C27H30N2O6S</Error><Error file="formula.cpp" line="87">not ok 1388 # molecular weight incorrect for molecule CHEMSTAR_CHS_1054529 aldehyde # Expected 0.000000, found 510.601900 </Error><Error file="formula.cpp" line="93">not ok 1389 # exact mass incorrect for molecule CHEMSTAR_CHS_1054529 aldehyde # Expected 0.000000, found 510.182458 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1390 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054529 aldehyde</Error><Error file="formula.cpp" line="110">not ok 1391 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054529 aldehyde # Expected 0.000000, found 510.601900 </Error><Error file="formula.cpp" line="116">not ok 1392 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054529 aldehyde # Expected 0.000000, found 510.182458 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1393 # molecular formula incorrect for molecule CHEMSTAR_CHS_1054552 aldehyde # Expected CCOC(=O)C1=C(C)N=C2S/C(=C\c3c4ccccc4cc5ccccc35)/CN2C1c6cccc(OC)c6.C=O, found C33H30N2O4S</Error><Error file="formula.cpp" line="87">not ok 1394 # molecular weight incorrect for molecule CHEMSTAR_CHS_1054552 aldehyde # Expected 0.000000, found 550.667300 </Error><Error file="formula.cpp" line="93">not ok 1395 # exact mass incorrect for molecule CHEMSTAR_CHS_1054552 aldehyde # Expected 0.000000, found 550.192628 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1396 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054552 aldehyde</Error><Error file="formula.cpp" line="110">not ok 1397 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054552 aldehyde # Expected 0.000000, found 550.667300 </Error><Error file="formula.cpp" line="116">not ok 1398 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_1054552 aldehyde # Expected 0.000000, found 550.192628 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1399 # molecular formula incorrect for molecule CHEMSTAR_CHS_1120524 carbamic_acid # Expected CCN(CC)C(=O)O, found C5H11NO2</Error><Error file="formula.cpp" line="87">not ok 1400 # molecular weight incorrect for molecule CHEMSTAR_CHS_1120524 carbamic_acid # Expected 0.000000, found 117.146340 </Error><Error file="formula.cpp" line="93">not ok 1401 # exact mass incorrect for molecule CHEMSTAR_CHS_1120524 carbamic_acid # Expected 0.000000, found 117.078979 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1402 # molecular formula incorrect for hydrogen-added molecule CHEMSTAR_CHS_1120524 carbamic_acid</Error><Error file="formula.cpp" line="110">not ok 1403 # molecular weight incorrect for hydrogen-added molecule CHEMSTAR_CHS_1120524 carbamic_acid # Expected 0.000000, found 117.146340 </Error><Error file="formula.cpp" line="116">not ok 1404 # exact mass  incorrect for hydrogen-added molecule CHEMSTAR_CHS_1120524 carbamic_acid # Expected 0.000000, found 117.078979 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1405 # molecular formula incorrect for molecule CONTSERV_0286-0071 peroxide # Expected OOC(=O)CSc1ccc2ccccc2c1, found C12H10O3S</Error><Error file="formula.cpp" line="87">not ok 1406 # molecular weight incorrect for molecule CONTSERV_0286-0071 peroxide # Expected 0.000000, found 234.271000 </Error><Error file="formula.cpp" line="93">not ok 1407 # exact mass incorrect for molecule CONTSERV_0286-0071 peroxide # Expected 0.000000, found 234.035065 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1408 # molecular formula incorrect for hydrogen-added molecule CONTSERV_0286-0071 peroxide</Error><Error file="formula.cpp" line="110">not ok 1409 # molecular weight incorrect for hydrogen-added molecule CONTSERV_0286-0071 peroxide # Expected 0.000000, found 234.271000 </Error><Error file="formula.cpp" line="116">not ok 1410 # exact mass  incorrect for hydrogen-added molecule CONTSERV_0286-0071 peroxide # Expected 0.000000, found 234.035065 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1411 # molecular formula incorrect for molecule CONTSERV_0648-0025 dithioacetal # Expected CC(C)C1SCC(C)CS1, found C8H16S2</Error><Error file="formula.cpp" line="87">not ok 1412 # molecular weight incorrect for molecule CONTSERV_0648-0025 dithioacetal # Expected 0.000000, found 176.342640 </Error><Error file="formula.cpp" line="93">not ok 1413 # exact mass incorrect for molecule CONTSERV_0648-0025 dithioacetal # Expected 0.000000, found 176.069343 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1414 # molecular formula incorrect for hydrogen-added molecule CONTSERV_0648-0025 dithioacetal</Error><Error file="formula.cpp" line="110">not ok 1415 # molecular weight incorrect for hydrogen-added molecule CONTSERV_0648-0025 dithioacetal # Expected 0.000000, found 176.342640 </Error><Error file="formula.cpp" line="116">not ok 1416 # exact mass  incorrect for hydrogen-added molecule CONTSERV_0648-0025 dithioacetal # Expected 0.000000, found 176.069343 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1417 # molecular formula incorrect for molecule CONTSERV_0700-1648 thioester # Expected Fc1cccc(c1)C(=S)Oc2ccccc2, found C13H9FOS</Error><Error file="formula.cpp" line="87">not ok 1418 # molecular weight incorrect for molecule CONTSERV_0700-1648 thioester # Expected 0.000000, found 232.273363 </Error><Error file="formula.cpp" line="93">not ok 1419 # exact mass incorrect for molecule CONTSERV_0700-1648 thioester # Expected 0.000000, found 232.035814 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1420 # molecular formula incorrect for hydrogen-added molecule CONTSERV_0700-1648 thioester</Error><Error file="formula.cpp" line="110">not ok 1421 # molecular weight incorrect for hydrogen-added molecule CONTSERV_0700-1648 thioester # Expected 0.000000, found 232.273363 </Error><Error file="formula.cpp" line="116">not ok 1422 # exact mass  incorrect for hydrogen-added molecule CONTSERV_0700-1648 thioester # Expected 0.000000, found 232.035814 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1423 # molecular formula incorrect for molecule CONTSERV_1457-0018 thioester # Expected S=C/1OC(=C\C1=C/N2CCCCC2)c3ccccc3, found C16H17NOS</Error><Error file="formula.cpp" line="87">not ok 1424 # molecular weight incorrect for molecule CONTSERV_1457-0018 thioester # Expected 0.000000, found 271.377280 </Error><Error file="formula.cpp" line="93">not ok 1425 # exact mass incorrect for molecule CONTSERV_1457-0018 thioester # Expected 0.000000, found 271.103085 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1426 # molecular formula incorrect for hydrogen-added molecule CONTSERV_1457-0018 thioester</Error><Error file="formula.cpp" line="110">not ok 1427 # molecular weight incorrect for hydrogen-added molecule CONTSERV_1457-0018 thioester # Expected 0.000000, found 271.377280 </Error><Error file="formula.cpp" line="116">not ok 1428 # exact mass  incorrect for hydrogen-added molecule CONTSERV_1457-0018 thioester # Expected 0.000000, found 271.103085 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1429 # molecular formula incorrect for molecule CONTSERV_1457-0022 thioester # Expected N/C=C/1\C=C(OC1=S)c2ccccc2, found C11H9NOS</Error><Error file="formula.cpp" line="87">not ok 1430 # molecular weight incorrect for molecule CONTSERV_1457-0022 thioester # Expected 0.000000, found 203.260260 </Error><Error file="formula.cpp" line="93">not ok 1431 # exact mass incorrect for molecule CONTSERV_1457-0022 thioester # Expected 0.000000, found 203.040485 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1432 # molecular formula incorrect for hydrogen-added molecule CONTSERV_1457-0022 thioester</Error><Error file="formula.cpp" line="110">not ok 1433 # molecular weight incorrect for hydrogen-added molecule CONTSERV_1457-0022 thioester # Expected 0.000000, found 203.260260 </Error><Error file="formula.cpp" line="116">not ok 1434 # exact mass  incorrect for hydrogen-added molecule CONTSERV_1457-0022 thioester # Expected 0.000000, found 203.040485 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1435 # molecular formula incorrect for molecule CONTSERV_1731-0076 dithioacetal # Expected C=CCCCC1SCCCS1, found C9H16S2</Error><Error file="formula.cpp" line="87">not ok 1436 # molecular weight incorrect for molecule CONTSERV_1731-0076 dithioacetal # Expected 0.000000, found 188.353340 </Error><Error file="formula.cpp" line="93">not ok 1437 # exact mass incorrect for molecule CONTSERV_1731-0076 dithioacetal # Expected 0.000000, found 188.069343 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1438 # molecular formula incorrect for hydrogen-added molecule CONTSERV_1731-0076 dithioacetal</Error><Error file="formula.cpp" line="110">not ok 1439 # molecular weight incorrect for hydrogen-added molecule CONTSERV_1731-0076 dithioacetal # Expected 0.000000, found 188.353340 </Error><Error file="formula.cpp" line="116">not ok 1440 # exact mass  incorrect for hydrogen-added molecule CONTSERV_1731-0076 dithioacetal # Expected 0.000000, found 188.069343 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1441 # molecular formula incorrect for molecule CONTSERV_8001-5632 hemiketal # Expected CC1(C)CC(=O)C2=C(C1)OC3(O)C[C@H]2C4CO[C@@H]3O4, found C14H18O5</Error><Error file="formula.cpp" line="87">not ok 1442 # molecular weight incorrect for molecule CONTSERV_8001-5632 hemiketal # Expected 0.000000, found 266.289720 </Error><Error file="formula.cpp" line="93">not ok 1443 # exact mass incorrect for molecule CONTSERV_8001-5632 hemiketal # Expected 0.000000, found 266.115424 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1444 # molecular formula incorrect for hydrogen-added molecule CONTSERV_8001-5632 hemiketal</Error><Error file="formula.cpp" line="110">not ok 1445 # molecular weight incorrect for hydrogen-added molecule CONTSERV_8001-5632 hemiketal # Expected 0.000000, found 266.289720 </Error><Error file="formula.cpp" line="116">not ok 1446 # exact mass  incorrect for hydrogen-added molecule CONTSERV_8001-5632 hemiketal # Expected 0.000000, found 266.115424 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1447 # molecular formula incorrect for molecule CONTSERV_8002-4738 peroxide # Expected OOC(C(=O)NN=Cc1c2ccccc2cc3ccccc13)c4ccccc4, found C23H18N2O3</Error><Error file="formula.cpp" line="87">not ok 1448 # molecular weight incorrect for molecule CONTSERV_8002-4738 peroxide # Expected 0.000000, found 370.400620 </Error><Error file="formula.cpp" line="93">not ok 1449 # exact mass incorrect for molecule CONTSERV_8002-4738 peroxide # Expected 0.000000, found 370.131742 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1450 # molecular formula incorrect for hydrogen-added molecule CONTSERV_8002-4738 peroxide</Error><Error file="formula.cpp" line="110">not ok 1451 # molecular weight incorrect for hydrogen-added molecule CONTSERV_8002-4738 peroxide # Expected 0.000000, found 370.400620 </Error><Error file="formula.cpp" line="116">not ok 1452 # exact mass  incorrect for hydrogen-added molecule CONTSERV_8002-4738 peroxide # Expected 0.000000, found 370.131742 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1453 # molecular formula incorrect for molecule ENAMINE_T0503-2535 isothiocyanate # Expected Cc1ccc(cc1)S(=O)(=O)CN=C(N=C=S)c2ccccc2, found C16H14N2O2S2</Error><Error file="formula.cpp" line="87">not ok 1454 # molecular weight incorrect for molecule ENAMINE_T0503-2535 isothiocyanate # Expected 0.000000, found 330.424560 </Error><Error file="formula.cpp" line="93">not ok 1455 # exact mass incorrect for molecule ENAMINE_T0503-2535 isothiocyanate # Expected 0.000000, found 330.049670 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1456 # molecular formula incorrect for hydrogen-added molecule ENAMINE_T0503-2535 isothiocyanate</Error><Error file="formula.cpp" line="110">not ok 1457 # molecular weight incorrect for hydrogen-added molecule ENAMINE_T0503-2535 isothiocyanate # Expected 0.000000, found 330.424560 </Error><Error file="formula.cpp" line="116">not ok 1458 # exact mass  incorrect for hydrogen-added molecule ENAMINE_T0503-2535 isothiocyanate # Expected 0.000000, found 330.049670 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1459 # molecular formula incorrect for molecule IBS-NC_STOCK1N-02409 carbamic_acid # Expected OC(=O)NCC1OCCc2ccccc12, found C11H13NO3</Error><Error file="formula.cpp" line="87">not ok 1460 # molecular weight incorrect for molecule IBS-NC_STOCK1N-02409 carbamic_acid # Expected 0.000000, found 207.225820 </Error><Error file="formula.cpp" line="93">not ok 1461 # exact mass incorrect for molecule IBS-NC_STOCK1N-02409 carbamic_acid # Expected 0.000000, found 207.089543 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1462 # molecular formula incorrect for hydrogen-added molecule IBS-NC_STOCK1N-02409 carbamic_acid</Error><Error file="formula.cpp" line="110">not ok 1463 # molecular weight incorrect for hydrogen-added molecule IBS-NC_STOCK1N-02409 carbamic_acid # Expected 0.000000, found 207.225820 </Error><Error file="formula.cpp" line="116">not ok 1464 # exact mass  incorrect for hydrogen-added molecule IBS-NC_STOCK1N-02409 carbamic_acid # Expected 0.000000, found 207.089543 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1465 # molecular formula incorrect for molecule IBS-NC_STOCK1N-10601 carbamic_acid # Expected CC(C)CCCC(C)CCCC(C)CCCC1(C)COc2c(C)c(OC(=O)[C@@H](Cc3ccccc3)NC(=O)O)c(C)c(C)c2C1, found C39H59NO5</Error><Error file="formula.cpp" line="87">not ok 1466 # molecular weight incorrect for molecule IBS-NC_STOCK1N-10601 carbamic_acid # Expected 0.000000, found 621.889460 </Error><Error file="formula.cpp" line="93">not ok 1467 # exact mass incorrect for molecule IBS-NC_STOCK1N-10601 carbamic_acid # Expected 0.000000, found 621.439324 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1468 # molecular formula incorrect for hydrogen-added molecule IBS-NC_STOCK1N-10601 carbamic_acid</Error><Error file="formula.cpp" line="110">not ok 1469 # molecular weight incorrect for hydrogen-added molecule IBS-NC_STOCK1N-10601 carbamic_acid # Expected 0.000000, found 621.889460 </Error><Error file="formula.cpp" line="116">not ok 1470 # exact mass  incorrect for hydrogen-added molecule IBS-NC_STOCK1N-10601 carbamic_acid # Expected 0.000000, found 621.439324 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1471 # molecular formula incorrect for molecule IBS-NC_STOCK1N-18233 isocyanate # Expected CC(=C)[C@@H]1CCC2(CC[C@]3(C)C(CCC4[C@@]5(C)CCC(=O)C(C)(C)C5CC[C@]43C)C12)N=C=O, found C30H45NO2</Error><Error file="formula.cpp" line="87">not ok 1472 # molecular weight incorrect for molecule IBS-NC_STOCK1N-18233 isocyanate # Expected 0.000000, found 451.683800 </Error><Error file="formula.cpp" line="93">not ok 1473 # exact mass incorrect for molecule IBS-NC_STOCK1N-18233 isocyanate # Expected 0.000000, found 451.345030 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1474 # molecular formula incorrect for hydrogen-added molecule IBS-NC_STOCK1N-18233 isocyanate</Error><Error file="formula.cpp" line="110">not ok 1475 # molecular weight incorrect for hydrogen-added molecule IBS-NC_STOCK1N-18233 isocyanate # Expected 0.000000, found 451.683800 </Error><Error file="formula.cpp" line="116">not ok 1476 # exact mass  incorrect for hydrogen-added molecule IBS-NC_STOCK1N-18233 isocyanate # Expected 0.000000, found 451.345030 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1477 # molecular formula incorrect for molecule IBS-NC_STOCK1N-20487 isothiocyanate # Expected CC(=O)OC[C@H]1O[C@@H](N=C=S)[C@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1OC(=O)C, found C15H19NO9S</Error><Error file="formula.cpp" line="87">not ok 1478 # molecular weight incorrect for molecule IBS-NC_STOCK1N-20487 isothiocyanate # Expected 0.000000, found 389.377660 </Error><Error file="formula.cpp" line="93">not ok 1479 # exact mass incorrect for molecule IBS-NC_STOCK1N-20487 isothiocyanate # Expected 0.000000, found 389.078052 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1480 # molecular formula incorrect for hydrogen-added molecule IBS-NC_STOCK1N-20487 isothiocyanate</Error><Error file="formula.cpp" line="110">not ok 1481 # molecular weight incorrect for hydrogen-added molecule IBS-NC_STOCK1N-20487 isothiocyanate # Expected 0.000000, found 389.377660 </Error><Error file="formula.cpp" line="116">not ok 1482 # exact mass  incorrect for hydrogen-added molecule IBS-NC_STOCK1N-20487 isothiocyanate # Expected 0.000000, found 389.078052 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1483 # molecular formula incorrect for molecule IBS-NC_STOCK1N-21423 isothiocyanate # Expected CC(=O)OC[C@H]1O[C@H](N=C=S)[C@H](OC(=O)C)[C@@H](OC(=O)C)[C@@H]1O[C@H]2OC[C@@H](OC(=O)C)[C@H](OC(=O)C)[C@H]2OC(=O)C, found C24H31NO15S</Error><Error file="formula.cpp" line="87">not ok 1484 # molecular weight incorrect for molecule IBS-NC_STOCK1N-21423 isothiocyanate # Expected 0.000000, found 605.565640 </Error><Error file="formula.cpp" line="93">not ok 1485 # exact mass incorrect for molecule IBS-NC_STOCK1N-21423 isothiocyanate # Expected 0.000000, found 605.141440 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1486 # molecular formula incorrect for hydrogen-added molecule IBS-NC_STOCK1N-21423 isothiocyanate</Error><Error file="formula.cpp" line="110">not ok 1487 # molecular weight incorrect for hydrogen-added molecule IBS-NC_STOCK1N-21423 isothiocyanate # Expected 0.000000, found 605.565640 </Error><Error file="formula.cpp" line="116">not ok 1488 # exact mass  incorrect for hydrogen-added molecule IBS-NC_STOCK1N-21423 isothiocyanate # Expected 0.000000, found 605.141440 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1489 # molecular formula incorrect for molecule LABOTEST_LT-2_FE_546 phosphonic_acid # Expected OP(=O)(=O)c1[se]c2ccccc2c1Br, found C8H5BrO3PSe</Error><Error file="formula.cpp" line="87">not ok 1490 # molecular weight incorrect for molecule LABOTEST_LT-2_FE_546 phosphonic_acid # Expected 0.000000, found 338.961261 </Error><Error file="formula.cpp" line="93">not ok 1491 # exact mass incorrect for molecule LABOTEST_LT-2_FE_546 phosphonic_acid # Expected 0.000000, found 338.832489 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1492 # molecular formula incorrect for hydrogen-added molecule LABOTEST_LT-2_FE_546 phosphonic_acid</Error><Error file="formula.cpp" line="110">not ok 1493 # molecular weight incorrect for hydrogen-added molecule LABOTEST_LT-2_FE_546 phosphonic_acid # Expected 0.000000, found 338.961261 </Error><Error file="formula.cpp" line="116">not ok 1494 # exact mass  incorrect for hydrogen-added molecule LABOTEST_LT-2_FE_546 phosphonic_acid # Expected 0.000000, found 338.832489 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1495 # molecular formula incorrect for molecule LABOTEST_LT-I_Mi_22 phosphonic_acid # Expected CCSC1=NCCN1.OP(=O)=O, found C5H12N2O3PS</Error><Error file="formula.cpp" line="87">not ok 1496 # molecular weight incorrect for molecule LABOTEST_LT-I_Mi_22 phosphonic_acid # Expected 0.000000, found 211.199141 </Error><Error file="formula.cpp" line="93">not ok 1497 # exact mass incorrect for molecule LABOTEST_LT-I_Mi_22 phosphonic_acid # Expected 0.000000, found 211.030625 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1498 # molecular formula incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_22 phosphonic_acid</Error><Error file="formula.cpp" line="110">not ok 1499 # molecular weight incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_22 phosphonic_acid # Expected 0.000000, found 211.199141 </Error><Error file="formula.cpp" line="116">not ok 1500 # exact mass  incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_22 phosphonic_acid # Expected 0.000000, found 211.030625 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1501 # molecular formula incorrect for molecule LABOTEST_LT-I_Mi_28 phosphonic_acid # Expected CCSC(=N)N.OP(=O)=O, found C3H10N2O3PS</Error><Error file="formula.cpp" line="87">not ok 1502 # molecular weight incorrect for molecule LABOTEST_LT-I_Mi_28 phosphonic_acid # Expected 0.000000, found 185.161861 </Error><Error file="formula.cpp" line="93">not ok 1503 # exact mass incorrect for molecule LABOTEST_LT-I_Mi_28 phosphonic_acid # Expected 0.000000, found 185.014975 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1504 # molecular formula incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_28 phosphonic_acid</Error><Error file="formula.cpp" line="110">not ok 1505 # molecular weight incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_28 phosphonic_acid # Expected 0.000000, found 185.161861 </Error><Error file="formula.cpp" line="116">not ok 1506 # exact mass  incorrect for hydrogen-added molecule LABOTEST_LT-I_Mi_28 phosphonic_acid # Expected 0.000000, found 185.014975 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1507 # molecular formula incorrect for molecule SALOR_R277371 organometallic # Expected BC(=O)N1CCCC1C(=O)OC.CN(C)C, found C10H21BN2O3</Error><Error file="formula.cpp" line="87">not ok 1508 # molecular weight incorrect for molecule SALOR_R277371 organometallic # Expected 0.000000, found 228.096340 </Error><Error file="formula.cpp" line="93">not ok 1509 # exact mass incorrect for molecule SALOR_R277371 organometallic # Expected 0.000000, found 228.164523 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1510 # molecular formula incorrect for hydrogen-added molecule SALOR_R277371 organometallic</Error><Error file="formula.cpp" line="110">not ok 1511 # molecular weight incorrect for hydrogen-added molecule SALOR_R277371 organometallic # Expected 0.000000, found 228.096340 </Error><Error file="formula.cpp" line="116">not ok 1512 # exact mass  incorrect for hydrogen-added molecule SALOR_R277371 organometallic # Expected 0.000000, found 228.164523 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1513 # molecular formula incorrect for molecule SALOR_R277398 organometallic # Expected BC(=O)NCC(=O)OC.CN(C)C, found C7H17BN2O3</Error><Error file="formula.cpp" line="87">not ok 1514 # molecular weight incorrect for molecule SALOR_R277398 organometallic # Expected 0.000000, found 188.032480 </Error><Error file="formula.cpp" line="93">not ok 1515 # exact mass incorrect for molecule SALOR_R277398 organometallic # Expected 0.000000, found 188.133223 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1516 # molecular formula incorrect for hydrogen-added molecule SALOR_R277398 organometallic</Error><Error file="formula.cpp" line="110">not ok 1517 # molecular weight incorrect for hydrogen-added molecule SALOR_R277398 organometallic # Expected 0.000000, found 188.032480 </Error><Error file="formula.cpp" line="116">not ok 1518 # exact mass  incorrect for hydrogen-added molecule SALOR_R277398 organometallic # Expected 0.000000, found 188.133223 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1519 # molecular formula incorrect for molecule SALOR_R277428 organometallic # Expected BC(=O)NCC.CN, found C4H13BN2O</Error><Error file="formula.cpp" line="87">not ok 1520 # molecular weight incorrect for molecule SALOR_R277428 organometallic # Expected 0.000000, found 115.969820 </Error><Error file="formula.cpp" line="93">not ok 1521 # exact mass incorrect for molecule SALOR_R277428 organometallic # Expected 0.000000, found 116.112093 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1522 # molecular formula incorrect for hydrogen-added molecule SALOR_R277428 organometallic</Error><Error file="formula.cpp" line="110">not ok 1523 # molecular weight incorrect for hydrogen-added molecule SALOR_R277428 organometallic # Expected 0.000000, found 115.969820 </Error><Error file="formula.cpp" line="116">not ok 1524 # exact mass  incorrect for hydrogen-added molecule SALOR_R277428 organometallic # Expected 0.000000, found 116.112093 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1525 # molecular formula incorrect for molecule SALOR_R288780 isocyanate # Expected CCc1cc(Br)c(N=C=O)c(Br)c1, found C9H7Br2NO</Error><Error file="formula.cpp" line="87">not ok 1526 # molecular weight incorrect for molecule SALOR_R288780 isocyanate # Expected 0.000000, found 304.965980 </Error><Error file="formula.cpp" line="93">not ok 1527 # exact mass incorrect for molecule SALOR_R288780 isocyanate # Expected 0.000000, found 302.889438 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1528 # molecular formula incorrect for hydrogen-added molecule SALOR_R288780 isocyanate</Error><Error file="formula.cpp" line="110">not ok 1529 # molecular weight incorrect for hydrogen-added molecule SALOR_R288780 isocyanate # Expected 0.000000, found 304.965980 </Error><Error file="formula.cpp" line="116">not ok 1530 # exact mass  incorrect for hydrogen-added molecule SALOR_R288780 isocyanate # Expected 0.000000, found 302.889438 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1531 # molecular formula incorrect for molecule Test1 pyrimidine # Expected c1ncccn1, found C4H4N2</Error><Error file="formula.cpp" line="87">not ok 1532 # molecular weight incorrect for molecule Test1 pyrimidine # Expected 0.000000, found 80.087960 </Error><Error file="formula.cpp" line="93">not ok 1533 # exact mass incorrect for molecule Test1 pyrimidine # Expected 0.000000, found 80.037448 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1534 # molecular formula incorrect for hydrogen-added molecule Test1 pyrimidine</Error><Error file="formula.cpp" line="110">not ok 1535 # molecular weight incorrect for hydrogen-added molecule Test1 pyrimidine # Expected 0.000000, found 80.087960 </Error><Error file="formula.cpp" line="116">not ok 1536 # exact mass  incorrect for hydrogen-added molecule Test1 pyrimidine # Expected 0.000000, found 80.037448 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1537 # molecular formula incorrect for molecule Test2 pyrimidine # Expected c1ncncc1, found C4H4N2</Error><Error file="formula.cpp" line="87">not ok 1538 # molecular weight incorrect for molecule Test2 pyrimidine # Expected 0.000000, found 80.087960 </Error><Error file="formula.cpp" line="93">not ok 1539 # exact mass incorrect for molecule Test2 pyrimidine # Expected 0.000000, found 80.037448 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1540 # molecular formula incorrect for hydrogen-added molecule Test2 pyrimidine</Error><Error file="formula.cpp" line="110">not ok 1541 # molecular weight incorrect for hydrogen-added molecule Test2 pyrimidine # Expected 0.000000, found 80.087960 </Error><Error file="formula.cpp" line="116">not ok 1542 # exact mass  incorrect for hydrogen-added molecule Test2 pyrimidine # Expected 0.000000, found 80.037448 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1543 # molecular formula incorrect for molecule Test3 cyclopentene # Expected C1CC=CC1, found C5H8</Error><Error file="formula.cpp" line="87">not ok 1544 # molecular weight incorrect for molecule Test3 cyclopentene # Expected 0.000000, found 68.117020 </Error><Error file="formula.cpp" line="93">not ok 1545 # exact mass incorrect for molecule Test3 cyclopentene # Expected 0.000000, found 68.062600 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1546 # molecular formula incorrect for hydrogen-added molecule Test3 cyclopentene</Error><Error file="formula.cpp" line="110">not ok 1547 # molecular weight incorrect for hydrogen-added molecule Test3 cyclopentene # Expected 0.000000, found 68.117020 </Error><Error file="formula.cpp" line="116">not ok 1548 # exact mass  incorrect for hydrogen-added molecule Test3 cyclopentene # Expected 0.000000, found 68.062600 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1549 # molecular formula incorrect for molecule Test4 4,5-dihydroxypyrene # Expected Oc1c(O)c2cccc3ccc4cccc1c4c23, found C16H10O2</Error><Error file="formula.cpp" line="87">not ok 1550 # molecular weight incorrect for molecule Test4 4,5-dihydroxypyrene # Expected 0.000000, found 234.249400 </Error><Error file="formula.cpp" line="93">not ok 1551 # exact mass incorrect for molecule Test4 4,5-dihydroxypyrene # Expected 4.000000, found 234.068080 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1552 # molecular formula incorrect for hydrogen-added molecule Test4 4,5-dihydroxypyrene</Error><Error file="formula.cpp" line="110">not ok 1553 # molecular weight incorrect for hydrogen-added molecule Test4 4,5-dihydroxypyrene # Expected 0.000000, found 234.249400 </Error><Error file="formula.cpp" line="116">not ok 1554 # exact mass  incorrect for hydrogen-added molecule Test4 4,5-dihydroxypyrene # Expected 4.000000, found 234.068080 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="formula.cpp" line="75">check &apos;Bail out! Reference data has incorrect format&apos; passed</Info><Error file="formula.cpp" line="81">not ok 1555 # molecular formula incorrect for molecule Test5 9,10-dihydroxyphenanthrene # Expected Oc1c(O)c2ccccc2c3ccccc13, found C14H10O2</Error><Error file="formula.cpp" line="87">not ok 1556 # molecular weight incorrect for molecule Test5 9,10-dihydroxyphenanthrene # Expected 0.000000, found 210.228000 </Error><Error file="formula.cpp" line="93">not ok 1557 # exact mass incorrect for molecule Test5 9,10-dihydroxyphenanthrene # Expected 9.000000, found 210.068080 </Error><Info file="formula.cpp" line="99">check mol.AddHydrogens() passed</Info><Error file="formula.cpp" line="104">not ok 1558 # molecular formula incorrect for hydrogen-added molecule Test5 9,10-dihydroxyphenanthrene</Error><Error file="formula.cpp" line="110">not ok 1559 # molecular weight incorrect for hydrogen-added molecule Test5 9,10-dihydroxyphenanthrene # Expected 0.000000, found 210.228000 </Error><Error file="formula.cpp" line="116">not ok 1560 # exact mass  incorrect for hydrogen-added molecule Test5 9,10-dihydroxyphenanthrene # Expected 9.000000, found 210.068080 </Error><Info file="formula.cpp" line="72">check &apos;Bail out! error reading reference data&apos; passed</Info><FatalError file="formula.cpp" line="75">Bail out! Reference data has incorrect format</FatalError><TestingTime>1060000</TestingTime></TestCase><TestCase name="ghemical_test"># Testing Ghemical Force Field...
<Info file="ffghemical.cpp" line="48">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffghemical.cpp" line="51">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffghemical.cpp" line="60">check &apos;Bail out! SDF format is not loaded&apos; passed</Info><Info file="ffghemical.cpp" line="64">check &apos;Bail out! Cannot load force field!&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 1 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCH3.gpr
 # Expected         0.50961, found 0.509614&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 27.037,  21.591,   7.187)  ( 27.112,  21.641,   7.200)  ( 0.28,  0.23,  0.18)
    bond    ( 59.734,  -4.331,  10.239)  ( 59.803,  -4.288,  10.241)  ( 0.12,  0.98,  0.03)
    angle   (-30.905,  28.156,  -2.292)  (-30.899,  28.164,  -2.292)  ( 0.02,  0.03,  0.01)
    torsion (  0.027,   0.017,  -0.161)  (  0.027,   0.017,  -0.151)  ( 0.00,  0.00,  0.17)
    vdw     ( -1.819,  -2.253,  -0.598)  ( -1.819,  -2.252,  -0.598)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-39.658, -60.556, -13.915)  (-39.584, -60.506, -13.902)  ( 0.19,  0.08,  0.10)
    bond    (-67.895, -21.681, -14.671)  (-67.826, -21.641, -14.668)  ( 0.10,  0.19,  0.02)
    angle   ( 28.308, -38.899,   0.633)  ( 28.314, -38.890,   0.635)  ( 0.02,  0.02,  0.10)
    torsion ( -0.071,   0.025,   0.122)  ( -0.071,   0.025,   0.131)  ( 0.00,  0.00,  0.11)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -2.481, -26.644,  -3.497)  ( -2.469, -26.625,  -3.494)  ( 0.48,  0.07,  0.10)
    bond    (-12.592, -16.812,  -4.199)  (-12.582, -16.794,  -4.198)  ( 0.08,  0.11,  0.02)
    angle   ( 13.794, -10.650,   1.252)  ( 13.796, -10.649,   1.252)  ( 0.01,  0.01,  0.00)
    torsion ( -0.003,  -0.002,   0.016)  ( -0.003,  -0.002,   0.018)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.522,   0.667,  -0.375)  ( -2.522,   0.667,  -0.375)  ( 0.00,  0.00,  0.00)
    electro ( -1.158,   0.153,  -0.190)  ( -1.158,   0.153,  -0.190)  ( 0.00,  0.00,  0.00)
 4       (  5.496,  23.581,   3.939)  (  5.504,  23.605,   3.941)  ( 0.14,  0.10,  0.06)
    bond    ( -7.683,  16.139,   0.481)  ( -7.678,  16.162,   0.481)  ( 0.07,  0.15,  0.00)
    angle   ( 19.843,   9.289,   4.634)  ( 19.845,   9.290,   4.634)  ( 0.01,  0.01,  0.00)
    torsion ( -0.045,  -0.029,   0.246)  ( -0.045,  -0.029,   0.248)  ( 0.00,  0.00,  0.06)
    vdw     ( -6.093,  -2.331,  -1.388)  ( -6.093,  -2.331,  -1.388)  ( 0.00,  0.00,  0.00)
    electro ( -0.525,   0.513,  -0.035)  ( -0.525,   0.513,  -0.035)  ( 0.00,  0.00,  0.00)
 5       ( -6.159, -11.585,  -2.660)  ( -6.152, -11.560,  -2.658)  ( 0.11,  0.22,  0.10)
    bond    (  1.908,  -4.558,  -0.181)  (  1.913,  -4.534,  -0.181)  ( 0.23,  0.54,  0.00)
    angle   (-11.642,  -4.806,  -2.644)  (-11.640,  -4.806,  -2.644)  ( 0.02,  0.01,  0.01)
    torsion (  0.034,   0.022,  -0.194)  (  0.034,   0.022,  -0.192)  ( 0.00,  0.00,  0.05)
    vdw     (  1.857,  -1.577,   0.134)  (  1.857,  -1.577,   0.134)  ( 0.01,  0.00,  0.00)
    electro (  1.684,  -0.666,   0.225)  (  1.684,  -0.666,   0.225)  ( 0.00,  0.00,  0.00)
 6       ( 21.176,  61.121,  11.597)  ( 21.225,  61.170,  11.645)  ( 0.23,  0.08,  0.41)
    bond    (  2.686,   8.923,   1.964)  (  2.722,   8.961,   2.000)  ( 1.33,  0.42,  1.84)
    angle   ( 16.899,  52.519,   9.440)  ( 16.912,  52.532,   9.450)  ( 0.08,  0.02,  0.11)
    torsion (  0.242,  -0.196,  -0.034)  (  0.242,  -0.196,  -0.033)  ( 0.00,  0.00,  0.01)
    vdw     (  1.349,  -0.126,   0.228)  (  1.350,  -0.126,   0.228)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-31.903,  16.743,  -3.898)  (-31.894,  16.766,  -3.894)  ( 0.03,  0.13,  0.10)
    bond    (-13.334,  25.685,   0.842)  (-13.328,  25.707,   0.841)  ( 0.04,  0.08,  0.01)
    angle   (-25.752, -13.143,  -6.349)  (-25.749, -13.143,  -6.345)  ( 0.01,  0.00,  0.06)
    torsion (  0.033,   0.023,  -0.190)  (  0.033,   0.023,  -0.190)  ( 0.00,  0.00,  0.00)
    vdw     (  7.150,   4.178,   1.800)  (  7.151,   4.178,   1.800)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (  7.951, -15.750,  29.439)  (  7.960, -15.746,  29.461)  ( 0.10,  0.03,  0.08)
    bond    ( 13.939,  -4.868,  28.143)  ( 13.944,  -4.868,  28.164)  ( 0.04,  0.01,  0.08)
    angle   ( -5.761, -11.763,   0.818)  ( -5.758, -11.759,   0.818)  ( 0.05,  0.03,  0.07)
    torsion ( -0.240,   0.164,   0.147)  ( -0.240,   0.164,   0.147)  ( 0.00,  0.00,  0.00)
    vdw     (  0.014,   0.717,   0.331)  (  0.014,   0.717,   0.331)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( 18.284,  -8.749, -28.316)  ( 18.300,  -8.745, -28.300)  ( 0.09,  0.04,  0.05)
    bond    ( 23.020,   1.295, -22.695)  ( 23.034,   1.295, -22.682)  ( 0.06,  0.01,  0.06)
    angle   ( -4.822, -10.743,  -5.510)  ( -4.820, -10.739,  -5.508)  ( 0.04,  0.03,  0.03)
    torsion (  0.022,  -0.025,   0.021)  (  0.022,  -0.025,   0.021)  ( 0.00,  0.00,  0.00)
    vdw     (  0.063,   0.723,  -0.132)  (  0.063,   0.723,  -0.132)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 1 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 2 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCN.gpr
 # Expected         7.83093, found 7.830927&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 25.222,  13.983,   7.136)  ( 25.295,  14.034,   7.151)  ( 0.29,  0.36,  0.21)
    bond    ( 58.080,   0.609,  15.368)  ( 58.147,   0.652,  15.373)  ( 0.12,  2.59,  0.03)
    angle   (-33.014,  13.257,  -8.293)  (-33.009,  13.265,  -8.292)  ( 0.02,  0.06,  0.00)
    torsion ( -0.007,  -0.001,   0.014)  ( -0.006,  -0.001,   0.024)  ( 0.00,  0.00,  0.01)
    vdw     (  0.163,   0.118,   0.047)  (  0.163,   0.118,   0.047)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-135.053, -156.995, -40.782)  (-134.971, -156.926, -40.765)  ( 0.06,  0.04,  0.04)
    bond    (-168.640, -135.476, -48.829)  (-168.564, -135.417, -48.824)  ( 0.04,  0.04,  0.01)
    angle   ( 33.577, -21.520,   8.093)  ( 33.584, -21.510,   8.096)  ( 0.02,  0.04,  0.04)
    torsion (  0.009,   0.001,  -0.046)  (  0.010,   0.001,  -0.037)  ( 0.00,  0.00,  0.04)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  0.444, -24.663,  -0.644)  (  0.454, -24.643,  -0.641)  ( 0.46,  0.08,  0.20)
    bond    (-10.017, -15.265,  -3.131)  (-10.008, -15.245,  -3.131)  ( 0.08,  0.13,  0.02)
    angle   ( 13.893,  -9.812,   3.354)  ( 13.895,  -9.811,   3.354)  ( 0.01,  0.01,  0.00)
    torsion ( -0.007,  -0.001,   0.024)  ( -0.007,  -0.001,   0.027)  ( 0.00,  0.00,  0.01)
    vdw     ( -2.299,   0.336,  -0.596)  ( -2.299,   0.336,  -0.596)  ( 0.00,  0.00,  0.00)
    electro ( -1.126,   0.078,  -0.295)  ( -1.126,   0.078,  -0.295)  ( 0.00,  0.00,  0.00)
 4       ( 11.044,  23.026,   3.618)  ( 11.053,  23.049,   3.621)  ( 0.08,  0.10,  0.07)
    bond    ( -6.152,  11.706,  -1.247)  ( -6.146,  11.728,  -1.247)  ( 0.10,  0.19,  0.02)
    angle   ( 19.924,  11.039,   5.614)  ( 19.926,  11.039,   5.614)  ( 0.01,  0.01,  0.00)
    torsion (  0.009,   0.001,  -0.036)  (  0.009,   0.001,  -0.033)  ( 0.00,  0.00,  0.01)
    vdw     ( -2.197,  -0.197,  -0.586)  ( -2.197,  -0.197,  -0.586)  ( 0.00,  0.00,  0.00)
    electro ( -0.539,   0.478,  -0.127)  ( -0.539,   0.478,  -0.127)  ( 0.00,  0.00,  0.00)
 5       (  1.460, -32.885,  -0.681)  (  1.468, -32.861,  -0.678)  ( 0.53,  0.07,  0.17)
    bond    ( 12.210, -24.825,   2.432)  ( 12.215, -24.802,   2.432)  ( 0.05,  0.09,  0.00)
    angle   (-14.826,  -7.709,  -4.160)  (-14.824,  -7.709,  -4.159)  ( 0.01,  0.01,  0.00)
    torsion (  0.004,   0.000,  -0.017)  (  0.004,   0.000,  -0.015)  ( 0.00,  0.00,  0.00)
    vdw     (  2.407,   0.205,   0.642)  (  2.408,   0.205,   0.642)  ( 0.00,  0.00,  0.00)
    electro (  1.664,  -0.556,   0.422)  (  1.664,  -0.556,   0.422)  ( 0.00,  0.00,  0.00)
 6       (117.314, 192.382,  37.339)  (117.364, 192.467,  37.356)  ( 0.04,  0.04,  0.05)
    bond    (128.247, 182.517,  39.697)  (128.287, 182.596,  39.700)  ( 0.03,  0.04,  0.01)
    angle   (-13.318,   9.894,  -3.023)  (-13.308,   9.900,  -3.010)  ( 0.08,  0.06,  0.43)
    torsion ( -0.009,  -0.001,   0.033)  ( -0.009,  -0.001,   0.035)  ( 0.00,  0.00,  0.00)
    vdw     (  2.395,  -0.027,   0.631)  (  2.395,  -0.027,   0.631)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-20.687, -15.165,  -6.050)  (-20.663, -15.120,  -6.044)  ( 0.12,  0.29,  0.10)
    bond    (-13.952, -19.555,  -4.305)  (-13.930, -19.511,  -4.303)  ( 0.16,  0.22,  0.05)
    angle   ( -6.267,   4.824,  -1.607)  ( -6.264,   4.826,  -1.603)  ( 0.04,  0.03,  0.25)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.469,  -0.434,  -0.138)  ( -0.469,  -0.434,  -0.138)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 2 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 3 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CH3CONH2.gpr
 # Expected         4.42383, found 4.423832&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 20.262,  38.741, -65.418)  ( 20.310,  38.789, -65.369)  ( 0.24,  0.12,  0.08)
    bond    ( 35.363,   4.708,  -8.226)  ( 35.398,   4.745,  -8.190)  ( 0.10,  0.78,  0.44)
    angle   (-11.879,  31.622, -54.395)  (-11.867,  31.633, -54.382)  ( 0.10,  0.04,  0.02)
    torsion ( -0.001,   0.614,   0.357)  ( -0.001,   0.615,   0.357)  ( 0.00,  0.03,  0.01)
    vdw     ( -3.220,   1.797,  -3.154)  ( -3.220,   1.797,  -3.154)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (119.205, -77.444, 130.932)  (119.268, -77.418, 130.999)  ( 0.05,  0.03,  0.05)
    bond    ( 91.119, -30.475,  52.665)  ( 91.170, -30.454,  52.724)  ( 0.06,  0.07,  0.11)
    angle   ( 28.099, -45.486,  79.118)  ( 28.111, -45.483,  79.125)  ( 0.04,  0.01,  0.01)
    torsion ( -0.013,  -1.484,  -0.850)  ( -0.013,  -1.481,  -0.849)  ( 0.00,  0.18,  0.08)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-73.732, -11.347,  17.419)  (-73.714, -11.333,  17.459)  ( 0.02,  0.12,  0.23)
    bond    (-24.487, -24.043,  41.291)  (-24.473, -24.030,  41.330)  ( 0.06,  0.05,  0.09)
    angle   (-50.205,  12.814, -22.277)  (-50.201,  12.815, -22.276)  ( 0.01,  0.00,  0.00)
    torsion (  0.001,  -0.781,  -0.453)  (  0.001,  -0.780,  -0.453)  ( 0.00,  0.05,  0.01)
    vdw     (  0.256,   1.925,  -3.335)  (  0.256,   1.925,  -3.335)  ( 0.00,  0.00,  0.00)
    electro (  0.704,  -1.262,   2.192)  (  0.704,  -1.262,   2.192)  ( 0.00,  0.00,  0.00)
 4       ( 43.570,  37.155, -48.451)  ( 43.627,  37.175, -48.403)  ( 0.13,  0.05,  0.10)
    bond    (-23.001,  31.457, -52.235)  (-22.956,  31.470, -52.196)  ( 0.20,  0.04,  0.07)
    angle   ( 65.099,  -0.277,   0.177)  ( 65.110,  -0.275,   0.184)  ( 0.02,  0.07,  0.14)
    torsion (  0.043,   6.051,   3.476)  (  0.043,   6.055,   3.477)  ( 0.00,  0.07,  0.04)
    vdw     (  1.429,  -0.075,   0.131)  (  1.429,  -0.075,   0.131)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -6.376,  29.281, -59.001)  ( -6.366,  29.288, -58.982)  ( 0.16,  0.02,  0.03)
    bond    ( 24.769,  25.591, -45.408)  ( 24.774,  25.597, -45.389)  ( 0.02,  0.02,  0.04)
    angle   (-37.301,   8.972, -15.298)  (-37.296,   8.972, -15.297)  ( 0.01,  0.00,  0.00)
    torsion ( -0.040,  -3.223,  -1.839)  ( -0.040,  -3.222,  -1.839)  ( 0.00,  0.04,  0.02)
    vdw     (  6.104,  -2.572,   4.435)  (  6.104,  -2.572,   4.435)  ( 0.00,  0.00,  0.00)
    electro (  0.092,   0.513,  -0.892)  (  0.092,   0.513,  -0.892)  ( 0.00,  0.00,  0.00)
 6       (-67.280,  -5.339,   5.191)  (-67.251,  -5.336,   5.195)  ( 0.04,  0.05,  0.09)
    bond    (-68.080,  -2.555,   3.484)  (-68.050,  -2.555,   3.485)  ( 0.04,  0.01,  0.01)
    angle   (  0.031,  -0.395,   0.321)  (  0.031,  -0.394,   0.324)  ( 0.00,  0.05,  0.12)
    torsion (  0.009,  -1.188,  -0.694)  (  0.009,  -1.187,  -0.694)  ( 0.00,  0.08,  0.02)
    vdw     (  1.555,  -1.949,   3.381)  (  1.555,  -1.949,   3.381)  ( 0.00,  0.00,  0.00)
    electro ( -0.795,   0.749,  -1.300)  ( -0.795,   0.749,  -1.300)  ( 0.00,  0.00,  0.00)
 7       (-11.269, -36.978,   8.520)  (-11.264, -36.952,   8.524)  ( 0.05,  0.07,  0.05)
    bond    (-10.745, -36.692,   0.762)  (-10.743, -36.666,   0.762)  ( 0.02,  0.07,  0.01)
    angle   (  1.275,  -0.185,   9.111)  (  1.278,  -0.185,   9.115)  ( 0.24,  0.00,  0.05)
    torsion ( -0.001,   0.000,  -0.007)  ( -0.001,   0.000,  -0.007)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.798,  -0.101,  -1.346)  ( -1.798,  -0.101,  -1.346)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-11.430,  10.818,  36.410)  (-11.425,  10.827,  36.431)  ( 0.05,  0.08,  0.06)
    bond    (-10.895,  17.429,  32.321)  (-10.893,  17.434,  32.341)  ( 0.02,  0.03,  0.06)
    angle   (  1.384,  -7.884,   4.714)  (  1.387,  -7.880,   4.715)  ( 0.22,  0.04,  0.03)
    torsion (  0.001,  -0.006,   0.003)  (  0.001,  -0.006,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.920,   1.279,  -0.629)  ( -1.920,   1.279,  -0.629)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-13.193,  14.951, -25.874)  (-13.185,  14.960, -25.856)  ( 0.06,  0.06,  0.07)
    bond    (-14.232,  14.453, -24.883)  (-14.227,  14.458, -24.866)  ( 0.04,  0.04,  0.07)
    angle   (  3.445,   0.795,  -1.510)  (  3.448,   0.798,  -1.509)  ( 0.08,  0.26,  0.10)
    torsion ( -0.000,   0.006,   0.003)  ( -0.000,   0.006,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.406,  -0.302,   0.516)  ( -2.406,  -0.302,   0.516)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 3 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 4 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/COOCH3.gpr
 # Expected        35.10152, found 35.101522&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-26.774, -28.905,  14.035)  (-26.726, -28.855,  14.083)  ( 0.18,  0.17,  0.34)
    bond    (-19.895,   7.377, -11.925)  (-19.860,   7.414, -11.888)  ( 0.17,  0.50,  0.30)
    angle   (-14.896, -48.982,   7.455)  (-14.883, -48.968,   7.466)  ( 0.08,  0.03,  0.15)
    torsion ( -5.124,   7.031,  17.238)  ( -5.124,   7.031,  17.239)  ( 0.00,  0.00,  0.00)
    vdw     ( 13.141,   5.668,   1.266)  ( 13.141,   5.668,   1.266)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-128.910, 113.784, -158.185)  (-128.872, 113.809, -158.176)  ( 0.03,  0.02,  0.01)
    bond    (-121.810, -58.450, -11.109)  (-121.773, -58.436, -11.104)  ( 0.03,  0.02,  0.05)
    angle   (-22.250, 193.608, -95.414)  (-22.250, 193.620, -95.412)  ( 0.00,  0.01,  0.00)
    torsion ( 15.151, -21.375, -51.661)  ( 15.151, -21.375, -51.660)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 23.642, -33.521, -11.676)  ( 23.647, -33.494, -11.671)  ( 0.02,  0.08,  0.04)
    bond    ( -1.395, -30.167,  -5.745)  ( -1.395, -30.140,  -5.745)  ( 0.01,  0.09,  0.01)
    angle   (-26.840,   0.424,   4.286)  (-26.837,   0.424,   4.289)  ( 0.01,  0.01,  0.09)
    torsion (  8.044,   1.903, -11.939)  (  8.044,   1.903, -11.939)  ( 0.00,  0.00,  0.00)
    vdw     ( 43.833,  -5.682,   1.724)  ( 43.834,  -5.682,   1.724)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 29.215,  24.448,   0.346)  ( 29.236,  24.455,   0.353)  ( 0.07,  0.03,  0.24)
    bond    ( 29.102,  11.932, -12.746)  ( 29.123,  11.935, -12.742)  ( 0.07,  0.03,  0.03)
    angle   (  0.008,   2.865,   2.705)  (  0.009,   2.868,   2.708)  ( 0.00,  0.12,  0.12)
    torsion (  0.559,   9.747,  10.407)  (  0.559,   9.747,  10.407)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.455,  -0.095,  -0.020)  ( -0.455,  -0.095,  -0.020)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-14.671, -18.120,  39.052)  (-14.668, -18.116,  39.079)  ( 0.02,  0.02,  0.07)
    bond    ( -0.398,   5.832,  34.590)  ( -0.398,   5.833,  34.617)  ( 0.01,  0.01,  0.08)
    angle   ( -6.363, -12.617,   2.052)  ( -6.359, -12.613,   2.052)  ( 0.05,  0.03,  0.01)
    torsion ( -8.696, -11.525,   1.842)  ( -8.696, -11.525,   1.842)  ( 0.00,  0.00,  0.00)
    vdw     (  0.785,   0.190,   0.568)  (  0.785,   0.190,   0.568)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (191.182, -122.683, 156.379)  (191.254, -122.631, 156.400)  ( 0.04,  0.04,  0.01)
    bond    (103.167,  13.570,  25.866)  (103.234,  13.611,  25.884)  ( 0.06,  0.30,  0.07)
    angle   (105.259, -154.157,  97.805)  (105.264, -154.146,  97.807)  ( 0.00,  0.01,  0.00)
    torsion (-10.098,  14.460,  34.616)  (-10.098,  14.460,  34.618)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.146,   3.444,  -1.909)  ( -7.146,   3.444,  -1.909)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 28.277,  20.843,   1.988)  ( 28.322,  20.855,   2.000)  ( 0.16,  0.06,  0.60)
    bond    ( 12.873,  -5.976,   6.570)  ( 12.917,  -5.967,   6.582)  ( 0.34,  0.16,  0.18)
    angle   ( 15.468,  26.087,  -6.706)  ( 15.469,  26.090,  -6.706)  ( 0.01,  0.01,  0.00)
    torsion ( -0.587,   0.850,   1.922)  ( -0.587,   0.850,   1.922)  ( 0.00,  0.01,  0.02)
    vdw     (  0.523,  -0.118,   0.202)  (  0.523,  -0.118,   0.202)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-102.197,  43.953, -42.074)  (-102.193,  43.977, -42.068)  ( 0.00,  0.05,  0.01)
    bond    ( -1.848,  55.726, -25.609)  ( -1.848,  55.750, -25.603)  ( 0.02,  0.04,  0.02)
    angle   (-50.415,  -7.276, -12.204)  (-50.413,  -7.275, -12.204)  ( 0.00,  0.00,  0.00)
    torsion (  0.751,  -1.091,  -2.429)  (  0.751,  -1.091,  -2.429)  ( 0.00,  0.01,  0.01)
    vdw     (-50.685,  -3.407,  -1.832)  (-50.683,  -3.407,  -1.832)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 4 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 5 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/NCH3-3.gpr
 # Expected        77.56631, found 77.566313&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (105.440, -149.985, 260.331)  (105.486, -149.942, 260.360)  ( 0.04,  0.03,  0.01)
    bond    (105.838, -149.765, 260.004)  (105.879, -149.728, 260.027)  ( 0.04,  0.02,  0.01)
    angle   ( -0.389,  -0.217,   0.334)  ( -0.384,  -0.211,   0.340)  ( 0.21,  0.12,  0.21)
    torsion ( -0.009,  -0.003,  -0.007)  ( -0.009,  -0.003,  -0.007)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-91.905,   1.208,  -2.456)  (-91.850,   1.259,  -2.405)  ( 0.06,  4.20,  2.04)
    bond    (-96.521,  -0.000,   0.010)  (-96.477,   0.040,   0.049)  ( 0.05,  0.00,  0.04)
    angle   (  0.198,  -0.177,  -0.044)  (  0.210,  -0.166,  -0.033)  ( 0.22,  0.20,  0.05)
    torsion ( -0.000,   0.004,  -0.001)  (  0.000,   0.004,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     (  4.417,   1.382,  -2.420)  (  4.417,   1.382,  -2.420)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 19.046,  86.269,  -2.605)  ( 19.098,  86.324,  -2.554)  ( 0.27,  0.06,  1.93)
    bond    ( 31.918,  90.924,  -0.196)  ( 31.958,  90.967,  -0.157)  ( 0.13,  0.05,  0.78)
    angle   ( -0.248,  -0.340,  -0.003)  ( -0.237,  -0.328,   0.008)  ( 0.28,  0.38,  0.00)
    torsion (  0.004,  -0.001,   0.009)  (  0.004,  -0.001,   0.009)  ( 0.00,  0.00,  0.00)
    vdw     (-12.628,  -4.314,  -2.415)  (-12.627,  -4.314,  -2.415)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 18.985, -40.889, -76.513)  ( 19.037, -40.837, -76.460)  ( 0.27,  0.13,  0.07)
    bond    ( 32.121, -45.510, -79.026)  ( 32.161, -45.470, -78.984)  ( 0.12,  0.09,  0.05)
    angle   ( -0.358,   0.352,  -0.032)  ( -0.347,   0.363,  -0.021)  ( 0.40,  0.38,  0.03)
    torsion ( -0.001,   0.004,  -0.002)  ( -0.001,   0.004,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     (-12.776,   4.266,   2.547)  (-12.776,   4.266,   2.547)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-47.071, 217.561,   0.241)  (-47.063, 217.586,   0.246)  ( 0.02,  0.01,  0.11)
    bond    (-74.014, 208.993,  -0.001)  (-74.010, 209.018,   0.000)  ( 0.01,  0.01,  0.00)
    angle   ( -0.340,  -0.120,  -0.061)  ( -0.338,  -0.120,  -0.057)  ( 0.09,  0.00,  0.02)
    torsion ( -0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 27.284,   8.688,   0.304)  ( 27.285,   8.688,   0.304)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-74.700, -104.719, 181.735)  (-74.694, -104.709, 181.755)  ( 0.01,  0.01,  0.01)
    bond    (-73.876, -104.552, 181.024)  (-73.872, -104.545, 181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.043,   0.173,   0.119)  (  0.046,   0.176,   0.120)  ( 0.01,  0.05,  0.01)
    torsion ( -0.000,   0.002,   0.001)  (  0.000,   0.002,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.867,  -0.341,   0.591)  ( -0.867,  -0.341,   0.591)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-46.151, -108.961, -188.740)  (-46.144, -108.951, -188.720)  ( 0.02,  0.01,  0.01)
    bond    (-73.841, -104.519, -181.111)  (-73.837, -104.512, -181.092)  ( 0.01,  0.01,  0.01)
    angle   (  0.080,   0.216,  -0.161)  (  0.083,   0.219,  -0.160)  ( 0.02,  0.06,  0.02)
    torsion ( -0.000,  -0.003,   0.002)  (  0.000,  -0.003,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( 27.611,  -4.655,  -7.469)  ( 27.611,  -4.655,  -7.469)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (221.659,  -5.126,  -3.349)  (221.687,  -5.122,  -3.344)  ( 0.01,  0.08,  0.15)
    bond    (221.839,  -0.001,  -0.001)  (221.867,   0.000,   0.000)  ( 0.01,  0.00,  0.00)
    angle   ( -0.000,   0.445,  -0.090)  (  0.000,   0.448,  -0.086)  ( 0.00,  0.13,  0.03)
    torsion ( -0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.180,  -5.570,  -3.257)  ( -0.180,  -5.570,  -3.257)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-81.898, 100.492, 177.607)  (-81.891, 100.502, 177.627)  ( 0.01,  0.01,  0.01)
    bond    (-73.876, 104.538, 181.024)  (-73.872, 104.545, 181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.231,  -0.092,   0.146)  (  0.235,  -0.090,   0.148)  ( 0.07,  0.02,  0.02)
    torsion (  0.000,  -0.000,   0.000)  (  0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.253,  -3.954,  -3.563)  ( -8.253,  -3.954,  -3.563)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-81.462,  93.810, -179.949)  (-81.455,  93.819, -179.929)  ( 0.01,  0.01,  0.01)
    bond    (-73.757, 104.367, -180.905)  (-73.753, 104.374, -180.886)  ( 0.01,  0.01,  0.01)
    angle   (  0.291,  -0.136,  -0.198)  (  0.295,  -0.133,  -0.197)  ( 0.09,  0.03,  0.02)
    torsion (  0.003,  -0.001,  -0.002)  (  0.003,  -0.001,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.999, -10.420,   1.156)  ( -7.998, -10.420,   1.156)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (221.663,   5.297,   2.772)  (221.691,   5.302,   2.776)  ( 0.01,  0.09,  0.15)
    bond    (221.840,  -0.059,  -0.118)  (221.868,  -0.058,  -0.117)  ( 0.01,  0.01,  0.01)
    angle   ( -0.000,  -0.255,  -0.307)  ( -0.000,  -0.251,  -0.304)  ( 0.00,  0.09,  0.10)
    torsion ( -0.000,   0.003,  -0.002)  ( -0.000,   0.003,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.177,   5.608,   3.199)  ( -0.177,   5.608,   3.199)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-81.868, 108.891, -171.372)  (-81.861, 108.901, -171.352)  ( 0.01,  0.01,  0.01)
    bond    (-73.962, 104.530, -181.062)  (-73.958, 104.537, -181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.196,   0.175,   0.020)  (  0.200,   0.178,   0.021)  ( 0.06,  0.05,  0.00)
    torsion ( -0.004,  -0.003,   0.000)  ( -0.004,  -0.002,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.099,   4.188,   9.670)  ( -8.099,   4.188,   9.670)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-82.049, -204.157,   1.995)  (-82.042, -204.132,   1.999)  ( 0.01,  0.01,  0.21)
    bond    (-73.956, -209.192,   0.116)  (-73.952, -209.167,   0.117)  ( 0.01,  0.01,  0.01)
    angle   (  0.236,  -0.085,   0.219)  (  0.240,  -0.085,   0.222)  ( 0.08,  0.00,  0.07)
    torsion (  0.006,  -0.002,   0.004)  (  0.006,  -0.002,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.336,   5.122,   1.657)  ( -8.336,   5.122,   1.657)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 5 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 6 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/PCH3-3.gpr
 # Expected       555.69959, found 555.699586&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-352.758, 498.355, -863.403)  (-352.737, 498.374, -863.393)  ( 0.01,  0.00,  0.00)
    bond    (-352.351, 498.577, -863.775)  (-352.336, 498.590, -863.772)  ( 0.00,  0.00,  0.00)
    angle   ( -0.390,  -0.216,   0.386)  ( -0.384,  -0.210,   0.392)  ( 0.22,  0.13,  0.25)
    torsion ( -0.018,  -0.006,  -0.014)  ( -0.017,  -0.006,  -0.013)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (1284.361,   1.205,  -2.472)  (1284.401,   1.251,  -2.427)  ( 0.00,  3.84,  1.85)
    bond    (1279.745,   0.004,   0.014)  (1279.774,   0.040,   0.049)  ( 0.00,  0.02,  0.05)
    angle   (  0.198,  -0.189,  -0.064)  (  0.210,  -0.178,  -0.053)  ( 0.22,  0.21,  0.07)
    torsion ( -0.000,   0.008,  -0.003)  (  0.000,   0.008,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     (  4.417,   1.382,  -2.420)  (  4.417,   1.382,  -2.420)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-440.342, -1211.002,  -2.610)  (-440.295, -1210.961,  -2.564)  ( 0.01,  0.00,  1.76)
    bond    (-427.484, -1206.342,  -0.192)  (-427.450, -1206.312,  -0.157)  ( 0.01,  0.00,  0.67)
    angle   ( -0.237,  -0.343,  -0.023)  ( -0.226,  -0.332,  -0.012)  ( 0.27,  0.39,  0.02)
    torsion (  0.008,  -0.003,   0.019)  (  0.008,  -0.003,   0.019)  ( 0.00,  0.00,  0.00)
    vdw     (-12.628,  -4.314,  -2.415)  (-12.627,  -4.314,  -2.415)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-439.650, 608.099, 1047.282)  (-439.603, 608.143, 1047.324)  ( 0.01,  0.01,  0.00)
    bond    (-426.503, 603.459, 1044.784)  (-426.468, 603.492, 1044.815)  ( 0.01,  0.01,  0.00)
    angle   ( -0.369,   0.367,  -0.045)  ( -0.358,   0.378,  -0.034)  ( 0.42,  0.40,  0.05)
    torsion ( -0.002,   0.007,  -0.005)  ( -0.001,   0.007,  -0.005)  ( 0.00,  0.00,  0.00)
    vdw     (-12.776,   4.266,   2.547)  (-12.776,   4.266,   2.547)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-47.071, 217.561,   0.240)  (-47.063, 217.586,   0.245)  ( 0.02,  0.01,  0.11)
    bond    (-74.014, 208.993,  -0.001)  (-74.010, 209.018,   0.000)  ( 0.01,  0.01,  0.00)
    angle   ( -0.340,  -0.120,  -0.061)  ( -0.338,  -0.120,  -0.057)  ( 0.09,  0.00,  0.02)
    torsion ( -0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 27.284,   8.688,   0.304)  ( 27.285,   8.688,   0.304)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-74.700, -104.717, 181.736)  (-74.694, -104.707, 181.756)  ( 0.01,  0.01,  0.01)
    bond    (-73.876, -104.552, 181.024)  (-73.872, -104.545, 181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.043,   0.173,   0.119)  (  0.046,   0.176,   0.120)  ( 0.01,  0.05,  0.01)
    torsion ( -0.000,   0.003,   0.002)  (  0.000,   0.003,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.867,  -0.341,   0.591)  ( -0.867,  -0.341,   0.591)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-46.151, -108.964, -188.738)  (-46.144, -108.954, -188.718)  ( 0.02,  0.01,  0.01)
    bond    (-73.841, -104.519, -181.111)  (-73.837, -104.512, -181.092)  ( 0.01,  0.01,  0.01)
    angle   (  0.080,   0.216,  -0.161)  (  0.083,   0.219,  -0.160)  ( 0.02,  0.06,  0.02)
    torsion ( -0.000,  -0.005,   0.003)  (  0.000,  -0.005,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( 27.611,  -4.655,  -7.469)  ( 27.611,  -4.655,  -7.469)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (221.659,  -5.126,  -3.350)  (221.687,  -5.122,  -3.345)  ( 0.01,  0.08,  0.15)
    bond    (221.839,  -0.001,  -0.001)  (221.867,   0.000,   0.000)  ( 0.01,  0.00,  0.00)
    angle   ( -0.000,   0.445,  -0.090)  (  0.000,   0.448,  -0.086)  ( 0.00,  0.13,  0.03)
    torsion ( -0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.180,  -5.570,  -3.257)  ( -0.180,  -5.570,  -3.257)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-81.898, 100.492, 177.607)  (-81.891, 100.502, 177.628)  ( 0.01,  0.01,  0.01)
    bond    (-73.876, 104.538, 181.024)  (-73.872, 104.545, 181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.231,  -0.092,   0.146)  (  0.235,  -0.090,   0.148)  ( 0.07,  0.02,  0.02)
    torsion (  0.000,  -0.000,   0.000)  (  0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.253,  -3.954,  -3.563)  ( -8.253,  -3.954,  -3.563)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-81.459,  93.809, -179.951)  (-81.452,  93.818, -179.931)  ( 0.01,  0.01,  0.01)
    bond    (-73.757, 104.367, -180.905)  (-73.753, 104.374, -180.886)  ( 0.01,  0.01,  0.01)
    angle   (  0.291,  -0.136,  -0.198)  (  0.295,  -0.133,  -0.197)  ( 0.09,  0.03,  0.02)
    torsion (  0.006,  -0.002,  -0.003)  (  0.006,  -0.002,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.999, -10.420,   1.156)  ( -7.998, -10.420,   1.156)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (221.663,   5.301,   2.770)  (221.691,   5.306,   2.774)  ( 0.01,  0.09,  0.15)
    bond    (221.840,  -0.059,  -0.118)  (221.868,  -0.058,  -0.117)  ( 0.01,  0.01,  0.01)
    angle   ( -0.000,  -0.255,  -0.307)  ( -0.000,  -0.251,  -0.304)  ( 0.00,  0.09,  0.10)
    torsion ( -0.000,   0.007,  -0.004)  ( -0.000,   0.007,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.177,   5.608,   3.199)  ( -0.177,   5.608,   3.199)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-81.872, 108.889, -171.372)  (-81.864, 108.898, -171.352)  ( 0.01,  0.01,  0.01)
    bond    (-73.962, 104.530, -181.062)  (-73.958, 104.537, -181.043)  ( 0.01,  0.01,  0.01)
    angle   (  0.196,   0.175,   0.020)  (  0.200,   0.178,   0.021)  ( 0.06,  0.05,  0.00)
    torsion ( -0.007,  -0.005,   0.000)  ( -0.007,  -0.005,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.099,   4.188,   9.670)  ( -8.099,   4.188,   9.670)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-82.044, -204.159,   1.999)  (-82.036, -204.134,   2.003)  ( 0.01,  0.01,  0.21)
    bond    (-73.956, -209.192,   0.116)  (-73.952, -209.167,   0.117)  ( 0.01,  0.01,  0.01)
    angle   (  0.236,  -0.085,   0.219)  (  0.240,  -0.085,   0.222)  ( 0.08,  0.00,  0.07)
    torsion (  0.012,  -0.004,   0.007)  (  0.012,  -0.004,   0.007)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.336,   5.122,   1.657)  ( -8.336,   5.122,   1.657)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 6 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 7 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/atorvastin.gpr
 # Expected       832.17803, found 832.178025&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-36.914, -25.589,  -5.191)  (-36.843, -25.499,  -5.177)  ( 0.19,  0.35,  0.27)
    bond    (-39.393, -37.584,  -9.117)  (-39.335, -37.506,  -9.108)  ( 0.15,  0.21,  0.11)
    angle   (  7.381,  12.289,   3.318)  (  7.394,  12.300,   3.319)  ( 0.17,  0.09,  0.04)
    torsion (  0.061,  -0.144,   0.321)  (  0.061,  -0.144,   0.324)  ( 0.00,  0.00,  0.09)
    vdw     ( -5.602,   0.110,   0.548)  ( -5.602,   0.110,   0.548)  ( 0.00,  0.00,  0.00)
    electro (  0.639,  -0.259,  -0.260)  (  0.639,  -0.259,  -0.260)  ( 0.00,  0.00,  0.00)
 2       ( 38.281,  37.042,   9.806)  ( 38.375,  37.113,   9.817)  ( 0.24,  0.19,  0.11)
    bond    ( 31.945,  49.472,  14.218)  ( 32.026,  49.531,  14.224)  ( 0.25,  0.12,  0.04)
    angle   (  8.741, -16.613,  -6.348)  (  8.754, -16.602,  -6.347)  ( 0.14,  0.07,  0.02)
    torsion ( -0.021,  -0.066,   0.306)  ( -0.021,  -0.066,   0.309)  ( 0.00,  0.00,  0.09)
    vdw     ( -2.341,   5.181,   2.166)  ( -2.341,   5.181,   2.166)  ( 0.00,  0.00,  0.00)
    electro ( -0.043,  -0.931,  -0.537)  ( -0.043,  -0.931,  -0.537)  ( 0.00,  0.00,  0.00)
 3       ( 36.552,   9.572,  10.882)  ( 36.646,   9.644,  10.895)  ( 0.26,  0.75,  0.12)
    bond    ( 22.225, -39.741, -16.148)  ( 22.304, -39.682, -16.140)  ( 0.36,  0.15,  0.05)
    angle   ( 15.646,  49.327,  16.801)  ( 15.661,  49.339,  16.803)  ( 0.09,  0.02,  0.01)
    torsion (  0.640,  -4.608,  12.311)  (  0.640,  -4.608,  12.314)  ( 0.00,  0.01,  0.02)
    vdw     ( -1.299,   6.127,  -0.855)  ( -1.299,   6.127,  -0.855)  ( 0.02,  0.00,  0.00)
    electro ( -0.660,  -1.533,  -1.228)  ( -0.660,  -1.533,  -1.228)  ( 0.00,  0.00,  0.00)
 4       (-83.146,   2.830,  38.223)  (-83.054,   2.928,  38.243)  ( 0.11,  3.47,  0.05)
    bond    (-63.591,  43.917,  19.919)  (-63.515,  43.994,  19.930)  ( 0.12,  0.18,  0.05)
    angle   (-24.738, -39.856,  21.223)  (-24.722, -39.835,  21.228)  ( 0.07,  0.05,  0.03)
    torsion ( -0.219,  -0.406,  -1.055)  ( -0.219,  -0.405,  -1.052)  ( 0.00,  0.03,  0.30)
    vdw     (  5.402,  -0.826,  -1.864)  (  5.402,  -0.826,  -1.864)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-79.113, -10.101,   1.242)  (-79.017, -10.031,   1.254)  ( 0.12,  0.70,  0.99)
    bond    (-52.026,   2.020,   6.986)  (-51.946,   2.079,   6.994)  ( 0.16,  2.88,  0.11)
    angle   (-28.249,  -8.322,  -0.594)  (-28.234,  -8.310,  -0.592)  ( 0.05,  0.14,  0.10)
    torsion (  0.098,   1.325,  -3.983)  (  0.099,   1.325,  -3.980)  ( 0.00,  0.03,  0.07)
    vdw     (  0.088,  -5.717,  -1.250)  (  0.088,  -5.717,  -1.250)  ( 0.00,  0.00,  0.00)
    electro (  0.976,   0.593,   0.083)  (  0.976,   0.593,   0.083)  ( 0.00,  0.00,  0.00)
 6       ( 36.683, -14.482,  -9.270)  ( 36.774, -14.411,  -9.257)  ( 0.25,  0.49,  0.14)
    bond    ( 53.347, -12.349,  -9.653)  ( 53.426, -12.289,  -9.645)  ( 0.15,  0.48,  0.09)
    angle   (-14.012,   2.744,   2.305)  (-13.999,   2.755,   2.306)  ( 0.09,  0.41,  0.06)
    torsion ( -0.010,   0.362,  -0.308)  ( -0.010,   0.362,  -0.305)  ( 0.00,  0.01,  0.09)
    vdw     ( -3.256,  -5.593,  -1.612)  ( -3.256,  -5.593,  -1.612)  ( 0.00,  0.00,  0.00)
    electro (  0.614,   0.354,  -0.001)  (  0.614,   0.354,  -0.001)  ( 0.00,  0.00,  0.00)
 7       (199.931,   5.177, 180.198)  (200.008,   5.213, 180.239)  ( 0.04,  0.70,  0.02)
    bond    (222.352,  66.628, 140.599)  (222.417,  66.649, 140.627)  ( 0.03,  0.03,  0.02)
    angle   (  5.358,   8.587, -17.210)  (  5.370,   8.600, -17.200)  ( 0.22,  0.14,  0.06)
    torsion (-24.205, -77.836,  59.395)  (-24.204, -77.834,  59.396)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.998,   8.581,  -3.360)  ( -0.998,   8.581,  -3.360)  ( 0.00,  0.00,  0.00)
    electro ( -2.577,  -0.783,   0.775)  ( -2.577,  -0.783,   0.775)  ( 0.00,  0.00,  0.00)
 8       (-737.444, -58.537, -13.738)  (-737.354, -58.508, -13.666)  ( 0.01,  0.05,  0.53)
    bond    (-746.916,   5.571,  66.213)  (-746.841,   5.590,  66.276)  ( 0.01,  0.34,  0.10)
    angle   (  0.733, -57.566, -37.981)  (  0.748, -57.560, -37.972)  ( 1.06,  0.01,  0.02)
    torsion (  2.354,   5.244, -42.997)  (  2.354,   5.247, -42.997)  ( 0.01,  0.06,  0.00)
    vdw     (  5.489, -11.520,   1.116)  (  5.489, -11.519,   1.116)  ( 0.00,  0.01,  0.00)
    electro (  0.896,  -0.266,  -0.089)  (  0.896,  -0.266,  -0.089)  ( 0.00,  0.00,  0.00)
 9       ( 54.560, -52.299, -164.466)  ( 54.572, -52.285, -164.420)  ( 0.02,  0.03,  0.03)
    bond    ( 56.519, -79.843, -150.792)  ( 56.526, -79.830, -150.746)  ( 0.01,  0.02,  0.03)
    angle   (-10.922,  -2.355,  -2.847)  (-10.917,  -2.355,  -2.846)  ( 0.04,  0.01,  0.01)
    torsion ( -3.071,  52.160, -28.774)  ( -3.071,  52.160, -28.774)  ( 0.00,  0.00,  0.00)
    vdw     ( 12.312, -22.675,  18.613)  ( 12.312, -22.675,  18.613)  ( 0.00,  0.00,  0.00)
    electro ( -0.278,   0.414,  -0.667)  ( -0.278,   0.414,  -0.667)  ( 0.00,  0.00,  0.00)
10       (902.417, -191.429, -157.620)  (902.523, -191.343, -157.610)  ( 0.01,  0.05,  0.01)
    bond    (1009.544, -205.757, -159.927)  (1009.639, -205.682, -159.922)  ( 0.01,  0.04,  0.00)
    angle   (-118.889,  28.667, -37.671)  (-118.878,  28.678, -37.668)  ( 0.01,  0.04,  0.01)
    torsion (  5.313, -17.875,  36.215)  (  5.313, -17.874,  36.217)  ( 0.00,  0.00,  0.00)
    vdw     (  6.450,   3.535,   3.763)  (  6.450,   3.535,   3.763)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (319.664, -321.973, 188.172)  (319.750, -321.894, 188.183)  ( 0.03,  0.02,  0.01)
    bond    (249.730, -328.174,  79.290)  (249.802, -328.108,  79.298)  ( 0.03,  0.02,  0.01)
    angle   ( 68.513,  15.709, 114.859)  ( 68.526,  15.722, 114.861)  ( 0.02,  0.08,  0.00)
    torsion (  2.045,  -6.876,  -5.315)  (  2.045,  -6.876,  -5.314)  ( 0.00,  0.00,  0.03)
    vdw     ( -0.624,  -2.632,  -0.663)  ( -0.624,  -2.632,  -0.663)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (792.998, 567.882, -81.308)  (793.077, 567.966, -81.294)  ( 0.01,  0.01,  0.02)
    bond    (843.893, 675.743, -78.173)  (843.959, 675.813, -78.163)  ( 0.01,  0.01,  0.01)
    angle   (-49.137, -108.267,  -6.420)  (-49.125, -108.254,  -6.418)  ( 0.03,  0.01,  0.04)
    torsion ( -0.622,   0.403,   3.289)  ( -0.622,   0.403,   3.291)  ( 0.00,  0.00,  0.07)
    vdw     ( -1.136,   0.003,  -0.004)  ( -1.136,   0.003,  -0.004)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (312.951, 491.505, -75.462)  (313.038, 491.587, -75.458)  ( 0.03,  0.02,  0.01)
    bond    (182.102, 361.399, -39.998)  (182.175, 361.465, -39.996)  ( 0.04,  0.02,  0.00)
    angle   (145.132, 114.986, -32.807)  (145.144, 115.001, -32.807)  ( 0.01,  0.01,  0.00)
    torsion ( -0.088,   1.470,  -3.367)  ( -0.088,   1.470,  -3.364)  ( 0.00,  0.01,  0.08)
    vdw     (-14.502,  14.813,   1.383)  (-14.502,  14.814,   1.383)  ( 0.00,  0.00,  0.00)
    electro (  0.308,  -1.163,  -0.673)  (  0.308,  -1.163,  -0.673)  ( 0.00,  0.00,  0.00)
14       (-285.855, 353.859,  45.419)  (-285.768, 353.956,  45.423)  ( 0.03,  0.03,  0.01)
    bond    (-505.028, 338.173, -11.705)  (-504.956, 338.260, -11.704)  ( 0.01,  0.03,  0.01)
    angle   (220.011,  15.873,  61.540)  (220.025,  15.883,  61.539)  ( 0.01,  0.06,  0.00)
    torsion ( -1.857,  -2.686,  -4.718)  ( -1.857,  -2.686,  -4.715)  ( 0.00,  0.00,  0.07)
    vdw     (  1.019,   2.499,   0.302)  (  1.019,   2.499,   0.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( 25.054, -209.299, -22.858)  ( 25.150, -209.212, -22.852)  ( 0.38,  0.04,  0.02)
    bond    (156.762, -155.422, -28.130)  (156.846, -155.348, -28.128)  ( 0.05,  0.05,  0.01)
    angle   (-129.413, -58.792,  -1.964)  (-129.401, -58.781,  -1.965)  ( 0.01,  0.02,  0.02)
    torsion ( -1.764,  -0.172,   6.998)  ( -1.763,  -0.172,   7.001)  ( 0.00,  0.00,  0.05)
    vdw     ( -0.532,   5.087,   0.239)  ( -0.532,   5.087,   0.239)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-51.128, -108.925,  -4.781)  (-51.047, -108.836,  -4.775)  ( 0.16,  0.08,  0.12)
    bond    ( 22.023, -118.566, -16.321)  ( 22.092, -118.490, -16.319)  ( 0.31,  0.06,  0.01)
    angle   (-70.752,   8.239,   6.612)  (-70.740,   8.252,   6.613)  ( 0.02,  0.15,  0.00)
    torsion (  0.535,  -0.313,   3.768)  (  0.535,  -0.313,   3.771)  ( 0.00,  0.00,  0.08)
    vdw     ( -3.684,   1.730,   2.525)  ( -3.684,   1.730,   2.525)  ( 0.00,  0.01,  0.00)
    electro (  0.749,  -0.015,  -1.365)  (  0.749,  -0.015,  -1.365)  ( 0.00,  0.00,  0.00)
17       (-18.599, 107.329,  14.331)  (-18.525, 107.424,  14.337)  ( 0.40,  0.09,  0.04)
    bond    (-22.609, 136.062,  16.568)  (-22.547, 136.145,  16.570)  ( 0.27,  0.06,  0.01)
    angle   ( 10.531, -26.073,  -5.363)  ( 10.544, -26.061,  -5.363)  ( 0.12,  0.05,  0.01)
    torsion (  0.544,  -0.373,   3.400)  (  0.544,  -0.373,   3.403)  ( 0.00,  0.00,  0.09)
    vdw     ( -7.528,  -2.318,   0.337)  ( -7.528,  -2.318,   0.337)  ( 0.00,  0.00,  0.00)
    electro (  0.462,   0.030,  -0.611)  (  0.462,   0.030,  -0.611)  ( 0.00,  0.00,  0.00)
18       (-65.728, -68.630,  -0.678)  (-65.630, -68.559,  -0.673)  ( 0.15,  0.10,  0.29)
    bond    (-91.259, -79.239,   0.226)  (-91.173, -79.180,   0.227)  ( 0.09,  0.07,  0.02)
    angle   ( 26.073,  13.883,  -0.908)  ( 26.086,  13.895,  -0.908)  ( 0.05,  0.09,  0.02)
    torsion (  0.013,  -0.002,   0.509)  (  0.013,  -0.002,   0.512)  ( 0.00,  0.00,  0.16)
    vdw     ( -0.595,  -4.303,  -0.356)  ( -0.595,  -4.303,  -0.356)  ( 0.00,  0.00,  0.00)
    electro (  0.039,   1.031,  -0.148)  (  0.039,   1.031,  -0.148)  ( 0.00,  0.00,  0.00)
19       ( 84.900,  81.285,   1.318)  ( 84.982,  81.374,   1.321)  ( 0.10,  0.11,  0.30)
    bond    (131.843,  64.348,  -6.215)  (131.912,  64.425,  -6.214)  ( 0.05,  0.12,  0.01)
    angle   (-51.578,  20.309,   7.548)  (-51.566,  20.321,   7.548)  ( 0.02,  0.06,  0.00)
    torsion (  0.198,  -0.086,   0.969)  (  0.198,  -0.086,   0.972)  ( 0.00,  0.00,  0.30)
    vdw     (  5.107,  -3.360,  -0.889)  (  5.107,  -3.360,  -0.889)  ( 0.00,  0.00,  0.00)
    electro ( -0.670,   0.074,  -0.094)  ( -0.670,   0.074,  -0.094)  ( 0.00,  0.00,  0.00)
20       (-68.566,  83.560,  12.049)  (-68.492,  83.657,  12.055)  ( 0.11,  0.12,  0.05)
    bond    (-174.589, 125.582,  27.601)  (-174.527, 125.666,  27.603)  ( 0.04,  0.07,  0.01)
    angle   (103.136, -36.313, -15.162)  (103.148, -36.301, -15.162)  ( 0.01,  0.03,  0.00)
    torsion (  0.377,   0.326,   1.382)  (  0.377,   0.326,   1.386)  ( 0.00,  0.00,  0.23)
    vdw     (  2.983,  -6.488,  -1.697)  (  2.983,  -6.488,  -1.697)  ( 0.01,  0.00,  0.00)
    electro ( -0.473,   0.454,  -0.075)  ( -0.473,   0.454,  -0.075)  ( 0.00,  0.00,  0.00)
21       (-59.285, -82.297, -73.888)  (-59.238, -82.247, -73.846)  ( 0.08,  0.06,  0.06)
    bond    ( 12.624, -154.571,  15.639)  ( 12.658, -154.531,  15.674)  ( 0.27,  0.03,  0.22)
    angle   (-67.098,  69.417, -105.866)  (-67.085,  69.427, -105.858)  ( 0.02,  0.01,  0.01)
    torsion ( -4.653,   3.381,  16.257)  ( -4.653,   3.382,  16.258)  ( 0.01,  0.01,  0.00)
    vdw     ( -0.158,  -0.525,   0.081)  ( -0.158,  -0.525,   0.081)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-87.783,  47.479,  50.431)  (-87.734,  47.527,  50.481)  ( 0.06,  0.10,  0.10)
    bond    ( 12.839,  22.573,   0.989)  ( 12.876,  22.608,   1.026)  ( 0.29,  0.15,  3.63)
    angle   (-100.179,  23.945,  45.961)  (-100.167,  23.957,  45.974)  ( 0.01,  0.05,  0.03)
    torsion (  1.924,  -0.079,   2.304)  (  1.924,  -0.078,   2.305)  ( 0.01,  0.00,  0.01)
    vdw     ( -2.367,   1.040,   1.177)  ( -2.367,   1.040,   1.177)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 87.616,  98.898, -21.265)  ( 87.666,  98.946, -21.217)  ( 0.06,  0.05,  0.23)
    bond    (  2.818,  34.692,   2.637)  (  2.854,  34.728,   2.674)  ( 1.27,  0.10,  1.40)
    angle   ( 88.780,  56.032, -24.887)  ( 88.794,  56.044, -24.875)  ( 0.02,  0.02,  0.04)
    torsion (  2.091,  -0.939,   5.736)  (  2.091,  -0.939,   5.736)  ( 0.01,  0.02,  0.01)
    vdw     ( -6.073,   9.113,  -4.752)  ( -6.073,   9.113,  -4.752)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-1359.871, -717.904,  54.949)  (-1359.826, -717.853,  54.998)  ( 0.00,  0.01,  0.09)
    bond    (-1327.632, -815.920,  90.720)  (-1327.597, -815.884,  90.763)  ( 0.00,  0.00,  0.05)
    angle   (-37.784, 107.786, -38.227)  (-37.775, 107.801, -38.220)  ( 0.02,  0.01,  0.02)
    torsion ( -0.124,  -0.490,  -1.187)  ( -0.124,  -0.490,  -1.187)  ( 0.00,  0.01,  0.07)
    vdw     (  5.669,  -9.280,   3.643)  (  5.670,  -9.280,   3.643)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-42.127, -107.762,  17.657)  (-42.079, -107.712,  17.703)  ( 0.11,  0.05,  0.26)
    bond    (-40.433, -20.011,   4.163)  (-40.396, -19.976,   4.199)  ( 0.09,  0.17,  0.87)
    angle   (-20.506, -107.609,  15.774)  (-20.497, -107.595,  15.782)  ( 0.05,  0.01,  0.05)
    torsion (  1.314,  -4.542,   0.958)  (  1.314,  -4.542,   0.959)  ( 0.01,  0.01,  0.07)
    vdw     ( 17.499,  24.400,  -3.238)  ( 17.500,  24.400,  -3.238)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( 21.588,  40.316,  -5.066)  ( 21.632,  40.363,  -5.021)  ( 0.20,  0.12,  0.90)
    bond    ( 55.866, -14.525, -25.232)  ( 55.900, -14.489, -25.196)  ( 0.06,  0.25,  0.14)
    angle   (-35.142,  55.332,  11.882)  (-35.133,  55.344,  11.892)  ( 0.03,  0.02,  0.08)
    torsion (  2.117,   1.420,   7.814)  (  2.117,   1.421,   7.814)  ( 0.01,  0.01,  0.01)
    vdw     ( -1.253,  -1.912,   0.470)  ( -1.253,  -1.912,   0.470)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-48.039, -72.953,  -8.657)  (-47.991, -72.904,  -8.612)  ( 0.10,  0.07,  0.52)
    bond    (-26.888,  10.352,  -0.511)  (-26.850,  10.387,  -0.476)  ( 0.14,  0.34,  1.83)
    angle   (-20.883, -88.530, -20.258)  (-20.873, -88.517, -20.249)  ( 0.05,  0.02,  0.04)
    torsion ( -3.007,   3.318,   9.853)  ( -3.006,   3.319,   9.853)  ( 0.00,  0.00,  0.00)
    vdw     (  2.738,   1.908,   2.260)  (  2.738,   1.908,   2.260)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-84.570,  30.490, 124.958)  (-84.524,  30.536, 125.002)  ( 0.05,  0.15,  0.04)
    bond    (-12.611,  17.684,  62.899)  (-12.576,  17.721,  62.933)  ( 0.28,  0.21,  0.05)
    angle   (-69.663,   5.775,  52.412)  (-69.652,   5.785,  52.422)  ( 0.02,  0.16,  0.02)
    torsion ( -1.456,   7.503,   9.639)  ( -1.456,   7.503,   9.639)  ( 0.02,  0.00,  0.00)
    vdw     ( -0.840,  -0.473,   0.009)  ( -0.840,  -0.473,   0.009)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (177.395,  60.084, -16.184)  (177.438,  60.133, -16.135)  ( 0.02,  0.08,  0.30)
    bond    (128.215,  58.142, -25.742)  (128.248,  58.180, -25.705)  ( 0.03,  0.07,  0.14)
    angle   ( 48.331,  15.984,  17.772)  ( 48.341,  15.995,  17.783)  ( 0.02,  0.07,  0.07)
    torsion ( -3.523,  -9.583,   6.545)  ( -3.523,  -9.583,   6.545)  ( 0.00,  0.00,  0.00)
    vdw     (  4.372,  -4.459, -14.759)  (  4.372,  -4.459, -14.758)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-426.457,  33.828, -847.803)  (-426.421,  33.861, -847.727)  ( 0.01,  0.10,  0.01)
    bond    (-248.539, 199.821, -757.719)  (-248.512, 199.849, -757.651)  ( 0.01,  0.01,  0.01)
    angle   (-200.524, -157.469, -57.618)  (-200.516, -157.463, -57.611)  ( 0.00,  0.00,  0.01)
    torsion (  5.066,  -6.424,   2.469)  (  5.066,  -6.424,   2.469)  ( 0.00,  0.00,  0.00)
    vdw     ( 16.801,  -1.923, -31.071)  ( 16.802,  -1.923, -31.070)  ( 0.00,  0.00,  0.00)
    electro (  0.739,  -0.178,  -3.864)  (  0.739,  -0.178,  -3.864)  ( 0.00,  0.00,  0.00)
31       ( 89.155, -196.014, 508.706)  ( 89.161, -195.994, 508.754)  ( 0.01,  0.01,  0.01)
    bond    (-48.172, -271.651, 450.146)  (-48.169, -271.632, 450.194)  ( 0.01,  0.01,  0.01)
    angle   (132.809,  73.117,  58.328)  (132.813,  73.118,  58.328)  ( 0.00,  0.00,  0.00)
    torsion (  0.761,  -1.047,  -0.550)  (  0.761,  -1.047,  -0.550)  ( 0.00,  0.00,  0.00)
    vdw     (  3.470,   3.508,   0.069)  (  3.470,   3.508,   0.069)  ( 0.00,  0.00,  0.00)
    electro (  0.286,   0.059,   0.714)  (  0.286,   0.059,   0.714)  ( 0.00,  0.00,  0.00)
32       (490.669, 101.736,  98.287)  (490.685, 101.736,  98.311)  ( 0.00,  0.00,  0.02)
    bond    (211.229,   6.631, 313.253)  (211.237,   6.629, 313.272)  ( 0.00,  0.02,  0.01)
    angle   ( 68.266,  79.408, -47.714)  ( 68.268,  79.410, -47.713)  ( 0.00,  0.00,  0.00)
    torsion ( -3.055,   4.182,   1.971)  ( -3.055,   4.182,   1.971)  ( 0.00,  0.00,  0.00)
    vdw     (214.229,  11.516, -169.223)  (214.234,  11.516, -169.220)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 44.733, 207.968, -23.796)  ( 44.736, 208.017, -23.769)  ( 0.01,  0.02,  0.12)
    bond    ( 16.304, 200.345,  -7.007)  ( 16.306, 200.392,  -6.985)  ( 0.01,  0.02,  0.31)
    angle   ( 41.809,   0.611, -15.434)  ( 41.811,   0.613, -15.429)  ( 0.01,  0.10,  0.04)
    torsion (-15.671,   2.926,  -2.202)  (-15.672,   2.926,  -2.202)  ( 0.01,  0.00,  0.00)
    vdw     (  4.666,   3.087,   1.248)  (  4.666,   3.087,   1.248)  ( 0.00,  0.00,  0.00)
    electro ( -2.375,   0.999,  -0.401)  ( -2.375,   0.999,  -0.401)  ( 0.00,  0.00,  0.00)
34       (354.368,  30.248, -78.860)  (354.415,  30.254, -78.831)  ( 0.01,  0.02,  0.04)
    bond    (311.200,  51.966, -29.253)  (311.243,  51.969, -29.228)  ( 0.01,  0.01,  0.09)
    angle   ( 33.558,   7.472, -51.143)  ( 33.561,   7.474, -51.139)  ( 0.01,  0.03,  0.01)
    torsion (  6.518, -34.470,  -2.904)  (  6.518, -34.469,  -2.904)  ( 0.00,  0.00,  0.00)
    vdw     (  0.643,   4.871,   4.585)  (  0.643,   4.871,   4.585)  ( 0.01,  0.00,  0.00)
    electro (  2.450,   0.409,  -0.145)  (  2.450,   0.409,  -0.145)  ( 0.00,  0.00,  0.00)
35       ( 14.244,  -4.697,  -4.101)  ( 14.273,  -4.692,  -4.099)  ( 0.20,  0.11,  0.04)
    bond    ( 16.867,  -0.230,  -1.803)  ( 16.896,  -0.230,  -1.803)  ( 0.17,  0.00,  0.02)
    angle   ( -0.250,  -5.004,  -1.704)  ( -0.250,  -4.999,  -1.703)  ( 0.00,  0.10,  0.03)
    torsion ( -0.098,   0.340,  -0.959)  ( -0.098,   0.340,  -0.958)  ( 0.00,  0.00,  0.06)
    vdw     ( -1.133,   0.036,   0.134)  ( -1.133,   0.036,   0.134)  ( 0.00,  0.00,  0.00)
    electro ( -1.143,   0.162,   0.231)  ( -1.143,   0.162,   0.231)  ( 0.00,  0.00,  0.00)
36       (  0.597, -16.289,  -3.896)  (  0.608, -16.267,  -3.892)  ( 0.63,  0.13,  0.10)
    bond    (  7.720, -14.222,  -5.441)  (  7.726, -14.202,  -5.438)  ( 0.08,  0.14,  0.06)
    angle   ( -6.523,  -3.314,  -0.610)  ( -6.519,  -3.312,  -0.610)  ( 0.07,  0.03,  0.00)
    torsion (  0.113,  -0.467,   1.379)  (  0.113,  -0.467,   1.380)  ( 0.00,  0.00,  0.05)
    vdw     ( -0.880,   0.965,   0.387)  ( -0.880,   0.965,   0.387)  ( 0.01,  0.00,  0.00)
    electro (  0.168,   0.749,   0.389)  (  0.168,   0.749,   0.389)  ( 0.00,  0.00,  0.00)
37       ( -2.310, -23.769, -11.430)  ( -2.297, -23.748, -11.427)  ( 0.54,  0.09,  0.02)
    bond    ( -8.146, -13.043,  -3.758)  ( -8.138, -13.023,  -3.756)  ( 0.09,  0.15,  0.05)
    angle   ( 22.101, -12.124,  -5.860)  ( 22.105, -12.123,  -5.860)  ( 0.02,  0.01,  0.01)
    torsion (  0.229,  -0.865,   2.502)  (  0.229,  -0.865,   2.503)  ( 0.00,  0.01,  0.03)
    vdw     (-18.042,   2.279,  -5.298)  (-18.041,   2.279,  -5.298)  ( 0.00,  0.01,  0.00)
    electro (  1.549,  -0.016,   0.985)  (  1.549,  -0.016,   0.985)  ( 0.00,  0.00,  0.00)
38       (  8.256,  14.349,   2.206)  (  8.266,  14.371,   2.209)  ( 0.13,  0.15,  0.16)
    bond    ( -4.650,   8.801,   3.291)  ( -4.644,   8.822,   3.294)  ( 0.12,  0.23,  0.09)
    angle   ( 17.462,   8.623,   1.530)  ( 17.466,   8.624,   1.530)  ( 0.03,  0.01,  0.00)
    torsion ( -0.168,   0.870,  -2.570)  ( -0.168,   0.870,  -2.569)  ( 0.00,  0.01,  0.03)
    vdw     ( -3.176,  -3.397,   0.141)  ( -3.176,  -3.397,   0.141)  ( 0.01,  0.00,  0.00)
    electro ( -1.211,  -0.549,  -0.187)  ( -1.211,  -0.549,  -0.187)  ( 0.00,  0.00,  0.00)
39       ( 11.395,  10.831,  -1.373)  ( 11.407,  10.852,  -1.371)  ( 0.11,  0.19,  0.17)
    bond    (  8.882,  13.515,   3.463)  (  8.890,  13.534,   3.465)  ( 0.09,  0.14,  0.04)
    angle   (  3.987,  -2.305,  -1.242)  (  3.991,  -2.304,  -1.242)  ( 0.10,  0.06,  0.03)
    torsion ( -0.368,   1.081,  -3.282)  ( -0.368,   1.082,  -3.282)  ( 0.00,  0.01,  0.02)
    vdw     ( -0.682,  -0.953,  -0.210)  ( -0.682,  -0.953,  -0.210)  ( 0.01,  0.00,  0.00)
    electro ( -0.425,  -0.508,  -0.102)  ( -0.425,  -0.508,  -0.102)  ( 0.00,  0.00,  0.00)
40       (-20.030, 112.349, -24.243)  (-20.020, 112.364, -24.230)  ( 0.05,  0.01,  0.05)
    bond    (-28.621,  47.221,  42.215)  (-28.616,  47.235,  42.226)  ( 0.02,  0.03,  0.03)
    angle   ( -8.824,   0.753,  -6.820)  ( -8.821,   0.753,  -6.820)  ( 0.04,  0.03,  0.01)
    torsion ( 17.980,  42.007, -34.806)  ( 17.980,  42.007, -34.805)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.966,  20.347, -24.703)  ( -2.966,  20.347, -24.702)  ( 0.01,  0.00,  0.00)
    electro (  2.402,   2.022,  -0.130)  (  2.402,   2.022,  -0.130)  ( 0.00,  0.00,  0.00)
41       (-68.595, -53.631,  26.054)  (-68.571, -53.615,  26.055)  ( 0.03,  0.03,  0.00)
    bond    ( 32.496, -18.726,   5.332)  ( 32.517, -18.719,   5.332)  ( 0.07,  0.04,  0.01)
    angle   (-53.205, -90.112,   8.124)  (-53.204, -90.108,   8.124)  ( 0.00,  0.01,  0.00)
    torsion (  1.029,  -1.765, -12.473)  (  1.029,  -1.765, -12.473)  ( 0.00,  0.00,  0.01)
    vdw     (-48.606,  55.456,  24.201)  (-48.604,  55.461,  24.201)  ( 0.00,  0.01,  0.00)
    electro ( -0.309,   1.516,   0.870)  ( -0.309,   1.516,   0.870)  ( 0.00,  0.00,  0.00)
42       ( 19.931,  21.181,  17.507)  ( 19.952,  21.195,  17.509)  ( 0.10,  0.06,  0.01)
    bond    (-10.363,   6.911,   2.336)  (-10.343,   6.920,   2.337)  ( 0.19,  0.12,  0.04)
    angle   ( 26.400,  39.285,   0.517)  ( 26.401,  39.289,   0.517)  ( 0.01,  0.01,  0.00)
    torsion ( -1.585,   1.240, -10.682)  ( -1.584,   1.240, -10.682)  ( 0.00,  0.00,  0.01)
    vdw     (  5.691, -27.490,  22.852)  (  5.691, -27.490,  22.853)  ( 0.00,  0.00,  0.00)
    electro ( -0.212,   1.236,   2.483)  ( -0.212,   1.236,   2.483)  ( 0.00,  0.00,  0.00)
43       ( 10.731,   8.923,   2.885)  ( 10.757,   8.932,   2.886)  ( 0.24,  0.10,  0.03)
    bond    ( 14.301,   6.147,  -0.831)  ( 14.325,   6.152,  -0.830)  ( 0.17,  0.07,  0.01)
    angle   ( -1.761,   4.174,   0.598)  ( -1.760,   4.179,   0.598)  ( 0.05,  0.11,  0.01)
    torsion (  0.282,  -0.288,   2.724)  (  0.282,  -0.288,   2.725)  ( 0.00,  0.00,  0.03)
    vdw     ( -1.320,  -0.698,  -0.185)  ( -1.320,  -0.697,  -0.185)  ( 0.00,  0.01,  0.00)
    electro ( -0.770,  -0.413,   0.578)  ( -0.770,  -0.413,   0.578)  ( 0.00,  0.00,  0.00)
44       ( -7.900,  10.788,   3.345)  ( -7.894,  10.816,   3.346)  ( 0.08,  0.26,  0.03)
    bond    (  1.544,  12.383,   1.114)  (  1.545,  12.412,   1.114)  ( 0.03,  0.23,  0.03)
    angle   ( -9.291,   1.062,   1.043)  ( -9.286,   1.062,   1.043)  ( 0.06,  0.01,  0.00)
    torsion (  0.121,  -0.133,   1.312)  (  0.121,  -0.133,   1.313)  ( 0.00,  0.00,  0.06)
    vdw     ( -0.153,  -1.124,  -0.136)  ( -0.153,  -1.124,  -0.136)  ( 0.00,  0.00,  0.00)
    electro ( -0.122,  -1.401,   0.012)  ( -0.122,  -1.401,   0.012)  ( 0.00,  0.00,  0.00)
45       (-21.342,  -0.911,  -0.073)  (-21.322,  -0.897,  -0.072)  ( 0.10,  1.25,  0.01)
    bond    (-15.530,  11.287,   2.391)  (-15.511,  11.296,   2.392)  ( 0.12,  0.09,  0.02)
    angle   ( -7.148,  -9.776,  -0.187)  ( -7.146,  -9.773,  -0.187)  ( 0.03,  0.04,  0.00)
    torsion ( -0.198,   0.179,  -2.132)  ( -0.198,   0.179,  -2.132)  ( 0.00,  0.00,  0.04)
    vdw     (  0.730,  -2.056,  -0.161)  (  0.730,  -2.056,  -0.161)  ( 0.00,  0.01,  0.00)
    electro (  0.804,  -0.544,   0.016)  (  0.804,  -0.544,   0.016)  ( 0.00,  0.00,  0.00)
46       (-46.496, -61.498, -18.466)  (-46.470, -61.485, -18.465)  ( 0.06,  0.02,  0.01)
    bond    (-11.826,  -4.182,   1.104)  (-11.800,  -4.179,   1.104)  ( 0.22,  0.08,  0.03)
    angle   (-21.089,  61.421,   7.120)  (-21.088,  61.427,   7.120)  ( 0.00,  0.01,  0.00)
    torsion ( -0.097,   0.023,  -0.953)  ( -0.097,   0.023,  -0.953)  ( 0.00,  0.00,  0.07)
    vdw     (-12.815, -118.788, -25.577)  (-12.815, -118.784, -25.577)  ( 0.00,  0.00,  0.00)
    electro ( -0.669,   0.028,  -0.158)  ( -0.669,   0.028,  -0.158)  ( 0.00,  0.00,  0.00)
47       ( -4.430,   9.414,  -2.552)  ( -4.422,   9.418,  -2.529)  ( 0.17,  0.04,  0.89)
    bond    (  0.337,   0.107,   0.688)  (  0.343,   0.108,   0.710)  ( 0.17,  0.01,  1.52)
    angle   ( -5.784,   5.773,   1.912)  ( -5.782,   5.776,   1.912)  ( 0.04,  0.05,  0.03)
    torsion (  1.105,   8.313,  -1.798)  (  1.105,   8.313,  -1.798)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.088,  -4.780,  -3.353)  ( -0.088,  -4.779,  -3.353)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (-12.023, -49.357,  -4.040)  (-12.000, -49.348,  -4.036)  ( 0.19,  0.02,  0.10)
    bond    (-45.403, -22.360,  -5.878)  (-45.381, -22.354,  -5.878)  ( 0.05,  0.02,  0.00)
    angle   ( 25.355, -52.296,   3.108)  ( 25.356, -52.292,   3.112)  ( 0.00,  0.01,  0.12)
    torsion (  2.076,  -5.961,   6.639)  (  2.076,  -5.961,   6.639)  ( 0.00,  0.00,  0.00)
    vdw     (  5.949,  31.259,  -7.909)  (  5.949,  31.260,  -7.909)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 29.854, -15.516,  25.759)  ( 29.860, -15.512,  25.785)  ( 0.02,  0.02,  0.10)
    bond    (  8.691,  -1.170,  31.882)  (  8.693,  -1.171,  31.908)  ( 0.02,  0.01,  0.08)
    angle   ( 17.852, -22.195,  -5.679)  ( 17.856, -22.191,  -5.679)  ( 0.02,  0.02,  0.00)
    torsion (  3.717,   7.207,  -0.748)  (  3.717,   7.207,  -0.748)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.406,   0.642,   0.305)  ( -0.406,   0.642,   0.305)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       ( 19.332,  17.986,  -7.948)  ( 19.337,  18.012,  -7.942)  ( 0.03,  0.14,  0.07)
    bond    ( -2.772,  16.961,  -4.316)  ( -2.771,  16.986,  -4.315)  ( 0.02,  0.15,  0.04)
    angle   ( 54.172,   5.135, -14.584)  ( 54.176,   5.135, -14.580)  ( 0.01,  0.01,  0.02)
    torsion ( -5.480,  -2.138,  -4.896)  ( -5.480,  -2.138,  -4.896)  ( 0.00,  0.00,  0.00)
    vdw     (-26.588,  -1.972,  15.848)  (-26.587,  -1.972,  15.848)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (-33.609,  22.090, -39.777)  (-33.594,  22.097, -39.761)  ( 0.04,  0.03,  0.04)
    bond    ( 30.352, -12.598, -34.901)  ( 30.363, -12.597, -34.887)  ( 0.04,  0.01,  0.04)
    angle   (  7.193, -51.789,  24.959)  (  7.196, -51.786,  24.961)  ( 0.03,  0.01,  0.01)
    torsion (  2.155,  -1.693,   2.487)  (  2.155,  -1.693,   2.487)  ( 0.00,  0.00,  0.00)
    vdw     (-73.309,  88.170, -32.322)  (-73.308,  88.173, -32.322)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (-26.418,   3.996,  -6.428)  (-26.409,   4.018,  -6.422)  ( 0.03,  0.54,  0.10)
    bond    ( -6.378,  13.625,  -4.792)  ( -6.374,  13.645,  -4.789)  ( 0.07,  0.15,  0.05)
    angle   (-44.477, -15.621,  14.682)  (-44.474, -15.620,  14.686)  ( 0.01,  0.01,  0.02)
    torsion (  0.169,  -0.561,  -1.823)  (  0.169,  -0.560,  -1.822)  ( 0.00,  0.00,  0.01)
    vdw     ( 24.269,   6.553, -14.496)  ( 24.269,   6.553, -14.496)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( -3.437,  -1.631,  26.032)  ( -3.426,  -1.626,  26.053)  ( 0.30,  0.32,  0.08)
    bond    ( 16.833,   6.637,  27.999)  ( 16.840,   6.638,  28.018)  ( 0.04,  0.01,  0.07)
    angle   (  4.218, -41.377,   7.264)  (  4.221, -41.373,   7.265)  ( 0.07,  0.01,  0.02)
    torsion ( -0.788,   0.868,   0.268)  ( -0.788,   0.868,   0.268)  ( 0.01,  0.01,  0.00)
    vdw     (-23.700,  32.240,  -9.498)  (-23.699,  32.241,  -9.498)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       ( 81.467, -34.947,  -1.282)  ( 81.471, -34.938,  -1.259)  ( 0.01,  0.03,  1.84)
    bond    (  1.892,  19.246, -43.726)  (  1.892,  19.250, -43.702)  ( 0.01,  0.02,  0.05)
    angle   (  2.957,  31.634,  14.063)  (  2.960,  31.638,  14.064)  ( 0.10,  0.01,  0.00)
    torsion (  1.196,   2.026,   0.944)  (  1.196,   2.026,   0.944)  ( 0.00,  0.01,  0.00)
    vdw     ( 75.421, -87.854,  27.436)  ( 75.423, -87.852,  27.436)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       ( 40.592,  12.876,  24.270)  ( 40.596,  12.893,  24.286)  ( 0.01,  0.13,  0.06)
    bond    ( -1.726,  27.095,  26.826)  ( -1.726,  27.109,  26.840)  ( 0.01,  0.05,  0.05)
    angle   ( 22.711,  16.443, -15.151)  ( 22.714,  16.445, -15.149)  ( 0.01,  0.01,  0.01)
    torsion ( -1.073,  -1.363,   1.308)  ( -1.073,  -1.363,   1.308)  ( 0.00,  0.00,  0.01)
    vdw     ( 20.680, -29.298,  11.287)  ( 20.680, -29.297,  11.287)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( 27.201,  24.668,  26.175)  ( 27.205,  24.677,  26.198)  ( 0.02,  0.04,  0.08)
    bond    ( -0.412,  -4.156,   7.487)  ( -0.412,  -4.149,   7.508)  ( 0.00,  0.16,  0.28)
    angle   ( -6.861,   6.239,   3.072)  ( -6.858,   6.242,   3.073)  ( 0.04,  0.04,  0.03)
    torsion (  3.628,  -1.846,  -0.821)  (  3.628,  -1.846,  -0.821)  ( 0.00,  0.01,  0.00)
    vdw     ( 30.846,  24.430,  16.437)  ( 30.847,  24.431,  16.437)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       (  6.227,   9.752, -33.960)  (  6.231,   9.767, -33.943)  ( 0.06,  0.15,  0.05)
    bond    (  0.673, -10.054, -10.747)  (  0.673, -10.041, -10.733)  ( 0.00,  0.13,  0.14)
    angle   (  2.789,   9.500,  -8.716)  (  2.792,   9.501,  -8.714)  ( 0.10,  0.02,  0.02)
    torsion ( -3.331,   3.439,  -3.426)  ( -3.331,   3.439,  -3.426)  ( 0.00,  0.00,  0.00)
    vdw     (  6.096,   6.867, -11.071)  (  6.097,   6.867, -11.071)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( -5.987,  -9.459, -49.588)  ( -5.984,  -9.446, -49.569)  ( 0.05,  0.13,  0.04)
    bond    (  0.309,  11.548, -14.901)  (  0.309,  11.558, -14.884)  ( 0.00,  0.09,  0.12)
    angle   ( -5.702,  -5.199,  -4.155)  ( -5.699,  -5.197,  -4.154)  ( 0.05,  0.03,  0.03)
    torsion ( -0.002,  -2.821,  -2.191)  ( -0.002,  -2.821,  -2.191)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.592, -12.986, -28.341)  ( -0.592, -12.986, -28.340)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (  9.174,  -2.477,  16.948)  (  9.177,  -2.462,  16.965)  ( 0.04,  0.59,  0.10)
    bond    ( -0.858,  -7.737,   8.410)  ( -0.858,  -7.725,   8.425)  ( 0.01,  0.16,  0.18)
    angle   (  0.951,  16.311,  15.052)  (  0.953,  16.313,  15.053)  ( 0.28,  0.01,  0.01)
    torsion (  6.189,  -5.933,  -4.809)  (  6.189,  -5.933,  -4.809)  ( 0.00,  0.00,  0.00)
    vdw     (  2.893,  -5.118,  -1.704)  (  2.893,  -5.118,  -1.704)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (  1.620,   9.312, -16.176)  (  1.624,   9.322, -16.154)  ( 0.26,  0.10,  0.13)
    bond    ( -0.741,  -4.985,  -8.670)  ( -0.741,  -4.978,  -8.650)  ( 0.01,  0.14,  0.24)
    angle   ( 19.298,  11.561,  -8.309)  ( 19.301,  11.564,  -8.308)  ( 0.02,  0.02,  0.01)
    torsion ( -4.603,   8.550,  -4.527)  ( -4.603,   8.550,  -4.527)  ( 0.00,  0.00,  0.00)
    vdw     (-12.335,  -5.814,   5.331)  (-12.334,  -5.814,   5.331)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       (  0.422,  14.820, -44.546)  (  0.425,  14.846, -44.541)  ( 0.14,  0.17,  0.01)
    bond    ( -1.386,  20.860,  -6.064)  ( -1.386,  20.885,  -6.062)  ( 0.00,  0.12,  0.03)
    angle   ( -3.325,  -5.687, -18.836)  ( -3.322,  -5.687, -18.834)  ( 0.08,  0.00,  0.01)
    torsion (  7.603,  -5.139, -19.445)  (  7.603,  -5.139, -19.445)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.471,   4.787,  -0.201)  ( -2.471,   4.787,  -0.201)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (-11.633, -21.258,  20.469)  (-11.629, -21.236,  20.477)  ( 0.04,  0.10,  0.04)
    bond    (  5.612, -18.339,   8.759)  (  5.614, -18.318,   8.764)  ( 0.03,  0.11,  0.05)
    angle   (-10.045,   6.500,  20.018)  (-10.042,   6.501,  20.021)  ( 0.02,  0.01,  0.02)
    torsion ( -6.192,  -3.697,  -3.761)  ( -6.192,  -3.697,  -3.761)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.008,  -5.723,  -4.547)  ( -1.008,  -5.722,  -4.547)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( -8.829,  13.456, -27.965)  ( -8.823,  13.461, -27.941)  ( 0.07,  0.03,  0.09)
    bond    ( -8.382,  -4.333, -22.492)  ( -8.379,  -4.333, -22.469)  ( 0.04,  0.02,  0.10)
    angle   (-19.664,  13.436,   4.740)  (-19.662,  13.440,   4.740)  ( 0.01,  0.03,  0.01)
    torsion (  2.869,   6.025,  -2.232)  (  2.869,   6.025,  -2.232)  ( 0.00,  0.00,  0.00)
    vdw     ( 16.348,  -1.672,  -7.980)  ( 16.349,  -1.672,  -7.980)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       ( -4.934, -158.045,  88.647)  ( -4.933, -158.005,  88.654)  ( 0.01,  0.03,  0.01)
    bond    (-17.037, -174.637,  46.452)  (-17.036, -174.598,  46.456)  ( 0.01,  0.02,  0.01)
    angle   ( -0.653,   3.633,  13.413)  ( -0.653,   3.633,  13.415)  ( 0.00,  0.01,  0.02)
    torsion ( 11.026,  -0.870,   0.773)  ( 11.026,  -0.870,   0.773)  ( 0.01,  0.00,  0.00)
    vdw     (  0.783,  15.180,  27.637)  (  0.783,  15.180,  27.637)  ( 0.00,  0.00,  0.00)
    electro (  0.947,  -1.351,   0.372)  (  0.947,  -1.351,   0.372)  ( 0.00,  0.00,  0.00)
65       (-540.524, -18.711, 270.543)  (-540.477, -18.709, 270.552)  ( 0.01,  0.01,  0.00)
    bond    (-318.057, -51.391,   7.139)  (-318.016, -51.389,   7.141)  ( 0.01,  0.01,  0.02)
    angle   (  1.368,  -2.834,  40.547)  (  1.369,  -2.834,  40.550)  ( 0.00,  0.00,  0.01)
    torsion ( -6.132,  38.351,   2.887)  ( -6.132,  38.352,   2.887)  ( 0.00,  0.00,  0.00)
    vdw     (-215.611,  -2.616, 216.741)  (-215.606,  -2.617, 216.745)  ( 0.00,  0.02,  0.00)
    electro ( -2.092,  -0.220,   3.229)  ( -2.092,  -0.220,   3.229)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 7 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 8 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/bipyrrole.gpr
 # Expected       319.57605, found 319.576050&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (166.136, -124.754, -60.523)  (166.215, -124.688, -60.497)  ( 0.05,  0.05,  0.04)
    bond    (-26.883, -147.726, -90.013)  (-26.816, -147.672, -89.993)  ( 0.25,  0.04,  0.02)
    angle   (190.780,  16.997,  38.464)  (190.792,  17.008,  38.468)  ( 0.01,  0.06,  0.01)
    torsion (  1.643,   5.589,  -9.269)  (  1.643,   5.590,  -9.267)  ( 0.00,  0.01,  0.02)
    vdw     (  1.013,   0.083,   0.398)  (  1.013,   0.083,   0.398)  ( 0.00,  0.00,  0.00)
    electro ( -0.417,   0.303,  -0.103)  ( -0.417,   0.303,  -0.103)  ( 0.00,  0.00,  0.00)
 2       (-297.047,  96.354,  13.818)  (-296.964,  96.417,  13.844)  ( 0.03,  0.07,  0.19)
    bond    (-129.145, 138.142,  49.204)  (-129.074, 138.195,  49.224)  ( 0.06,  0.04,  0.04)
    angle   (-166.550, -33.495, -45.045)  (-166.539, -33.485, -45.042)  ( 0.01,  0.03,  0.01)
    torsion ( -2.365,  -6.507,  10.958)  ( -2.365,  -6.506,  10.961)  ( 0.01,  0.01,  0.02)
    vdw     (  0.556,  -0.823,  -0.469)  (  0.556,  -0.823,  -0.469)  ( 0.00,  0.00,  0.00)
    electro (  0.459,  -0.964,  -0.830)  (  0.459,  -0.964,  -0.830)  ( 0.00,  0.00,  0.00)
 3       ( -9.573,  44.738,  10.609)  ( -9.490,  44.797,  10.635)  ( 0.86,  0.13,  0.24)
    bond    ( 19.883, -14.941,   1.560)  ( 19.953, -14.890,   1.579)  ( 0.35,  0.34,  1.26)
    angle   (-34.122,  46.870,  31.364)  (-34.110,  46.878,  31.368)  ( 0.03,  0.02,  0.01)
    torsion (  4.521,  13.586, -22.108)  (  4.521,  13.587, -22.106)  ( 0.00,  0.01,  0.01)
    vdw     (  0.146,  -0.777,  -0.206)  (  0.146,  -0.777,  -0.206)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-123.820, -214.782, -107.868)  (-123.730, -214.717, -107.842)  ( 0.07,  0.03,  0.02)
    bond    (-57.493, -82.447, -62.641)  (-57.414, -82.393, -62.620)  ( 0.14,  0.06,  0.03)
    angle   (-65.102, -130.239, -41.819)  (-65.090, -130.228, -41.816)  ( 0.02,  0.01,  0.01)
    torsion ( -0.390,  -1.566,  -3.103)  ( -0.390,  -1.565,  -3.101)  ( 0.00,  0.06,  0.06)
    vdw     ( -0.835,  -0.530,  -0.305)  ( -0.835,  -0.530,  -0.305)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-96.635, -280.772, -157.070)  (-96.548, -280.714, -157.043)  ( 0.09,  0.02,  0.02)
    bond    ( 35.164, -188.308, -106.187)  ( 35.239, -188.263, -106.166)  ( 0.21,  0.02,  0.02)
    angle   (-128.195, -84.691, -69.739)  (-128.183, -84.679, -69.735)  ( 0.01,  0.01,  0.01)
    torsion ( -3.475, -11.451,  18.110)  ( -3.475, -11.450,  18.112)  ( 0.00,  0.01,  0.01)
    vdw     (  0.579,   0.557,   0.365)  (  0.579,   0.557,   0.365)  ( 0.00,  0.00,  0.00)
    electro ( -0.709,   3.122,   0.381)  ( -0.709,   3.122,   0.381)  ( 0.00,  0.00,  0.00)
 6       (135.137, 230.989,  41.484)  (135.230, 231.076,  41.487)  ( 0.07,  0.04,  0.01)
    bond    ( 63.298,  98.989, -13.836)  ( 63.378,  99.062, -13.837)  ( 0.13,  0.07,  0.00)
    angle   ( 70.873, 127.550,  32.227)  ( 70.885, 127.563,  32.227)  ( 0.02,  0.01,  0.00)
    torsion (  0.010,   3.655,  22.816)  (  0.010,   3.656,  22.819)  ( 0.00,  0.01,  0.01)
    vdw     (  0.957,   0.795,   0.277)  (  0.957,   0.795,   0.277)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (123.536, 325.095, -71.471)  (123.625, 325.172, -71.466)  ( 0.07,  0.02,  0.01)
    bond    (-21.296, 213.826, -37.139)  (-21.219, 213.888, -37.137)  ( 0.36,  0.03,  0.01)
    angle   (144.375, 118.592, -11.308)  (144.387, 118.608, -11.308)  ( 0.01,  0.01,  0.01)
    torsion (  0.299,  -3.704, -22.297)  (  0.299,  -3.704, -22.295)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.644,  -0.588,   0.102)  ( -0.644,  -0.588,   0.102)  ( 0.00,  0.00,  0.00)
    electro (  0.801,  -3.032,  -0.829)  (  0.801,  -3.032,  -0.829)  ( 0.00,  0.00,  0.00)
 8       (-173.544, 141.885,   1.467)  (-173.464, 141.973,   1.468)  ( 0.05,  0.06,  0.11)
    bond    ( 35.279, 170.381, -15.404)  ( 35.347, 170.453, -15.405)  ( 0.19,  0.04,  0.00)
    angle   (-208.439, -28.829,   7.088)  (-208.427, -28.814,   7.087)  ( 0.01,  0.05,  0.01)
    torsion (  0.235,   0.811,   9.763)  (  0.235,   0.811,   9.766)  ( 0.00,  0.00,  0.03)
    vdw     ( -1.056,  -0.216,   0.154)  ( -1.056,  -0.216,   0.154)  ( 0.00,  0.00,  0.00)
    electro (  0.437,  -0.262,  -0.133)  (  0.437,  -0.262,  -0.133)  ( 0.00,  0.00,  0.00)
 9       (301.265, -104.882,  13.836)  (301.351, -104.799,  13.838)  ( 0.03,  0.08,  0.01)
    bond    (124.141, -150.653,   6.072)  (124.216, -150.583,   6.071)  ( 0.06,  0.05,  0.01)
    angle   (177.366,  42.267,  -6.026)  (177.378,  42.281,  -6.026)  ( 0.01,  0.03,  0.01)
    torsion (  0.582,   1.393,  14.392)  (  0.582,   1.393,  14.396)  ( 0.00,  0.00,  0.02)
    vdw     ( -0.453,   0.877,  -0.209)  ( -0.453,   0.877,  -0.209)  ( 0.00,  0.00,  0.00)
    electro ( -0.371,   1.234,  -0.393)  ( -0.371,   1.234,  -0.393)  ( 0.00,  0.00,  0.00)
10       ( -8.811, -36.455,  -1.983)  ( -8.727, -36.374,  -1.981)  ( 0.95,  0.22,  0.14)
    bond    (-21.325,  13.809,   7.460)  (-21.252,  13.878,   7.459)  ( 0.34,  0.50,  0.01)
    angle   ( 13.345, -47.372,  23.451)  ( 13.357, -47.361,  23.452)  ( 0.09,  0.02,  0.00)
    torsion ( -0.719,  -3.690, -33.032)  ( -0.719,  -3.690, -33.029)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.113,   0.799,   0.138)  ( -0.113,   0.799,   0.138)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-335.843, -447.540,  64.828)  (-335.796, -447.486,  64.873)  ( 0.01,  0.01,  0.07)
    bond    (-120.022, -230.427,  22.445)  (-119.988, -230.387,  22.481)  ( 0.03,  0.02,  0.16)
    angle   (-216.364, -217.710,  35.994)  (-216.351, -217.696,  36.003)  ( 0.01,  0.01,  0.02)
    torsion (  0.153,   0.539,   5.921)  (  0.153,   0.539,   5.921)  ( 0.00,  0.00,  0.01)
    vdw     (  0.389,   0.057,   0.468)  (  0.389,   0.057,   0.468)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       ( 45.125, -47.058,   0.805)  ( 45.148, -47.047,   0.805)  ( 0.05,  0.02,  0.02)
    bond    ( 11.340,   6.435,  -0.602)  ( 11.362,   6.442,  -0.602)  ( 0.19,  0.11,  0.00)
    angle   ( 29.821, -51.986,   6.570)  ( 29.823, -51.982,   6.570)  ( 0.01,  0.01,  0.01)
    torsion ( -0.085,  -0.362,  -5.488)  ( -0.085,  -0.362,  -5.487)  ( 0.00,  0.00,  0.02)
    vdw     (  1.572,  -0.977,   0.170)  (  1.572,  -0.977,   0.170)  ( 0.00,  0.00,  0.00)
    electro (  2.476,  -0.168,   0.155)  (  2.476,  -0.168,   0.155)  ( 0.00,  0.00,  0.00)
13       (-44.310, -61.549,   8.059)  (-44.292, -61.533,   8.060)  ( 0.04,  0.03,  0.01)
    bond    (  6.870,  -6.372,   0.515)  (  6.886,  -6.359,   0.515)  ( 0.23,  0.21,  0.00)
    angle   (-50.625, -54.068,   9.337)  (-50.623, -54.064,   9.337)  ( 0.00,  0.01,  0.00)
    torsion ( -0.046,  -0.212,  -2.002)  ( -0.046,  -0.212,  -2.002)  ( 0.00,  0.00,  0.04)
    vdw     ( -0.276,   0.226,  -0.104)  ( -0.276,   0.226,  -0.104)  ( 0.00,  0.00,  0.00)
    electro ( -0.233,  -1.124,   0.314)  ( -0.233,  -1.124,   0.314)  ( 0.00,  0.00,  0.00)
14       (307.603, 405.121, 275.266)  (307.651, 405.173, 275.313)  ( 0.02,  0.01,  0.02)
    bond    (107.886, 194.366, 137.411)  (107.920, 194.406, 137.448)  ( 0.03,  0.02,  0.03)
    angle   (200.875, 213.264, 133.858)  (200.889, 213.276, 133.868)  ( 0.01,  0.01,  0.01)
    torsion ( -0.757,  -2.266,   3.729)  ( -0.757,  -2.265,   3.730)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.402,  -0.244,   0.268)  ( -0.402,  -0.244,   0.268)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-42.980,  40.055,  11.551)  (-42.958,  40.063,  11.557)  ( 0.05,  0.02,  0.05)
    bond    (-10.739,  -4.993,  -5.106)  (-10.719,  -4.989,  -5.102)  ( 0.19,  0.09,  0.09)
    angle   (-28.282,  44.652,  15.753)  (-28.281,  44.655,  15.753)  ( 0.01,  0.01,  0.00)
    torsion ( -0.151,  -0.525,   0.829)  ( -0.151,  -0.525,   0.830)  ( 0.00,  0.01,  0.05)
    vdw     ( -1.365,   0.749,   0.269)  ( -1.365,   0.749,   0.269)  ( 0.01,  0.00,  0.00)
    electro ( -2.442,   0.172,  -0.193)  ( -2.442,   0.172,  -0.193)  ( 0.00,  0.00,  0.00)
16       ( 39.265,  50.180,  40.913)  ( 39.284,  50.194,  40.916)  ( 0.05,  0.03,  0.01)
    bond    ( -7.428,   5.996,   2.147)  ( -7.412,   6.007,   2.149)  ( 0.22,  0.18,  0.06)
    angle   ( 46.271,  43.224,  38.774)  ( 46.273,  43.226,  38.776)  ( 0.00,  0.01,  0.00)
    torsion (  0.129,   0.355,  -0.548)  (  0.129,   0.355,  -0.548)  ( 0.00,  0.01,  0.03)
    vdw     (  0.136,  -0.290,  -0.230)  (  0.136,  -0.290,  -0.230)  ( 0.00,  0.00,  0.00)
    electro (  0.157,   0.896,   0.769)  (  0.157,   0.896,   0.769)  ( 0.00,  0.00,  0.00)
17       ( 71.050, 186.033, 121.409)  ( 71.057, 186.055, 121.418)  ( 0.01,  0.01,  0.01)
    bond    (-22.457, 185.029, 106.355)  (-22.456, 185.051, 106.363)  ( 0.01,  0.01,  0.01)
    angle   ( 88.062,  -0.258,  19.043)  ( 88.067,  -0.258,  19.043)  ( 0.01,  0.00,  0.00)
    torsion (  0.626,   1.802,  -3.004)  (  0.626,   1.802,  -3.003)  ( 0.00,  0.01,  0.02)
    vdw     ( -0.434,   0.517,  -1.697)  ( -0.434,   0.517,  -1.697)  ( 0.01,  0.00,  0.00)
    electro (  5.254,  -1.057,   0.713)  (  5.254,  -1.057,   0.713)  ( 0.00,  0.00,  0.00)
18       (-94.948, -213.498,  45.542)  (-94.942, -213.469,  45.544)  ( 0.01,  0.01,  0.01)
    bond    (  9.361, -210.545,  37.181)  (  9.362, -210.516,  37.183)  ( 0.01,  0.01,  0.01)
    angle   (-100.474,  -5.213,  -4.217)  (-100.469,  -5.213,  -4.217)  ( 0.01,  0.00,  0.00)
    torsion ( -0.174,   2.516,  14.287)  ( -0.174,   2.516,  14.287)  ( 0.00,  0.00,  0.00)
    vdw     (  1.751,  -1.137,  -1.857)  (  1.752,  -1.137,  -1.857)  ( 0.01,  0.01,  0.00)
    electro ( -5.413,   0.881,   0.149)  ( -5.413,   0.881,   0.149)  ( 0.00,  0.00,  0.00)
19       (-85.228, -115.378, -67.649)  (-85.214, -115.366, -67.639)  ( 0.02,  0.01,  0.01)
    bond    ( 31.603, -31.324, -25.273)  ( 31.614, -31.314, -25.266)  ( 0.03,  0.03,  0.03)
    angle   (-117.689, -84.412, -42.640)  (-117.686, -84.410, -42.637)  ( 0.00,  0.00,  0.01)
    torsion ( -0.008,   0.089,  -0.120)  ( -0.008,   0.089,  -0.120)  ( 0.00,  0.00,  0.00)
    vdw     (  0.866,   0.269,   0.385)  (  0.866,   0.269,   0.385)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-48.239, -72.450, -69.981)  (-48.225, -72.444, -69.965)  ( 0.03,  0.01,  0.02)
    bond    (-37.263,  17.611, -41.184)  (-37.252,  17.614, -41.170)  ( 0.03,  0.02,  0.03)
    angle   (-10.876, -89.876, -28.612)  (-10.874, -89.872, -28.611)  ( 0.02,  0.00,  0.01)
    torsion ( -0.096,  -0.011,   0.083)  ( -0.096,  -0.011,   0.083)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.003,  -0.175,  -0.268)  ( -0.003,  -0.175,  -0.268)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-41.024, -95.616, -44.566)  (-41.013, -95.603, -44.554)  ( 0.03,  0.01,  0.03)
    bond    (-30.031, -36.047,  31.516)  (-30.023, -36.035,  31.525)  ( 0.03,  0.03,  0.03)
    angle   ( -8.296, -60.639, -77.213)  ( -8.293, -60.637, -77.210)  ( 0.03,  0.00,  0.00)
    torsion (  0.117,  -0.076,   0.025)  (  0.117,  -0.076,   0.025)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.814,   1.145,   1.106)  ( -2.813,   1.145,   1.106)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 48.170, 133.030, -33.687)  ( 48.193, 133.034, -33.678)  ( 0.05,  0.00,  0.03)
    bond    ( 52.153,   0.195, -26.552)  ( 52.176,   0.195, -26.546)  ( 0.04,  0.01,  0.02)
    angle   ( -4.570, 133.610,  -8.002)  ( -4.569, 133.613,  -7.999)  ( 0.02,  0.00,  0.03)
    torsion ( -0.007,   0.002,  -0.014)  ( -0.007,   0.002,  -0.014)  ( 0.00,  0.00,  0.00)
    vdw     (  0.594,  -0.777,   0.881)  (  0.594,  -0.777,   0.881)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 67.259,  62.326,  20.365)  ( 67.264,  62.334,  20.388)  ( 0.01,  0.01,  0.11)
    bond    ( 10.644,  23.335,  49.973)  ( 10.645,  23.340,  49.996)  ( 0.01,  0.02,  0.04)
    angle   ( 56.121,  38.461, -29.908)  ( 56.125,  38.464, -29.907)  ( 0.01,  0.01,  0.00)
    torsion ( -0.016,   0.008,  -0.000)  ( -0.016,   0.008,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.510,   0.522,   0.299)  (  0.510,   0.522,   0.299)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 96.336,  97.938, -55.490)  ( 96.346,  97.953, -55.480)  ( 0.01,  0.01,  0.02)
    bond    (-24.478,  34.857, -28.158)  (-24.471,  34.870, -28.149)  ( 0.03,  0.04,  0.03)
    angle   (121.516,  63.126, -27.444)  (121.519,  63.128, -27.442)  ( 0.00,  0.00,  0.01)
    torsion ( -0.027,   0.017,   0.045)  ( -0.027,   0.017,   0.045)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.675,  -0.062,   0.066)  ( -0.675,  -0.062,   0.066)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 8 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 9 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/buckyball.gpr
 # Expected      3181.31451, found 3181.314511&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (763.291, 211.300, -129.550)  (763.385, 211.381, -129.512)  ( 0.01,  0.04,  0.03)
    bond    (760.485, 208.396, -131.774)  (760.571, 208.466, -131.744)  ( 0.01,  0.03,  0.02)
    angle   ( -0.453,   0.202,  -0.114)  ( -0.445,   0.212,  -0.107)  ( 0.38,  0.20,  0.07)
    torsion ( -0.043,   0.042,   0.071)  ( -0.042,   0.043,   0.072)  ( 0.00,  0.00,  0.01)
    vdw     (  3.302,   2.660,   2.266)  (  3.302,   2.660,   2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( -0.090, 681.758, -422.588)  ( -0.000, 681.860, -422.567)  ( 0.82,  0.01,  0.01)
    bond    ( -0.078, 677.006, -423.243)  (  0.000, 677.098, -423.228)  ( 0.61,  0.01,  0.00)
    angle   ( -0.011,   0.072,  -0.295)  ( -0.000,   0.082,  -0.291)  ( 0.01,  0.07,  0.12)
    torsion ( -0.001,  -0.016,  -0.052)  ( -0.000,  -0.015,  -0.050)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.000,   4.696,   1.002)  ( -0.000,   4.696,   1.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -0.090, -681.961, -422.588)  ( -0.000, -681.860, -422.567)  ( 0.82,  0.01,  0.01)
    bond    ( -0.078, -677.189, -423.243)  (  0.000, -677.098, -423.228)  ( 0.61,  0.01,  0.00)
    angle   ( -0.011,  -0.091,  -0.295)  ( -0.000,  -0.082,  -0.291)  ( 0.01,  0.09,  0.12)
    torsion ( -0.001,   0.015,  -0.052)  ( -0.000,   0.015,  -0.050)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.000,  -4.696,   1.002)  ( -0.000,  -4.696,   1.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (763.291, -211.462, -129.550)  (763.385, -211.381, -129.512)  ( 0.01,  0.04,  0.03)
    bond    (760.485, -208.536, -131.774)  (760.571, -208.466, -131.744)  ( 0.01,  0.03,  0.02)
    angle   ( -0.453,  -0.222,  -0.114)  ( -0.445,  -0.212,  -0.107)  ( 0.38,  0.22,  0.07)
    torsion ( -0.043,  -0.044,   0.071)  ( -0.042,  -0.043,   0.072)  ( 0.00,  0.00,  0.01)
    vdw     (  3.302,  -2.660,   2.266)  (  3.302,  -2.660,   2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-342.105, 475.803, -552.128)  (-342.039, 475.895, -552.073)  ( 0.02,  0.02,  0.01)
    bond    (-337.801, 473.237, -551.537)  (-337.743, 473.318, -551.490)  ( 0.02,  0.02,  0.01)
    angle   ( -0.043,   0.489,   0.094)  ( -0.035,   0.499,   0.101)  ( 0.03,  0.50,  0.06)
    torsion (  0.040,   0.033,  -0.048)  (  0.041,   0.034,  -0.046)  ( 0.00,  0.00,  0.01)
    vdw     ( -4.301,   2.044,  -0.638)  ( -4.301,   2.044,  -0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-342.105, -475.987, -552.128)  (-342.039, -475.895, -552.073)  ( 0.02,  0.02,  0.01)
    bond    (-337.801, -473.399, -551.537)  (-337.743, -473.318, -551.490)  ( 0.02,  0.02,  0.01)
    angle   ( -0.043,  -0.509,   0.094)  ( -0.035,  -0.499,   0.101)  ( 0.03,  0.52,  0.06)
    torsion (  0.040,  -0.034,  -0.048)  (  0.041,  -0.034,  -0.046)  ( 0.00,  0.00,  0.01)
    vdw     ( -4.301,  -2.044,  -0.638)  ( -4.301,  -2.044,  -0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-763.480, 211.300, -129.550)  (-763.385, 211.381, -129.512)  ( 0.01,  0.04,  0.03)
    bond    (-760.656, 208.396, -131.774)  (-760.571, 208.466, -131.744)  ( 0.01,  0.03,  0.02)
    angle   (  0.436,   0.202,  -0.114)  (  0.445,   0.212,  -0.107)  ( 0.37,  0.20,  0.07)
    torsion (  0.042,   0.042,   0.071)  (  0.042,   0.043,   0.072)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.302,   2.660,   2.266)  ( -3.302,   2.660,   2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-763.480, -211.462, -129.550)  (-763.385, -211.381, -129.512)  ( 0.01,  0.04,  0.03)
    bond    (-760.656, -208.536, -131.774)  (-760.571, -208.466, -131.744)  ( 0.01,  0.03,  0.02)
    angle   (  0.436,  -0.222,  -0.114)  (  0.445,  -0.212,  -0.107)  ( 0.37,  0.22,  0.07)
    torsion (  0.042,  -0.044,   0.071)  (  0.042,  -0.043,   0.072)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.302,  -2.660,   2.266)  ( -3.302,  -2.660,   2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (475.803, 552.018, 341.973)  (475.895, 552.073, 342.039)  ( 0.02,  0.01,  0.02)
    bond    (473.237, 551.443, 337.686)  (473.318, 551.490, 337.743)  ( 0.02,  0.01,  0.02)
    angle   (  0.489,  -0.107,   0.027)  (  0.499,  -0.101,   0.035)  ( 0.50,  0.07,  0.02)
    torsion (  0.033,   0.045,  -0.041)  (  0.034,   0.046,  -0.041)  ( 0.00,  0.01,  0.00)
    vdw     (  2.044,   0.638,   4.301)  (  2.044,   0.638,   4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (129.475, 763.291, 211.300)  (129.512, 763.385, 211.381)  ( 0.03,  0.01,  0.04)
    bond    (131.714, 760.485, 208.396)  (131.744, 760.571, 208.466)  ( 0.02,  0.01,  0.03)
    angle   (  0.101,  -0.453,   0.202)  (  0.107,  -0.445,   0.212)  ( 0.06,  0.38,  0.20)
    torsion ( -0.074,  -0.043,   0.042)  ( -0.072,  -0.042,   0.043)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.267,   3.302,   2.660)  ( -2.267,   3.302,   2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (129.475, -763.480, 211.300)  (129.512, -763.385, 211.381)  ( 0.03,  0.01,  0.04)
    bond    (131.714, -760.656, 208.396)  (131.744, -760.571, 208.466)  ( 0.02,  0.01,  0.03)
    angle   (  0.101,   0.436,   0.202)  (  0.107,   0.445,   0.212)  ( 0.06,  0.37,  0.20)
    torsion ( -0.074,   0.042,   0.042)  ( -0.072,   0.042,   0.043)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.267,  -3.302,   2.660)  ( -2.267,  -3.302,   2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (475.803, -552.128, 341.973)  (475.895, -552.073, 342.039)  ( 0.02,  0.01,  0.02)
    bond    (473.237, -551.537, 337.686)  (473.318, -551.490, 337.743)  ( 0.02,  0.01,  0.02)
    angle   (  0.489,   0.094,   0.027)  (  0.499,   0.101,   0.035)  ( 0.50,  0.06,  0.02)
    torsion (  0.033,  -0.048,  -0.041)  (  0.034,  -0.046,  -0.041)  ( 0.00,  0.01,  0.00)
    vdw     (  2.044,  -0.638,   4.301)  (  2.044,  -0.638,   4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (552.018, -342.105, -475.987)  (552.073, -342.039, -475.895)  ( 0.01,  0.02,  0.02)
    bond    (551.443, -337.801, -473.399)  (551.490, -337.743, -473.318)  ( 0.01,  0.02,  0.02)
    angle   ( -0.107,  -0.043,  -0.509)  ( -0.101,  -0.035,  -0.499)  ( 0.07,  0.03,  0.52)
    torsion (  0.045,   0.040,  -0.034)  (  0.046,   0.041,  -0.034)  ( 0.01,  0.00,  0.00)
    vdw     (  0.638,  -4.301,  -2.044)  (  0.638,  -4.301,  -2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-211.462, 129.475, -763.480)  (-211.381, 129.512, -763.385)  ( 0.04,  0.03,  0.01)
    bond    (-208.536, 131.714, -760.656)  (-208.466, 131.744, -760.571)  ( 0.03,  0.02,  0.01)
    angle   ( -0.222,   0.101,   0.436)  ( -0.212,   0.107,   0.445)  ( 0.22,  0.06,  0.37)
    torsion ( -0.044,  -0.074,   0.042)  ( -0.043,  -0.072,   0.042)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.660,  -2.267,  -3.302)  ( -2.660,  -2.267,  -3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (552.018, -342.105, 475.803)  (552.073, -342.039, 475.895)  ( 0.01,  0.02,  0.02)
    bond    (551.443, -337.801, 473.237)  (551.490, -337.743, 473.318)  ( 0.01,  0.02,  0.02)
    angle   ( -0.107,  -0.043,   0.489)  ( -0.101,  -0.035,   0.499)  ( 0.07,  0.03,  0.50)
    torsion (  0.045,   0.040,   0.033)  (  0.046,   0.041,   0.034)  ( 0.01,  0.00,  0.00)
    vdw     (  0.638,  -4.301,   2.044)  (  0.638,  -4.301,   2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-681.961, 422.545,  -0.090)  (-681.860, 422.567,   0.000)  ( 0.01,  0.01,  0.82)
    bond    (-677.189, 423.212,  -0.078)  (-677.098, 423.228,   0.000)  ( 0.01,  0.00,  0.61)
    angle   ( -0.091,   0.287,  -0.011)  ( -0.082,   0.291,   0.000)  ( 0.09,  0.11,  0.01)
    torsion (  0.015,   0.048,  -0.001)  (  0.015,   0.050,  -0.000)  ( 0.00,  0.01,  0.00)
    vdw     ( -4.696,  -1.002,  -0.000)  ( -4.696,  -1.002,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (341.973, -475.987, -552.128)  (342.039, -475.895, -552.073)  ( 0.02,  0.02,  0.01)
    bond    (337.686, -473.399, -551.537)  (337.743, -473.318, -551.490)  ( 0.02,  0.02,  0.01)
    angle   (  0.027,  -0.509,   0.094)  (  0.035,  -0.499,   0.101)  ( 0.02,  0.52,  0.06)
    torsion ( -0.041,  -0.034,  -0.048)  ( -0.041,  -0.034,  -0.046)  ( 0.00,  0.00,  0.01)
    vdw     (  4.301,  -2.044,  -0.638)  (  4.301,  -2.044,  -0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-475.987, 552.018, 341.973)  (-475.895, 552.073, 342.039)  ( 0.02,  0.01,  0.02)
    bond    (-473.399, 551.443, 337.686)  (-473.318, 551.490, 337.743)  ( 0.02,  0.01,  0.02)
    angle   ( -0.509,  -0.107,   0.027)  ( -0.499,  -0.101,   0.035)  ( 0.52,  0.07,  0.02)
    torsion ( -0.034,   0.045,  -0.041)  ( -0.034,   0.046,  -0.041)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.044,   0.638,   4.301)  ( -2.044,   0.638,   4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-211.462, 129.475, 763.291)  (-211.381, 129.512, 763.385)  ( 0.04,  0.03,  0.01)
    bond    (-208.536, 131.714, 760.485)  (-208.466, 131.744, 760.571)  ( 0.03,  0.02,  0.01)
    angle   ( -0.222,   0.101,  -0.453)  ( -0.212,   0.107,  -0.445)  ( 0.22,  0.06,  0.38)
    torsion ( -0.044,  -0.074,  -0.043)  ( -0.043,  -0.072,  -0.042)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.660,  -2.267,   3.302)  ( -2.660,  -2.267,   3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (211.300, 129.475, -763.480)  (211.381, 129.512, -763.385)  ( 0.04,  0.03,  0.01)
    bond    (208.396, 131.714, -760.656)  (208.466, 131.744, -760.571)  ( 0.03,  0.02,  0.01)
    angle   (  0.202,   0.101,   0.436)  (  0.212,   0.107,   0.445)  ( 0.20,  0.06,  0.37)
    torsion (  0.042,  -0.074,   0.042)  (  0.043,  -0.072,   0.042)  ( 0.00,  0.01,  0.00)
    vdw     (  2.660,  -2.267,  -3.302)  (  2.660,  -2.267,  -3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (341.973, 475.803, -552.128)  (342.039, 475.895, -552.073)  ( 0.02,  0.02,  0.01)
    bond    (337.686, 473.237, -551.537)  (337.743, 473.318, -551.490)  ( 0.02,  0.02,  0.01)
    angle   (  0.027,   0.489,   0.094)  (  0.035,   0.499,   0.101)  ( 0.02,  0.50,  0.06)
    torsion ( -0.041,   0.033,  -0.048)  ( -0.041,   0.034,  -0.046)  ( 0.00,  0.00,  0.01)
    vdw     (  4.301,   2.044,  -0.638)  (  4.301,   2.044,  -0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (422.545,  -0.090, 681.758)  (422.567,  -0.000, 681.860)  ( 0.01,  0.82,  0.01)
    bond    (423.212,  -0.078, 677.006)  (423.228,   0.000, 677.098)  ( 0.00,  0.61,  0.01)
    angle   (  0.287,  -0.011,   0.072)  (  0.291,  -0.000,   0.082)  ( 0.11,  0.01,  0.07)
    torsion (  0.048,  -0.001,  -0.016)  (  0.050,   0.000,  -0.015)  ( 0.01,  0.00,  0.00)
    vdw     ( -1.002,  -0.000,   4.696)  ( -1.002,  -0.000,   4.696)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (552.018, 341.973, -475.987)  (552.073, 342.039, -475.895)  ( 0.01,  0.02,  0.02)
    bond    (551.443, 337.686, -473.399)  (551.490, 337.743, -473.318)  ( 0.01,  0.02,  0.02)
    angle   ( -0.107,   0.027,  -0.509)  ( -0.101,   0.035,  -0.499)  ( 0.07,  0.02,  0.52)
    torsion (  0.045,  -0.041,  -0.034)  (  0.046,  -0.041,  -0.034)  ( 0.01,  0.00,  0.00)
    vdw     (  0.638,   4.301,  -2.044)  (  0.638,   4.301,  -2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-129.550, -763.480, 211.300)  (-129.512, -763.385, 211.381)  ( 0.03,  0.01,  0.04)
    bond    (-131.774, -760.656, 208.396)  (-131.744, -760.571, 208.466)  ( 0.02,  0.01,  0.03)
    angle   ( -0.114,   0.436,   0.202)  ( -0.107,   0.445,   0.212)  ( 0.07,  0.37,  0.20)
    torsion (  0.071,   0.042,   0.042)  (  0.072,   0.042,   0.043)  ( 0.01,  0.00,  0.00)
    vdw     (  2.266,  -3.302,   2.660)  (  2.267,  -3.302,   2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-211.462, -129.550, -763.480)  (-211.381, -129.512, -763.385)  ( 0.04,  0.03,  0.01)
    bond    (-208.536, -131.774, -760.656)  (-208.466, -131.744, -760.571)  ( 0.03,  0.02,  0.01)
    angle   ( -0.222,  -0.114,   0.436)  ( -0.212,  -0.107,   0.445)  ( 0.22,  0.07,  0.37)
    torsion ( -0.044,   0.071,   0.042)  ( -0.043,   0.072,   0.042)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.660,   2.266,  -3.302)  ( -2.660,   2.267,  -3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-475.987, -552.128, 341.973)  (-475.895, -552.073, 342.039)  ( 0.02,  0.01,  0.02)
    bond    (-473.399, -551.537, 337.686)  (-473.318, -551.490, 337.743)  ( 0.02,  0.01,  0.02)
    angle   ( -0.509,   0.094,   0.027)  ( -0.499,   0.101,   0.035)  ( 0.52,  0.06,  0.02)
    torsion ( -0.034,  -0.048,  -0.041)  ( -0.034,  -0.046,  -0.041)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.044,  -0.638,   4.301)  ( -2.044,  -0.638,   4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (552.018, 341.973, 475.803)  (552.073, 342.039, 475.895)  ( 0.01,  0.02,  0.02)
    bond    (551.443, 337.686, 473.237)  (551.490, 337.743, 473.318)  ( 0.01,  0.02,  0.02)
    angle   ( -0.107,   0.027,   0.489)  ( -0.101,   0.035,   0.499)  ( 0.07,  0.02,  0.50)
    torsion (  0.045,  -0.041,   0.033)  (  0.046,  -0.041,   0.034)  ( 0.01,  0.00,  0.00)
    vdw     (  0.638,   4.301,   2.044)  (  0.638,   4.301,   2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-681.961, -422.588,  -0.090)  (-681.860, -422.567,   0.000)  ( 0.01,  0.01,  0.82)
    bond    (-677.189, -423.243,  -0.078)  (-677.098, -423.228,   0.000)  ( 0.01,  0.00,  0.61)
    angle   ( -0.091,  -0.295,  -0.011)  ( -0.082,  -0.291,   0.000)  ( 0.09,  0.12,  0.01)
    torsion (  0.015,  -0.052,  -0.001)  (  0.015,  -0.050,   0.000)  ( 0.00,  0.01,  0.00)
    vdw     ( -4.696,   1.002,  -0.000)  ( -4.696,   1.002,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (211.300, -129.550, -763.480)  (211.381, -129.512, -763.385)  ( 0.04,  0.03,  0.01)
    bond    (208.396, -131.774, -760.656)  (208.466, -131.744, -760.571)  ( 0.03,  0.02,  0.01)
    angle   (  0.202,  -0.114,   0.436)  (  0.212,  -0.107,   0.445)  ( 0.20,  0.07,  0.37)
    torsion (  0.042,   0.071,   0.042)  (  0.043,   0.072,   0.042)  ( 0.00,  0.01,  0.00)
    vdw     (  2.660,   2.266,  -3.302)  (  2.660,   2.267,  -3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (681.758, 422.545,  -0.090)  (681.860, 422.567,   0.000)  ( 0.01,  0.01,  0.82)
    bond    (677.006, 423.212,  -0.078)  (677.098, 423.228,   0.000)  ( 0.01,  0.00,  0.61)
    angle   (  0.072,   0.287,  -0.011)  (  0.082,   0.291,   0.000)  ( 0.07,  0.11,  0.01)
    torsion ( -0.016,   0.048,  -0.001)  ( -0.015,   0.050,   0.000)  ( 0.00,  0.01,  0.00)
    vdw     (  4.696,  -1.002,  -0.000)  (  4.696,  -1.002,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (422.545,  -0.090, -681.961)  (422.567,   0.000, -681.860)  ( 0.01,  0.82,  0.01)
    bond    (423.212,  -0.078, -677.189)  (423.228,   0.000, -677.098)  ( 0.00,  0.61,  0.01)
    angle   (  0.287,  -0.011,  -0.091)  (  0.291,   0.000,  -0.082)  ( 0.11,  0.01,  0.09)
    torsion (  0.048,  -0.001,   0.015)  (  0.050,   0.000,   0.015)  ( 0.01,  0.00,  0.00)
    vdw     ( -1.002,  -0.000,  -4.696)  ( -1.002,  -0.000,  -4.696)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-129.550, 763.291, 211.300)  (-129.512, 763.385, 211.381)  ( 0.03,  0.01,  0.04)
    bond    (-131.774, 760.485, 208.396)  (-131.744, 760.571, 208.466)  ( 0.02,  0.01,  0.03)
    angle   ( -0.114,  -0.453,   0.202)  ( -0.107,  -0.445,   0.212)  ( 0.07,  0.38,  0.20)
    torsion (  0.071,  -0.043,   0.042)  (  0.072,  -0.042,   0.043)  ( 0.01,  0.00,  0.00)
    vdw     (  2.266,   3.302,   2.660)  (  2.267,   3.302,   2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (-211.462, -129.550, 763.291)  (-211.381, -129.512, 763.385)  ( 0.04,  0.03,  0.01)
    bond    (-208.536, -131.774, 760.485)  (-208.466, -131.744, 760.571)  ( 0.03,  0.02,  0.01)
    angle   ( -0.222,  -0.114,  -0.453)  ( -0.212,  -0.107,  -0.445)  ( 0.22,  0.07,  0.38)
    torsion ( -0.044,   0.071,  -0.043)  ( -0.043,   0.072,  -0.042)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.660,   2.266,   3.302)  ( -2.660,   2.267,   3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (681.758, -422.588,  -0.090)  (681.860, -422.567,   0.000)  ( 0.01,  0.01,  0.82)
    bond    (677.006, -423.243,  -0.078)  (677.098, -423.228,   0.000)  ( 0.01,  0.00,  0.61)
    angle   (  0.072,  -0.295,  -0.011)  (  0.082,  -0.291,   0.000)  ( 0.07,  0.12,  0.01)
    torsion ( -0.016,  -0.052,  -0.001)  ( -0.015,  -0.050,  -0.000)  ( 0.00,  0.01,  0.00)
    vdw     (  4.696,   1.002,  -0.000)  (  4.696,   1.002,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-552.128, 341.973, -475.987)  (-552.073, 342.039, -475.895)  ( 0.01,  0.02,  0.02)
    bond    (-551.537, 337.686, -473.399)  (-551.490, 337.743, -473.318)  ( 0.01,  0.02,  0.02)
    angle   (  0.094,   0.027,  -0.509)  (  0.101,   0.035,  -0.499)  ( 0.06,  0.02,  0.52)
    torsion ( -0.048,  -0.041,  -0.034)  ( -0.046,  -0.041,  -0.034)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.638,   4.301,  -2.044)  ( -0.638,   4.301,  -2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (-552.128, 341.973, 475.803)  (-552.073, 342.039, 475.895)  ( 0.01,  0.02,  0.02)
    bond    (-551.537, 337.686, 473.237)  (-551.490, 337.743, 473.318)  ( 0.01,  0.02,  0.02)
    angle   (  0.094,   0.027,   0.489)  (  0.101,   0.035,   0.499)  ( 0.06,  0.02,  0.50)
    torsion ( -0.048,  -0.041,   0.033)  ( -0.046,  -0.041,   0.034)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.638,   4.301,   2.044)  ( -0.638,   4.301,   2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (-422.588,  -0.090, 681.758)  (-422.567,   0.000, 681.860)  ( 0.01,  0.82,  0.01)
    bond    (-423.243,  -0.078, 677.006)  (-423.228,   0.000, 677.098)  ( 0.00,  0.61,  0.01)
    angle   ( -0.295,  -0.011,   0.072)  ( -0.291,   0.000,   0.082)  ( 0.12,  0.01,  0.07)
    torsion ( -0.052,  -0.001,  -0.016)  ( -0.050,   0.000,  -0.015)  ( 0.01,  0.00,  0.00)
    vdw     (  1.002,  -0.000,   4.696)  (  1.002,  -0.000,   4.696)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (-552.128, -342.105, -475.987)  (-552.073, -342.039, -475.895)  ( 0.01,  0.02,  0.02)
    bond    (-551.537, -337.801, -473.399)  (-551.490, -337.743, -473.318)  ( 0.01,  0.02,  0.02)
    angle   (  0.094,  -0.043,  -0.509)  (  0.101,  -0.035,  -0.499)  ( 0.06,  0.03,  0.52)
    torsion ( -0.048,   0.040,  -0.034)  ( -0.046,   0.041,  -0.034)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.638,  -4.301,  -2.044)  ( -0.638,  -4.301,  -2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-552.128, -342.105, 475.803)  (-552.073, -342.039, 475.895)  ( 0.01,  0.02,  0.02)
    bond    (-551.537, -337.801, 473.237)  (-551.490, -337.743, 473.318)  ( 0.01,  0.02,  0.02)
    angle   (  0.094,  -0.043,   0.489)  (  0.101,  -0.035,   0.499)  ( 0.06,  0.03,  0.50)
    torsion ( -0.048,   0.040,   0.033)  ( -0.046,   0.041,   0.034)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.638,  -4.301,   2.044)  ( -0.638,  -4.301,   2.044)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       (211.300, -129.550, 763.291)  (211.381, -129.512, 763.385)  ( 0.04,  0.03,  0.01)
    bond    (208.396, -131.774, 760.485)  (208.466, -131.744, 760.571)  ( 0.03,  0.02,  0.01)
    angle   (  0.202,  -0.114,  -0.453)  (  0.212,  -0.107,  -0.445)  ( 0.20,  0.07,  0.38)
    torsion (  0.042,   0.071,  -0.043)  (  0.043,   0.072,  -0.042)  ( 0.00,  0.01,  0.00)
    vdw     (  2.660,   2.266,   3.302)  (  2.660,   2.267,   3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (-475.987, -552.128, -342.105)  (-475.895, -552.073, -342.039)  ( 0.02,  0.01,  0.02)
    bond    (-473.399, -551.537, -337.801)  (-473.318, -551.490, -337.743)  ( 0.02,  0.01,  0.02)
    angle   ( -0.509,   0.094,  -0.043)  ( -0.499,   0.101,  -0.035)  ( 0.52,  0.06,  0.03)
    torsion ( -0.034,  -0.048,   0.040)  ( -0.034,  -0.046,   0.041)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.044,  -0.638,  -4.301)  ( -2.044,  -0.638,  -4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (-763.480, 211.300, 129.475)  (-763.385, 211.381, 129.512)  ( 0.01,  0.04,  0.03)
    bond    (-760.656, 208.396, 131.714)  (-760.571, 208.466, 131.744)  ( 0.01,  0.03,  0.02)
    angle   (  0.436,   0.202,   0.101)  (  0.445,   0.212,   0.107)  ( 0.37,  0.20,  0.06)
    torsion (  0.042,   0.042,  -0.074)  (  0.042,   0.043,  -0.072)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.302,   2.660,  -2.267)  ( -3.302,   2.660,  -2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (475.803, -552.128, -342.105)  (475.895, -552.073, -342.039)  ( 0.02,  0.01,  0.02)
    bond    (473.237, -551.537, -337.801)  (473.318, -551.490, -337.743)  ( 0.02,  0.01,  0.02)
    angle   (  0.489,   0.094,  -0.043)  (  0.499,   0.101,  -0.035)  ( 0.50,  0.06,  0.03)
    torsion (  0.033,  -0.048,   0.040)  (  0.034,  -0.046,   0.041)  ( 0.00,  0.01,  0.00)
    vdw     (  2.044,  -0.638,  -4.301)  (  2.044,  -0.638,  -4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       (129.475, 763.291, -211.462)  (129.512, 763.385, -211.381)  ( 0.03,  0.01,  0.04)
    bond    (131.714, 760.485, -208.536)  (131.744, 760.571, -208.466)  ( 0.02,  0.01,  0.03)
    angle   (  0.101,  -0.453,  -0.222)  (  0.107,  -0.445,  -0.212)  ( 0.06,  0.38,  0.22)
    torsion ( -0.074,  -0.043,  -0.044)  ( -0.072,  -0.042,  -0.043)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.267,   3.302,  -2.660)  ( -2.267,   3.302,  -2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       (-129.550, 763.291, -211.462)  (-129.512, 763.385, -211.381)  ( 0.03,  0.01,  0.04)
    bond    (-131.774, 760.485, -208.536)  (-131.744, 760.571, -208.466)  ( 0.02,  0.01,  0.03)
    angle   ( -0.114,  -0.453,  -0.222)  ( -0.107,  -0.445,  -0.212)  ( 0.07,  0.38,  0.22)
    torsion (  0.071,  -0.043,  -0.044)  (  0.072,  -0.042,  -0.043)  ( 0.01,  0.00,  0.00)
    vdw     (  2.266,   3.302,  -2.660)  (  2.267,   3.302,  -2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       (129.475, -763.480, -211.462)  (129.512, -763.385, -211.381)  ( 0.03,  0.01,  0.04)
    bond    (131.714, -760.656, -208.536)  (131.744, -760.571, -208.466)  ( 0.02,  0.01,  0.03)
    angle   (  0.101,   0.436,  -0.222)  (  0.107,   0.445,  -0.212)  ( 0.06,  0.37,  0.22)
    torsion ( -0.074,   0.042,  -0.044)  ( -0.072,   0.042,  -0.043)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.267,  -3.302,  -2.660)  ( -2.267,  -3.302,  -2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       (-342.105, -475.987, 552.018)  (-342.039, -475.895, 552.073)  ( 0.02,  0.02,  0.01)
    bond    (-337.801, -473.399, 551.443)  (-337.743, -473.318, 551.490)  ( 0.02,  0.02,  0.01)
    angle   ( -0.043,  -0.509,  -0.107)  ( -0.035,  -0.499,  -0.101)  ( 0.03,  0.52,  0.07)
    torsion (  0.040,  -0.034,   0.045)  (  0.041,  -0.034,   0.046)  ( 0.00,  0.00,  0.01)
    vdw     ( -4.301,  -2.044,   0.638)  ( -4.301,  -2.044,   0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (-422.588,  -0.090, -681.961)  (-422.567,  -0.000, -681.860)  ( 0.01,  0.82,  0.01)
    bond    (-423.243,  -0.078, -677.189)  (-423.228,   0.000, -677.098)  ( 0.00,  0.61,  0.01)
    angle   ( -0.295,  -0.011,  -0.091)  ( -0.291,   0.000,  -0.082)  ( 0.12,  0.01,  0.09)
    torsion ( -0.052,  -0.001,   0.015)  ( -0.050,  -0.000,   0.015)  ( 0.01,  0.00,  0.00)
    vdw     (  1.002,  -0.000,  -4.696)  (  1.002,   0.000,  -4.696)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (211.300, 129.475, 763.291)  (211.381, 129.512, 763.385)  ( 0.04,  0.03,  0.01)
    bond    (208.396, 131.714, 760.485)  (208.466, 131.744, 760.571)  ( 0.03,  0.02,  0.01)
    angle   (  0.202,   0.101,  -0.453)  (  0.212,   0.107,  -0.445)  ( 0.20,  0.06,  0.38)
    torsion (  0.042,  -0.074,  -0.043)  (  0.043,  -0.072,  -0.042)  ( 0.00,  0.01,  0.00)
    vdw     (  2.660,  -2.267,   3.302)  (  2.660,  -2.267,   3.302)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-475.987, 552.018, -342.105)  (-475.895, 552.073, -342.039)  ( 0.02,  0.01,  0.02)
    bond    (-473.399, 551.443, -337.801)  (-473.318, 551.490, -337.743)  ( 0.02,  0.01,  0.02)
    angle   ( -0.509,  -0.107,  -0.043)  ( -0.499,  -0.101,  -0.035)  ( 0.52,  0.07,  0.03)
    torsion ( -0.034,   0.045,   0.040)  ( -0.034,   0.046,   0.041)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.044,   0.638,  -4.301)  ( -2.044,   0.638,  -4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (-129.550, -763.480, -211.462)  (-129.512, -763.385, -211.381)  ( 0.03,  0.01,  0.04)
    bond    (-131.774, -760.656, -208.536)  (-131.744, -760.571, -208.466)  ( 0.02,  0.01,  0.03)
    angle   ( -0.114,   0.436,  -0.222)  ( -0.107,   0.445,  -0.212)  ( 0.07,  0.37,  0.22)
    torsion (  0.071,   0.042,  -0.044)  (  0.072,   0.042,  -0.043)  ( 0.01,  0.00,  0.00)
    vdw     (  2.266,  -3.302,  -2.660)  (  2.267,  -3.302,  -2.660)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (341.973, -475.987, 552.018)  (342.039, -475.895, 552.073)  ( 0.02,  0.02,  0.01)
    bond    (337.686, -473.399, 551.443)  (337.743, -473.318, 551.490)  ( 0.02,  0.02,  0.01)
    angle   (  0.027,  -0.509,  -0.107)  (  0.035,  -0.499,  -0.101)  ( 0.02,  0.52,  0.07)
    torsion ( -0.041,  -0.034,   0.045)  ( -0.041,  -0.034,   0.046)  ( 0.00,  0.00,  0.01)
    vdw     (  4.301,  -2.044,   0.638)  (  4.301,  -2.044,   0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (763.291, 211.300, 129.475)  (763.385, 211.381, 129.512)  ( 0.01,  0.04,  0.03)
    bond    (760.485, 208.396, 131.714)  (760.571, 208.466, 131.744)  ( 0.01,  0.03,  0.02)
    angle   ( -0.453,   0.202,   0.101)  ( -0.445,   0.212,   0.107)  ( 0.38,  0.20,  0.06)
    torsion ( -0.043,   0.042,  -0.074)  ( -0.042,   0.043,  -0.072)  ( 0.00,  0.00,  0.01)
    vdw     (  3.302,   2.660,  -2.267)  (  3.302,   2.660,  -2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       ( -0.090, 681.758, 422.545)  (  0.000, 681.860, 422.567)  ( 0.82,  0.01,  0.01)
    bond    ( -0.078, 677.006, 423.212)  (  0.000, 677.098, 423.228)  ( 0.61,  0.01,  0.00)
    angle   ( -0.011,   0.072,   0.287)  (  0.000,   0.082,   0.291)  ( 0.01,  0.07,  0.11)
    torsion ( -0.001,  -0.016,   0.048)  ( -0.000,  -0.015,   0.050)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.000,   4.696,  -1.002)  (  0.000,   4.696,  -1.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (341.973, 475.803, 552.018)  (342.039, 475.895, 552.073)  ( 0.02,  0.02,  0.01)
    bond    (337.686, 473.237, 551.443)  (337.743, 473.318, 551.490)  ( 0.02,  0.02,  0.01)
    angle   (  0.027,   0.489,  -0.107)  (  0.035,   0.499,  -0.101)  ( 0.02,  0.50,  0.07)
    torsion ( -0.041,   0.033,   0.045)  ( -0.041,   0.034,   0.046)  ( 0.00,  0.00,  0.01)
    vdw     (  4.301,   2.044,   0.638)  (  4.301,   2.044,   0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       (-342.105, 475.803, 552.018)  (-342.039, 475.895, 552.073)  ( 0.02,  0.02,  0.01)
    bond    (-337.801, 473.237, 551.443)  (-337.743, 473.318, 551.490)  ( 0.02,  0.02,  0.01)
    angle   ( -0.043,   0.489,  -0.107)  ( -0.035,   0.499,  -0.101)  ( 0.03,  0.50,  0.07)
    torsion (  0.040,   0.033,   0.045)  (  0.041,   0.034,   0.046)  ( 0.00,  0.00,  0.01)
    vdw     ( -4.301,   2.044,   0.638)  ( -4.301,   2.044,   0.638)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       (475.803, 552.018, -342.105)  (475.895, 552.073, -342.039)  ( 0.02,  0.01,  0.02)
    bond    (473.237, 551.443, -337.801)  (473.318, 551.490, -337.743)  ( 0.02,  0.01,  0.02)
    angle   (  0.489,  -0.107,  -0.043)  (  0.499,  -0.101,  -0.035)  ( 0.50,  0.07,  0.03)
    torsion (  0.033,   0.045,   0.040)  (  0.034,   0.046,   0.041)  ( 0.00,  0.01,  0.00)
    vdw     (  2.044,   0.638,  -4.301)  (  2.044,   0.638,  -4.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       (-763.480, -211.462, 129.475)  (-763.385, -211.381, 129.512)  ( 0.01,  0.04,  0.03)
    bond    (-760.656, -208.536, 131.714)  (-760.571, -208.466, 131.744)  ( 0.01,  0.03,  0.02)
    angle   (  0.436,  -0.222,   0.101)  (  0.445,  -0.212,   0.107)  ( 0.37,  0.22,  0.06)
    torsion (  0.042,  -0.044,  -0.074)  (  0.042,  -0.043,  -0.072)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.302,  -2.660,  -2.267)  ( -3.302,  -2.660,  -2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (763.291, -211.462, 129.475)  (763.385, -211.381, 129.512)  ( 0.01,  0.04,  0.03)
    bond    (760.485, -208.536, 131.714)  (760.571, -208.466, 131.744)  ( 0.01,  0.03,  0.02)
    angle   ( -0.453,  -0.222,   0.101)  ( -0.445,  -0.212,   0.107)  ( 0.38,  0.22,  0.06)
    torsion ( -0.043,  -0.044,  -0.074)  ( -0.042,  -0.043,  -0.072)  ( 0.00,  0.00,  0.01)
    vdw     (  3.302,  -2.660,  -2.267)  (  3.302,  -2.660,  -2.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( -0.090, -681.961, 422.545)  (  0.000, -681.860, 422.567)  ( 0.82,  0.01,  0.01)
    bond    ( -0.078, -677.189, 423.212)  (  0.000, -677.098, 423.228)  ( 0.61,  0.01,  0.00)
    angle   ( -0.011,  -0.091,   0.287)  (  0.000,  -0.082,   0.291)  ( 0.01,  0.09,  0.11)
    torsion ( -0.001,   0.015,   0.048)  (  0.000,   0.015,   0.050)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.000,  -4.696,  -1.002)  (  0.000,  -4.696,  -1.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 9 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 10 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/caffeine.gpr
 # Expected      1052.63230, found 1052.632295&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-27.009,  -7.316,  -0.058)  (-26.915,  -7.211,  -0.055)  ( 0.35,  1.43,  0.02)
    bond    (-51.407, -21.524,  -0.453)  (-51.328, -21.431,  -0.453)  ( 0.15,  0.43,  0.00)
    angle   ( 28.516,  23.010,   2.629)  ( 28.532,  23.022,   2.628)  ( 0.05,  0.05,  0.02)
    torsion (  0.028,   0.027,  -2.311)  (  0.028,   0.027,  -2.306)  ( 0.00,  0.00,  0.18)
    vdw     ( -4.147,  -8.829,   0.076)  ( -4.147,  -8.829,   0.076)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( 43.627,  18.418,   0.088)  ( 43.721,  18.519,   0.091)  ( 0.22,  0.55,  0.03)
    bond    ( 79.259, -24.256,  -0.982)  ( 79.338, -24.166,  -0.981)  ( 0.10,  0.37,  0.03)
    angle   (-31.061,  47.195,   3.394)  (-31.046,  47.207,   3.394)  ( 0.05,  0.02,  0.01)
    torsion ( -0.034,   0.018,  -1.739)  ( -0.034,   0.018,  -1.736)  ( 0.00,  0.00,  0.20)
    vdw     ( -4.537,  -4.540,  -0.586)  ( -4.537,  -4.540,  -0.586)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (1481.065, -10.946, -17.548)  (1481.131, -10.850, -17.538)  ( 0.00,  0.87,  0.05)
    bond    (1482.386,  49.293, -17.062)  (1482.436,  49.379, -17.056)  ( 0.00,  0.17,  0.03)
    angle   ( -3.766, -60.057,  -0.119)  ( -3.750, -60.047,  -0.117)  ( 0.43,  0.02,  0.02)
    torsion (  0.015,  -0.012,  -0.359)  (  0.015,  -0.012,  -0.357)  ( 0.00,  0.00,  0.09)
    vdw     (  2.430,  -0.171,  -0.008)  (  2.431,  -0.171,  -0.008)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (218.355, 351.969,  -5.493)  (218.444, 352.041,  -5.488)  ( 0.04,  0.02,  0.09)
    bond    (156.798, 315.167,  -4.502)  (156.875, 315.223,  -4.500)  ( 0.05,  0.02,  0.06)
    angle   ( 55.844,  32.080,  -0.601)  ( 55.856,  32.094,  -0.601)  ( 0.02,  0.05,  0.00)
    torsion ( -0.002,  -0.005,   0.943)  ( -0.002,  -0.005,   0.946)  ( 0.00,  0.00,  0.24)
    vdw     (  5.715,   4.728,  -1.333)  (  5.715,   4.728,  -1.333)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-203.045, -391.468,  -1.364)  (-203.034, -391.450,  -1.362)  ( 0.01,  0.00,  0.17)
    bond    (-224.009, -386.559,   5.182)  (-224.002, -386.542,   5.184)  ( 0.00,  0.00,  0.04)
    angle   ( -4.111,   2.380,   0.062)  ( -4.107,   2.381,   0.062)  ( 0.08,  0.05,  0.00)
    torsion (  0.004,   0.005,   0.542)  (  0.004,   0.005,   0.542)  ( 0.00,  0.00,  0.03)
    vdw     ( 25.070,  -7.294,  -7.149)  ( 25.071,  -7.294,  -7.149)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-745.253, 1325.767, -16.743)  (-745.162, 1325.839, -16.733)  ( 0.01,  0.01,  0.06)
    bond    (-680.841, 1288.888, -17.462)  (-680.761, 1288.945, -17.456)  ( 0.01,  0.00,  0.03)
    angle   (-62.286,  33.325,   2.422)  (-62.276,  33.341,   2.424)  ( 0.02,  0.05,  0.06)
    torsion ( -0.001,  -0.005,  -1.701)  ( -0.001,  -0.005,  -1.699)  ( 0.00,  0.00,  0.14)
    vdw     ( -2.124,   3.558,  -0.002)  ( -2.124,   3.558,  -0.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-379.628,  -8.302,  -4.022)  (-379.563,  -8.205,  -4.017)  ( 0.02,  1.16,  0.12)
    bond    (-388.385,  67.010,  -2.879)  (-388.333,  67.095,  -2.877)  ( 0.01,  0.13,  0.08)
    angle   (  9.372, -71.185,  -1.456)  (  9.385, -71.173,  -1.456)  ( 0.14,  0.02,  0.03)
    torsion ( -0.012,  -0.012,   1.120)  ( -0.012,  -0.012,   1.123)  ( 0.00,  0.00,  0.27)
    vdw     ( -0.603,  -4.115,  -0.807)  ( -0.603,  -4.115,  -0.807)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (437.224, -11.847,   0.487)  (437.244, -11.840,   0.490)  ( 0.00,  0.06,  0.11)
    bond    (440.100,  -5.846,   2.920)  (440.121,  -5.844,   2.922)  ( 0.00,  0.03,  0.06)
    angle   (  0.050,   3.730,  -0.126)  (  0.050,   3.734,  -0.126)  ( 0.00,  0.12,  0.00)
    torsion ( -0.001,   0.001,   0.156)  ( -0.001,   0.001,   0.157)  ( 0.00,  0.00,  0.01)
    vdw     ( -2.926,  -9.732,  -2.463)  ( -2.926,  -9.732,  -2.463)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-1298.576, -414.345, -25.601)  (-1298.501, -414.259, -25.591)  ( 0.01,  0.02,  0.04)
    bond    (-1389.179, -512.381, -26.576)  (-1389.117, -512.307, -26.570)  ( 0.00,  0.01,  0.02)
    angle   ( 90.035,  97.583,   1.312)  ( 90.048,  97.595,   1.314)  ( 0.02,  0.01,  0.15)
    torsion ( -0.002,   0.019,  -0.340)  ( -0.002,   0.019,  -0.338)  ( 0.00,  0.00,  0.08)
    vdw     (  0.570,   0.434,   0.003)  (  0.570,   0.434,   0.003)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-172.662,  75.622,   0.220)  (-172.608,  75.693,   0.224)  ( 0.03,  0.09,  0.08)
    bond    (-98.169,   9.837,   0.225)  (-98.126,   9.903,   0.225)  ( 0.04,  0.68,  0.01)
    angle   (-68.504,  69.057,  -0.619)  (-68.494,  69.061,  -0.617)  ( 0.02,  0.01,  0.11)
    torsion (  0.018,  -0.014,   1.257)  (  0.018,  -0.014,   1.258)  ( 0.00,  0.00,  0.09)
    vdw     ( -6.006,  -3.257,  -0.643)  ( -6.006,  -3.257,  -0.643)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( -2.334, -113.295,  -1.422)  ( -2.245, -113.217,  -1.420)  ( 3.78,  0.07,  0.18)
    bond    ( 10.704,  61.334,   0.663)  ( 10.779,  61.399,   0.664)  ( 0.70,  0.10,  0.05)
    angle   (-16.150, -176.774,  -2.413)  (-16.137, -176.761,  -2.413)  ( 0.08,  0.01,  0.01)
    torsion ( -0.004,  -0.005,   0.241)  ( -0.004,  -0.005,   0.243)  ( 0.00,  0.00,  0.05)
    vdw     (  3.117,   2.150,   0.087)  (  3.117,   2.150,   0.087)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (1512.058, 513.822,  32.828)  (1512.101, 513.876,  32.881)  ( 0.00,  0.01,  0.16)
    bond    (1515.153, 517.997,  31.429)  (1515.184, 518.038,  31.470)  ( 0.00,  0.01,  0.13)
    angle   ( -2.913,  -1.712,   0.561)  ( -2.901,  -1.699,   0.572)  ( 0.43,  0.76,  0.58)
    torsion ( -0.009,  -0.018,   0.871)  ( -0.009,  -0.018,   0.871)  ( 0.00,  0.00,  0.03)
    vdw     ( -0.173,  -2.445,  -0.033)  ( -0.173,  -2.444,  -0.033)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-1597.380, -19.580,  16.286)  (-1597.338, -19.525,  16.339)  ( 0.00,  0.28,  0.32)
    bond    (-1606.438, -16.395,  16.722)  (-1606.408, -16.353,  16.764)  ( 0.00,  0.25,  0.25)
    angle   (  6.182,   1.035,  -0.764)  (  6.194,   1.048,  -0.753)  ( 0.20,  1.27,  0.80)
    torsion (  0.004,   0.001,   0.323)  (  0.004,   0.001,   0.323)  ( 0.00,  0.00,  0.01)
    vdw     (  2.873,  -4.221,   0.006)  (  2.873,  -4.221,   0.006)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (767.890, -1400.418,  14.698)  (767.942, -1400.372,  14.751)  ( 0.01,  0.00,  0.36)
    bond    (773.726, -1413.341,  15.101)  (773.765, -1413.308,  15.143)  ( 0.01,  0.00,  0.28)
    angle   ( -2.491,   8.410,  -1.096)  ( -2.478,   8.422,  -1.085)  ( 0.52,  0.15,  0.96)
    torsion ( -0.003,   0.007,   0.696)  ( -0.003,   0.007,   0.696)  ( 0.00,  0.00,  0.02)
    vdw     ( -3.342,   4.507,  -0.003)  ( -3.342,   4.507,  -0.003)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (  1.763,  36.421,   0.687)  (  1.769,  36.450,   0.687)  ( 0.33,  0.08,  0.03)
    bond    ( -0.167,  36.326,   0.800)  ( -0.167,  36.355,   0.800)  ( 0.00,  0.08,  0.01)
    angle   ( -1.606,   0.002,  -0.444)  ( -1.600,   0.002,  -0.444)  ( 0.35,  0.00,  0.01)
    torsion (  0.001,  -0.006,   0.275)  (  0.001,  -0.006,   0.276)  ( 0.00,  0.00,  0.01)
    vdw     (  3.534,   0.098,   0.056)  (  3.535,   0.098,   0.056)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( -4.261, -54.877,  -3.069)  ( -4.258, -54.849,  -3.065)  ( 0.08,  0.05,  0.13)
    bond    ( -0.905, -54.774,  -2.312)  ( -0.905, -54.746,  -2.313)  ( 0.02,  0.05,  0.01)
    angle   (  2.713,  -0.017,  -0.653)  (  2.717,  -0.017,  -0.649)  ( 0.12,  0.00,  0.27)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.070,  -0.085,  -0.104)  ( -6.070,  -0.085,  -0.104)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-23.352,  13.647,  42.112)  (-23.343,  13.653,  42.133)  ( 0.04,  0.04,  0.05)
    bond    (-23.472,  15.259,  41.413)  (-23.466,  15.262,  41.432)  ( 0.03,  0.02,  0.05)
    angle   (  0.354,  -0.124,   0.245)  (  0.356,  -0.120,   0.246)  ( 0.09,  0.04,  0.03)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.234,  -1.489,   0.455)  ( -0.234,  -1.489,   0.455)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-25.551,  17.916, -45.713)  (-25.543,  17.923, -45.694)  ( 0.03,  0.04,  0.04)
    bond    (-25.679,  20.707, -44.275)  (-25.673,  20.711, -44.257)  ( 0.02,  0.02,  0.04)
    angle   (  0.650,  -0.562,  -0.642)  (  0.653,  -0.559,  -0.640)  ( 0.17,  0.19,  0.09)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.522,  -2.229,  -0.797)  ( -0.522,  -2.229,  -0.797)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 18.203,  13.480, -51.634)  ( 18.208,  13.486, -51.611)  ( 0.03,  0.04,  0.05)
    bond    ( 17.904,  14.252, -51.223)  ( 17.907,  14.254, -51.200)  ( 0.01,  0.01,  0.05)
    angle   ( -0.297,   0.111,  -0.072)  ( -0.295,   0.115,  -0.071)  ( 0.09,  0.04,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.596,  -0.883,  -0.340)  (  0.596,  -0.883,  -0.340)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( 26.024, -48.436,  13.943)  ( 26.030, -48.412,  13.949)  ( 0.02,  0.05,  0.04)
    bond    ( 19.705, -50.862,  13.120)  ( 19.708, -50.840,  13.122)  ( 0.02,  0.04,  0.01)
    angle   ( -4.217,  -1.717,  -0.326)  ( -4.214,  -1.717,  -0.322)  ( 0.07,  0.04,  0.13)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.536,   4.144,   1.149)  ( 10.536,   4.144,   1.149)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( 25.811,  33.874,  40.950)  ( 25.817,  33.888,  40.965)  ( 0.02,  0.04,  0.04)
    bond    ( 19.193,  38.169,  38.169)  ( 19.196,  38.181,  38.181)  ( 0.01,  0.03,  0.03)
    angle   ( -1.707,   1.023,  -0.171)  ( -1.704,   1.026,  -0.169)  ( 0.17,  0.22,  0.04)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  8.325,  -5.318,   2.953)  (  8.326,  -5.318,   2.953)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-45.341,   8.232,  38.218)  (-45.322,   8.236,  38.231)  ( 0.04,  0.04,  0.03)
    bond    (-45.865,  -2.697,  34.786)  (-45.848,  -2.697,  34.796)  ( 0.04,  0.01,  0.03)
    angle   ( -0.123,  -3.161,  -0.408)  ( -0.122,  -3.158,  -0.406)  ( 0.02,  0.11,  0.11)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.647,  14.090,   3.841)  (  0.647,  14.091,   3.841)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (  7.612,  58.851,  23.436)  (  7.625,  58.868,  23.442)  ( 0.17,  0.03,  0.03)
    bond    ( 35.496,  42.507,  18.313)  ( 35.506,  42.521,  18.315)  ( 0.03,  0.03,  0.01)
    angle   (  5.136,  -3.971,  -0.748)  (  5.138,  -3.970,  -0.744)  ( 0.04,  0.04,  0.28)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-33.020,  20.316,   5.872)  (-33.019,  20.316,   5.872)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-16.207,  11.717, -51.634)  (-16.201,  11.721, -51.609)  ( 0.04,  0.04,  0.05)
    bond    (-16.682,  10.967, -51.378)  (-16.680,  10.968, -51.354)  ( 0.01,  0.01,  0.05)
    angle   (  0.190,   0.171,  -0.026)  (  0.194,   0.174,  -0.026)  ( 0.07,  0.06,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.285,   0.578,  -0.230)  (  0.285,   0.579,  -0.230)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 10 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 11 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/cholesterol.gpr
 # Expected       316.15862, found 316.158616&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-43.055, -57.662, -16.142)  (-43.011, -57.616, -16.096)  ( 0.10,  0.08,  0.29)
    bond    (-35.273, -59.048,  -4.681)  (-35.239, -59.012,  -4.645)  ( 0.10,  0.06,  0.77)
    angle   (  2.958,  -4.652,  -6.413)  (  2.968,  -4.643,  -6.403)  ( 0.35,  0.21,  0.15)
    torsion (-10.119,   7.010,  -5.676)  (-10.119,   7.010,  -5.676)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.622,  -0.971,   0.629)  ( -0.622,  -0.971,   0.629)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-101.045,  87.254,  23.984)  (-100.995,  87.301,  24.029)  ( 0.05,  0.05,  0.19)
    bond    (-17.248,  54.348,  -8.568)  (-17.211,  54.384,  -8.534)  ( 0.21,  0.07,  0.40)
    angle   (-68.485,  29.034,  43.678)  (-68.473,  29.044,  43.688)  ( 0.02,  0.04,  0.02)
    torsion (-12.304,   3.441,  -6.010)  (-12.304,   3.441,  -6.009)  ( 0.00,  0.01,  0.01)
    vdw     ( -3.007,   0.432,  -5.116)  ( -3.007,   0.432,  -5.116)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 83.577,  35.609, -39.361)  ( 83.625,  35.656, -39.313)  ( 0.06,  0.13,  0.12)
    bond    ( 87.746, -16.745,  66.765)  ( 87.783, -16.709,  66.800)  ( 0.04,  0.21,  0.05)
    angle   ( -1.809,  46.196, -96.218)  ( -1.799,  46.206, -96.206)  ( 0.56,  0.02,  0.01)
    torsion (  0.427,   6.068,  -7.908)  (  0.427,   6.068,  -7.908)  ( 0.01,  0.01,  0.01)
    vdw     ( -2.787,   0.090,  -2.000)  ( -2.786,   0.090,  -2.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 89.585, -10.378,  77.383)  ( 89.634, -10.329,  77.430)  ( 0.05,  0.47,  0.06)
    bond    (123.465,  45.957,   9.509)  (123.502,  45.993,   9.544)  ( 0.03,  0.08,  0.38)
    angle   (-29.372, -47.675,  85.067)  (-29.361, -47.662,  85.076)  ( 0.04,  0.03,  0.01)
    torsion ( -2.621,  -5.704, -17.085)  ( -2.620,  -5.703, -17.083)  ( 0.01,  0.01,  0.01)
    vdw     ( -1.887,  -2.957,  -0.107)  ( -1.886,  -2.957,  -0.107)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-17.100, 121.498, -38.298)  (-17.023, 121.554, -38.285)  ( 0.45,  0.05,  0.03)
    bond    (-49.888, 112.320, -15.047)  (-49.824, 112.364, -15.045)  ( 0.13,  0.04,  0.02)
    angle   ( 29.879,  10.202, -44.047)  ( 29.891,  10.213, -44.044)  ( 0.04,  0.11,  0.01)
    torsion (  2.169,   4.373,  21.249)  (  2.169,   4.374,  21.256)  ( 0.01,  0.01,  0.03)
    vdw     (  0.740,  -5.397,  -0.452)  (  0.740,  -5.396,  -0.452)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-13.508,  -8.785,  19.359)  (-13.437,  -8.729,  19.371)  ( 0.53,  0.64,  0.07)
    bond    (-33.935,  21.618,  -4.334)  (-33.870,  21.663,  -4.332)  ( 0.19,  0.21,  0.04)
    angle   ( 18.512, -26.882,  13.525)  ( 18.518, -26.871,  13.527)  ( 0.03,  0.04,  0.01)
    torsion ( -1.569,  -1.258,   8.280)  ( -1.569,  -1.258,   8.289)  ( 0.00,  0.02,  0.11)
    vdw     (  3.123,  -2.235,   1.999)  (  3.124,  -2.235,   1.999)  ( 0.00,  0.01,  0.00)
    electro (  0.360,  -0.027,  -0.111)  (  0.360,  -0.027,  -0.111)  ( 0.00,  0.00,  0.00)
 7       ( 16.789, -18.734, -23.380)  ( 16.837, -18.686, -23.335)  ( 0.29,  0.26,  0.19)
    bond    (-40.310,  17.683,   2.533)  (-40.275,  17.720,   2.569)  ( 0.09,  0.21,  1.42)
    angle   ( 56.487, -28.902, -14.426)  ( 56.499, -28.891, -14.419)  ( 0.02,  0.04,  0.05)
    torsion (  0.746,  -4.538, -14.758)  (  0.747,  -4.538, -14.757)  ( 0.02,  0.00,  0.01)
    vdw     ( -0.134,  -2.978,   3.272)  ( -0.134,  -2.977,   3.272)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-76.882,  40.454,  40.894)  (-76.834,  40.501,  40.941)  ( 0.06,  0.12,  0.11)
    bond    (-39.454,  13.633, -79.926)  (-39.418,  13.669, -79.890)  ( 0.09,  0.26,  0.05)
    angle   (-37.693,  29.316, 117.397)  (-37.682,  29.327, 117.407)  ( 0.03,  0.04,  0.01)
    torsion ( -2.457,  -0.129,   5.851)  ( -2.457,  -0.129,   5.852)  ( 0.02,  0.01,  0.02)
    vdw     (  2.722,  -2.366,  -2.427)  (  2.723,  -2.366,  -2.427)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-32.838,  73.239, -92.814)  (-32.787,  73.286, -92.768)  ( 0.15,  0.06,  0.05)
    bond    (-70.963,  69.134, -38.807)  (-70.925,  69.169, -38.773)  ( 0.05,  0.05,  0.09)
    angle   ( 35.155,  12.704, -44.465)  ( 35.166,  12.715, -44.454)  ( 0.03,  0.09,  0.02)
    torsion (  1.189,  -6.727, -14.033)  (  1.189,  -6.727, -14.032)  ( 0.04,  0.01,  0.01)
    vdw     (  1.781,  -1.872,   4.491)  (  1.782,  -1.871,   4.491)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 44.349, -48.791,  61.177)  ( 44.393, -48.741,  61.225)  ( 0.10,  0.10,  0.08)
    bond    ( 67.926,  38.675,   8.425)  ( 67.960,  38.713,   8.462)  ( 0.05,  0.10,  0.44)
    angle   (-27.457, -76.524,  61.567)  (-27.447, -76.512,  61.578)  ( 0.04,  0.02,  0.02)
    torsion ( -0.580,  -7.062,  -4.838)  ( -0.580,  -7.062,  -4.838)  ( 0.01,  0.00,  0.00)
    vdw     (  4.461,  -3.880,  -3.977)  (  4.461,  -3.880,  -3.977)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 37.995,  17.770,   3.277)  ( 38.045,  17.814,   3.324)  ( 0.13,  0.25,  1.41)
    bond    (-69.082, -10.191, -36.229)  (-69.044, -10.157, -36.192)  ( 0.05,  0.33,  0.10)
    angle   (107.978,  26.787,  34.426)  (107.991,  26.797,  34.436)  ( 0.01,  0.04,  0.03)
    torsion ( -1.672,   4.500,   7.054)  ( -1.673,   4.500,   7.054)  ( 0.01,  0.00,  0.00)
    vdw     (  0.771,  -3.326,  -1.974)  (  0.771,  -3.326,  -1.974)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-99.347,  74.513,   1.745)  (-99.300,  74.565,   1.790)  ( 0.05,  0.07,  2.60)
    bond    (-141.621, 186.409,  73.122)  (-141.586, 186.449,  73.158)  ( 0.02,  0.02,  0.05)
    angle   ( 34.325, -116.783, -77.784)  ( 34.337, -116.772, -77.775)  ( 0.03,  0.01,  0.01)
    torsion (  5.221,   5.365,   2.771)  (  5.221,   5.366,   2.771)  ( 0.00,  0.01,  0.01)
    vdw     (  2.728,  -0.478,   3.636)  (  2.728,  -0.478,   3.636)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 37.019, -83.226,  61.582)  ( 37.067, -83.178,  61.627)  ( 0.13,  0.06,  0.07)
    bond    (147.059, -249.016,  46.400)  (147.096, -248.980,  46.437)  ( 0.03,  0.01,  0.08)
    angle   (-110.087, 158.572,  20.299)  (-110.076, 158.583,  20.307)  ( 0.01,  0.01,  0.04)
    torsion ( -0.419,   7.923,  -3.565)  ( -0.419,   7.923,  -3.565)  ( 0.01,  0.01,  0.01)
    vdw     (  0.466,  -0.705,  -1.552)  (  0.466,  -0.705,  -1.552)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-48.433, -19.180, -23.040)  (-48.384, -19.131, -22.994)  ( 0.10,  0.26,  0.20)
    bond    (-177.197, 144.883, -85.836)  (-177.159, 144.920, -85.800)  ( 0.02,  0.03,  0.04)
    angle   (124.575, -165.352,  61.932)  (124.586, -165.340,  61.941)  ( 0.01,  0.01,  0.01)
    torsion (  3.993,  -1.169,  -0.328)  (  3.993,  -1.169,  -0.328)  ( 0.01,  0.03,  0.02)
    vdw     (  0.196,   2.458,   1.192)  (  0.197,   2.458,   1.192)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-71.778, -15.591,   1.622)  (-71.730, -15.541,   1.668)  ( 0.07,  0.32,  2.80)
    bond    ( 20.082, -185.807,  55.479)  ( 20.118, -185.771,  55.516)  ( 0.18,  0.02,  0.07)
    angle   (-91.970, 175.343, -54.362)  (-91.959, 175.356, -54.354)  ( 0.01,  0.01,  0.01)
    torsion ( -3.370,   1.693,  -3.891)  ( -3.369,   1.694,  -3.891)  ( 0.01,  0.02,  0.02)
    vdw     (  3.480,  -6.821,   4.396)  (  3.480,  -6.820,   4.397)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 51.627, -21.073,  21.569)  ( 51.677, -21.025,  21.614)  ( 0.10,  0.23,  0.21)
    bond    (-19.694, 121.030, -58.118)  (-19.656, 121.065, -58.081)  ( 0.19,  0.03,  0.06)
    angle   ( 69.837, -141.903,  61.310)  ( 69.849, -141.891,  61.318)  ( 0.02,  0.01,  0.01)
    torsion (  2.559,  -0.466,  18.458)  (  2.560,  -0.466,  18.459)  ( 0.00,  0.02,  0.00)
    vdw     ( -1.076,   0.267,  -0.082)  ( -1.076,   0.267,  -0.082)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-10.917, -102.383, -50.988)  (-10.871, -102.333, -50.943)  ( 0.42,  0.05,  0.09)
    bond    (-28.447, -159.003,  29.684)  (-28.413, -158.965,  29.719)  ( 0.12,  0.02,  0.12)
    angle   ( 12.943,  52.128, -74.991)  ( 12.954,  52.138, -74.982)  ( 0.09,  0.02,  0.01)
    torsion (  3.356,   4.210,  -5.951)  (  3.357,   4.210,  -5.951)  ( 0.01,  0.01,  0.01)
    vdw     (  1.231,   0.283,   0.270)  (  1.231,   0.283,   0.270)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-53.692, 101.701,  29.545)  (-53.642, 101.750,  29.593)  ( 0.09,  0.05,  0.16)
    bond    ( 11.301,  32.987,  -2.137)  ( 11.337,  33.023,  -2.101)  ( 0.32,  0.11,  1.69)
    angle   (-69.740,  63.731,  23.901)  (-69.728,  63.743,  23.912)  ( 0.02,  0.02,  0.05)
    torsion (  5.988,   1.482,   9.002)  (  5.988,   1.482,   9.002)  ( 0.00,  0.01,  0.01)
    vdw     ( -1.241,   3.502,  -1.221)  ( -1.241,   3.502,  -1.221)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 67.562,  20.637,  31.671)  ( 67.612,  20.686,  31.719)  ( 0.07,  0.24,  0.15)
    bond    (-21.798,  14.016,  -5.128)  (-21.761,  14.052,  -5.092)  ( 0.17,  0.26,  0.70)
    angle   ( 80.219,   8.337,  47.063)  ( 80.232,   8.349,  47.075)  ( 0.02,  0.15,  0.02)
    torsion (  3.727,  -2.310,  -8.511)  (  3.727,  -2.310,  -8.511)  ( 0.00,  0.02,  0.00)
    vdw     (  5.414,   0.594,  -1.754)  (  5.414,   0.594,  -1.754)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( -6.795,  22.270, -62.352)  ( -6.747,  22.319, -62.303)  ( 0.71,  0.22,  0.08)
    bond    ( 23.122, -25.258,  29.921)  ( 23.158, -25.222,  29.958)  ( 0.16,  0.14,  0.12)
    angle   (-11.516,  45.007, -87.338)  (-11.504,  45.019, -87.325)  ( 0.10,  0.03,  0.01)
    torsion ( -9.097,  -1.641,   0.497)  ( -9.097,  -1.640,   0.497)  ( 0.00,  0.02,  0.00)
    vdw     ( -9.305,   4.161,  -5.432)  ( -9.304,   4.162,  -5.432)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (145.060, -30.706, -23.548)  (145.111, -30.660, -23.499)  ( 0.04,  0.15,  0.21)
    bond    (239.288,   1.092, -29.295)  (239.327,   1.126, -29.259)  ( 0.02,  3.11,  0.12)
    angle   (-88.078, -27.976,   1.591)  (-88.067, -27.965,   1.604)  ( 0.01,  0.04,  0.78)
    torsion ( -7.170,  -3.843,   5.011)  ( -7.169,  -3.842,   5.012)  ( 0.01,  0.02,  0.01)
    vdw     (  1.020,   0.021,  -0.856)  (  1.020,   0.021,  -0.856)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-20.250,   3.249,  65.140)  (-20.202,   3.298,  65.191)  ( 0.24,  1.49,  0.08)
    bond    ( 19.005, -37.785, -74.502)  ( 19.040, -37.749, -74.464)  ( 0.19,  0.10,  0.05)
    angle   (-42.069,  41.502, 132.387)  (-42.057,  41.514, 132.400)  ( 0.03,  0.03,  0.01)
    torsion (  2.721,  -5.226,   2.966)  (  2.721,  -5.225,   2.966)  ( 0.02,  0.01,  0.00)
    vdw     (  0.094,   4.758,   4.289)  (  0.094,   4.759,   4.289)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-11.217,  13.528, -77.522)  (-11.170,  13.576, -77.473)  ( 0.42,  0.35,  0.06)
    bond    (-71.103, -56.281,  36.238)  (-71.066, -56.245,  36.274)  ( 0.05,  0.06,  0.10)
    angle   ( 64.964,  52.726, -106.755)  ( 64.974,  52.736, -106.743)  ( 0.02,  0.02,  0.01)
    torsion ( -1.038,  13.634,  -5.367)  ( -1.037,  13.635,  -5.367)  ( 0.03,  0.01,  0.01)
    vdw     ( -4.041,   3.448,  -1.638)  ( -4.041,   3.449,  -1.638)  ( 0.00,  0.01,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-32.292,  31.230,  32.236)  (-32.243,  31.279,  32.281)  ( 0.15,  0.16,  0.14)
    bond    (102.715, -66.398, -21.758)  (102.751, -66.360, -21.722)  ( 0.03,  0.06,  0.16)
    angle   (-123.808,  88.959,  53.785)  (-123.795,  88.970,  53.794)  ( 0.01,  0.01,  0.02)
    torsion (-10.267,   8.070,   8.876)  (-10.266,   8.070,   8.877)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.933,   0.599,  -8.668)  ( -0.933,   0.599,  -8.667)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-103.995, -128.423,  25.057)  (-103.947, -128.373,  25.103)  ( 0.05,  0.04,  0.19)
    bond    (-211.119, -73.410, 130.098)  (-211.083, -73.372, 130.134)  ( 0.02,  0.05,  0.03)
    angle   (101.310, -53.221, -82.739)  (101.321, -53.210, -82.729)  ( 0.01,  0.02,  0.01)
    torsion (  5.623,  -5.739, -21.891)  (  5.624,  -5.739, -21.890)  ( 0.01,  0.01,  0.00)
    vdw     (  0.191,   3.947,  -0.411)  (  0.191,   3.947,  -0.411)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (148.024, -52.347, -46.170)  (148.075, -52.299, -46.122)  ( 0.03,  0.09,  0.10)
    bond    (221.998, -39.244, -98.043)  (222.035, -39.208, -98.006)  ( 0.02,  0.09,  0.04)
    angle   (-70.313, -11.690,  49.482)  (-70.300, -11.680,  49.490)  ( 0.02,  0.09,  0.02)
    torsion ( -2.951,  -1.563,   3.076)  ( -2.951,  -1.562,   3.078)  ( 0.01,  0.06,  0.06)
    vdw     ( -0.710,   0.151,  -0.684)  ( -0.710,   0.151,  -0.684)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-29.067,   8.314,  58.933)  (-29.019,   8.363,  58.984)  ( 0.17,  0.59,  0.09)
    bond    ( 16.428, -45.067, -62.295)  ( 16.463, -45.031, -62.257)  ( 0.22,  0.08,  0.06)
    angle   (-41.522,  59.612, 114.960)  (-41.510,  59.624, 114.973)  ( 0.03,  0.02,  0.01)
    torsion ( -2.101,  -4.714,   1.575)  ( -2.100,  -4.713,   1.575)  ( 0.02,  0.01,  0.01)
    vdw     ( -1.872,  -1.517,   4.693)  ( -1.872,  -1.517,   4.693)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-64.864, -115.690, -168.581)  (-64.832, -115.678, -168.546)  ( 0.05,  0.01,  0.02)
    bond    (-91.400, -64.178, -145.605)  (-91.369, -64.168, -145.576)  ( 0.03,  0.02,  0.02)
    angle   (  5.291,   5.909, -19.982)  (  5.292,   5.911, -19.975)  ( 0.03,  0.03,  0.03)
    torsion ( 24.755, -54.327,  -0.890)  ( 24.755, -54.327,  -0.890)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.445,  -2.777,  -2.151)  ( -3.445,  -2.777,  -2.151)  ( 0.00,  0.00,  0.00)
    electro ( -0.065,  -0.317,   0.047)  ( -0.065,  -0.317,   0.047)  ( 0.00,  0.00,  0.00)
29       ( 13.004,  -0.063,  15.829)  ( 13.008,  -0.055,  15.851)  ( 0.03,  0.05,  0.14)
    bond    ( -2.527,   6.305,  13.258)  ( -2.526,   6.310,  13.280)  ( 0.03,  0.08,  0.17)
    angle   ( -1.790,  -7.991,   3.455)  ( -1.787,  -7.989,   3.456)  ( 0.15,  0.03,  0.02)
    torsion ( 11.156,   1.862,   1.237)  ( 11.156,   1.862,   1.237)  ( 0.00,  0.01,  0.00)
    vdw     (  6.164,  -0.239,  -2.122)  (  6.165,  -0.238,  -2.122)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( 13.576,   3.598,   3.160)  ( 13.581,   3.604,   3.184)  ( 0.04,  0.16,  0.78)
    bond    ( -4.385,   6.385,  21.147)  ( -4.384,   6.387,  21.172)  ( 0.02,  0.03,  0.12)
    angle   ( -5.782,   6.470,  -3.150)  ( -5.779,   6.473,  -3.149)  ( 0.05,  0.04,  0.01)
    torsion ( -7.214,   3.986,  -2.696)  ( -7.214,   3.986,  -2.696)  ( 0.00,  0.01,  0.00)
    vdw     ( 30.957, -13.243, -12.142)  ( 30.959, -13.242, -12.142)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (  1.989,  10.514,   7.809)  (  1.993,  10.520,   7.834)  ( 0.22,  0.06,  0.32)
    bond    ( -2.566,   4.555,  13.872)  ( -2.565,   4.558,  13.897)  ( 0.03,  0.06,  0.18)
    angle   ( -2.429,   9.198,  -3.466)  ( -2.426,   9.201,  -3.466)  ( 0.12,  0.03,  0.01)
    torsion (  6.879,   9.288,  -1.777)  (  6.879,   9.289,  -1.777)  ( 0.00,  0.00,  0.00)
    vdw     (  0.104, -12.528,  -0.820)  (  0.105, -12.527,  -0.820)  ( 0.01,  0.01,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( 55.759,   2.544, -24.671)  ( 55.763,   2.551, -24.649)  ( 0.01,  0.29,  0.09)
    bond    (  3.506,  -7.742, -15.918)  (  3.507,  -7.737, -15.897)  ( 0.03,  0.07,  0.14)
    angle   (  9.605,   7.418,  -1.493)  (  9.608,   7.421,  -1.492)  ( 0.03,  0.03,  0.04)
    torsion ( 18.659,  -1.057,   4.631)  ( 18.659,  -1.057,   4.631)  ( 0.00,  0.00,  0.00)
    vdw     ( 23.989,   3.925, -11.891)  ( 23.990,   3.925, -11.891)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 16.620, -14.566, -37.444)  ( 16.633, -14.562, -37.427)  ( 0.08,  0.03,  0.05)
    bond    ( -7.727,   1.849,  -8.864)  ( -7.715,   1.850,  -8.848)  ( 0.15,  0.03,  0.17)
    angle   ( 33.140, -19.453, -32.965)  ( 33.142, -19.450, -32.963)  ( 0.01,  0.01,  0.01)
    torsion ( -4.366,   1.112,   4.039)  ( -4.366,   1.112,   4.039)  ( 0.00,  0.01,  0.00)
    vdw     ( -4.427,   1.926,   0.346)  ( -4.427,   1.926,   0.346)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 25.953, -10.644,  29.712)  ( 25.961, -10.637,  29.732)  ( 0.03,  0.06,  0.07)
    bond    ( -7.250,   6.500,  13.231)  ( -7.245,   6.504,  13.249)  ( 0.07,  0.07,  0.14)
    angle   ( 47.238, -12.047,  31.744)  ( 47.240, -12.044,  31.746)  ( 0.01,  0.02,  0.00)
    torsion (  9.341,  -1.519,   5.853)  (  9.341,  -1.519,   5.854)  ( 0.00,  0.00,  0.00)
    vdw     (-23.375,  -3.578, -21.116)  (-23.375,  -3.578, -21.115)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( 10.066, -32.383,   2.892)  ( 10.072, -32.377,   2.914)  ( 0.06,  0.02,  0.79)
    bond    (  3.124,  -3.066,  -8.742)  (  3.127,  -3.063,  -8.719)  ( 0.09,  0.09,  0.25)
    angle   ( 12.608, -22.166,  12.308)  ( 12.611, -22.163,  12.308)  ( 0.02,  0.01,  0.00)
    torsion (  0.153,  -7.870,   2.819)  (  0.153,  -7.869,   2.819)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.819,   0.718,  -3.494)  ( -5.819,   0.718,  -3.494)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( -6.416,  19.654,  22.126)  ( -6.412,  19.680,  22.130)  ( 0.07,  0.14,  0.02)
    bond    ( -3.810,  19.131,  -1.834)  ( -3.809,  19.158,  -1.834)  ( 0.03,  0.14,  0.01)
    angle   (  4.504,   3.776,  30.076)  (  4.507,   3.776,  30.079)  ( 0.06,  0.00,  0.01)
    torsion (  2.297,   0.110,  -3.623)  (  2.297,   0.110,  -3.623)  ( 0.00,  0.00,  0.01)
    vdw     ( -9.407,  -3.363,  -2.493)  ( -9.406,  -3.363,  -2.493)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (-13.243,  51.623,   1.397)  (-13.237,  51.627,   1.422)  ( 0.04,  0.01,  1.75)
    bond    ( -4.292,   1.550,  11.849)  ( -4.289,   1.550,  11.873)  ( 0.07,  0.02,  0.20)
    angle   (-11.613,  41.830,  -9.657)  (-11.611,  41.833,  -9.657)  ( 0.02,  0.01,  0.00)
    torsion ( -0.350,  14.090,  -1.966)  ( -0.350,  14.090,  -1.966)  ( 0.00,  0.00,  0.00)
    vdw     (  3.013,  -5.847,   1.172)  (  3.013,  -5.847,   1.172)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       ( 12.516,  -1.392, -26.132)  ( 12.520,  -1.366, -26.128)  ( 0.04,  1.91,  0.01)
    bond    (  0.872,  -4.448,  -0.345)  (  0.873,  -4.421,  -0.345)  ( 0.09,  0.60,  0.00)
    angle   ( 29.617,   8.776, -37.482)  ( 29.620,   8.776, -37.478)  ( 0.01,  0.00,  0.01)
    torsion ( -3.954,  -1.555,   9.923)  ( -3.954,  -1.555,   9.923)  ( 0.00,  0.00,  0.00)
    vdw     (-14.020,  -4.165,   1.772)  (-14.019,  -4.165,   1.772)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-11.504,  12.989,   1.143)  (-11.501,  13.017,   1.146)  ( 0.03,  0.22,  0.29)
    bond    ( -0.745,  13.908,  -2.464)  ( -0.745,  13.936,  -2.463)  ( 0.01,  0.20,  0.04)
    angle   (-23.223,  -1.528,  -1.621)  (-23.220,  -1.528,  -1.621)  ( 0.01,  0.00,  0.00)
    torsion (  0.064,   0.711,   4.004)  (  0.064,   0.712,   4.006)  ( 0.00,  0.00,  0.06)
    vdw     ( 12.710,  -0.224,   1.127)  ( 12.711,  -0.224,   1.127)  ( 0.00,  0.00,  0.00)
    electro ( -0.311,   0.122,   0.097)  ( -0.311,   0.122,   0.097)  ( 0.00,  0.00,  0.00)
40       (  8.026,   7.752,  24.039)  (  8.037,   7.758,  24.058)  ( 0.13,  0.07,  0.08)
    bond    ( 10.107,  -5.604,  15.334)  ( 10.114,  -5.601,  15.351)  ( 0.08,  0.04,  0.12)
    angle   ( -9.548,  13.884,  11.355)  ( -9.546,  13.887,  11.357)  ( 0.02,  0.02,  0.01)
    torsion (  6.178,   3.402,  -2.829)  (  6.179,   3.402,  -2.829)  ( 0.00,  0.00,  0.00)
    vdw     (  1.290,  -3.930,   0.179)  (  1.290,  -3.930,   0.179)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       ( -5.263,   9.248, -33.994)  ( -5.254,   9.254, -33.974)  ( 0.18,  0.06,  0.06)
    bond    ( 10.859,  -6.746, -17.542)  ( 10.866,  -6.743, -17.524)  ( 0.06,  0.04,  0.10)
    angle   ( -5.836,  27.046, -14.027)  ( -5.834,  27.049, -14.026)  ( 0.04,  0.01,  0.01)
    torsion ( -7.800,  -2.305,  -3.950)  ( -7.800,  -2.304,  -3.950)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.486,  -8.748,   1.525)  ( -2.486,  -8.747,   1.525)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (-18.323,  18.746,  21.177)  (-18.319,  18.750,  21.204)  ( 0.02,  0.02,  0.13)
    bond    ( -4.536,  -1.204,  23.491)  ( -4.535,  -1.204,  23.517)  ( 0.02,  0.00,  0.11)
    angle   (-18.756,  29.534,  -2.104)  (-18.754,  29.538,  -2.104)  ( 0.01,  0.01,  0.00)
    torsion ( -0.359,  12.650,   0.578)  ( -0.359,  12.650,   0.578)  ( 0.00,  0.00,  0.00)
    vdw     (  5.328, -22.235,  -0.787)  (  5.328, -22.234,  -0.787)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (  8.908, -21.007, -27.344)  (  8.915, -20.985, -27.339)  ( 0.07,  0.11,  0.02)
    bond    ( 10.127, -23.154,  -7.124)  ( 10.131, -23.133,  -7.122)  ( 0.04,  0.09,  0.03)
    angle   (  3.098,  12.480, -36.129)  (  3.100,  12.481, -36.126)  ( 0.07,  0.00,  0.01)
    torsion ( -4.414,  -5.361,  11.133)  ( -4.414,  -5.361,  11.133)  ( 0.00,  0.00,  0.00)
    vdw     (  0.097,  -4.972,   4.776)  (  0.098,  -4.971,   4.776)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       (-20.034,  21.418,  36.626)  (-20.028,  21.425,  36.647)  ( 0.03,  0.03,  0.06)
    bond    ( 12.023,  14.421,  31.723)  ( 12.026,  14.425,  31.744)  ( 0.02,  0.03,  0.06)
    angle   (-25.967,  22.741,  -0.499)  (-25.964,  22.743,  -0.498)  ( 0.01,  0.01,  0.04)
    torsion ( -6.470,  -5.757,   5.067)  ( -6.470,  -5.757,   5.067)  ( 0.00,  0.00,  0.00)
    vdw     (  0.379,  -9.986,   0.334)  (  0.380,  -9.985,   0.334)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       ( 14.893,  -4.232, -20.000)  ( 14.912,  -4.226, -19.990)  ( 0.13,  0.14,  0.05)
    bond    ( 15.328,  -6.631,  -9.661)  ( 15.346,  -6.628,  -9.654)  ( 0.11,  0.05,  0.07)
    angle   (-12.774,  -6.804, -15.635)  (-12.772,  -6.801, -15.633)  ( 0.01,  0.04,  0.02)
    torsion (  4.665,   8.801,   1.373)  (  4.665,   8.801,   1.373)  ( 0.00,  0.00,  0.01)
    vdw     (  7.673,   0.402,   3.924)  (  7.673,   0.402,   3.924)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       (  4.936,  -9.791,  12.095)  (  4.940,  -9.784,  12.120)  ( 0.07,  0.07,  0.21)
    bond    ( -1.383,   3.610,  10.485)  ( -1.382,   3.613,  10.510)  ( 0.03,  0.08,  0.23)
    angle   ( -3.762,   9.525,  -3.770)  ( -3.759,   9.528,  -3.769)  ( 0.07,  0.03,  0.01)
    torsion (  2.060, -14.244,   5.167)  (  2.060, -14.244,   5.167)  ( 0.00,  0.00,  0.00)
    vdw     (  8.021,  -8.681,   0.212)  (  8.021,  -8.680,   0.212)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       ( 15.372,  23.014,  -1.952)  ( 15.384,  23.024,  -1.940)  ( 0.08,  0.05,  0.63)
    bond    (-19.186,  18.209,  19.946)  (-19.177,  18.217,  19.955)  ( 0.05,  0.05,  0.05)
    angle   (-10.140, -12.273,   1.458)  (-10.138, -12.271,   1.460)  ( 0.02,  0.02,  0.11)
    torsion (  1.713,  -3.616,   4.947)  (  1.713,  -3.616,   4.947)  ( 0.00,  0.00,  0.00)
    vdw     ( 42.985,  20.694, -28.303)  ( 42.986,  20.694, -28.302)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       ( -0.370,  -4.927, -45.768)  ( -0.358,  -4.914, -45.758)  ( 0.45,  0.27,  0.02)
    bond    ( 15.320, -16.319, -12.372)  ( 15.330, -16.308, -12.365)  ( 0.06,  0.07,  0.05)
    angle   ( -6.821,  10.229, -21.950)  ( -6.819,  10.231, -21.947)  ( 0.03,  0.02,  0.01)
    torsion ( -4.990,   5.362, -13.259)  ( -4.990,   5.362, -13.259)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.879,  -4.199,   1.812)  ( -3.879,  -4.199,   1.813)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (  0.758,   6.299,   8.963)  (  0.762,   6.304,   8.990)  ( 0.27,  0.08,  0.29)
    bond    (  0.604,  -2.066,   9.001)  (  0.604,  -2.065,   9.027)  ( 0.00,  0.06,  0.29)
    angle   (-16.609,   6.716,   2.648)  (-16.606,   6.719,   2.648)  ( 0.02,  0.05,  0.01)
    torsion (  8.906,  -7.026,  -2.203)  (  8.906,  -7.026,  -2.203)  ( 0.00,  0.00,  0.00)
    vdw     (  7.857,   8.675,  -0.482)  (  7.857,   8.676,  -0.482)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-10.410,   2.201,  15.559)  (-10.403,   2.213,  15.575)  ( 0.07,  0.53,  0.10)
    bond    ( -5.694,   8.448,  10.662)  ( -5.690,   8.457,  10.677)  ( 0.07,  0.11,  0.14)
    angle   (  7.408,  -8.795,  10.912)  (  7.411,  -8.792,  10.914)  ( 0.03,  0.02,  0.02)
    torsion ( -7.136,   5.355,  -8.045)  ( -7.136,   5.355,  -8.045)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.988,  -2.807,   2.029)  ( -4.988,  -2.807,   2.029)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       ( 66.596,   3.396, -23.543)  ( 66.604,   3.404, -23.521)  ( 0.01,  0.21,  0.10)
    bond    (-15.111,  19.836, -44.913)  (-15.108,  19.840, -44.892)  ( 0.01,  0.02,  0.05)
    angle   (-11.684, -27.275,  -8.122)  (-11.681, -27.272,  -8.122)  ( 0.02,  0.01,  0.01)
    torsion (  8.855,  -9.794,  -7.309)  (  8.855,  -9.794,  -7.309)  ( 0.00,  0.00,  0.00)
    vdw     ( 84.536,  20.629,  36.801)  ( 84.539,  20.630,  36.802)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (-19.579,  21.490,  40.949)  (-19.573,  21.495,  40.973)  ( 0.03,  0.02,  0.06)
    bond    (  8.042,  -5.998,  22.303)  (  8.045,  -5.996,  22.326)  ( 0.04,  0.03,  0.10)
    angle   (-15.750,  30.338,  13.823)  (-15.747,  30.341,  13.824)  ( 0.02,  0.01,  0.00)
    torsion ( -8.777,   2.120,   3.732)  ( -8.777,   2.120,   3.732)  ( 0.00,  0.01,  0.00)
    vdw     ( -3.094,  -4.970,   1.091)  ( -3.094,  -4.970,   1.091)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( -4.125,  -2.392, -12.082)  ( -4.118,  -2.377, -12.069)  ( 0.17,  0.62,  0.11)
    bond    (  1.758,  -3.138,  -2.882)  (  1.762,  -3.126,  -2.871)  ( 0.23,  0.41,  0.38)
    angle   (-18.853,   1.811, -13.541)  (-18.850,   1.812, -13.539)  ( 0.01,  0.09,  0.02)
    torsion (  8.054,   2.591,   2.121)  (  8.054,   2.591,   2.121)  ( 0.00,  0.00,  0.00)
    vdw     (  4.916,  -3.656,   2.220)  (  4.916,  -3.655,   2.220)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       (-15.295,  -2.802, -13.347)  (-15.292,  -2.798, -13.320)  ( 0.02,  0.12,  0.21)
    bond    (  0.489,  -0.125,  -5.592)  (  0.489,  -0.125,  -5.564)  ( 0.01,  0.00,  0.49)
    angle   ( -0.277,  -2.344,   0.028)  ( -0.274,  -2.342,   0.028)  ( 0.07,  0.12,  0.00)
    torsion (-15.165,  -2.831,  -1.270)  (-15.165,  -2.831,  -1.270)  ( 0.00,  0.01,  0.00)
    vdw     ( -0.342,   2.498,  -6.514)  ( -0.342,   2.498,  -6.514)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (-34.398, -25.164, -13.931)  (-34.372, -25.160, -13.925)  ( 0.07,  0.02,  0.04)
    bond    (-42.421,  -3.708, -12.496)  (-42.395,  -3.708, -12.494)  ( 0.06,  0.00,  0.02)
    angle   (  2.620, -44.077,   4.186)  (  2.620, -44.074,   4.190)  ( 0.01,  0.01,  0.09)
    torsion (  1.119,   1.922,  -4.368)  (  1.119,   1.922,  -4.368)  ( 0.00,  0.00,  0.00)
    vdw     (  4.284,  20.699,  -1.253)  (  4.284,  20.700,  -1.253)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( -4.702, -28.580,  37.440)  ( -4.698, -28.575,  37.467)  ( 0.09,  0.02,  0.07)
    bond    (  0.956,   6.372,  29.517)  (  0.956,   6.373,  29.544)  ( 0.01,  0.02,  0.09)
    angle   (  6.708, -34.340,   7.190)  (  6.712, -34.336,   7.190)  ( 0.06,  0.01,  0.00)
    torsion ( -5.135,  -3.628,   0.949)  ( -5.135,  -3.628,   0.949)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.231,   3.016,  -0.216)  ( -7.231,   3.016,  -0.216)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( 25.507,  -4.321,  -6.676)  ( 25.514,  -4.302,  -6.666)  ( 0.03,  0.43,  0.14)
    bond    (  2.792,   5.902,  -3.640)  (  2.795,   5.919,  -3.634)  ( 0.14,  0.29,  0.18)
    angle   ( 24.017, -16.515,  -8.425)  ( 24.020, -16.514,  -8.422)  ( 0.01,  0.01,  0.04)
    torsion (  3.410,   1.056,   4.344)  (  3.410,   1.056,   4.344)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.711,   5.236,   1.046)  ( -4.711,   5.236,   1.046)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( -2.956, -41.613, -20.848)  ( -2.944, -41.594, -20.843)  ( 0.39,  0.05,  0.02)
    bond    ( 19.836, -27.005,  -6.315)  ( 19.845, -26.988,  -6.314)  ( 0.05,  0.06,  0.01)
    angle   (-27.049, -17.025, -12.251)  (-27.047, -17.024, -12.247)  ( 0.01,  0.01,  0.03)
    torsion (  0.947,   1.352,  -2.804)  (  0.947,   1.352,  -2.804)  ( 0.00,  0.00,  0.00)
    vdw     (  3.311,   1.065,   0.522)  (  3.311,   1.065,   0.522)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (-14.212,  14.894, -22.920)  (-14.204,  14.914, -22.913)  ( 0.06,  0.13,  0.03)
    bond    (  5.921,  10.746,  -5.413)  (  5.926,  10.764,  -5.409)  ( 0.09,  0.17,  0.08)
    angle   (-24.933,   2.911, -21.522)  (-24.930,   2.913, -21.519)  ( 0.01,  0.05,  0.01)
    torsion ( -1.179,   1.820,   2.330)  ( -1.179,   1.820,   2.331)  ( 0.00,  0.00,  0.00)
    vdw     (  5.979,  -0.583,   1.684)  (  5.979,  -0.583,   1.684)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (-23.888, -13.948,  21.049)  (-23.884, -13.943,  21.076)  ( 0.02,  0.03,  0.13)
    bond    ( -0.454,   2.644,  18.216)  ( -0.454,   2.645,  18.243)  ( 0.00,  0.02,  0.15)
    angle   (-31.660, -11.577,   0.890)  (-31.657, -11.573,   0.890)  ( 0.01,  0.03,  0.01)
    torsion (  0.274,  -3.709,   0.545)  (  0.274,  -3.709,   0.545)  ( 0.00,  0.00,  0.00)
    vdw     (  7.953,  -1.306,   1.398)  (  7.953,  -1.306,   1.398)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       (-39.783, -22.868,   8.034)  (-39.759, -22.863,   8.041)  ( 0.06,  0.02,  0.08)
    bond    (-38.512,  -9.274, -15.814)  (-38.489,  -9.273, -15.810)  ( 0.06,  0.01,  0.02)
    angle   ( -4.902, -31.814,  30.587)  ( -4.902, -31.810,  30.590)  ( 0.02,  0.01,  0.01)
    torsion ( -2.164,   5.162,   2.239)  ( -2.164,   5.162,   2.239)  ( 0.00,  0.00,  0.00)
    vdw     (  5.795,  13.057,  -8.978)  (  5.795,  13.057,  -8.978)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (-49.909,  18.419,  -3.902)  (-49.902,  18.446,  -3.898)  ( 0.01,  0.15,  0.10)
    bond    (  3.501,  40.620,  -1.367)  (  3.501,  40.647,  -1.367)  ( 0.00,  0.07,  0.01)
    angle   ( 23.290,  -0.699,  38.845)  ( 23.294,  -0.699,  38.848)  ( 0.02,  0.00,  0.01)
    torsion (  6.343,  -0.580,  -1.005)  (  6.344,  -0.580,  -1.005)  ( 0.00,  0.00,  0.00)
    vdw     (-83.043, -20.922, -40.374)  (-83.041, -20.922, -40.374)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( 18.792, -15.487,  -0.950)  ( 18.807, -15.479,  -0.938)  ( 0.08,  0.05,  1.19)
    bond    ( 12.071,  -6.940, -10.740)  ( 12.084,  -6.936, -10.729)  ( 0.11,  0.06,  0.10)
    angle   (  9.842,  -9.251,  17.064)  (  9.844,  -9.248,  17.066)  ( 0.02,  0.03,  0.01)
    torsion ( -3.735,  -4.539,  -1.272)  ( -3.735,  -4.539,  -1.272)  ( 0.00,  0.00,  0.00)
    vdw     (  0.613,   5.243,  -6.002)  (  0.613,   5.244,  -6.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       ( -8.323, -19.611,  -3.100)  ( -8.296, -19.606,  -3.095)  ( 0.32,  0.02,  0.18)
    bond    (-31.885,  -5.119,   7.694)  (-31.859,  -5.118,   7.696)  ( 0.08,  0.01,  0.02)
    angle   ( -7.715, -28.179, -50.681)  ( -7.715, -28.175, -50.678)  ( 0.00,  0.01,  0.01)
    torsion (  1.280,  -4.540,   2.282)  (  1.280,  -4.540,   2.282)  ( 0.00,  0.00,  0.00)
    vdw     ( 29.997,  18.227,  37.605)  ( 29.997,  18.227,  37.606)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
65       ( 40.928,  -8.162,  -2.181)  ( 40.939,  -8.154,  -2.164)  ( 0.03,  0.10,  0.77)
    bond    ( 18.276, -13.631,  25.487)  ( 18.284, -13.627,  25.503)  ( 0.04,  0.03,  0.06)
    angle   ( 33.298, -22.150, -35.710)  ( 33.301, -22.147, -35.709)  ( 0.01,  0.01,  0.00)
    torsion (  3.662,   3.773,  -0.609)  (  3.662,   3.773,  -0.609)  ( 0.00,  0.00,  0.00)
    vdw     (-14.308,  23.847,   8.651)  (-14.308,  23.848,   8.651)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
66       (-17.764,  17.426,  -8.172)  (-17.759,  17.453,  -8.168)  ( 0.03,  0.16,  0.05)
    bond    (  5.481,  39.355,   1.074)  (  5.482,  39.383,   1.074)  ( 0.01,  0.07,  0.02)
    angle   ( 25.175,  -2.445, -38.854)  ( 25.178,  -2.445, -38.851)  ( 0.01,  0.00,  0.01)
    torsion ( -4.466,   0.662,  -1.498)  ( -4.466,   0.662,  -1.498)  ( 0.00,  0.00,  0.00)
    vdw     (-43.954, -20.147,  31.107)  (-43.953, -20.147,  31.108)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
67       ( -2.993,  22.860,  24.959)  ( -2.989,  22.887,  24.963)  ( 0.12,  0.12,  0.02)
    bond    ( -2.205,  21.491,  -0.922)  ( -2.204,  21.518,  -0.922)  ( 0.01,  0.13,  0.00)
    angle   (  0.322,   1.460,  33.287)  (  0.325,   1.460,  33.291)  ( 0.09,  0.00,  0.01)
    torsion (  1.351,  -0.167,  -7.120)  (  1.351,  -0.167,  -7.120)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.461,   0.075,  -0.286)  ( -2.461,   0.075,  -0.286)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
68       (  8.474, -31.447,  -2.613)  (  8.480, -31.441,  -2.590)  ( 0.06,  0.02,  0.90)
    bond    (  3.678,  -3.681, -11.381)  (  3.681,  -3.678, -11.358)  ( 0.06,  0.06,  0.20)
    angle   ( 10.007, -25.098,  11.370)  ( 10.010, -25.094,  11.370)  ( 0.03,  0.01,  0.00)
    torsion (  1.105, -10.123,   3.636)  (  1.105, -10.123,   3.636)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.315,   7.454,  -6.238)  ( -6.315,   7.454,  -6.238)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
69       ( 21.090,  11.720,  11.126)  ( 21.099,  11.729,  11.144)  ( 0.04,  0.08,  0.17)
    bond    (-17.162,  19.982,  30.757)  (-17.157,  19.989,  30.773)  ( 0.03,  0.03,  0.05)
    angle   ( 23.074, -23.287,  27.989)  ( 23.077, -23.285,  27.991)  ( 0.01,  0.01,  0.01)
    torsion ( 11.543,  -4.396,   9.291)  ( 11.543,  -4.396,   9.291)  ( 0.00,  0.00,  0.00)
    vdw     (  3.634,  19.421, -56.912)  (  3.635,  19.421, -56.910)  ( 0.04,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
70       (  5.578,  -6.958, -22.580)  (  5.590,  -6.954, -22.561)  ( 0.21,  0.06,  0.08)
    bond    ( -7.666,   2.356, -10.475)  ( -7.657,   2.357, -10.457)  ( 0.12,  0.04,  0.17)
    angle   ( 15.864, -23.495, -16.914)  ( 15.866, -23.492, -16.913)  ( 0.01,  0.01,  0.01)
    torsion ( -7.048,   5.024,   6.293)  ( -7.048,   5.024,   6.293)  ( 0.00,  0.00,  0.00)
    vdw     (  4.428,   9.157,  -1.484)  (  4.429,   9.157,  -1.484)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
71       ( -2.459, -23.897, -13.612)  ( -2.436, -23.890, -13.605)  ( 0.92,  0.03,  0.05)
    bond    (-18.976,  -7.679,   6.984)  (-18.955,  -7.675,   6.987)  ( 0.11,  0.04,  0.04)
    angle   ( -6.130, -29.366, -48.884)  ( -6.129, -29.363, -48.881)  ( 0.02,  0.01,  0.01)
    torsion (  0.625,  -0.949,   0.653)  (  0.625,  -0.949,   0.653)  ( 0.00,  0.01,  0.00)
    vdw     ( 22.022,  14.097,  27.635)  ( 22.023,  14.097,  27.635)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
72       ( 21.777,  -9.286,  -0.818)  ( 21.792,  -9.281,  -0.802)  ( 0.07,  0.05,  1.34)
    bond    ( 18.783,  -5.397,  20.943)  ( 18.795,  -5.396,  20.958)  ( 0.06,  0.02,  0.07)
    angle   ( 36.607,  -6.618, -34.536)  ( 36.609,  -6.615, -34.535)  ( 0.01,  0.06,  0.00)
    torsion (  1.051,   1.742,  -0.494)  (  1.051,   1.742,  -0.494)  ( 0.00,  0.01,  0.00)
    vdw     (-34.664,   0.988,  13.269)  (-34.663,   0.988,  13.269)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
73       (-12.301,  18.894,  -9.799)  (-12.296,  18.922,  -9.794)  ( 0.04,  0.15,  0.04)
    bond    ( -4.324,  40.254,  -3.034)  ( -4.324,  40.282,  -3.034)  ( 0.00,  0.07,  0.00)
    angle   ( 25.583,  -0.124, -38.116)  ( 25.587,  -0.124, -38.112)  ( 0.01,  0.00,  0.01)
    torsion ( -1.041,  -0.132,  -0.271)  ( -1.040,  -0.132,  -0.271)  ( 0.02,  0.00,  0.00)
    vdw     (-32.519, -21.104,  31.622)  (-32.518, -21.104,  31.623)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
74       ( 40.814,  96.713, 157.362)  ( 40.829,  96.719, 157.389)  ( 0.04,  0.01,  0.02)
    bond    ( 96.412,  66.499, 143.448)  ( 96.424,  66.506, 143.473)  ( 0.01,  0.01,  0.02)
    angle   (-10.556,  -4.320,   9.095)  (-10.555,  -4.320,   9.096)  ( 0.02,  0.01,  0.01)
    torsion (-20.678,  40.377,  -4.819)  (-20.678,  40.377,  -4.819)  ( 0.00,  0.00,  0.00)
    vdw     (-24.378,  -6.065,   9.671)  (-24.377,  -6.065,   9.671)  ( 0.00,  0.00,  0.00)
    electro (  0.016,   0.222,  -0.032)  (  0.016,   0.222,  -0.032)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 11 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 12 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ciprofloxacin.gpr
 # Expected      1427.31834, found 1427.318342&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (1291.490, -969.497, 620.833)  (1291.585, -969.407, 620.849)  ( 0.01,  0.01,  0.00)
    bond    (1151.916, -865.000, 587.078)  (1151.998, -864.921, 587.090)  ( 0.01,  0.01,  0.00)
    angle   (141.394, -102.369,  34.491)  (141.406, -102.358,  34.492)  ( 0.01,  0.01,  0.00)
    torsion (  1.153,  -0.854,  -0.677)  (  1.153,  -0.853,  -0.674)  ( 0.02,  0.04,  0.20)
    vdw     ( -2.973,  -1.274,  -0.059)  ( -2.973,  -1.274,  -0.059)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (298.299, 971.752, -230.123)  (298.368, 971.840, -230.109)  ( 0.02,  0.01,  0.01)
    bond    (395.657, 810.891, -170.088)  (395.712, 810.968, -170.079)  ( 0.01,  0.01,  0.01)
    angle   (-92.800, 152.605, -73.608)  (-92.786, 152.616, -73.606)  ( 0.02,  0.01,  0.00)
    torsion ( -3.841,   4.521,  15.987)  ( -3.840,   4.521,  15.990)  ( 0.01,  0.01,  0.02)
    vdw     ( -0.831,   3.242,  -2.215)  ( -0.831,   3.242,  -2.215)  ( 0.02,  0.00,  0.00)
    electro (  0.113,   0.494,  -0.199)  (  0.113,   0.494,  -0.199)  ( 0.00,  0.00,  0.00)
 3       (-504.597, 127.190, -65.256)  (-504.522, 127.287, -65.254)  ( 0.01,  0.08,  0.00)
    bond    (-438.510, -79.388, -48.304)  (-438.448, -79.301, -48.304)  ( 0.01,  0.11,  0.00)
    angle   (-64.271, 207.170, -14.900)  (-64.258, 207.181, -14.900)  ( 0.02,  0.01,  0.00)
    torsion ( -0.850,   2.083,  -2.639)  ( -0.850,   2.083,  -2.637)  ( 0.00,  0.00,  0.10)
    vdw     ( -0.904,  -1.863,   0.337)  ( -0.904,  -1.863,   0.337)  ( 0.00,  0.00,  0.00)
    electro ( -0.063,  -0.812,   0.250)  ( -0.063,  -0.812,   0.250)  ( 0.00,  0.00,  0.00)
 4       ( 62.885, 529.104, -220.966)  ( 62.983, 529.164, -220.942)  ( 0.16,  0.01,  0.01)
    bond    ( 45.030, 519.764, -212.292)  ( 45.117, 519.814, -212.273)  ( 0.19,  0.01,  0.01)
    angle   ( 18.074,   9.875,  -5.510)  ( 18.085,   9.885,  -5.509)  ( 0.06,  0.10,  0.03)
    torsion (  1.294,  -0.313,  -3.148)  (  1.294,  -0.312,  -3.146)  ( 0.01,  0.02,  0.07)
    vdw     ( -1.513,  -0.223,  -0.015)  ( -1.513,  -0.223,  -0.015)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-22.450, 472.754, -228.324)  (-22.443, 472.772, -228.319)  ( 0.03,  0.00,  0.00)
    bond    ( 13.426, 481.568, -210.659)  ( 13.429, 481.586, -210.653)  ( 0.02,  0.00,  0.00)
    angle   (-28.169,  -1.322,  -4.817)  (-28.165,  -1.322,  -4.817)  ( 0.02,  0.00,  0.00)
    torsion (  2.580,  -5.856, -13.223)  (  2.580,  -5.856, -13.223)  ( 0.00,  0.00,  0.00)
    vdw     (-10.288,  -1.636,   0.374)  (-10.287,  -1.636,   0.374)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-928.322, -469.174,  34.160)  (-928.222, -469.081,  34.179)  ( 0.01,  0.02,  0.06)
    bond    (-902.944, -431.198,  18.869)  (-902.856, -431.115,  18.883)  ( 0.01,  0.02,  0.07)
    angle   (-25.680, -34.846,   9.724)  (-25.668, -34.835,   9.726)  ( 0.05,  0.03,  0.02)
    torsion ( -0.760,   1.680,   3.423)  ( -0.760,   1.680,   3.427)  ( 0.00,  0.02,  0.11)
    vdw     (  1.061,  -4.811,   2.143)  (  1.062,  -4.811,   2.143)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-549.992, 286.554, -158.304)  (-549.892, 286.645, -158.286)  ( 0.02,  0.03,  0.01)
    bond    (-597.550, 340.749, -188.434)  (-597.463, 340.828, -188.421)  ( 0.01,  0.02,  0.01)
    angle   ( 49.931, -59.660,  27.577)  ( 49.943, -59.648,  27.578)  ( 0.02,  0.02,  0.01)
    torsion ( -0.865,   0.514,   3.821)  ( -0.865,   0.514,   3.825)  ( 0.00,  0.02,  0.09)
    vdw     ( -1.507,   4.951,  -1.269)  ( -1.507,   4.951,  -1.269)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-34.737,  32.158,  -9.964)  (-34.637,  32.223,  -9.953)  ( 0.29,  0.20,  0.12)
    bond    (-46.132, -26.291,   2.900)  (-46.046, -26.238,   2.907)  ( 0.19,  0.20,  0.24)
    angle   (  9.004,  61.588, -19.522)  (  9.017,  61.600, -19.521)  ( 0.14,  0.02,  0.01)
    torsion ( -0.650,   1.553,   4.817)  ( -0.650,   1.553,   4.820)  ( 0.00,  0.02,  0.06)
    vdw     (  2.752,  -4.551,   1.774)  (  2.752,  -4.551,   1.774)  ( 0.00,  0.00,  0.00)
    electro (  0.289,  -0.142,   0.068)  (  0.289,  -0.142,   0.068)  ( 0.00,  0.00,  0.00)
 9       (334.761, 814.061, -260.145)  (334.855, 814.124, -260.123)  ( 0.03,  0.01,  0.01)
    bond    (341.270, 863.401, -379.423)  (341.355, 863.451, -379.407)  ( 0.02,  0.01,  0.00)
    angle   ( -9.599, -45.337, 140.803)  ( -9.591, -45.324, 140.807)  ( 0.09,  0.03,  0.00)
    torsion (  3.306,  -5.368, -20.899)  (  3.306,  -5.367, -20.897)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.215,   1.364,  -0.627)  ( -0.215,   1.365,  -0.627)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 50.382, -60.360,  18.033)  ( 50.484, -60.296,  18.047)  ( 0.20,  0.11,  0.08)
    bond    ( 48.676, -141.413,  55.636)  ( 48.765, -141.363,  55.645)  ( 0.18,  0.04,  0.02)
    angle   (  3.823,  83.323, -28.467)  (  3.835,  83.336, -28.465)  ( 0.32,  0.02,  0.01)
    torsion (  0.572,  -1.857,  -4.267)  (  0.572,  -1.856,  -4.265)  ( 0.00,  0.02,  0.07)
    vdw     ( -2.479,  -0.464,  -4.766)  ( -2.479,  -0.464,  -4.766)  ( 0.01,  0.02,  0.00)
    electro ( -0.209,   0.051,  -0.103)  ( -0.209,   0.051,  -0.103)  ( 0.00,  0.00,  0.00)
11       (-391.141,  13.394, -109.921)  (-391.056,  13.488, -109.905)  ( 0.02,  0.70,  0.02)
    bond    (-182.246, -41.558, -12.366)  (-182.180, -41.484, -12.356)  ( 0.04,  0.18,  0.09)
    angle   (-211.321,  57.327, -98.054)  (-211.301,  57.348, -98.050)  ( 0.01,  0.04,  0.00)
    torsion (  1.783,  -2.219,   2.344)  (  1.783,  -2.219,   2.347)  ( 0.00,  0.01,  0.11)
    vdw     (  0.643,  -0.157,  -1.845)  (  0.643,  -0.157,  -1.845)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-20.575, -22.437,  -3.772)  (-20.569, -22.412,  -3.768)  ( 0.03,  0.11,  0.12)
    bond    ( -0.630, -11.847,   4.471)  ( -0.630, -11.822,   4.474)  ( 0.01,  0.21,  0.08)
    angle   (-18.792,   0.237,  -2.020)  (-18.786,   0.237,  -2.020)  ( 0.03,  0.00,  0.01)
    torsion ( -0.802,   2.323,   6.024)  ( -0.802,   2.323,   6.025)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.233, -12.547, -12.496)  ( -0.232, -12.547, -12.496)  ( 0.02,  0.00,  0.00)
    electro ( -0.117,  -0.603,   0.249)  ( -0.117,  -0.603,   0.249)  ( 0.00,  0.00,  0.00)
13       (209.789,  32.091,  22.353)  (209.865,  32.175,  22.365)  ( 0.04,  0.26,  0.05)
    bond    ( 81.425, 122.507, -29.385)  ( 81.485, 122.580, -29.377)  ( 0.07,  0.06,  0.03)
    angle   (130.006, -87.869,  44.052)  (130.023, -87.857,  44.053)  ( 0.01,  0.01,  0.00)
    torsion ( -0.675,   1.611,   4.879)  ( -0.675,   1.612,   4.882)  ( 0.00,  0.02,  0.05)
    vdw     ( -0.968,  -4.160,   2.807)  ( -0.968,  -4.160,   2.807)  ( 0.03,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       ( -9.769,  14.635,  -6.716)  ( -9.763,  14.661,  -6.713)  ( 0.06,  0.18,  0.05)
    bond    (  0.208,  14.769,  -4.898)  (  0.208,  14.795,  -4.895)  ( 0.00,  0.18,  0.06)
    angle   (-19.794,  -0.500,  -2.352)  (-19.788,  -0.500,  -2.352)  ( 0.03,  0.00,  0.00)
    torsion (  0.019,  -0.049,  -0.149)  (  0.019,  -0.049,  -0.148)  ( 0.00,  0.00,  0.01)
    vdw     (  9.989,  -0.102,   0.879)  (  9.990,  -0.102,   0.879)  ( 0.00,  0.00,  0.00)
    electro ( -0.192,   0.517,  -0.197)  ( -0.192,   0.517,  -0.197)  ( 0.00,  0.00,  0.00)
15       (-38.272,  37.675, -16.744)  (-38.255,  37.685, -16.742)  ( 0.04,  0.03,  0.02)
    bond    (-39.986,  24.828, -13.708)  (-39.972,  24.834, -13.706)  ( 0.03,  0.02,  0.01)
    angle   ( 30.703,  43.547, -10.639)  ( 30.705,  43.551, -10.639)  ( 0.01,  0.01,  0.00)
    torsion (  0.156,  -0.381,  -1.147)  (  0.156,  -0.381,  -1.146)  ( 0.00,  0.00,  0.04)
    vdw     (-29.145, -30.319,   8.750)  (-29.145, -30.318,   8.750)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 52.522, -51.512, 139.035)  ( 52.579, -51.459, 139.055)  ( 0.11,  0.10,  0.01)
    bond    ( 68.278,  40.654,  58.158)  ( 68.324,  40.691,  58.170)  ( 0.07,  0.09,  0.02)
    angle   (-14.590, -95.896,  93.389)  (-14.578, -95.881,  93.396)  ( 0.08,  0.02,  0.01)
    torsion ( -1.966,   4.760, -13.239)  ( -1.966,   4.761, -13.238)  ( 0.00,  0.00,  0.01)
    vdw     (  0.799,  -1.030,   0.727)  (  0.799,  -1.029,   0.727)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (163.530, -1750.529, 359.797)  (163.559, -1750.473, 359.849)  ( 0.02,  0.00,  0.01)
    bond    ( 87.415, -1695.554, 508.596)  ( 87.436, -1695.507, 508.638)  ( 0.02,  0.00,  0.01)
    angle   ( 80.485, -54.139, -148.780)  ( 80.492, -54.130, -148.770)  ( 0.01,  0.02,  0.01)
    torsion (  1.700,  -7.304,   2.419)  (  1.699,  -7.304,   2.419)  ( 0.04,  0.00,  0.00)
    vdw     ( -6.069,   6.468,  -2.439)  ( -6.068,   6.468,  -2.439)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-27.415, -71.899,  13.540)  (-27.395, -71.887,  13.545)  ( 0.07,  0.02,  0.04)
    bond    ( 14.638,  -9.522,   7.122)  ( 14.656,  -9.515,   7.126)  ( 0.12,  0.08,  0.06)
    angle   (-45.669, -63.224,   9.506)  (-45.667, -63.221,   9.506)  ( 0.00,  0.01,  0.00)
    torsion ( -0.598,   0.771,   2.258)  ( -0.598,   0.771,   2.258)  ( 0.00,  0.01,  0.02)
    vdw     (  5.884,   2.302,  -6.234)  (  5.885,   2.303,  -6.234)  ( 0.01,  0.03,  0.00)
    electro ( -1.671,  -2.225,   0.889)  ( -1.671,  -2.225,   0.889)  ( 0.00,  0.00,  0.00)
19       (115.511, -42.087, -42.790)  (115.559, -42.037, -42.741)  ( 0.04,  0.12,  0.12)
    bond    ( 46.006, -62.726, -75.264)  ( 46.042, -62.686, -75.226)  ( 0.08,  0.06,  0.05)
    angle   ( 71.528,  17.445,  24.719)  ( 71.541,  17.454,  24.730)  ( 0.02,  0.05,  0.04)
    torsion ( -0.887,  -0.092,   4.539)  ( -0.886,  -0.091,   4.539)  ( 0.02,  0.00,  0.01)
    vdw     ( -1.138,   3.286,   3.216)  ( -1.138,   3.287,   3.216)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (  1.033,  96.503,   7.445)  (  1.083,  96.555,   7.491)  ( 4.85,  0.05,  0.62)
    bond    (-39.306,  77.507,  -9.832)  (-39.267,  77.545,  -9.795)  ( 0.10,  0.05,  0.38)
    angle   ( 29.541,  14.158,  21.655)  ( 29.551,  14.172,  21.664)  ( 0.03,  0.10,  0.04)
    torsion (  0.559,  -2.282,   2.657)  (  0.560,  -2.282,   2.658)  ( 0.01,  0.02,  0.02)
    vdw     ( 10.239,   7.120,  -7.036)  ( 10.239,   7.121,  -7.036)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-14.428,   9.589,  -9.618)  (-14.407,   9.600,  -9.614)  ( 0.14,  0.11,  0.04)
    bond    (-18.997,  12.730,  -1.669)  (-18.978,  12.738,  -1.669)  ( 0.10,  0.07,  0.00)
    angle   ( -9.429, -17.517, -26.477)  ( -9.428, -17.515, -26.473)  ( 0.01,  0.01,  0.01)
    torsion (  0.444,   0.852,   1.457)  (  0.444,   0.852,   1.457)  ( 0.00,  0.00,  0.01)
    vdw     ( 13.555,  13.525,  17.070)  ( 13.555,  13.525,  17.070)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 17.778, -14.844,   6.582)  ( 17.782, -14.839,   6.608)  ( 0.02,  0.04,  0.39)
    bond    (  0.839,  -3.049,   9.710)  (  0.839,  -3.047,   9.735)  ( 0.01,  0.08,  0.26)
    angle   ( 17.920, -10.218,  -4.742)  ( 17.923, -10.215,  -4.741)  ( 0.02,  0.03,  0.01)
    torsion (  1.554,  -3.125,  -1.112)  (  1.554,  -3.125,  -1.112)  ( 0.01,  0.00,  0.00)
    vdw     ( -2.535,   1.548,   2.726)  ( -2.534,   1.548,   2.726)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -2.955,  26.126,  -7.740)  ( -2.903,  26.177,  -7.695)  ( 1.74,  0.20,  0.58)
    bond    ( -5.729, -62.233,   5.658)  ( -5.688, -62.197,   5.694)  ( 0.72,  0.06,  0.64)
    angle   (  3.696,  79.918, -15.987)  (  3.706,  79.932, -15.979)  ( 0.27,  0.02,  0.05)
    torsion (  0.547,   3.703,   0.318)  (  0.547,   3.703,   0.319)  ( 0.01,  0.01,  0.02)
    vdw     ( -1.469,   4.739,   2.271)  ( -1.469,   4.739,   2.271)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( -7.605, -12.304, -19.090)  ( -7.602, -12.287, -19.076)  ( 0.04,  0.14,  0.08)
    bond    ( -0.478, -14.334, -12.772)  ( -0.478, -14.319, -12.760)  ( 0.00,  0.11,  0.10)
    angle   (-14.163,   1.214,  -0.836)  (-14.161,   1.216,  -0.834)  ( 0.02,  0.13,  0.17)
    torsion (  1.364,  -0.748,   0.788)  (  1.364,  -0.748,   0.788)  ( 0.01,  0.01,  0.01)
    vdw     (  5.672,   1.564,  -6.269)  (  5.672,   1.564,  -6.269)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 15.654,   7.418, -14.142)  ( 15.703,   7.468, -14.092)  ( 0.31,  0.67,  0.35)
    bond    (-43.493,  18.715,  43.123)  (-43.457,  18.755,  43.161)  ( 0.08,  0.21,  0.09)
    angle   ( 52.144,  -7.332, -54.175)  ( 52.156,  -7.322, -54.164)  ( 0.02,  0.13,  0.02)
    torsion (  3.258,  -0.518,  -1.719)  (  3.259,  -0.518,  -1.718)  ( 0.01,  0.01,  0.03)
    vdw     (  3.745,  -3.447,  -1.371)  (  3.745,  -3.447,  -1.371)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (  9.493,  15.319,  20.533)  (  9.497,  15.327,  20.557)  ( 0.04,  0.05,  0.11)
    bond    (  2.558,  -5.615,  13.404)  (  2.558,  -5.611,  13.427)  ( 0.03,  0.07,  0.17)
    angle   (-11.664,   4.967,   4.298)  (-11.661,   4.970,   4.299)  ( 0.02,  0.06,  0.02)
    torsion ( -1.780,   1.821,   1.100)  ( -1.780,   1.821,   1.100)  ( 0.00,  0.01,  0.00)
    vdw     ( 20.379,  14.146,   1.731)  ( 20.380,  14.147,   1.731)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-323.699, -272.249, 112.634)  (-323.653, -272.199, 112.659)  ( 0.01,  0.02,  0.02)
    bond    (-277.510, -232.743, 103.218)  (-277.472, -232.705, 103.231)  ( 0.01,  0.02,  0.01)
    angle   (-42.969, -37.089,   8.185)  (-42.962, -37.077,   8.196)  ( 0.02,  0.03,  0.14)
    torsion ( -3.196,  -2.651,   1.412)  ( -3.196,  -2.651,   1.412)  ( 0.00,  0.01,  0.03)
    vdw     ( -0.090,   0.097,  -0.143)  ( -0.090,   0.097,  -0.143)  ( 0.00,  0.00,  0.00)
    electro (  0.066,   0.137,  -0.038)  (  0.066,   0.137,  -0.038)  ( 0.00,  0.00,  0.00)
28       ( -9.136, -14.144, -26.177)  ( -9.133, -14.136, -26.154)  ( 0.04,  0.05,  0.09)
    bond    ( -2.224,   5.760, -12.961)  ( -2.224,   5.765, -12.939)  ( 0.03,  0.08,  0.17)
    angle   ( -1.338, -21.273,  -9.248)  ( -1.335, -21.270,  -9.247)  ( 0.21,  0.01,  0.01)
    torsion (  0.876,  -5.005,  -2.380)  (  0.876,  -5.005,  -2.380)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.451,   6.374,  -1.587)  ( -6.450,   6.374,  -1.587)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (  1.350,  10.640,  31.107)  (  1.353,  10.657,  31.121)  ( 0.23,  0.16,  0.04)
    bond    (  1.386,  19.430,  16.782)  (  1.386,  19.446,  16.793)  ( 0.00,  0.08,  0.07)
    angle   (  0.745, -13.698,  15.796)  (  0.748, -13.697,  15.798)  ( 0.22,  0.01,  0.01)
    torsion ( -0.853,   1.947,  -2.184)  ( -0.853,   1.947,  -2.184)  ( 0.01,  0.00,  0.00)
    vdw     (  0.072,   2.961,   0.713)  (  0.072,   2.961,   0.713)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( 20.028, -19.428,  16.570)  ( 20.049, -19.419,  16.574)  ( 0.11,  0.05,  0.02)
    bond    ( 21.630, -12.881,   1.409)  ( 21.650, -12.874,   1.409)  ( 0.09,  0.06,  0.00)
    angle   ( -4.510,  -5.515,  18.908)  ( -4.509,  -5.513,  18.912)  ( 0.02,  0.04,  0.02)
    torsion (  0.258,   0.167,  -2.434)  (  0.258,   0.167,  -2.434)  ( 0.00,  0.00,  0.01)
    vdw     (  2.651,  -1.200,  -1.314)  (  2.651,  -1.199,  -1.314)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-25.324,  10.080, -14.131)  (-25.320,  10.085, -14.106)  ( 0.02,  0.06,  0.18)
    bond    ( -1.471,   4.253, -13.478)  ( -1.471,   4.256, -13.453)  ( 0.02,  0.06,  0.18)
    angle   (-21.315,   8.697,   5.082)  (-21.311,   8.700,   5.082)  ( 0.02,  0.03,  0.01)
    torsion ( -3.798,   2.727,   1.278)  ( -3.798,   2.727,   1.278)  ( 0.00,  0.00,  0.00)
    vdw     (  1.260,  -5.597,  -7.013)  (  1.260,  -5.597,  -7.013)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (264.281, 220.267, -109.416)  (264.298, 220.282, -109.410)  ( 0.01,  0.01,  0.00)
    bond    (250.100, 215.399, -125.960)  (250.113, 215.408, -125.958)  ( 0.01,  0.00,  0.00)
    angle   (  2.594,   1.539,   7.794)  (  2.597,   1.544,   7.797)  ( 0.10,  0.32,  0.04)
    torsion (  2.306,  -0.267,   4.123)  (  2.306,  -0.267,   4.123)  ( 0.00,  0.00,  0.00)
    vdw     (  9.309,   3.683,   4.600)  (  9.309,   3.684,   4.600)  ( 0.00,  0.01,  0.00)
    electro ( -0.028,  -0.087,   0.029)  ( -0.028,  -0.087,   0.029)  ( 0.00,  0.00,  0.00)
33       ( 92.567, -74.174,  30.950)  ( 92.574, -74.110,  30.950)  ( 0.01,  0.09,  0.00)
    bond    ( -6.861, -41.473,   0.804)  ( -6.859, -41.410,   0.804)  ( 0.02,  0.15,  0.01)
    angle   ( 79.707, -13.015,   9.723)  ( 79.711, -13.015,   9.723)  ( 0.01,  0.00,  0.00)
    torsion ( -2.073,   0.690,  17.856)  ( -2.073,   0.690,  17.856)  ( 0.00,  0.00,  0.00)
    vdw     ( 24.653, -23.124,   3.076)  ( 24.654, -23.124,   3.076)  ( 0.00,  0.00,  0.00)
    electro ( -2.859,   2.749,  -0.509)  ( -2.859,   2.749,  -0.509)  ( 0.00,  0.00,  0.00)
34       (-163.316, -385.807,   0.583)  (-163.269, -385.771,   0.588)  ( 0.03,  0.01,  0.28)
    bond    (-118.840, -234.811,   0.749)  (-118.797, -234.783,   0.751)  ( 0.04,  0.01,  0.17)
    angle   (-31.194, -139.586,   3.796)  (-31.192, -139.579,   3.796)  ( 0.01,  0.01,  0.02)
    torsion (  0.858,  -0.272,  -6.868)  (  0.858,  -0.272,  -6.867)  ( 0.00,  0.00,  0.03)
    vdw     (-15.859, -14.341,   4.156)  (-15.858, -14.341,   4.156)  ( 0.00,  0.00,  0.00)
    electro (  1.719,   3.204,  -1.249)  (  1.719,   3.204,  -1.249)  ( 0.00,  0.00,  0.00)
35       (144.329, 234.951,  -1.289)  (144.357, 234.970,  -1.286)  ( 0.02,  0.01,  0.20)
    bond    (206.434, 163.892,  13.017)  (206.460, 163.909,  13.018)  ( 0.01,  0.01,  0.01)
    angle   (-39.945,  50.897,  -7.365)  (-39.944,  50.898,  -7.365)  ( 0.00,  0.00,  0.00)
    torsion (  0.431,  -0.230,  -3.930)  (  0.431,  -0.230,  -3.929)  ( 0.00,  0.00,  0.03)
    vdw     (-25.542,  23.675,  -3.820)  (-25.541,  23.676,  -3.820)  ( 0.00,  0.00,  0.00)
    electro (  2.951,  -3.283,   0.810)  (  2.951,  -3.283,   0.810)  ( 0.00,  0.00,  0.00)
36       (-348.181,  46.005, -15.236)  (-348.118,  46.035, -15.196)  ( 0.02,  0.06,  0.26)
    bond    (-239.050,  39.747, -32.741)  (-238.998,  39.769, -32.711)  ( 0.02,  0.06,  0.09)
    angle   (-98.891,  -1.257,  19.357)  (-98.879,  -1.249,  19.367)  ( 0.01,  0.59,  0.05)
    torsion (-12.409,   2.698,  -2.484)  (-12.409,   2.697,  -2.484)  ( 0.00,  0.03,  0.02)
    vdw     (  2.168,   4.817,   0.632)  (  2.168,   4.817,   0.632)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (260.447, 138.407, 191.210)  (260.486, 138.446, 191.263)  ( 0.02,  0.03,  0.03)
    bond    (191.217, 106.275, 118.659)  (191.249, 106.307, 118.700)  ( 0.02,  0.03,  0.03)
    angle   ( 64.540,  22.288,  66.066)  ( 64.548,  22.296,  66.078)  ( 0.01,  0.04,  0.02)
    torsion (  9.181,   7.136,   5.651)  (  9.180,   7.135,   5.651)  ( 0.01,  0.01,  0.00)
    vdw     ( -4.491,   2.708,   0.834)  ( -4.491,   2.708,   0.834)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       ( 17.687,  58.705, -86.026)  ( 17.694,  58.715, -86.010)  ( 0.04,  0.02,  0.02)
    bond    (-31.265,  54.954, -64.675)  (-31.262,  54.964, -64.661)  ( 0.01,  0.02,  0.02)
    angle   ( 44.812,   3.736, -18.493)  ( 44.817,   3.737, -18.492)  ( 0.01,  0.02,  0.01)
    torsion (  6.391,  -0.139,  -3.207)  (  6.390,  -0.139,  -3.208)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.250,   0.154,   0.350)  ( -2.250,   0.154,   0.350)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-22.883, -55.355,  89.169)  (-22.868, -55.352,  89.183)  ( 0.07,  0.01,  0.02)
    bond    (-61.767, -23.258,  61.775)  (-61.754, -23.257,  61.787)  ( 0.02,  0.01,  0.02)
    angle   ( 34.251, -33.220,  21.730)  ( 34.254, -33.218,  21.732)  ( 0.01,  0.01,  0.01)
    torsion (  5.676,  -2.819,   4.611)  (  5.675,  -2.819,   4.611)  ( 0.00,  0.01,  0.00)
    vdw     ( -1.044,   3.942,   1.052)  ( -1.044,   3.942,   1.052)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       ( 25.930,  59.815, -83.154)  ( 25.939,  59.831, -83.146)  ( 0.03,  0.03,  0.01)
    bond    ( 49.149,  67.374, -37.914)  ( 49.157,  67.388, -37.910)  ( 0.02,  0.02,  0.01)
    angle   (-22.261,  -6.635, -40.663)  (-22.260,  -6.635, -40.658)  ( 0.01,  0.01,  0.01)
    torsion ( -2.626,  -1.535,  -6.134)  ( -2.626,  -1.535,  -6.134)  ( 0.01,  0.01,  0.00)
    vdw     (  1.668,   0.612,   1.556)  (  1.668,   0.612,   1.556)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (-18.071, -55.598,  87.241)  (-18.068, -55.595,  87.267)  ( 0.02,  0.01,  0.03)
    bond    ( 16.566, -13.316,  86.606)  ( 16.566, -13.315,  86.633)  ( 0.00,  0.00,  0.03)
    angle   (-30.264, -36.708,   0.145)  (-30.261, -36.704,   0.145)  ( 0.01,  0.01,  0.00)
    torsion ( -6.068,  -5.375,   0.334)  ( -6.068,  -5.375,   0.334)  ( 0.00,  0.00,  0.00)
    vdw     (  1.695,  -0.200,   0.155)  (  1.695,  -0.200,   0.155)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       ( 11.442,  74.543, -63.535)  ( 11.445,  74.547, -63.510)  ( 0.03,  0.01,  0.04)
    bond    ( 19.792,   1.676, -61.552)  ( 19.794,   1.675, -61.526)  ( 0.01,  0.02,  0.04)
    angle   ( -6.567,  67.409,  -0.277)  ( -6.566,  67.413,  -0.277)  ( 0.01,  0.01,  0.00)
    torsion ( -1.571,   7.699,  -0.296)  ( -1.572,   7.699,  -0.296)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.211,  -2.240,  -1.410)  ( -0.211,  -2.240,  -1.410)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 12 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 13 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/clopidogrel.gpr
 # Expected      1699.50073, found 1699.500734&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (473.507, -2725.059, -91.007)  (473.586, -2725.002, -90.997)  ( 0.02,  0.00,  0.01)
    bond    (570.063, -2587.592, -73.527)  (570.134, -2587.549, -73.519)  ( 0.01,  0.00,  0.01)
    angle   (-97.632, -137.351, -17.200)  (-97.625, -137.337, -17.201)  ( 0.01,  0.01,  0.00)
    torsion (  0.039,   0.013,  -0.294)  (  0.039,   0.013,  -0.293)  ( 0.00,  0.00,  0.05)
    vdw     (  1.010,  -0.144,   0.082)  (  1.010,  -0.144,   0.082)  ( 0.00,  0.00,  0.00)
    electro (  0.027,   0.016,  -0.067)  (  0.027,   0.016,  -0.067)  ( 0.00,  0.00,  0.00)
 2       (456.762, -39.819,  47.306)  (456.855, -39.741,  47.311)  ( 0.02,  0.20,  0.01)
    bond    (484.272, -90.146,  51.927)  (484.352, -90.080,  51.929)  ( 0.02,  0.07,  0.00)
    angle   (-27.516,  51.039,  -0.309)  (-27.503,  51.050,  -0.309)  ( 0.05,  0.02,  0.01)
    torsion (  0.507,   0.271,  -4.293)  (  0.507,   0.271,  -4.290)  ( 0.00,  0.00,  0.07)
    vdw     ( -0.563,  -0.991,   0.093)  ( -0.563,  -0.991,   0.093)  ( 0.00,  0.00,  0.00)
    electro (  0.062,   0.008,  -0.111)  (  0.062,   0.008,  -0.111)  ( 0.00,  0.00,  0.00)
 3       (-439.866, 272.245, -20.152)  (-439.788, 272.333, -20.147)  ( 0.02,  0.03,  0.03)
    bond    (-434.344, 334.129, -31.017)  (-434.277, 334.205, -31.016)  ( 0.02,  0.02,  0.00)
    angle   (  0.578, -64.603,  -4.985)  (  0.589, -64.592,  -4.984)  ( 0.64,  0.02,  0.03)
    torsion ( -1.894,  -0.881,  16.709)  ( -1.894,  -0.881,  16.711)  ( 0.00,  0.00,  0.01)
    vdw     ( -4.206,   3.601,  -0.859)  ( -4.206,   3.601,  -0.859)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-2539.843, -769.343, -315.792)  (-2539.796, -769.259, -315.783)  ( 0.00,  0.01,  0.00)
    bond    (-2564.733, -676.690, -321.730)  (-2564.698, -676.613, -321.723)  ( 0.00,  0.01,  0.00)
    angle   ( 27.297, -91.996,  12.159)  ( 27.308, -91.988,  12.161)  ( 0.04,  0.01,  0.01)
    torsion ( -0.005,  -0.273,  -6.256)  ( -0.005,  -0.273,  -6.254)  ( 0.00,  0.00,  0.02)
    vdw     ( -2.402,  -0.385,   0.034)  ( -2.402,  -0.385,   0.034)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (152.678,  22.716, -19.365)  (152.726,  22.767, -19.320)  ( 0.03,  0.23,  0.23)
    bond    (210.345, -55.349, -26.984)  (210.383, -55.310, -26.947)  ( 0.02,  0.07,  0.14)
    angle   (-50.047,  74.481,  16.185)  (-50.037,  74.494,  16.193)  ( 0.02,  0.02,  0.05)
    torsion (  0.131,   0.423,  -7.331)  (  0.131,   0.424,  -7.330)  ( 0.00,  0.01,  0.01)
    vdw     ( -7.751,   3.160,  -1.235)  ( -7.751,   3.161,  -1.235)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (1786.035, 3194.644, 371.084)  (1786.067, 3194.675, 371.100)  ( 0.00,  0.00,  0.00)
    bond    (1706.986, 3075.895, 357.608)  (1707.015, 3075.923, 357.623)  ( 0.00,  0.00,  0.00)
    angle   ( 78.219, 118.734,  12.897)  ( 78.222, 118.737,  12.898)  ( 0.00,  0.00,  0.01)
    torsion ( -0.042,  -0.079,   0.498)  ( -0.042,  -0.079,   0.498)  ( 0.00,  0.00,  0.01)
    vdw     (  0.871,   0.094,   0.081)  (  0.871,   0.094,   0.081)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 79.369,  46.002,  75.704)  ( 79.417,  46.051,  75.723)  ( 0.06,  0.11,  0.03)
    bond    ( 96.990,  49.734, 133.186)  ( 97.033,  49.778, 133.199)  ( 0.04,  0.09,  0.01)
    angle   (-23.803,   0.498, -50.811)  (-23.797,   0.504, -50.804)  ( 0.03,  0.28,  0.01)
    torsion (  3.659,  -4.370,  -7.003)  (  3.659,  -4.370,  -7.002)  ( 0.00,  0.00,  0.01)
    vdw     (  2.523,   0.140,   0.331)  (  2.523,   0.140,   0.331)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (  0.333,  16.981, -26.030)  (  0.337,  17.004, -26.021)  ( 0.11,  0.13,  0.03)
    bond    (  0.649,  28.028, -13.838)  (  0.649,  28.050, -13.832)  ( 0.01,  0.08,  0.04)
    angle   ( 18.498, -10.591, -20.611)  ( 18.501, -10.590, -20.608)  ( 0.02,  0.01,  0.01)
    torsion (  0.531,   0.253,   0.537)  (  0.531,   0.253,   0.537)  ( 0.00,  0.00,  0.00)
    vdw     (-19.345,  -0.709,   7.882)  (-19.344,  -0.709,   7.882)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( -2.297, -12.931,  13.865)  ( -2.294, -12.927,  13.892)  ( 0.16,  0.03,  0.19)
    bond    (  1.501,   1.340,   9.477)  (  1.502,   1.341,   9.504)  ( 0.04,  0.04,  0.28)
    angle   ( 10.124, -22.656,   1.596)  ( 10.127, -22.652,   1.596)  ( 0.03,  0.02,  0.01)
    torsion ( -0.444,  -0.586,   0.153)  ( -0.444,  -0.586,   0.153)  ( 0.00,  0.00,  0.00)
    vdw     (-13.479,   8.971,   2.639)  (-13.478,   8.971,   2.639)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (  8.092,  24.719,  -9.496)  (  8.139,  24.771,  -9.449)  ( 0.58,  0.21,  0.50)
    bond    (-48.888, 105.451, -60.397)  (-48.852, 105.493, -60.360)  ( 0.07,  0.04,  0.06)
    angle   ( 51.506, -71.132,  52.476)  ( 51.518, -71.122,  52.486)  ( 0.02,  0.01,  0.02)
    torsion (  2.888,  -2.402,  -0.834)  (  2.888,  -2.402,  -0.834)  ( 0.01,  0.01,  0.03)
    vdw     (  2.586,  -7.198,  -0.741)  (  2.586,  -7.198,  -0.741)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (168.389, -73.201,  -8.355)  (168.435, -73.151,  -8.311)  ( 0.03,  0.07,  0.52)
    bond    (174.455, -73.803,  12.300)  (174.491, -73.766,  12.336)  ( 0.02,  0.05,  0.29)
    angle   ( -5.169,   2.391, -28.800)  ( -5.158,   2.404, -28.792)  ( 0.20,  0.57,  0.03)
    torsion ( -1.039,  -0.893,   8.375)  ( -1.039,  -0.893,   8.376)  ( 0.01,  0.02,  0.00)
    vdw     (  0.141,  -0.896,  -0.230)  (  0.141,  -0.896,  -0.230)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       ( 26.572,  -1.828, -22.726)  ( 26.588,  -1.815, -22.720)  ( 0.06,  0.69,  0.03)
    bond    ( 19.172, -16.718,  -8.157)  ( 19.186, -16.707,  -8.155)  ( 0.07,  0.06,  0.03)
    angle   ( 12.531,  27.144, -26.134)  ( 12.533,  27.146, -26.130)  ( 0.01,  0.01,  0.01)
    torsion ( -0.871,  -4.448,   7.065)  ( -0.871,  -4.448,   7.065)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.260,  -7.805,   4.500)  ( -4.260,  -7.805,   4.500)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-20.115,  20.870,  10.248)  (-20.112,  20.874,  10.276)  ( 0.02,  0.02,  0.27)
    bond    (  0.549,   0.488,   6.488)  (  0.549,   0.488,   6.515)  ( 0.01,  0.01,  0.42)
    angle   (-20.628,  20.227,   0.222)  (-20.625,  20.230,   0.222)  ( 0.02,  0.02,  0.00)
    torsion ( -3.898,   9.473,  -0.381)  ( -3.898,   9.473,  -0.381)  ( 0.00,  0.00,  0.00)
    vdw     (  3.862,  -9.317,   3.919)  (  3.862,  -9.317,   3.919)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       ( -3.543,  12.798, -26.926)  ( -3.540,  12.806, -26.902)  ( 0.08,  0.06,  0.09)
    bond    (  1.186,  -7.219, -16.041)  (  1.186,  -7.214, -16.018)  ( 0.00,  0.06,  0.14)
    angle   (  3.461,  11.430,  -4.894)  (  3.464,  11.433,  -4.893)  ( 0.08,  0.03,  0.01)
    torsion ( -3.441,   8.521,  -4.093)  ( -3.441,   8.521,  -4.093)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.749,   0.066,  -1.899)  ( -4.749,   0.066,  -1.899)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-12.381,  -9.713,  21.611)  (-12.377,  -9.697,  21.625)  ( 0.03,  0.17,  0.06)
    bond    ( -4.106, -16.342,  14.622)  ( -4.105, -16.327,  14.634)  ( 0.02,  0.09,  0.08)
    angle   ( -9.290,  14.645,  13.733)  ( -9.287,  14.646,  13.736)  ( 0.03,  0.01,  0.02)
    torsion (  4.719,  -6.094,  -5.475)  (  4.719,  -6.094,  -5.475)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.704,  -1.922,  -1.269)  ( -3.704,  -1.922,  -1.269)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (  2.534,  82.025,   5.299)  (  2.561,  82.032,   5.299)  ( 1.06,  0.01,  0.01)
    bond    (-16.753,   4.379,  -1.879)  (-16.726,   4.381,  -1.879)  ( 0.16,  0.04,  0.01)
    angle   ( 19.859,  78.705,   6.738)  ( 19.860,  78.711,   6.738)  ( 0.00,  0.01,  0.00)
    torsion ( -0.066,  -0.028,   0.522)  ( -0.066,  -0.028,   0.523)  ( 0.00,  0.00,  0.02)
    vdw     (  0.284,  -0.402,   0.004)  (  0.284,  -0.402,   0.004)  ( 0.00,  0.00,  0.00)
    electro ( -0.790,  -0.630,  -0.086)  ( -0.790,  -0.630,  -0.086)  ( 0.00,  0.00,  0.00)
17       ( 16.993,   7.181,   2.962)  ( 16.998,   7.210,   2.962)  ( 0.03,  0.40,  0.02)
    bond    ( -0.453,   5.351,   0.238)  ( -0.453,   5.379,   0.238)  ( 0.01,  0.54,  0.00)
    angle   ( 16.859,   1.351,   1.571)  ( 16.865,   1.351,   1.571)  ( 0.03,  0.00,  0.01)
    torsion ( -0.089,  -0.042,   0.787)  ( -0.089,  -0.042,   0.788)  ( 0.00,  0.00,  0.06)
    vdw     ( -0.045,  -0.139,   0.130)  ( -0.045,  -0.139,   0.130)  ( 0.00,  0.00,  0.00)
    electro (  0.721,   0.661,   0.236)  (  0.721,   0.661,   0.236)  ( 0.00,  0.00,  0.00)
18       (-100.784, 243.986, -59.655)  (-100.732, 244.032, -59.608)  ( 0.05,  0.02,  0.08)
    bond    (-148.417, 167.758, -176.834)  (-148.375, 167.796, -176.797)  ( 0.03,  0.02,  0.02)
    angle   ( 42.680,  72.995, 119.661)  ( 42.689,  73.003, 119.671)  ( 0.02,  0.01,  0.01)
    torsion (  1.407,   0.167,   0.022)  (  1.407,   0.167,   0.022)  ( 0.02,  0.01,  0.00)
    vdw     (  3.546,   3.066,  -2.504)  (  3.546,   3.066,  -2.504)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 97.056, -100.586, -113.130)  ( 97.105, -100.554, -113.037)  ( 0.05,  0.03,  0.08)
    bond    ( 89.102, -72.229, -82.360)  ( 89.141, -72.204, -82.278)  ( 0.04,  0.03,  0.10)
    angle   (  6.652, -35.001, -29.477)  (  6.660, -34.996, -29.466)  ( 0.12,  0.02,  0.04)
    torsion ( -3.870,  -4.736,  -0.148)  ( -3.869,  -4.735,  -0.147)  ( 0.03,  0.03,  0.00)
    vdw     (  5.172,  11.380,  -1.146)  (  5.173,  11.381,  -1.146)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-96.941, -185.161, -89.487)  (-96.910, -185.089, -89.437)  ( 0.03,  0.04,  0.06)
    bond    (-78.790, -177.103, -33.032)  (-78.764, -177.044, -32.992)  ( 0.03,  0.03,  0.12)
    angle   (-37.779,  -5.578, -57.772)  (-37.775,  -5.566, -57.764)  ( 0.01,  0.22,  0.01)
    torsion (  3.007,  -1.147,  -2.059)  (  3.009,  -1.147,  -2.058)  ( 0.05,  0.02,  0.03)
    vdw     ( 16.366,  -1.249,   2.553)  ( 16.367,  -1.249,   2.553)  ( 0.00,  0.01,  0.00)
    electro (  0.254,  -0.083,   0.823)  (  0.254,  -0.083,   0.823)  ( 0.00,  0.00,  0.00)
21       ( 15.173, -21.078,  16.575)  ( 15.177, -21.074,  16.602)  ( 0.03,  0.02,  0.16)
    bond    (  2.140,   2.802,  20.123)  (  2.140,   2.803,  20.150)  ( 0.01,  0.02,  0.13)
    angle   ( 15.176, -39.573,   3.891)  ( 15.179, -39.570,   3.891)  ( 0.02,  0.01,  0.00)
    torsion (  0.307,  -0.893,   0.092)  (  0.307,  -0.893,   0.092)  ( 0.00,  0.01,  0.00)
    vdw     ( -2.450,  16.586,  -7.531)  ( -2.449,  16.586,  -7.531)  ( 0.03,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-41.858,  35.542, 101.189)  (-41.804,  35.574, 101.279)  ( 0.13,  0.09,  0.09)
    bond    (-23.994,  20.120, 152.420)  (-23.949,  20.145, 152.498)  ( 0.19,  0.13,  0.05)
    angle   (-15.950,  11.852, -46.633)  (-15.942,  11.857, -46.621)  ( 0.05,  0.04,  0.03)
    torsion (  1.770,   2.186,  -0.008)  (  1.771,   2.188,  -0.008)  ( 0.06,  0.09,  0.00)
    vdw     ( -4.108,   1.916,  -4.449)  ( -4.108,   1.916,  -4.449)  ( 0.00,  0.00,  0.00)
    electro (  0.424,  -0.532,  -0.141)  (  0.424,  -0.532,  -0.141)  ( 0.00,  0.00,  0.00)
23       (-43.234,  32.458, -30.423)  (-43.170,  32.497, -30.352)  ( 0.15,  0.12,  0.24)
    bond    (-51.035,  39.009, -46.081)  (-50.979,  39.040, -46.022)  ( 0.11,  0.08,  0.13)
    angle   (  8.095,  -5.547,  21.069)  (  8.103,  -5.543,  21.081)  ( 0.10,  0.08,  0.06)
    torsion ( -0.540,  -0.735,   0.027)  ( -0.538,  -0.733,   0.027)  ( 0.06,  0.15,  0.00)
    vdw     (  0.144,  -0.184,  -5.989)  (  0.144,  -0.184,  -5.989)  ( 0.00,  0.00,  0.00)
    electro (  0.101,  -0.083,   0.550)  (  0.101,  -0.083,   0.550)  ( 0.00,  0.00,  0.00)
24       ( 43.614, -32.331,  -0.511)  ( 43.663, -32.302,  -0.415)  ( 0.11,  0.09,  4.91)
    bond    ( 53.195, -40.302,   1.077)  ( 53.234, -40.280,   1.160)  ( 0.07,  0.06,  7.75)
    angle   (-12.815,   9.925,   0.448)  (-12.807,   9.930,   0.461)  ( 0.06,  0.05,  0.56)
    torsion (  0.338,   0.422,   0.009)  (  0.339,   0.424,   0.009)  ( 0.04,  0.09,  0.00)
    vdw     (  3.445,  -2.764,  -1.836)  (  3.445,  -2.764,  -1.836)  ( 0.00,  0.00,  0.00)
    electro ( -0.549,   0.389,  -0.208)  ( -0.549,   0.389,  -0.208)  ( 0.00,  0.00,  0.00)
25       (-32.869,  25.500,  21.275)  (-32.816,  25.533,  21.365)  ( 0.16,  0.13,  0.42)
    bond    (-40.084,  29.921,  66.737)  (-40.040,  29.947,  66.813)  ( 0.11,  0.09,  0.12)
    angle   (  3.923,  -1.226, -49.132)  (  3.931,  -1.221, -49.119)  ( 0.20,  0.39,  0.03)
    torsion ( -0.183,  -0.218,   0.004)  ( -0.181,  -0.216,   0.004)  ( 0.02,  0.04,  0.00)
    vdw     (  3.683,  -3.094,   4.345)  (  3.683,  -3.094,   4.345)  ( 0.00,  0.00,  0.00)
    electro ( -0.209,   0.118,  -0.679)  ( -0.209,   0.118,  -0.679)  ( 0.00,  0.00,  0.00)
26       ( 19.868, -10.533, -138.212)  ( 19.930, -10.494, -138.146)  ( 0.31,  0.37,  0.05)
    bond    (-33.426,  30.737, -202.437)  (-33.371,  30.770, -202.385)  ( 0.16,  0.11,  0.03)
    angle   ( 51.930, -40.568,  58.813)  ( 51.936, -40.564,  58.827)  ( 0.01,  0.01,  0.02)
    torsion ( -0.221,  -0.407,  -0.147)  ( -0.220,  -0.405,  -0.147)  ( 0.02,  0.06,  0.00)
    vdw     (  1.585,  -0.296,   5.559)  (  1.585,  -0.296,   5.559)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( 10.782,  -8.137,  34.266)  ( 10.796,  -8.129,  34.281)  ( 0.12,  0.09,  0.04)
    bond    ( 18.852, -13.640,  19.276)  ( 18.863, -13.634,  19.287)  ( 0.06,  0.04,  0.06)
    angle   (-12.238,   9.361,  18.582)  (-12.237,   9.362,  18.585)  ( 0.01,  0.01,  0.02)
    torsion (  2.363,   3.195,  -0.052)  (  2.363,   3.196,  -0.052)  ( 0.01,  0.02,  0.00)
    vdw     (  2.362,  -7.110,  -3.751)  (  2.362,  -7.110,  -3.751)  ( 0.00,  0.00,  0.00)
    electro ( -0.556,   0.058,   0.211)  ( -0.556,   0.058,   0.211)  ( 0.00,  0.00,  0.00)
28       (-17.530,  14.894,  -3.686)  (-17.517,  14.903,  -3.672)  ( 0.07,  0.06,  0.39)
    bond    (-13.747,  11.035, -13.443)  (-13.735,  11.043, -13.432)  ( 0.08,  0.07,  0.08)
    angle   ( -5.564,   4.176,   9.118)  ( -5.562,   4.176,   9.121)  ( 0.02,  0.02,  0.04)
    torsion (  0.531,   0.676,   0.013)  (  0.531,   0.676,   0.013)  ( 0.02,  0.03,  0.00)
    vdw     (  1.603,  -1.278,  -0.511)  (  1.603,  -1.278,  -0.511)  ( 0.00,  0.00,  0.01)
    electro ( -0.354,   0.285,   1.137)  ( -0.354,   0.285,   1.137)  ( 0.00,  0.00,  0.00)
29       (-37.173,  25.718,  95.898)  (-37.170,  25.719,  95.920)  ( 0.01,  0.01,  0.02)
    bond    ( -7.021,   2.002,  89.351)  ( -7.022,   2.002,  89.373)  ( 0.00,  0.01,  0.02)
    angle   (-45.674,  35.582,  -4.385)  (-45.672,  35.584,  -4.385)  ( 0.00,  0.00,  0.00)
    torsion (  1.551,   2.029,   0.076)  (  1.551,   2.029,   0.076)  ( 0.01,  0.01,  0.00)
    vdw     ( 13.972, -13.896,  10.856)  ( 13.973, -13.895,  10.856)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -1.013,  -1.090,  17.110)  ( -1.009,  -1.088,  17.139)  ( 0.42,  0.25,  0.17)
    bond    ( -2.181,   1.471,  19.357)  ( -2.181,   1.472,  19.386)  ( 0.02,  0.02,  0.15)
    angle   (  1.519,  -1.155,   0.259)  (  1.522,  -1.153,   0.259)  ( 0.23,  0.17,  0.00)
    torsion ( -0.839,  -1.115,  -0.010)  ( -0.839,  -1.115,  -0.010)  ( 0.02,  0.04,  0.00)
    vdw     (  0.362,  -0.230,  -1.221)  (  0.362,  -0.230,  -1.221)  ( 0.00,  0.00,  0.00)
    electro (  0.126,  -0.061,  -1.275)  (  0.126,  -0.061,  -1.275)  ( 0.00,  0.00,  0.00)
31       (-12.235,   8.736,   6.179)  (-12.218,   8.746,   6.188)  ( 0.14,  0.11,  0.15)
    bond    (-13.844,  10.469,   7.022)  (-13.828,  10.478,   7.026)  ( 0.11,  0.09,  0.06)
    angle   (  0.011,  -0.028,   0.060)  (  0.012,  -0.028,   0.065)  ( 0.00,  0.00,  0.03)
    torsion ( -0.265,  -0.344,  -0.009)  ( -0.264,  -0.343,  -0.009)  ( 0.01,  0.02,  0.00)
    vdw     (  0.855,  -0.635,  -0.599)  (  0.855,  -0.635,  -0.599)  ( 0.00,  0.00,  0.01)
    electro (  1.008,  -0.726,  -0.295)  (  1.008,  -0.726,  -0.295)  ( 0.00,  0.00,  0.00)
32       (-52.269, -67.628, -39.548)  (-52.251, -67.591, -39.532)  ( 0.03,  0.06,  0.04)
    bond    (-50.873, -72.955, -43.899)  (-50.855, -72.919, -43.886)  ( 0.03,  0.05,  0.03)
    angle   ( -1.963,   5.893,  -7.524)  ( -1.963,   5.895,  -7.521)  ( 0.00,  0.03,  0.04)
    torsion ( -4.234,   1.481,   2.446)  ( -4.234,   1.481,   2.446)  ( 0.01,  0.00,  0.00)
    vdw     (  5.067,  -2.629,   9.525)  (  5.067,  -2.629,   9.525)  ( 0.00,  0.00,  0.00)
    electro ( -0.266,   0.581,  -0.096)  ( -0.266,   0.581,  -0.096)  ( 0.00,  0.00,  0.00)
33       ( 60.947, -71.795, 144.315)  ( 60.959, -71.762, 144.345)  ( 0.02,  0.05,  0.02)
    bond    (101.827, -37.869, 196.831)  (101.834, -37.846, 196.857)  ( 0.01,  0.06,  0.01)
    angle   (-36.650, -45.180, -53.604)  (-36.647, -45.170, -53.601)  ( 0.01,  0.02,  0.00)
    torsion ( -7.700,   2.459,   5.024)  ( -7.698,   2.459,   5.024)  ( 0.02,  0.01,  0.01)
    vdw     (  3.470,   8.795,  -3.935)  (  3.470,   8.795,  -3.935)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 10.680,   0.705,  17.524)  ( 10.729,   0.753,  17.573)  ( 0.46,  3.40,  0.28)
    bond    ( -0.500, -12.373,   9.898)  ( -0.463, -12.338,   9.934)  ( 1.85,  0.29,  0.36)
    angle   (  9.648,  15.499,  18.299)  (  9.659,  15.512,  18.311)  ( 0.12,  0.08,  0.07)
    torsion (  4.643,  -2.560,  -5.629)  (  4.644,  -2.560,  -5.628)  ( 0.02,  0.00,  0.01)
    vdw     ( -3.112,   0.139,  -5.044)  ( -3.112,   0.139,  -5.044)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-15.913,  -1.666, -29.987)  (-15.903,  -1.663, -29.964)  ( 0.06,  0.19,  0.07)
    bond    (-16.793,  -0.896, -30.319)  (-16.787,  -0.897, -30.298)  ( 0.04,  0.01,  0.07)
    angle   (  1.413,  -0.380,  -0.775)  (  1.417,  -0.376,  -0.774)  ( 0.22,  0.12,  0.08)
    torsion ( -0.703,   0.187,   0.384)  ( -0.703,   0.187,   0.384)  ( 0.01,  0.00,  0.00)
    vdw     (  0.170,  -0.576,   0.724)  (  0.170,  -0.576,   0.724)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (  3.986,  26.104,  30.404)  (  3.995,  26.118,  30.417)  ( 0.23,  0.05,  0.04)
    bond    (-14.715,  20.399,  18.854)  (-14.709,  20.410,  18.864)  ( 0.04,  0.06,  0.05)
    angle   ( 19.840,   2.318,  12.960)  ( 19.843,   2.320,  12.962)  ( 0.02,  0.08,  0.02)
    torsion (  1.928,   0.401,   1.070)  (  1.929,   0.401,   1.070)  ( 0.01,  0.00,  0.01)
    vdw     ( -3.068,   2.987,  -2.480)  ( -3.068,   2.987,  -2.480)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( 35.320,  16.933,  10.514)  ( 35.345,  16.938,  10.519)  ( 0.07,  0.03,  0.04)
    bond    ( 32.455,   9.782,  -5.786)  ( 32.479,   9.784,  -5.785)  ( 0.08,  0.02,  0.01)
    angle   (  2.700,   4.121,  22.134)  (  2.701,   4.125,  22.137)  ( 0.01,  0.08,  0.02)
    torsion (  0.010,   0.083,   0.194)  (  0.010,   0.083,   0.194)  ( 0.00,  0.00,  0.00)
    vdw     (  0.155,   2.946,  -6.027)  (  0.155,   2.946,  -6.027)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 13 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 14 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/esomeprazole.gpr
 # Expected      1198.23022, found 1198.230221&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (230.767,  15.505,  47.589)  (230.839,  15.595,  47.599)  ( 0.03,  0.58,  0.02)
    bond    (121.169,  86.026,  47.443)  (121.228,  86.103,  47.449)  ( 0.05,  0.09,  0.01)
    angle   (114.073, -75.278,  10.957)  (114.085, -75.265,  10.959)  ( 0.01,  0.02,  0.02)
    torsion (  2.315,   2.076, -10.103)  (  2.315,   2.076, -10.100)  ( 0.00,  0.01,  0.02)
    vdw     ( -6.790,   2.680,  -0.709)  ( -6.789,   2.680,  -0.709)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( 31.103, -53.699,  27.655)  ( 31.205, -53.626,  27.669)  ( 0.33,  0.14,  0.05)
    bond    (105.357, -149.034,  -5.246)  (105.440, -148.979,  -5.239)  ( 0.08,  0.04,  0.14)
    angle   (-80.367, 107.149,  -3.347)  (-80.347, 107.165,  -3.343)  ( 0.02,  0.02,  0.11)
    torsion (  9.368,  -1.776,  23.908)  (  9.368,  -1.776,  23.910)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.255, -10.037,  12.341)  ( -3.255, -10.037,  12.341)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-236.852, -106.806, -94.924)  (-236.775, -106.720, -94.912)  ( 0.03,  0.08,  0.01)
    bond    (-177.229, -86.227, -64.766)  (-177.165, -86.154, -64.759)  ( 0.04,  0.08,  0.01)
    angle   (-70.025, -29.241, -13.562)  (-70.013, -29.228, -13.560)  ( 0.02,  0.04,  0.02)
    torsion (  4.874,   3.954, -19.458)  (  4.874,   3.954, -19.456)  ( 0.00,  0.00,  0.01)
    vdw     (  5.529,   4.708,   2.862)  (  5.529,   4.708,   2.862)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-126.753, -160.443, -84.195)  (-126.688, -160.351, -84.181)  ( 0.05,  0.06,  0.02)
    bond    (-234.447,  24.970, -55.738)  (-234.396,  25.050, -55.729)  ( 0.02,  0.32,  0.02)
    angle   ( 99.611, -183.568, -21.468)  ( 99.624, -183.556, -21.465)  ( 0.01,  0.01,  0.01)
    torsion (  1.884,   1.751,  -6.942)  (  1.884,   1.751,  -6.941)  ( 0.01,  0.01,  0.03)
    vdw     (  6.199,  -3.596,  -0.047)  (  6.200,  -3.596,  -0.047)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-21.836, 326.991,  83.396)  (-21.757, 327.032,  83.406)  ( 0.36,  0.01,  0.01)
    bond    ( 38.244, 121.228,  41.806)  ( 38.319, 121.256,  41.813)  ( 0.20,  0.02,  0.02)
    angle   (-54.031, 208.040,  36.291)  (-54.027, 208.053,  36.292)  ( 0.01,  0.01,  0.00)
    torsion ( -1.949,  -1.946,   7.573)  ( -1.949,  -1.946,   7.574)  ( 0.00,  0.01,  0.02)
    vdw     ( -4.100,  -0.331,  -2.273)  ( -4.100,  -0.331,  -2.273)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 31.956, -338.996, -69.835)  ( 32.032, -338.910, -69.826)  ( 0.24,  0.03,  0.01)
    bond    ( 86.762, -175.637, -21.392)  ( 86.824, -175.563, -21.387)  ( 0.07,  0.04,  0.02)
    angle   (-51.939, -157.049, -49.092)  (-51.926, -157.038, -49.090)  ( 0.03,  0.01,  0.00)
    torsion ( -0.579,  -0.614,   2.947)  ( -0.579,  -0.614,   2.949)  ( 0.01,  0.01,  0.08)
    vdw     ( -1.815,  -5.836,  -2.399)  ( -1.815,  -5.836,  -2.399)  ( 0.01,  0.00,  0.00)
    electro ( -0.473,   0.141,   0.102)  ( -0.473,   0.141,   0.102)  ( 0.00,  0.00,  0.00)
 7       (133.904,  87.845,  -4.643)  (133.947,  87.891,  -4.604)  ( 0.03,  0.05,  0.85)
    bond    (120.107, -51.316, -45.582)  (120.140, -51.282, -45.553)  ( 0.03,  0.07,  0.06)
    angle   ( 14.796, 145.842,  41.461)  ( 14.806, 145.853,  41.471)  ( 0.07,  0.01,  0.02)
    torsion ( -0.612,  -0.558,   2.434)  ( -0.612,  -0.558,   2.435)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.387,  -6.123,  -2.957)  ( -0.387,  -6.122,  -2.957)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -9.093,  88.963,  12.836)  ( -9.081,  89.000,  12.857)  ( 0.13,  0.04,  0.16)
    bond    (-20.203, 101.675,  18.600)  (-20.201, 101.710,  18.616)  ( 0.01,  0.04,  0.09)
    angle   ( 38.037, -13.083,   7.156)  ( 38.047, -13.081,   7.160)  ( 0.03,  0.01,  0.06)
    torsion (-21.767,  -2.156,  -9.606)  (-21.768,  -2.156,  -9.606)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.160,   2.527,  -3.314)  ( -5.160,   2.527,  -3.314)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( -1.966,  28.088,   5.902)  ( -1.920,  28.135,   5.951)  ( 2.34,  0.17,  0.83)
    bond    ( -2.842, -29.193,  13.720)  ( -2.805, -29.158,  13.757)  ( 1.28,  0.12,  0.27)
    angle   ( -6.775,  56.706,  -9.037)  ( -6.765,  56.718,  -9.025)  ( 0.15,  0.02,  0.13)
    torsion (  8.642,  -0.633,   2.133)  (  8.642,  -0.634,   2.133)  ( 0.01,  0.02,  0.01)
    vdw     ( -0.992,   1.208,  -0.914)  ( -0.992,   1.208,  -0.914)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (120.836,  97.875,  78.393)  (120.885,  97.923,  78.440)  ( 0.04,  0.05,  0.06)
    bond    ( 55.916,  58.881,  22.131)  ( 55.952,  58.916,  22.168)  ( 0.06,  0.06,  0.17)
    angle   ( 65.497,  37.697,  49.927)  ( 65.510,  37.710,  49.937)  ( 0.02,  0.04,  0.02)
    torsion ( -1.399,  -1.243,   5.820)  ( -1.399,  -1.243,   5.820)  ( 0.00,  0.00,  0.01)
    vdw     (  0.823,   2.540,   0.516)  (  0.823,   2.540,   0.516)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-178.566,  55.850, -12.149)  (-178.517,  55.898, -12.102)  ( 0.03,  0.09,  0.38)
    bond    (-113.413,  39.694, -12.800)  (-113.376,  39.729, -12.764)  ( 0.03,  0.09,  0.28)
    angle   (-63.583,  15.799,   0.304)  (-63.571,  15.813,   0.315)  ( 0.02,  0.08,  0.31)
    torsion ( -0.164,  -0.169,   0.725)  ( -0.164,  -0.169,   0.726)  ( 0.00,  0.00,  0.03)
    vdw     ( -1.407,   0.525,  -0.378)  ( -1.407,   0.525,  -0.378)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-309.376, 168.014, -61.087)  (-309.265, 168.100, -61.079)  ( 0.04,  0.05,  0.01)
    bond    (-261.125, 204.404, -58.888)  (-261.025, 204.475, -58.884)  ( 0.04,  0.03,  0.01)
    angle   (-44.453, -44.369,  -0.417)  (-44.442, -44.354,  -0.417)  ( 0.03,  0.03,  0.01)
    torsion (  0.031,  -0.039,  -0.292)  (  0.031,  -0.039,  -0.288)  ( 0.00,  0.00,  0.13)
    vdw     ( -3.830,   8.017,  -1.490)  ( -3.830,   8.018,  -1.490)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 43.213, -102.468,  20.443)  ( 43.301, -102.388,  20.449)  ( 0.20,  0.08,  0.03)
    bond    (117.722, -98.093,  27.700)  (117.798, -98.025,  27.703)  ( 0.06,  0.07,  0.01)
    angle   (-74.835,  -7.801,  -6.628)  (-74.822,  -7.789,  -6.628)  ( 0.02,  0.15,  0.00)
    torsion (  0.024,  -0.039,  -0.234)  (  0.024,  -0.039,  -0.230)  ( 0.00,  0.00,  0.08)
    vdw     (  1.811,   2.522,  -0.165)  (  1.811,   2.522,  -0.165)  ( 0.00,  0.00,  0.00)
    electro ( -1.510,   0.943,  -0.230)  ( -1.510,   0.943,  -0.230)  ( 0.00,  0.00,  0.00)
14       (-35.755, -49.262,   3.508)  (-35.684, -49.162,   3.515)  ( 0.20,  0.20,  0.21)
    bond    (-115.278, -76.367,  -0.800)  (-115.221, -76.279,  -0.797)  ( 0.05,  0.11,  0.30)
    angle   ( 71.512,  27.575,   3.506)  ( 71.525,  27.586,   3.506)  ( 0.02,  0.04,  0.01)
    torsion (  0.015,  -0.022,  -0.148)  (  0.015,  -0.022,  -0.145)  ( 0.00,  0.00,  0.05)
    vdw     (  7.952,  -0.612,   0.940)  (  7.953,  -0.612,   0.940)  ( 0.00,  0.00,  0.00)
    electro (  0.044,   0.165,   0.011)  (  0.044,   0.165,   0.011)  ( 0.00,  0.00,  0.00)
15       ( 32.274,  48.819,  -4.157)  ( 32.370,  48.893,  -4.150)  ( 0.30,  0.15,  0.16)
    bond    ( 31.105, 131.273, -16.544)  ( 31.189, 131.334, -16.541)  ( 0.27,  0.05,  0.02)
    angle   ( -1.857, -74.929,  11.143)  ( -1.845, -74.917,  11.143)  ( 0.64,  0.02,  0.00)
    torsion (  0.027,  -0.039,  -0.263)  (  0.027,  -0.039,  -0.260)  ( 0.00,  0.00,  0.08)
    vdw     (  2.943,  -7.542,   1.484)  (  2.943,  -7.542,   1.484)  ( 0.00,  0.00,  0.00)
    electro (  0.056,   0.056,   0.024)  (  0.056,   0.056,   0.024)  ( 0.00,  0.00,  0.00)
16       (120.208,  -1.290,  13.311)  (120.296,  -1.209,  13.317)  ( 0.07,  6.29,  0.05)
    bond    (133.239, -68.848,  24.454)  (133.314, -68.779,  24.457)  ( 0.06,  0.10,  0.01)
    angle   (-10.468,  68.924, -10.394)  (-10.456,  68.937, -10.394)  ( 0.12,  0.02,  0.00)
    torsion (  0.059,  -0.118,  -0.740)  (  0.059,  -0.118,  -0.737)  ( 0.00,  0.00,  0.25)
    vdw     ( -1.720,  -2.521,   0.237)  ( -1.720,  -2.521,   0.237)  ( 0.00,  0.00,  0.00)
    electro ( -0.901,   1.272,  -0.246)  ( -0.901,   1.272,  -0.246)  ( 0.00,  0.00,  0.00)
17       (-336.706, 268.387, -71.586)  (-336.617, 268.494, -71.577)  ( 0.03,  0.04,  0.01)
    bond    (-371.855, 211.563, -66.837)  (-371.779, 211.658, -66.833)  ( 0.02,  0.04,  0.01)
    angle   ( 43.825,  55.253,  -4.729)  ( 43.839,  55.265,  -4.729)  ( 0.03,  0.02,  0.00)
    torsion ( -0.069,   0.140,   0.941)  ( -0.069,   0.140,   0.945)  ( 0.00,  0.00,  0.40)
    vdw     ( -8.608,   1.431,  -0.960)  ( -8.608,   1.431,  -0.960)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (161.526, -219.498,  59.913)  (161.613, -219.419,  59.920)  ( 0.05,  0.04,  0.01)
    bond    (138.178, -139.130,  38.931)  (138.251, -139.065,  38.934)  ( 0.05,  0.05,  0.01)
    angle   ( 25.727, -77.475,  12.790)  ( 25.740, -77.460,  12.791)  ( 0.05,  0.02,  0.00)
    torsion ( -0.740,   1.068,   7.419)  ( -0.740,   1.068,   7.422)  ( 0.00,  0.01,  0.04)
    vdw     (  2.200,  -5.072,   0.640)  (  2.200,  -5.072,   0.640)  ( 0.00,  0.00,  0.00)
    electro ( -3.839,   1.110,   0.133)  ( -3.839,   1.110,   0.133)  ( 0.00,  0.00,  0.00)
19       (-997.763, 2663.337, -575.482)  (-997.686, 2663.421, -575.472)  ( 0.01,  0.00,  0.00)
    bond    (-1418.917, 2382.703, -443.048)  (-1418.856, 2382.777, -443.040)  ( 0.00,  0.00,  0.00)
    angle   (416.142, 280.629, -133.119)  (416.158, 280.638, -133.120)  ( 0.00,  0.00,  0.00)
    torsion ( -0.203,   0.517,   3.481)  ( -0.203,   0.517,   3.483)  ( 0.00,  0.00,  0.07)
    vdw     (  5.215,  -0.512,  -2.796)  (  5.216,  -0.512,  -2.796)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (122.641, -426.713,  77.055)  (122.722, -426.629,  77.061)  ( 0.07,  0.02,  0.01)
    bond    (322.432, -379.263,  86.545)  (322.498, -379.192,  86.548)  ( 0.02,  0.02,  0.00)
    angle   (-204.497, -50.684,  -0.821)  (-204.482, -50.671,  -0.822)  ( 0.01,  0.03,  0.06)
    torsion (  0.767,  -1.231,  -8.333)  (  0.767,  -1.231,  -8.330)  ( 0.00,  0.01,  0.04)
    vdw     (  1.094,   0.208,  -0.104)  (  1.094,   0.209,  -0.104)  ( 0.00,  0.00,  0.00)
    electro (  2.844,   4.257,  -0.232)  (  2.844,   4.257,  -0.232)  ( 0.00,  0.00,  0.00)
21       (1413.184, -2224.206, 588.195)  (1413.220, -2224.170, 588.221)  ( 0.00,  0.00,  0.00)
    bond    (1625.070, -1930.637, 478.096)  (1625.097, -1930.605, 478.116)  ( 0.00,  0.00,  0.00)
    angle   (-197.172, -290.361, 113.648)  (-197.163, -290.357, 113.653)  ( 0.00,  0.00,  0.00)
    torsion (  0.160,  -0.361,  -2.480)  (  0.160,  -0.361,  -2.480)  ( 0.00,  0.00,  0.02)
    vdw     (-20.148,  -0.087,  -1.716)  (-20.148,  -0.087,  -1.716)  ( 0.00,  0.00,  0.00)
    electro (  5.274,  -2.760,   0.647)  (  5.274,  -2.760,   0.647)  ( 0.00,  0.00,  0.00)
22       (-366.862, -77.142, -16.080)  (-366.846, -77.123, -16.077)  ( 0.00,  0.02,  0.02)
    bond    (-171.955, -219.996, -39.220)  (-171.945, -219.980, -39.219)  ( 0.01,  0.01,  0.00)
    angle   (-23.182,  13.743,  24.534)  (-23.181,  13.744,  24.536)  ( 0.01,  0.01,  0.01)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-161.334, 122.918,  -1.605)  (-161.330, 122.920,  -1.605)  ( 0.00,  0.00,  0.03)
    electro (-10.391,   6.193,   0.211)  (-10.391,   6.193,   0.211)  ( 0.00,  0.00,  0.00)
23       (-23.137,  56.155,   6.639)  (-23.120,  56.170,   6.643)  ( 0.07,  0.03,  0.05)
    bond    ( 15.086,  13.833,   6.673)  ( 15.101,  13.845,   6.676)  ( 0.09,  0.09,  0.04)
    angle   (-45.622,  49.256,   1.036)  (-45.620,  49.258,   1.036)  ( 0.01,  0.01,  0.01)
    torsion (  0.047,   0.044,  -0.198)  (  0.047,   0.044,  -0.198)  ( 0.00,  0.00,  0.01)
    vdw     (  7.024,  -6.979,  -0.828)  (  7.024,  -6.979,  -0.828)  ( 0.00,  0.00,  0.00)
    electro (  0.327,   0.002,  -0.043)  (  0.327,   0.002,  -0.043)  ( 0.00,  0.00,  0.00)
24       (-17.356, -18.516, -13.097)  (-17.352, -18.490, -13.093)  ( 0.02,  0.14,  0.03)
    bond    ( -3.330, -18.505,   2.198)  ( -3.329, -18.479,   2.198)  ( 0.02,  0.14,  0.01)
    angle   (-13.113,  -0.092, -20.627)  (-13.110,  -0.092, -20.624)  ( 0.02,  0.00,  0.02)
    torsion (  0.001,  -0.003,  -0.022)  (  0.001,  -0.003,  -0.022)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.915,   0.084,   5.354)  ( -0.915,   0.084,   5.355)  ( 0.03,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 11.488,   7.500,  17.506)  ( 11.496,   7.507,  17.526)  ( 0.08,  0.10,  0.11)
    bond    ( 19.057,  11.460,  31.582)  ( 19.064,  11.462,  31.601)  ( 0.03,  0.02,  0.06)
    angle   (-13.425,  45.799,  -8.517)  (-13.423,  45.803,  -8.516)  ( 0.02,  0.01,  0.01)
    torsion ( -0.014,  -0.022,   0.017)  ( -0.014,  -0.022,   0.017)  ( 0.00,  0.00,  0.00)
    vdw     (  5.870, -49.737,  -5.576)  (  5.870, -49.735,  -5.576)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (  0.517, -30.019,  -8.905)  (  0.522, -30.008,  -8.886)  ( 0.26,  0.03,  0.22)
    bond    (  4.372,  -9.327, -14.621)  (  4.374,  -9.320, -14.603)  ( 0.04,  0.08,  0.13)
    angle   ( -0.345, -31.995,  20.315)  ( -0.342, -31.992,  20.316)  ( 0.13,  0.01,  0.00)
    torsion ( -6.009,   0.002,  -1.801)  ( -6.009,   0.002,  -1.801)  ( 0.00,  0.00,  0.00)
    vdw     (  2.498,  11.302, -12.798)  (  2.498,  11.302, -12.797)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-25.802,  20.532,  -2.566)  (-25.784,  20.543,  -2.561)  ( 0.07,  0.06,  0.18)
    bond    (-26.324,  19.256,  -7.192)  (-26.307,  19.266,  -7.191)  ( 0.07,  0.05,  0.02)
    angle   ( -1.773,  -2.324,   0.259)  ( -1.772,  -2.322,   0.263)  ( 0.07,  0.11,  0.09)
    torsion (  2.286,   4.628,   4.034)  (  2.286,   4.628,   4.034)  ( 0.00,  0.00,  0.00)
    vdw     (  0.009,  -1.028,   0.334)  (  0.009,  -1.028,   0.334)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       ( 31.839,  10.302,   5.189)  ( 31.857,  10.314,   5.194)  ( 0.06,  0.12,  0.09)
    bond    ( 24.691,  19.128,   8.139)  ( 24.707,  19.138,   8.140)  ( 0.07,  0.05,  0.02)
    angle   (  4.802,  -5.862,  -0.807)  (  4.803,  -5.860,  -0.803)  ( 0.04,  0.04,  0.26)
    torsion (  3.079,  -3.340,  -1.493)  (  3.079,  -3.340,  -1.494)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.733,   0.376,  -0.650)  ( -0.733,   0.376,  -0.650)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 16.922, -10.986,   3.508)  ( 16.936, -10.975,   3.519)  ( 0.09,  0.10,  0.31)
    bond    ( 27.772, -19.828,  22.921)  ( 27.785, -19.821,  22.930)  ( 0.05,  0.03,  0.04)
    angle   ( -7.655, -43.113, -27.996)  ( -7.653, -43.111, -27.993)  ( 0.03,  0.01,  0.01)
    torsion ( -0.003,   0.001,   0.005)  ( -0.003,   0.001,   0.005)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.192,  51.954,   8.578)  ( -3.192,  51.955,   8.577)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (  8.232,   5.167, -31.081)  (  8.241,   5.174, -31.063)  ( 0.11,  0.15,  0.06)
    bond    ( 14.300,  12.483, -24.570)  ( 14.306,  12.488, -24.553)  ( 0.04,  0.04,  0.07)
    angle   ( -5.491,  -6.853,  -6.683)  ( -5.488,  -6.850,  -6.681)  ( 0.05,  0.05,  0.02)
    torsion ( -0.006,   0.007,   0.000)  ( -0.006,   0.007,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.572,  -0.470,   0.172)  ( -0.572,  -0.470,   0.172)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-39.076,  21.328,  -4.114)  (-39.070,  21.345,  -4.102)  ( 0.02,  0.08,  0.29)
    bond    ( -9.767,  20.602,  16.092)  ( -9.764,  20.617,  16.101)  ( 0.03,  0.07,  0.06)
    angle   (-39.187,   1.263, -25.384)  (-39.183,   1.265, -25.382)  ( 0.01,  0.14,  0.01)
    torsion (  0.002,  -0.008,   0.011)  (  0.002,  -0.008,   0.011)  ( 0.00,  0.00,  0.00)
    vdw     (  9.876,  -0.529,   5.167)  (  9.876,  -0.529,   5.167)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( -0.248, -33.706,  -7.811)  ( -0.235, -33.689,  -7.807)  ( 0.34,  0.05,  0.06)
    bond    (-17.356, -19.718,  -3.615)  (-17.344, -19.703,  -3.614)  ( 0.07,  0.08,  0.01)
    angle   ( 25.951, -21.946,  -4.917)  ( 25.953, -21.945,  -4.913)  ( 0.01,  0.01,  0.08)
    torsion (  0.013,   0.004,  -0.083)  (  0.013,   0.004,  -0.083)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.857,   7.954,   0.803)  ( -8.857,   7.954,   0.803)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 14.745,  24.872,  23.929)  ( 14.751,  24.882,  23.949)  ( 0.04,  0.04,  0.08)
    bond    ( -8.159,  14.049,  22.197)  ( -8.157,  14.056,  22.215)  ( 0.03,  0.05,  0.08)
    angle   ( 25.372,  11.763,   1.871)  ( 25.375,  11.766,   1.872)  ( 0.01,  0.03,  0.07)
    torsion ( -0.032,  -0.072,   0.034)  ( -0.032,  -0.072,   0.034)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.436,  -0.868,  -0.172)  ( -2.436,  -0.868,  -0.172)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 15.454,  24.734, -21.397)  ( 15.457,  24.747, -21.378)  ( 0.02,  0.05,  0.09)
    bond    ( -1.186,  18.722, -25.133)  ( -1.186,  18.732, -25.115)  ( 0.01,  0.05,  0.07)
    angle   ( 16.567,   6.266,   3.891)  ( 16.570,   6.268,   3.893)  ( 0.02,  0.04,  0.04)
    torsion (  0.018,   0.066,   0.048)  (  0.018,   0.066,   0.048)  ( 0.00,  0.00,  0.00)
    vdw     (  0.055,  -0.319,  -0.204)  (  0.055,  -0.319,  -0.204)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (  4.001,  -0.524,   0.278)  (  4.014,  -0.503,   0.279)  ( 0.34,  1.08,  0.02)
    bond    (  1.611,   2.181,  -0.163)  (  1.621,   2.200,  -0.162)  ( 0.63,  0.86,  0.00)
    angle   (  3.124,  -2.253,   0.734)  (  3.127,  -2.251,   0.734)  ( 0.12,  0.08,  0.00)
    torsion (  0.021,  -0.030,  -0.197)  (  0.021,  -0.030,  -0.196)  ( 0.00,  0.00,  0.02)
    vdw     ( -1.117,   0.749,  -0.222)  ( -1.117,   0.749,  -0.222)  ( 0.00,  0.00,  0.00)
    electro (  0.362,  -1.172,   0.125)  (  0.362,  -1.172,   0.125)  ( 0.00,  0.00,  0.00)
36       (-39.895,   8.323,  -5.824)  (-39.866,   8.329,  -5.823)  ( 0.07,  0.07,  0.03)
    bond    (-41.790,   5.311,  -5.340)  (-41.762,   5.312,  -5.339)  ( 0.07,  0.01,  0.01)
    angle   (  0.354,   2.444,  -0.335)  (  0.354,   2.449,  -0.335)  ( 0.00,  0.22,  0.00)
    torsion (  0.022,  -0.032,  -0.207)  (  0.022,  -0.032,  -0.206)  ( 0.00,  0.00,  0.01)
    vdw     (  1.056,   0.515,   0.040)  (  1.056,   0.515,   0.040)  ( 0.00,  0.01,  0.00)
    electro (  0.463,   0.084,   0.017)  (  0.463,   0.084,   0.017)  ( 0.00,  0.00,  0.00)
37       (-21.499,  34.955,  -7.651)  (-21.489,  34.980,  -7.649)  ( 0.04,  0.07,  0.02)
    bond    (-17.334,  38.426,  -7.733)  (-17.329,  38.450,  -7.732)  ( 0.03,  0.06,  0.01)
    angle   ( -3.889,  -1.784,  -0.159)  ( -3.885,  -1.783,  -0.159)  ( 0.12,  0.05,  0.00)
    torsion ( -0.003,   0.004,   0.027)  ( -0.003,   0.004,   0.028)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.171,  -1.149,   0.156)  ( -0.171,  -1.149,   0.156)  ( 0.00,  0.00,  0.00)
    electro ( -0.101,  -0.542,   0.057)  ( -0.101,  -0.542,   0.057)  ( 0.00,  0.00,  0.00)
38       ( -2.426,  -1.355,   0.476)  ( -2.412,  -1.335,   0.477)  ( 0.59,  1.49,  0.04)
    bond    ( -1.879,  -2.467,   0.180)  ( -1.868,  -2.448,   0.180)  ( 0.57,  0.74,  0.00)
    angle   ( -0.324,   0.244,   0.014)  ( -0.321,   0.246,   0.014)  ( 0.11,  0.05,  0.00)
    torsion ( -0.045,   0.066,   0.437)  ( -0.045,   0.066,   0.437)  ( 0.00,  0.00,  0.03)
    vdw     ( -0.983,   0.774,  -0.209)  ( -0.983,   0.774,  -0.209)  ( 0.01,  0.00,  0.00)
    electro (  0.805,   0.027,   0.054)  (  0.805,   0.027,   0.054)  ( 0.00,  0.00,  0.00)
39       (206.725, -233.989,  17.609)  (206.737, -233.959,  17.609)  ( 0.01,  0.01,  0.00)
    bond    (-25.243, -90.642,   9.182)  (-25.240, -90.615,   9.182)  ( 0.01,  0.03,  0.01)
    angle   ( 46.593, -12.125,   8.430)  ( 46.598, -12.125,   8.430)  ( 0.01,  0.00,  0.00)
    torsion (  0.323,  -0.400,  -3.056)  (  0.323,  -0.400,  -3.055)  ( 0.00,  0.00,  0.02)
    vdw     (177.887, -119.872,   3.338)  (177.892, -119.870,   3.337)  ( 0.00,  0.00,  0.02)
    electro (  7.164, -10.950,  -0.285)  (  7.164, -10.950,  -0.285)  ( 0.00,  0.00,  0.00)
40       ( 37.702,  24.280,   2.740)  ( 37.723,  24.293,   2.741)  ( 0.06,  0.05,  0.03)
    bond    ( 36.027,  24.863,   0.267)  ( 36.047,  24.872,   0.267)  ( 0.06,  0.04,  0.01)
    angle   (  1.720,  -2.495,  -0.322)  (  1.722,  -2.492,  -0.322)  ( 0.10,  0.14,  0.00)
    torsion ( -0.388,   0.523,   3.615)  ( -0.388,   0.524,   3.616)  ( 0.00,  0.00,  0.02)
    vdw     (  0.466,   0.217,  -0.475)  (  0.466,   0.217,  -0.475)  ( 0.00,  0.00,  0.00)
    electro ( -0.124,   1.172,  -0.345)  ( -0.124,   1.172,  -0.345)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 14 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 15 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ibuprofen.gpr
 # Expected      1391.39625, found 1391.396249&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-483.531, -787.355, -25.561)  (-483.481, -787.300, -25.519)  ( 0.01,  0.01,  0.16)
    bond    (-123.483, -133.688,  12.161)  (-123.445, -133.645,  12.191)  ( 0.03,  0.03,  0.25)
    angle   (-359.908, -649.896, -38.074)  (-359.897, -649.884, -38.062)  ( 0.00,  0.00,  0.03)
    torsion (  2.101,  -1.457,   2.833)  (  2.101,  -1.457,   2.833)  ( 0.02,  0.02,  0.02)
    vdw     ( -2.241,  -2.313,  -2.481)  ( -2.241,  -2.313,  -2.481)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-150.347,  75.986, 142.269)  (-150.296,  76.026, 142.316)  ( 0.03,  0.05,  0.03)
    bond    (  9.834,  50.544, -146.894)  (  9.875,  50.571, -146.855)  ( 0.41,  0.05,  0.03)
    angle   (-153.746,  27.483, 293.328)  (-153.736,  27.495, 293.336)  ( 0.01,  0.04,  0.00)
    torsion ( -6.223,  -2.600,  -3.652)  ( -6.222,  -2.599,  -3.651)  ( 0.01,  0.03,  0.02)
    vdw     ( -0.213,   0.559,  -0.513)  ( -0.213,   0.559,  -0.513)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (117.839, 171.054, -464.766)  (117.892, 171.097, -464.722)  ( 0.05,  0.02,  0.01)
    bond    (-19.118,  50.713, -154.500)  (-19.073,  50.747, -154.471)  ( 0.24,  0.07,  0.02)
    angle   (137.091,  91.897, -324.372)  (137.099,  91.904, -324.357)  ( 0.01,  0.01,  0.00)
    torsion ( -0.601,  28.940,  16.482)  ( -0.601,  28.940,  16.483)  ( 0.00,  0.00,  0.00)
    vdw     (  0.467,  -0.496,  -2.376)  (  0.467,  -0.495,  -2.376)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-86.815, 438.371, 710.387)  (-86.771, 438.419, 710.443)  ( 0.05,  0.01,  0.01)
    bond    (-32.932,  73.361, 171.694)  (-32.901,  73.397, 171.737)  ( 0.09,  0.05,  0.03)
    angle   (-54.988, 361.477, 537.547)  (-54.976, 361.488, 537.560)  ( 0.02,  0.00,  0.00)
    torsion (  0.844,   1.591,  -0.716)  (  0.845,   1.592,  -0.716)  ( 0.04,  0.03,  0.01)
    vdw     (  0.262,   1.943,   1.862)  (  0.262,   1.943,   1.862)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -7.381, -638.678,  59.613)  ( -7.307, -638.618,  59.649)  ( 1.00,  0.01,  0.06)
    bond    (236.905, -169.810,   6.565)  (236.972, -169.758,   6.592)  ( 0.03,  0.03,  0.41)
    angle   (-212.896, -410.032, 140.931)  (-212.889, -410.024, 140.940)  ( 0.00,  0.00,  0.01)
    torsion (-26.430, -66.832, -87.390)  (-26.430, -66.832, -87.390)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.960,   7.996,  -0.493)  ( -4.960,   7.997,  -0.493)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (227.515, 260.531,  44.570)  (227.601, 260.593,  44.597)  ( 0.04,  0.02,  0.06)
    bond    (-54.553, -97.251, 136.985)  (-54.476, -97.200, 137.006)  ( 0.14,  0.05,  0.02)
    angle   (241.657, 321.716, -125.937)  (241.665, 321.726, -125.930)  ( 0.00,  0.00,  0.00)
    torsion ( 33.723,  32.553,  36.486)  ( 33.724,  32.554,  36.486)  ( 0.00,  0.00,  0.00)
    vdw     (  7.211,   3.685,  -3.494)  (  7.211,   3.685,  -3.494)  ( 0.00,  0.00,  0.00)
    electro ( -0.524,  -0.171,   0.530)  ( -0.524,  -0.171,   0.530)  ( 0.00,  0.00,  0.00)
 7       (-587.803, -143.380,  11.876)  (-587.728, -143.300,  11.895)  ( 0.01,  0.06,  0.16)
    bond    (-298.842, -73.718,  17.820)  (-298.773, -73.651,  17.834)  ( 0.02,  0.09,  0.08)
    angle   (-258.526, -67.862, -17.538)  (-258.520, -67.851, -17.531)  ( 0.00,  0.02,  0.04)
    torsion (-39.427,  -2.663,  13.927)  (-39.427,  -2.663,  13.926)  ( 0.00,  0.00,  0.01)
    vdw     (  9.590,   0.586,  -2.479)  (  9.590,   0.586,  -2.479)  ( 0.00,  0.00,  0.00)
    electro ( -0.598,   0.279,   0.145)  ( -0.598,   0.279,   0.145)  ( 0.00,  0.00,  0.00)
 8       ( 45.603,  31.698, 493.231)  ( 45.664,  31.769, 493.270)  ( 0.13,  0.22,  0.01)
    bond    (-37.015, 339.079, 109.544)  (-36.964, 339.142, 109.578)  ( 0.14,  0.02,  0.03)
    angle   ( 63.762, -301.464, 382.571)  ( 63.773, -301.456, 382.577)  ( 0.02,  0.00,  0.00)
    torsion ( 14.673,   1.679,  -0.383)  ( 14.672,   1.679,  -0.383)  ( 0.00,  0.00,  0.02)
    vdw     (  4.183,  -7.596,   1.498)  (  4.183,  -7.596,   1.498)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (361.193, 242.276, -676.728)  (361.253, 242.314, -676.655)  ( 0.02,  0.02,  0.01)
    bond    (152.916,   8.014, -198.640)  (152.966,   8.044, -198.571)  ( 0.03,  0.37,  0.03)
    angle   (227.853, 245.387, -443.490)  (227.864, 245.396, -443.485)  ( 0.00,  0.00,  0.00)
    torsion (-13.958, -16.520, -43.857)  (-13.958, -16.521, -43.857)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.376,   4.410,   9.827)  ( -5.376,   4.410,   9.828)  ( 0.00,  0.01,  0.00)
    electro ( -0.242,   0.986,  -0.569)  ( -0.242,   0.986,  -0.569)  ( 0.00,  0.00,  0.00)
10       (-110.979, -179.639, 560.779)  (-110.922, -179.556, 560.811)  ( 0.05,  0.05,  0.01)
    bond    ( 67.468,  54.576, -12.563)  ( 67.512,  54.651, -12.535)  ( 0.07,  0.14,  0.22)
    angle   (-184.159, -249.578, 505.421)  (-184.147, -249.570, 505.426)  ( 0.01,  0.00,  0.00)
    torsion ( 13.823,  16.842,  62.209)  ( 13.823,  16.842,  62.209)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.528,  -1.965,   5.989)  ( -8.528,  -1.965,   5.989)  ( 0.00,  0.00,  0.00)
    electro (  0.418,   0.486,  -0.279)  (  0.418,   0.486,  -0.279)  ( 0.00,  0.00,  0.00)
11       ( 38.719, -27.314, -101.594)  ( 38.763, -27.264, -101.553)  ( 0.11,  0.18,  0.04)
    bond    (-120.065, -106.033,  79.009)  (-120.030, -105.994,  79.042)  ( 0.03,  0.04,  0.04)
    angle   (150.692,  64.751, -222.033)  (150.700,  64.762, -222.025)  ( 0.01,  0.02,  0.00)
    torsion (  7.707,  14.295,  42.537)  (  7.708,  14.295,  42.537)  ( 0.00,  0.00,  0.00)
    vdw     (  0.385,  -0.328,  -1.107)  (  0.385,  -0.328,  -1.107)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (316.065, -171.242, -664.054)  (316.112, -171.197, -663.999)  ( 0.01,  0.03,  0.01)
    bond    ( 87.522, -58.387, -171.625)  ( 87.557, -58.353, -171.583)  ( 0.04,  0.06,  0.02)
    angle   (229.808, -113.542, -492.188)  (229.819, -113.531, -492.175)  ( 0.00,  0.01,  0.00)
    torsion ( -0.960,   0.838,  -0.805)  ( -0.960,   0.839,  -0.805)  ( 0.04,  0.04,  0.01)
    vdw     ( -0.305,  -0.152,   0.564)  ( -0.305,  -0.152,   0.564)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (222.622, -938.041, 263.528)  (222.651, -938.006, 263.588)  ( 0.01,  0.00,  0.02)
    bond    (-46.368, -89.865,  59.959)  (-46.335, -89.841,  60.025)  ( 0.07,  0.03,  0.11)
    angle   (258.667, -818.948, 227.732)  (258.669, -818.936, 227.731)  ( 0.00,  0.00,  0.00)
    torsion (  9.754, -28.354, -26.126)  (  9.749, -28.354, -26.131)  ( 0.06,  0.00,  0.02)
    vdw     (  0.483,  -0.111,   2.542)  (  0.483,  -0.111,   2.542)  ( 0.00,  0.00,  0.00)
    electro (  0.085,  -0.764,  -0.579)  (  0.085,  -0.764,  -0.579)  ( 0.00,  0.00,  0.00)
14       (-757.838, 462.007, 328.227)  (-757.881, 462.059, 328.188)  ( 0.01,  0.01,  0.01)
    bond    (  0.586, -45.719,   2.500)  (  0.597, -45.671,   2.514)  ( 0.66,  0.11,  0.57)
    angle   (-779.027, 502.723, 295.552)  (-779.044, 502.728, 295.532)  ( 0.00,  0.00,  0.01)
    torsion ( 18.184,   6.220,  25.946)  ( 18.147,   6.220,  25.912)  ( 0.20,  0.00,  0.13)
    vdw     (  2.195,  -1.155,   2.950)  (  2.195,  -1.155,   2.950)  ( 0.00,  0.00,  0.00)
    electro (  0.223,  -0.062,   1.279)  (  0.223,  -0.062,   1.279)  ( 0.00,  0.00,  0.00)
15       ( 96.010, 520.846, -194.093)  ( 96.029, 520.853, -194.051)  ( 0.02,  0.00,  0.02)
    bond    (  1.977,   0.804,   3.060)  (  1.996,   0.807,   3.104)  ( 0.92,  0.24,  1.44)
    angle   (106.071, 506.715, -199.983)  (106.072, 506.720, -199.984)  ( 0.00,  0.00,  0.00)
    torsion (-10.804,  13.214,   3.508)  (-10.804,  13.214,   3.508)  ( 0.00,  0.00,  0.00)
    vdw     (  0.208,   1.891,  -1.195)  (  0.208,   1.891,  -1.195)  ( 0.00,  0.00,  0.00)
    electro ( -1.443,  -1.778,   0.516)  ( -1.443,  -1.778,   0.516)  ( 0.00,  0.00,  0.00)
16       (110.814, 247.603, -35.384)  (110.841, 247.609, -35.381)  ( 0.02,  0.00,  0.01)
    bond    ( 69.487, -11.705,  -1.559)  ( 69.514, -11.704,  -1.559)  ( 0.04,  0.01,  0.02)
    angle   ( 43.423, 262.571, -35.069)  ( 43.423, 262.575, -35.066)  ( 0.00,  0.00,  0.01)
    torsion (  0.063,   0.120,   1.925)  (  0.063,   0.120,   1.925)  ( 0.00,  0.00,  0.01)
    vdw     ( -2.160,  -3.383,  -0.681)  ( -2.160,  -3.383,  -0.681)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (175.588, 177.217, -89.271)  (175.592, 177.232, -89.254)  ( 0.00,  0.01,  0.02)
    bond    (  0.067,  39.118,  41.485)  (  0.067,  39.131,  41.500)  ( 0.00,  0.03,  0.04)
    angle   (176.327, 138.802, -131.168)  (176.330, 138.803, -131.165)  ( 0.00,  0.00,  0.00)
    torsion ( -0.772,   0.580,  -0.545)  ( -0.772,   0.580,  -0.545)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.033,  -1.282,   0.958)  ( -0.033,  -1.282,   0.958)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (251.961, 192.335, 100.946)  (251.965, 192.349, 100.964)  ( 0.00,  0.01,  0.02)
    bond    (  2.181,  42.689, -46.478)  (  2.182,  42.701, -46.463)  ( 0.01,  0.03,  0.03)
    angle   (253.610, 151.426, 151.075)  (253.614, 151.427, 151.078)  ( 0.00,  0.00,  0.00)
    torsion (  1.057,  -0.932,  -0.807)  (  1.057,  -0.932,  -0.807)  ( 0.01,  0.01,  0.00)
    vdw     ( -4.888,  -0.848,  -2.844)  ( -4.887,  -0.847,  -2.844)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 35.027,  55.764,  92.459)  ( 35.034,  55.772,  92.479)  ( 0.02,  0.01,  0.02)
    bond    ( 24.015, -31.052,  60.780)  ( 24.018, -31.047,  60.800)  ( 0.01,  0.02,  0.03)
    angle   ( 17.910,  79.100,  33.317)  ( 17.912,  79.103,  33.317)  ( 0.01,  0.00,  0.00)
    torsion (  2.826,  -0.063,  -1.148)  (  2.826,  -0.063,  -1.148)  ( 0.01,  0.00,  0.01)
    vdw     ( -9.723,   7.778,  -0.489)  ( -9.723,   7.779,  -0.489)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (110.540,  66.426,  56.278)  (110.544,  66.437,  56.299)  ( 0.00,  0.02,  0.04)
    bond    (  1.245,  49.479,  76.160)  (  1.245,  49.487,  76.180)  ( 0.03,  0.02,  0.03)
    angle   (100.726,  19.307, -14.190)  (100.729,  19.309, -14.189)  ( 0.00,  0.01,  0.01)
    torsion (  1.154,   1.529,  -1.012)  (  1.154,   1.529,  -1.012)  ( 0.00,  0.01,  0.00)
    vdw     (  7.415,  -3.888,  -4.679)  (  7.415,  -3.888,  -4.679)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-72.267, -55.249, -54.233)  (-72.260, -55.225, -54.229)  ( 0.01,  0.04,  0.01)
    bond    (-26.461, -65.057,  11.205)  (-26.457, -65.034,  11.206)  ( 0.02,  0.04,  0.01)
    angle   (-46.537,   7.124, -68.522)  (-46.535,   7.124, -68.519)  ( 0.01,  0.01,  0.00)
    torsion ( -0.326,   0.906,   4.487)  ( -0.326,   0.906,   4.487)  ( 0.00,  0.00,  0.00)
    vdw     (  1.057,   1.779,  -1.403)  (  1.057,   1.779,  -1.403)  ( 0.03,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-68.634, -137.390, -262.729)  (-68.610, -137.385, -262.723)  ( 0.04,  0.00,  0.00)
    bond    ( 54.419, -15.692, -19.606)  ( 54.442, -15.690, -19.603)  ( 0.04,  0.01,  0.02)
    angle   (-123.941, -124.844, -244.293)  (-123.939, -124.841, -244.290)  ( 0.00,  0.00,  0.00)
    torsion (  0.075,   0.834,  -0.459)  (  0.075,   0.834,  -0.459)  ( 0.00,  0.01,  0.00)
    vdw     (  0.812,   2.311,   1.628)  (  0.812,   2.311,   1.628)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 75.664, -118.614, -174.676)  ( 75.670, -118.604, -174.655)  ( 0.01,  0.01,  0.01)
    bond    (-20.746,  33.175, -62.178)  (-20.744,  33.181, -62.158)  ( 0.01,  0.02,  0.03)
    angle   ( 97.257, -154.243, -114.792)  ( 97.260, -154.239, -114.792)  ( 0.00,  0.00,  0.00)
    torsion ( -0.481,  -0.245,   0.030)  ( -0.481,  -0.245,   0.030)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.365,   2.699,   2.265)  ( -0.365,   2.699,   2.265)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (105.442, -67.192, -207.251)  (105.451, -67.169, -207.246)  ( 0.01,  0.03,  0.00)
    bond    (-19.670, -43.647,  -7.176)  (-19.665, -43.624,  -7.175)  ( 0.02,  0.05,  0.01)
    angle   (126.570, -23.893, -201.648)  (126.573, -23.893, -201.644)  ( 0.00,  0.00,  0.00)
    torsion (  0.145,  -0.078,   0.078)  (  0.145,  -0.078,   0.078)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.603,   0.426,   1.495)  ( -1.603,   0.426,   1.495)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-44.722,  11.403,  -7.127)  (-44.712,  11.423,  -7.121)  ( 0.02,  0.17,  0.09)
    bond    ( -3.943,  -6.899,   3.822)  ( -3.937,  -6.881,   3.827)  ( 0.15,  0.26,  0.14)
    angle   (-38.340,  11.268, -19.179)  (-38.337,  11.269, -19.179)  ( 0.01,  0.01,  0.00)
    torsion ( -2.978,   6.930,   9.397)  ( -2.978,   6.930,   9.397)  ( 0.00,  0.00,  0.00)
    vdw     (  1.161,  -0.299,  -0.659)  (  1.162,  -0.299,  -0.659)  ( 0.01,  0.00,  0.00)
    electro ( -0.622,   0.404,  -0.508)  ( -0.622,   0.404,  -0.508)  ( 0.00,  0.00,  0.00)
26       ( 17.530, -47.858,  -0.019)  ( 17.552, -47.853,  -0.013)  ( 0.13,  0.01,  0.01)
    bond    (  3.862,   0.983,   1.869)  (  3.884,   0.985,   1.875)  ( 0.58,  0.14,  0.28)
    angle   ( -7.815, -37.552,  35.916)  ( -7.815, -37.548,  35.917)  ( 0.00,  0.01,  0.00)
    torsion ( 20.997,  -8.192, -39.206)  ( 20.997,  -8.192, -39.206)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.073,  -2.287,   0.976)  ( -0.073,  -2.287,   0.976)  ( 0.00,  0.00,  0.00)
    electro (  0.559,  -0.810,   0.426)  (  0.559,  -0.810,   0.426)  ( 0.00,  0.00,  0.00)
27       (-30.560,  41.010,   4.196)  (-30.556,  41.012,   4.224)  ( 0.02,  0.00,  0.66)
    bond    ( -1.957,   0.297,  -8.240)  ( -1.955,   0.297,  -8.213)  ( 0.08,  0.00,  0.33)
    angle   (-21.621,  52.996,   7.064)  (-21.618,  52.998,   7.064)  ( 0.01,  0.00,  0.00)
    torsion (-11.269, -11.104,   2.280)  (-11.269, -11.104,   2.281)  ( 0.00,  0.00,  0.00)
    vdw     (  2.975,  -0.312,   2.629)  (  2.975,  -0.312,   2.629)  ( 0.00,  0.00,  0.00)
    electro (  1.311,  -0.867,   0.464)  (  1.311,  -0.867,   0.464)  ( 0.00,  0.00,  0.00)
28       (-136.018, 245.227, -127.644)  (-135.997, 245.231, -127.635)  ( 0.02,  0.00,  0.01)
    bond    ( -4.603,  -0.834,   3.102)  ( -4.584,  -0.834,   3.111)  ( 0.42,  0.05,  0.29)
    angle   (-130.627, 233.442, -129.868)  (-130.626, 233.446, -129.868)  ( 0.00,  0.00,  0.00)
    torsion ( -3.357,  13.709,  -1.271)  ( -3.357,  13.709,  -1.271)  ( 0.00,  0.00,  0.01)
    vdw     (  3.158,  -1.380,   1.050)  (  3.158,  -1.380,   1.050)  ( 0.01,  0.01,  0.01)
    electro ( -0.589,   0.290,  -0.657)  ( -0.589,   0.290,  -0.657)  ( 0.00,  0.00,  0.00)
29       ( 64.466,  49.474,  79.435)  ( 64.488,  49.484,  79.438)  ( 0.03,  0.02,  0.00)
    bond    ( 82.859,  48.522,  11.969)  ( 82.880,  48.529,  11.970)  ( 0.02,  0.02,  0.01)
    angle   (-15.838,   8.500,  75.187)  (-15.837,   8.502,  75.190)  ( 0.01,  0.03,  0.00)
    torsion (  1.056,  -1.007,  -3.232)  (  1.056,  -1.007,  -3.232)  ( 0.00,  0.01,  0.00)
    vdw     ( -3.611,  -6.541,  -4.490)  ( -3.611,  -6.540,  -4.490)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-76.683,  13.557, 205.914)  (-76.679,  13.584, 205.918)  ( 0.01,  0.20,  0.00)
    bond    ( -7.796,  60.835,  11.399)  ( -7.795,  60.862,  11.401)  ( 0.01,  0.04,  0.01)
    angle   (-73.100, -46.077, 195.991)  (-73.097, -46.076, 195.995)  ( 0.00,  0.00,  0.00)
    torsion (  2.398,   0.066,   1.288)  (  2.398,   0.066,   1.288)  ( 0.01,  0.00,  0.00)
    vdw     (  1.815,  -1.268,  -2.765)  (  1.815,  -1.268,  -2.765)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-118.275,  90.747, 153.638)  (-118.266,  90.752, 153.659)  ( 0.01,  0.01,  0.01)
    bond    ( 27.141, -14.457,  53.610)  ( 27.147, -14.455,  53.631)  ( 0.02,  0.01,  0.04)
    angle   (-146.486, 105.766, 102.653)  (-146.482, 105.769, 102.653)  ( 0.00,  0.00,  0.00)
    torsion ( -0.366,  -0.637,   0.013)  ( -0.366,  -0.637,   0.013)  ( 0.00,  0.01,  0.00)
    vdw     (  1.435,   0.074,  -2.639)  (  1.435,   0.075,  -2.638)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-50.751,  82.148, 196.719)  (-50.727,  82.155, 196.724)  ( 0.05,  0.01,  0.00)
    bond    (-55.346, -19.687,  12.099)  (-55.323, -19.684,  12.101)  ( 0.04,  0.02,  0.01)
    angle   (  4.679, 101.096, 185.844)  (  4.679, 101.100, 185.848)  ( 0.01,  0.00,  0.00)
    torsion ( -0.331,   0.679,  -0.408)  ( -0.331,   0.679,  -0.408)  ( 0.00,  0.01,  0.00)
    vdw     (  0.248,   0.060,  -0.817)  (  0.248,   0.060,  -0.817)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (409.108, -164.727, -419.694)  (409.093, -164.692, -419.707)  ( 0.00,  0.02,  0.00)
    bond    ( 49.599, 130.501, -58.048)  ( 49.604, 130.533, -58.041)  ( 0.01,  0.02,  0.01)
    angle   (371.322, -295.799, -347.892)  (371.314, -295.795, -347.900)  ( 0.00,  0.00,  0.00)
    torsion (-12.248,  -0.841, -12.358)  (-12.260,  -0.841, -12.370)  ( 0.10,  0.00,  0.10)
    vdw     ( -0.985,  -0.596,  -0.627)  ( -0.985,  -0.596,  -0.627)  ( 0.00,  0.00,  0.00)
    electro (  1.420,   2.008,  -0.769)  (  1.420,   2.008,  -0.769)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 15 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 16 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/penicillin.gpr
 # Expected       468.67089, found 468.670890&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 46.363, -52.857,   2.182)  ( 46.411, -52.808,   2.230)  ( 0.10,  0.09,  2.20)
    bond    ( 56.033,   2.173,  18.600)  ( 56.070,   2.210,  18.636)  ( 0.06,  1.67,  0.20)
    angle   ( -7.353, -49.796,  -8.847)  ( -7.340, -49.783,  -8.836)  ( 0.17,  0.03,  0.13)
    torsion (  0.938,   1.611,  -3.622)  (  0.938,   1.611,  -3.621)  ( 0.00,  0.00,  0.01)
    vdw     ( -3.256,  -6.845,  -3.948)  ( -3.256,  -6.845,  -3.948)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (140.741, 179.793, 117.407)  (140.809, 179.867, 117.424)  ( 0.05,  0.04,  0.01)
    bond    ( 77.454, 158.423,  80.136)  ( 77.508, 158.488,  80.147)  ( 0.07,  0.04,  0.01)
    angle   ( 65.044,  21.210,  39.213)  ( 65.057,  21.218,  39.216)  ( 0.02,  0.04,  0.01)
    torsion (  0.130,   0.532,  -2.605)  (  0.131,   0.533,  -2.601)  ( 0.00,  0.02,  0.13)
    vdw     ( -1.947,  -0.317,   0.360)  ( -1.947,  -0.317,   0.360)  ( 0.00,  0.00,  0.00)
    electro (  0.060,  -0.055,   0.302)  (  0.060,  -0.055,   0.302)  ( 0.00,  0.00,  0.00)
 3       ( -7.604, -36.048,  -9.590)  ( -7.598, -36.023,  -9.586)  ( 0.08,  0.07,  0.04)
    bond    (-11.345, -33.468,   2.727)  (-11.342, -33.443,   2.727)  ( 0.02,  0.07,  0.00)
    angle   (  5.420,  -2.848, -12.376)  (  5.423,  -2.848, -12.372)  ( 0.06,  0.01,  0.03)
    torsion (  0.012,  -0.008,  -0.042)  (  0.012,  -0.008,  -0.042)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.692,   0.276,   0.101)  ( -1.692,   0.276,   0.101)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-31.386,  15.083,  14.466)  (-31.374,  15.095,  14.478)  ( 0.04,  0.08,  0.08)
    bond    (-20.220,  20.248,  21.069)  (-20.211,  20.257,  21.079)  ( 0.04,  0.04,  0.05)
    angle   ( 14.957,  14.055,   0.831)  ( 14.959,  14.057,   0.834)  ( 0.01,  0.02,  0.20)
    torsion ( -0.004,  -0.021,   0.016)  ( -0.004,  -0.021,   0.016)  ( 0.00,  0.00,  0.00)
    vdw     (-26.119, -19.199,  -7.451)  (-26.118, -19.198,  -7.451)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -8.636,   9.908, -36.534)  ( -8.633,   9.914, -36.508)  ( 0.04,  0.06,  0.07)
    bond    ( -3.550,  11.947, -36.602)  ( -3.550,  11.950, -36.577)  ( 0.00,  0.02,  0.07)
    angle   ( -5.400,  -2.196,  -0.193)  ( -5.397,  -2.193,  -0.193)  ( 0.06,  0.17,  0.01)
    torsion ( -0.006,   0.045,   0.015)  ( -0.006,   0.045,   0.015)  ( 0.00,  0.00,  0.00)
    vdw     (  0.320,   0.113,   0.246)  (  0.320,   0.113,   0.246)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-53.985,  31.522,   1.202)  (-53.955,  31.561,   1.206)  ( 0.05,  0.12,  0.32)
    bond    (-36.513,  43.141,   9.825)  (-36.486,  43.178,   9.827)  ( 0.07,  0.09,  0.02)
    angle   ( -8.815,  -6.178,  -5.581)  ( -8.812,  -6.177,  -5.580)  ( 0.03,  0.02,  0.01)
    torsion (  1.264,   1.990,  -4.052)  (  1.264,   1.990,  -4.051)  ( 0.00,  0.01,  0.02)
    vdw     ( -9.760,  -8.725,   0.461)  ( -9.760,  -8.725,   0.461)  ( 0.00,  0.00,  0.00)
    electro ( -0.160,   1.295,   0.548)  ( -0.160,   1.295,   0.548)  ( 0.00,  0.00,  0.00)
 7       ( 17.918, -115.908,  31.476)  ( 17.973, -115.854,  31.495)  ( 0.31,  0.05,  0.06)
    bond    (103.923, -105.456,  11.336)  (103.966, -105.413,  11.349)  ( 0.04,  0.04,  0.11)
    angle   (-80.727,   4.516, -18.236)  (-80.715,   4.528, -18.234)  ( 0.01,  0.25,  0.01)
    torsion ( -7.906, -15.760,  38.484)  ( -7.906, -15.760,  38.488)  ( 0.00,  0.00,  0.01)
    vdw     (  3.176,   0.516,   0.677)  (  3.176,   0.516,   0.677)  ( 0.00,  0.00,  0.00)
    electro ( -0.547,   0.276,  -0.785)  ( -0.547,   0.276,  -0.785)  ( 0.00,  0.00,  0.00)
 8       ( 98.587,  -9.778,  -9.190)  ( 98.606,  -9.763,  -9.186)  ( 0.02,  0.16,  0.04)
    bond    ( 57.396, -52.111, -14.395)  ( 57.412, -52.098, -14.394)  ( 0.03,  0.02,  0.01)
    angle   ( 15.918,  14.631,  10.536)  ( 15.920,  14.633,  10.537)  ( 0.01,  0.01,  0.01)
    torsion (  1.353,   5.680, -15.166)  (  1.353,   5.681, -15.165)  ( 0.00,  0.00,  0.01)
    vdw     ( 23.370,  23.120,   9.616)  ( 23.370,  23.121,   9.616)  ( 0.00,  0.00,  0.00)
    electro (  0.550,  -1.099,   0.220)  (  0.550,  -1.099,   0.220)  ( 0.00,  0.00,  0.00)
 9       (-197.004, -140.676, 168.339)  (-196.949, -140.625, 168.375)  ( 0.03,  0.04,  0.02)
    bond    (-117.027, -220.319,  72.628)  (-116.983, -220.279,  72.656)  ( 0.04,  0.02,  0.04)
    angle   (-63.685,  98.264, 121.297)  (-63.675,  98.275, 121.304)  ( 0.02,  0.01,  0.01)
    torsion (-17.120, -19.452, -26.178)  (-17.120, -19.452, -26.178)  ( 0.00,  0.00,  0.00)
    vdw     (  0.828,   0.830,   0.593)  (  0.828,   0.830,   0.593)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (233.498, -83.766,   3.792)  (233.538, -83.730,   3.843)  ( 0.02,  0.04,  1.35)
    bond    ( 65.211,   0.399, 148.702)  ( 65.240,   0.426, 148.746)  ( 0.04,  1.07,  0.03)
    angle   (177.340, -80.008, -125.110)  (177.352, -79.999, -125.103)  ( 0.01,  0.01,  0.01)
    torsion (-11.166,  -6.616, -21.328)  (-11.166,  -6.616, -21.328)  ( 0.00,  0.00,  0.00)
    vdw     (  2.113,   2.459,   1.528)  (  2.113,   2.459,   1.528)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-254.464, 437.307, -67.379)  (-254.406, 437.333, -67.330)  ( 0.02,  0.01,  0.07)
    bond    (-120.639, 134.169,  15.514)  (-120.591, 134.184,  15.547)  ( 0.04,  0.01,  0.21)
    angle   (-167.688, 157.180, -45.457)  (-167.679, 157.192, -45.442)  ( 0.01,  0.01,  0.03)
    torsion ( 33.886, 145.372, -37.446)  ( 33.886, 145.371, -37.446)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.023,   0.586,   0.011)  ( -0.023,   0.586,   0.011)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-21.661, -21.824, -29.186)  (-21.658, -21.815, -29.166)  ( 0.02,  0.04,  0.07)
    bond    ( -6.016, -21.410, -36.088)  ( -6.016, -21.403, -36.068)  ( 0.01,  0.03,  0.06)
    angle   (-30.444,  -0.957,   5.643)  (-30.441,  -0.955,   5.644)  ( 0.01,  0.19,  0.01)
    torsion (  4.110,  -6.214,   3.002)  (  4.110,  -6.214,   3.002)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.688,   6.757,  -1.744)  ( 10.688,   6.757,  -1.744)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (  8.926, -132.508,  62.556)  (  8.943, -132.491,  62.562)  ( 0.19,  0.01,  0.01)
    bond    ( 30.933, -138.777,  61.028)  ( 30.949, -138.763,  61.031)  ( 0.05,  0.01,  0.01)
    angle   (-18.060,  -2.085, -16.096)  (-18.059,  -2.083, -16.093)  ( 0.01,  0.13,  0.02)
    torsion ( -2.188,   6.410,  20.016)  ( -2.188,   6.410,  20.016)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.759,   1.944,  -2.393)  ( -1.758,   1.944,  -2.393)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (149.177, -196.452, -383.854)  (149.215, -196.430, -383.757)  ( 0.03,  0.01,  0.03)
    bond    ( 78.126, 114.902, -393.965)  ( 78.154, 114.917, -393.878)  ( 0.04,  0.01,  0.02)
    angle   ( 98.473, -242.933,  -3.874)  ( 98.482, -242.926,  -3.865)  ( 0.01,  0.00,  0.23)
    torsion (-17.678, -65.927,  16.403)  (-17.677, -65.926,  16.404)  ( 0.00,  0.00,  0.00)
    vdw     (-10.983,  -1.250,  -2.307)  (-10.983,  -1.250,  -2.307)  ( 0.00,  0.00,  0.00)
    electro (  1.239,  -1.245,  -0.111)  (  1.239,  -1.245,  -0.111)  ( 0.00,  0.00,  0.00)
15       ( 54.011,  11.046,   3.330)  ( 54.015,  11.071,   3.334)  ( 0.01,  0.23,  0.12)
    bond    (  0.427,  11.115,   3.347)  (  0.427,  11.140,   3.349)  ( 0.00,  0.23,  0.07)
    angle   ( 47.344,  -0.958,  -2.857)  ( 47.348,  -0.958,  -2.855)  ( 0.01,  0.02,  0.07)
    torsion (  3.463,  -0.198,   0.216)  (  3.463,  -0.198,   0.216)  ( 0.00,  0.00,  0.00)
    vdw     (  2.776,   1.086,   2.624)  (  2.777,   1.086,   2.624)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-38.793,  87.266, 124.112)  (-38.788,  87.268, 124.173)  ( 0.01,  0.00,  0.05)
    bond    (-23.671, -14.717, 113.273)  (-23.669, -14.716, 113.334)  ( 0.01,  0.00,  0.05)
    angle   (-29.611,  71.263,   3.070)  (-29.608,  71.265,   3.070)  ( 0.01,  0.00,  0.00)
    torsion ( 19.803,  30.719,   8.124)  ( 19.803,  30.720,   8.125)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.557,  -0.500,  -0.202)  ( -4.557,  -0.500,  -0.202)  ( 0.00,  0.00,  0.00)
    electro ( -0.757,   0.500,  -0.153)  ( -0.757,   0.500,  -0.153)  ( 0.00,  0.00,  0.00)
17       (-125.018, 160.131, -83.546)  (-124.975, 160.170, -83.503)  ( 0.03,  0.02,  0.05)
    bond    (-131.449,  83.564, -63.177)  (-131.416,  83.592, -63.143)  ( 0.03,  0.03,  0.05)
    angle   (  8.025,  70.698, -17.007)  (  8.034,  70.708, -16.998)  ( 0.11,  0.01,  0.05)
    torsion ( -0.745,   6.167,  -3.535)  ( -0.745,   6.167,  -3.535)  ( 0.03,  0.01,  0.01)
    vdw     ( -0.849,  -0.298,   0.173)  ( -0.849,  -0.298,   0.173)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-93.822, -271.334,  65.336)  (-93.775, -271.287,  65.385)  ( 0.05,  0.02,  0.08)
    bond    ( -5.806, -112.325,   7.274)  ( -5.770, -112.289,   7.312)  ( 0.63,  0.03,  0.52)
    angle   (-83.027, -71.036,  27.950)  (-83.017, -71.025,  27.962)  ( 0.01,  0.02,  0.04)
    torsion ( -3.416, -86.985,  30.001)  ( -3.416, -86.985,  30.001)  ( 0.01,  0.00,  0.00)
    vdw     ( -1.572,  -0.988,   0.110)  ( -1.572,  -0.987,   0.110)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 48.536, -92.197, -62.998)  ( 48.585, -92.148, -62.949)  ( 0.10,  0.05,  0.08)
    bond    (  3.510,   0.952,  -4.414)  (  3.546,   0.988,  -4.377)  ( 1.03,  3.45,  0.83)
    angle   ( 50.607, -90.344, -54.175)  ( 50.619, -90.331, -54.163)  ( 0.02,  0.01,  0.02)
    torsion ( -4.961,  -2.567,  -0.636)  ( -4.961,  -2.567,  -0.636)  ( 0.01,  0.01,  0.02)
    vdw     ( -0.620,  -0.238,  -3.772)  ( -0.620,  -0.238,  -3.772)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (104.540,  46.209,  69.875)  (104.589,  46.257,  69.924)  ( 0.05,  0.10,  0.07)
    bond    ( 17.708,  15.746,  11.019)  ( 17.745,  15.782,  11.055)  ( 0.21,  0.23,  0.33)
    angle   ( 78.058,  33.218,  62.190)  ( 78.070,  33.230,  62.202)  ( 0.02,  0.04,  0.02)
    torsion (  6.126,  -5.883,  -3.243)  (  6.126,  -5.883,  -3.243)  ( 0.00,  0.01,  0.01)
    vdw     (  2.648,   3.128,  -0.090)  (  2.648,   3.128,  -0.090)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (146.340, 149.340, 151.508)  (146.366, 149.422, 151.549)  ( 0.02,  0.05,  0.03)
    bond    ( 40.147, 106.784,  65.656)  ( 40.166, 106.856,  65.689)  ( 0.05,  0.07,  0.05)
    angle   ( 96.179,  38.674,  82.359)  ( 96.185,  38.684,  82.366)  ( 0.01,  0.03,  0.01)
    torsion ( 15.474,   5.590,  -2.941)  ( 15.475,   5.590,  -2.940)  ( 0.01,  0.00,  0.02)
    vdw     ( -4.867,  -1.833,   6.314)  ( -4.867,  -1.833,   6.315)  ( 0.00,  0.00,  0.00)
    electro ( -0.594,   0.125,   0.119)  ( -0.594,   0.125,   0.119)  ( 0.00,  0.00,  0.00)
22       ( 15.183,  24.522,  -7.169)  ( 15.187,  24.532,  -7.148)  ( 0.03,  0.04,  0.30)
    bond    ( -0.141,   0.953,   1.628)  ( -0.140,   0.960,   1.649)  ( 0.00,  0.67,  1.27)
    angle   ( 20.638,  18.771,  -9.175)  ( 20.641,  18.773,  -9.175)  ( 0.01,  0.01,  0.01)
    torsion ( -8.277,   7.711,  -5.195)  ( -8.277,   7.711,  -5.195)  ( 0.00,  0.00,  0.00)
    vdw     (  2.962,  -2.913,   5.574)  (  2.963,  -2.912,   5.574)  ( 0.03,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-57.966, -332.953, -97.943)  (-57.948, -332.906, -97.921)  ( 0.03,  0.01,  0.02)
    bond    (-19.487, -259.679, -59.892)  (-19.470, -259.639, -59.873)  ( 0.08,  0.02,  0.03)
    angle   (-31.577, -68.046, -46.314)  (-31.575, -68.039, -46.312)  ( 0.00,  0.01,  0.00)
    torsion ( -9.292,  -1.338,   8.076)  ( -9.291,  -1.338,   8.077)  ( 0.01,  0.00,  0.01)
    vdw     (  2.011,  -4.005,   0.386)  (  2.011,  -4.005,   0.386)  ( 0.00,  0.00,  0.00)
    electro (  0.378,   0.115,  -0.199)  (  0.378,   0.115,  -0.199)  ( 0.00,  0.00,  0.00)
24       ( -2.131, -38.398,   2.049)  ( -2.118, -38.385,   2.057)  ( 0.63,  0.03,  0.42)
    bond    ( 15.002, -14.886,  10.387)  ( 15.013, -14.875,  10.392)  ( 0.07,  0.07,  0.05)
    angle   (-18.866, -26.610, -10.838)  (-18.864, -26.608, -10.835)  ( 0.01,  0.01,  0.03)
    torsion ( -0.221,   0.010,   0.333)  ( -0.221,   0.010,   0.333)  ( 0.00,  0.00,  0.00)
    vdw     (  1.955,   3.089,   2.167)  (  1.955,   3.089,   2.167)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-12.033,   6.785, -36.917)  (-12.023,   6.796, -36.903)  ( 0.09,  0.17,  0.04)
    bond    ( 10.819,  11.402, -12.976)  ( 10.827,  11.411, -12.965)  ( 0.07,  0.08,  0.09)
    angle   (-25.163,  -7.263, -27.403)  (-25.160,  -7.260, -27.400)  ( 0.01,  0.04,  0.01)
    torsion (  0.025,  -0.031,  -0.006)  (  0.025,  -0.031,  -0.006)  ( 0.00,  0.00,  0.00)
    vdw     (  2.285,   2.677,   3.468)  (  2.285,   2.677,   3.468)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-36.098,  11.663,   1.873)  (-36.092,  11.676,   1.889)  ( 0.02,  0.11,  0.85)
    bond    ( -7.469,  12.487,  14.722)  ( -7.466,  12.497,  14.736)  ( 0.05,  0.08,  0.10)
    angle   (-36.168,  -7.559, -11.915)  (-36.165,  -7.556, -11.913)  ( 0.01,  0.03,  0.02)
    torsion ( -0.050,   0.462,  -0.417)  ( -0.049,   0.462,  -0.417)  ( 0.00,  0.00,  0.00)
    vdw     (  7.588,   6.273,  -0.517)  (  7.588,   6.273,  -0.517)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (  4.724,  -8.350,  38.006)  (  4.739,  -8.336,  38.013)  ( 0.31,  0.17,  0.02)
    bond    ( 14.702, -14.220,   7.906)  ( 14.714, -14.208,   7.909)  ( 0.08,  0.08,  0.04)
    angle   (-10.743,   9.005,  36.160)  (-10.741,   9.007,  36.163)  ( 0.02,  0.02,  0.01)
    torsion ( -1.890,  -1.759,   0.357)  ( -1.890,  -1.759,   0.357)  ( 0.00,  0.00,  0.00)
    vdw     (  2.656,  -1.376,  -6.416)  (  2.656,  -1.376,  -6.416)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-43.166,   6.524,   6.966)  (-43.150,   6.535,   6.975)  ( 0.04,  0.16,  0.13)
    bond    (-16.447, -12.459, -11.230)  (-16.434, -12.451, -11.224)  ( 0.08,  0.06,  0.06)
    angle   (-29.289,  19.160,  21.622)  (-29.287,  19.162,  21.625)  ( 0.01,  0.01,  0.01)
    torsion ( -0.328,   1.908,  -1.636)  ( -0.328,   1.908,  -1.636)  ( 0.00,  0.00,  0.00)
    vdw     (  2.898,  -2.084,  -1.790)  (  2.898,  -2.084,  -1.790)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( -7.376,  39.607,  -0.249)  ( -7.366,  39.618,  -0.234)  ( 0.13,  0.03,  0.37)
    bond    (  8.732,  10.230, -12.436)  (  8.739,  10.238, -12.423)  ( 0.07,  0.08,  0.10)
    angle   (-18.082,  33.209,  14.652)  (-18.079,  33.212,  14.654)  ( 0.02,  0.01,  0.01)
    torsion (  1.576,  -0.176,   0.963)  (  1.576,  -0.176,   0.963)  ( 0.01,  0.00,  0.00)
    vdw     (  0.399,  -3.656,  -3.428)  (  0.399,  -3.656,  -3.428)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -1.209, 275.909,  23.531)  ( -1.203, 275.949,  23.536)  ( 0.47,  0.01,  0.02)
    bond    (-61.451, 258.293, -33.425)  (-61.448, 258.332, -33.423)  ( 0.01,  0.02,  0.01)
    angle   ( 35.883,  14.142,  43.329)  ( 35.884,  14.142,  43.330)  ( 0.00,  0.00,  0.00)
    torsion (  8.079,   1.013,  -7.023)  (  8.080,   1.013,  -7.022)  ( 0.01,  0.00,  0.01)
    vdw     ( 18.876,   2.662,  23.418)  ( 18.876,   2.662,  23.418)  ( 0.00,  0.00,  0.00)
    electro ( -2.595,  -0.201,  -2.767)  ( -2.595,  -0.201,  -2.767)  ( 0.00,  0.00,  0.00)
31       (-76.970,  39.488, -64.277)  (-76.965,  39.537, -64.260)  ( 0.01,  0.12,  0.03)
    bond    (  0.512,   2.123,   1.160)  (  0.515,   2.172,   1.174)  ( 0.14,  2.27,  1.22)
    angle   (-49.362,  40.654, -53.541)  (-49.360,  40.655, -53.539)  ( 0.00,  0.00,  0.00)
    torsion (-10.996,  -2.287,   9.050)  (-10.996,  -2.287,   9.050)  ( 0.00,  0.00,  0.00)
    vdw     (-19.550,  -1.292, -23.772)  (-19.550,  -1.292, -23.771)  ( 0.00,  0.00,  0.00)
    electro (  2.426,   0.290,   2.826)  (  2.426,   0.290,   2.826)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 16 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 17 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/phenyl-pyr.gpr
 # Expected        33.02476, found 33.024759&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-115.606,  21.731,   0.189)  (-115.542,  21.764,   0.261)  ( 0.06,  0.15,  1.36)
    bond    (-155.155,  29.198,   0.313)  (-155.106,  29.225,   0.374)  ( 0.03,  0.09,  1.92)
    angle   ( 44.402,  -8.380,  -0.123)  ( 44.417,  -8.375,  -0.113)  ( 0.03,  0.06,  0.12)
    torsion (  0.002,   0.003,  -0.004)  (  0.002,   0.005,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.855,   0.909,   0.003)  ( -4.855,   0.909,   0.003)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( 89.847,  70.746, 133.098)  ( 89.941,  70.769, 133.151)  ( 0.10,  0.03,  0.04)
    bond    (124.343,  54.798, 117.293)  (124.423,  54.815, 117.335)  ( 0.06,  0.03,  0.04)
    angle   (-29.725,  15.057,  14.214)  (-29.711,  15.062,  14.224)  ( 0.05,  0.03,  0.07)
    torsion ( -0.151,  -0.795,   0.529)  ( -0.151,  -0.793,   0.530)  ( 0.00,  0.15,  0.05)
    vdw     ( -4.621,   1.686,   1.061)  ( -4.621,   1.686,   1.061)  ( 0.00,  0.00,  0.02)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-39.303, -178.607, -284.506)  (-39.217, -178.576, -284.450)  ( 0.22,  0.02,  0.02)
    bond    (-12.756, -187.831, -286.760)  (-12.680, -187.806, -286.714)  ( 0.59,  0.01,  0.02)
    angle   (-31.273,   4.375,   0.135)  (-31.263,   4.379,   0.144)  ( 0.03,  0.11,  0.12)
    torsion (  0.549,   2.943,  -1.961)  (  0.549,   2.945,  -1.961)  ( 0.00,  0.06,  0.04)
    vdw     (  4.177,   1.905,   4.081)  (  4.177,   1.905,   4.081)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-334.483,  62.794,   0.690)  (-334.399,  62.830,   0.760)  ( 0.03,  0.06,  4.82)
    bond    (-352.029,  66.166,   0.717)  (-351.957,  66.195,   0.779)  ( 0.02,  0.04,  4.44)
    angle   ( 14.375,  -2.725,  -0.053)  ( 14.387,  -2.720,  -0.046)  ( 0.08,  0.18,  0.04)
    torsion ( -0.006,  -0.053,   0.030)  ( -0.006,  -0.051,   0.031)  ( 0.00,  0.01,  0.00)
    vdw     (  3.176,  -0.594,  -0.003)  (  3.177,  -0.594,  -0.003)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 27.062, 180.458, 283.559)  ( 27.153, 180.485, 283.614)  ( 0.34,  0.01,  0.02)
    bond    ( 55.263, 179.325, 285.907)  ( 55.344, 179.345, 285.953)  ( 0.15,  0.01,  0.02)
    angle   (-30.880,   7.204,  -0.115)  (-30.869,   7.209,  -0.105)  ( 0.03,  0.07,  0.11)
    torsion ( -0.520,  -2.785,   1.852)  ( -0.520,  -2.783,   1.852)  ( 0.00,  0.06,  0.04)
    vdw     (  3.199,  -3.286,  -4.086)  (  3.199,  -3.286,  -4.086)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 58.966, -99.032, -133.673)  ( 59.053, -99.002, -133.621)  ( 0.15,  0.03,  0.04)
    bond    ( 96.824, -96.564, -117.957)  ( 96.897, -96.541, -117.916)  ( 0.08,  0.02,  0.04)
    angle   (-33.075,  -3.298, -14.167)  (-33.061,  -3.294, -14.157)  ( 0.04,  0.14,  0.07)
    torsion (  0.134,   0.729,  -0.489)  (  0.134,   0.731,  -0.488)  ( 0.00,  0.14,  0.04)
    vdw     ( -4.917,   0.102,  -1.060)  ( -4.917,   0.102,  -1.060)  ( 0.00,  0.00,  0.02)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (102.265, -18.297,  -0.641)  (102.350, -18.225,  -0.611)  ( 0.08,  0.39,  1.91)
    bond    (101.062, -18.055,  -0.655)  (101.135, -17.991,  -0.631)  ( 0.07,  0.35,  1.52)
    angle   (  0.148,  -0.048,   0.023)  (  0.161,  -0.040,   0.028)  ( 0.18,  0.04,  0.01)
    torsion ( -0.000,  -0.002,   0.001)  ( -0.000,  -0.002,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     (  1.055,  -0.192,  -0.010)  (  1.055,  -0.192,  -0.010)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-138.245, -13.256,  23.816)  (-138.149, -13.201,  23.839)  ( 0.07,  0.42,  0.10)
    bond    (-140.778,   3.720,  13.499)  (-140.696,   3.765,  13.516)  ( 0.06,  1.22,  0.13)
    angle   (  6.594, -24.351,  13.745)  (  6.606, -24.342,  13.748)  ( 0.19,  0.04,  0.02)
    torsion (  0.047,   0.249,   0.418)  (  0.047,   0.250,   0.420)  ( 0.00,  0.02,  0.09)
    vdw     ( -3.945,   7.624,  -4.160)  ( -3.945,   7.625,  -4.160)  ( 0.00,  0.00,  0.00)
    electro ( -0.162,  -0.498,   0.315)  ( -0.162,  -0.498,   0.315)  ( 0.00,  0.00,  0.00)
 9       (300.048, -16.667, -23.758)  (300.136, -16.607, -23.737)  ( 0.03,  0.36,  0.09)
    bond    (133.911, -45.712,  12.147)  (133.988, -45.663,  12.163)  ( 0.06,  0.11,  0.13)
    angle   (160.936,  23.671, -32.124)  (160.948,  23.681, -32.121)  ( 0.01,  0.04,  0.01)
    torsion ( -0.001,  -0.006,  -0.011)  ( -0.001,  -0.006,  -0.009)  ( 0.00,  0.00,  0.00)
    vdw     (  5.190,   5.964,  -4.116)  (  5.190,   5.964,  -4.116)  ( 0.00,  0.00,  0.00)
    electro (  0.012,  -0.584,   0.346)  (  0.012,  -0.584,   0.346)  ( 0.00,  0.00,  0.00)
10       (-233.679,  43.776,   0.095)  (-233.634,  43.837,   0.119)  ( 0.02,  0.14,  0.23)
    bond    (-36.748,   6.966,  -0.083)  (-36.717,   7.023,  -0.062)  ( 0.08,  0.82,  0.18)
    angle   (-198.893,  37.174,   0.174)  (-198.881,  37.176,   0.175)  ( 0.01,  0.01,  0.02)
    torsion (  0.001,   0.004,   0.006)  (  0.001,   0.004,   0.007)  ( 0.00,  0.00,  0.00)
    vdw     (  1.962,  -0.367,  -0.001)  (  1.962,  -0.367,  -0.001)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (284.079, -93.077,  23.421)  (284.175, -93.025,  23.443)  ( 0.03,  0.06,  0.09)
    bond    (139.738,  -5.983, -12.161)  (139.823,  -5.943, -12.145)  ( 0.06,  0.68,  0.13)
    angle   (141.433, -80.187,  31.834)  (141.444, -80.176,  31.838)  ( 0.01,  0.01,  0.01)
    torsion ( -0.002,  -0.009,  -0.016)  ( -0.002,  -0.009,  -0.014)  ( 0.00,  0.00,  0.00)
    vdw     (  2.688,  -7.437,   4.110)  (  2.688,  -7.437,   4.110)  ( 0.00,  0.00,  0.00)
    electro (  0.221,   0.540,  -0.346)  (  0.221,   0.540,  -0.346)  ( 0.00,  0.00,  0.00)
12       (-121.916,  60.833, -23.088)  (-121.828,  60.895, -23.065)  ( 0.07,  0.10,  0.10)
    bond    (-130.580,  46.096, -12.840)  (-130.504,  46.148, -12.823)  ( 0.06,  0.11,  0.14)
    angle   ( 15.105,  20.142, -13.695)  ( 15.117,  20.151, -13.692)  ( 0.08,  0.05,  0.02)
    torsion ( -0.045,  -0.242,  -0.407)  ( -0.045,  -0.241,  -0.405)  ( 0.00,  0.02,  0.09)
    vdw     ( -6.424,  -5.686,   4.170)  ( -6.424,  -5.686,   4.170)  ( 0.00,  0.00,  0.00)
    electro (  0.029,   0.523,  -0.315)  (  0.029,   0.523,  -0.315)  ( 0.00,  0.00,  0.00)
13       ( -9.181,  12.647,  -6.593)  ( -9.167,  12.661,  -6.586)  ( 0.15,  0.11,  0.11)
    bond    (  4.051,   4.454,  -3.122)  (  4.061,   4.467,  -3.116)  ( 0.26,  0.28,  0.20)
    angle   (-11.210,   7.819,  -3.395)  (-11.207,   7.821,  -3.395)  ( 0.03,  0.02,  0.01)
    torsion ( -0.006,  -0.030,  -0.051)  ( -0.006,  -0.030,  -0.050)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.199,   0.132,   0.044)  ( -1.199,   0.132,   0.044)  ( 0.01,  0.00,  0.00)
    electro ( -0.817,   0.271,  -0.069)  ( -0.817,   0.271,  -0.069)  ( 0.00,  0.00,  0.00)
14       (-59.068,  -7.560,  11.128)  (-59.059,  -7.540,  11.135)  ( 0.02,  0.26,  0.06)
    bond    ( -5.451,  10.771,  -5.813)  ( -5.446,  10.790,  -5.808)  ( 0.09,  0.17,  0.09)
    angle   (-55.786, -18.776,  17.425)  (-55.782, -18.776,  17.426)  ( 0.01,  0.00,  0.00)
    torsion (  0.002,   0.013,   0.021)  (  0.002,   0.013,   0.022)  ( 0.00,  0.00,  0.00)
    vdw     (  1.349,   0.424,  -0.408)  (  1.349,   0.424,  -0.408)  ( 0.01,  0.00,  0.00)
    electro (  0.817,   0.009,  -0.097)  (  0.817,   0.009,  -0.097)  ( 0.00,  0.00,  0.00)
15       ( 75.845,  52.413, 108.108)  ( 75.894,  52.460, 108.157)  ( 0.06,  0.09,  0.05)
    bond    ( 35.609,  26.240,  49.457)  ( 35.644,  26.277,  49.494)  ( 0.10,  0.14,  0.07)
    angle   ( 39.337,  26.345,  57.041)  ( 39.351,  26.356,  57.052)  ( 0.03,  0.04,  0.02)
    torsion ( -0.132,  -0.717,   0.478)  ( -0.132,  -0.716,   0.478)  ( 0.00,  0.02,  0.01)
    vdw     (  1.031,   0.544,   1.132)  (  1.031,   0.544,   1.132)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 44.268,  -8.266,   0.021)  ( 44.289,  -8.263,   0.025)  ( 0.05,  0.03,  0.01)
    bond    ( 44.465,  -8.332,  -0.027)  ( 44.486,  -8.331,  -0.027)  ( 0.05,  0.01,  0.00)
    angle   (  0.006,   0.030,   0.046)  (  0.006,   0.032,   0.049)  ( 0.00,  0.00,  0.02)
    torsion ( -0.001,  -0.003,   0.002)  ( -0.000,  -0.003,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.203,   0.038,   0.001)  ( -0.203,   0.038,   0.001)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 10.696, -27.000, -37.989)  ( 10.705, -26.993, -37.977)  ( 0.08,  0.03,  0.03)
    bond    ( 20.382, -27.254, -35.045)  ( 20.386, -27.248, -35.034)  ( 0.02,  0.02,  0.03)
    angle   (  9.567,   1.260,   4.588)  (  9.572,   1.261,   4.589)  ( 0.05,  0.01,  0.02)
    torsion ( -0.026,  -0.136,   0.091)  ( -0.026,  -0.136,   0.091)  ( 0.00,  0.00,  0.00)
    vdw     (-19.227,  -0.870,  -7.623)  (-19.226,  -0.870,  -7.623)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       ( 51.486, -76.443, -107.613)  ( 51.534, -76.395, -107.565)  ( 0.09,  0.06,  0.05)
    bond    ( 23.428, -37.115, -49.146)  ( 23.463, -37.078, -49.109)  ( 0.15,  0.10,  0.08)
    angle   ( 27.171, -39.113, -56.891)  ( 27.184, -39.102, -56.879)  ( 0.05,  0.03,  0.02)
    torsion (  0.125,   0.664,  -0.443)  (  0.125,   0.664,  -0.443)  ( 0.00,  0.02,  0.01)
    vdw     (  0.762,  -0.880,  -1.134)  (  0.762,  -0.880,  -1.134)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 19.878,  21.384,  38.095)  ( 19.890,  21.388,  38.107)  ( 0.06,  0.02,  0.03)
    bond    ( 29.019,  18.087,  35.138)  ( 29.026,  18.090,  35.149)  ( 0.03,  0.02,  0.03)
    angle   (  8.429,  -4.622,  -4.586)  (  8.432,  -4.621,  -4.585)  ( 0.04,  0.02,  0.02)
    torsion (  0.025,   0.137,  -0.092)  (  0.025,   0.138,  -0.092)  ( 0.00,  0.00,  0.00)
    vdw     (-17.594,   7.782,   7.636)  (-17.594,   7.782,   7.636)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-12.940,  -8.534,   6.583)  (-12.932,  -8.514,   6.590)  ( 0.06,  0.24,  0.11)
    bond    (  2.196,  -5.711,   3.136)  (  2.199,  -5.691,   3.142)  ( 0.14,  0.35,  0.19)
    angle   (-13.116,  -3.204,   3.373)  (-13.111,  -3.203,   3.373)  ( 0.04,  0.01,  0.01)
    torsion (  0.005,   0.027,   0.046)  (  0.005,   0.027,   0.046)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.166,   0.310,  -0.042)  ( -1.165,   0.310,  -0.042)  ( 0.01,  0.00,  0.00)
    electro ( -0.859,   0.043,   0.071)  ( -0.859,   0.043,   0.071)  ( 0.00,  0.00,  0.00)
21       (-52.261,  28.562, -11.169)  (-52.245,  28.575, -11.163)  ( 0.03,  0.05,  0.06)
    bond    ( -8.828,  -7.962,   5.713)  ( -8.815,  -7.951,   5.718)  ( 0.15,  0.13,  0.10)
    angle   (-45.295,  37.720, -17.368)  (-45.293,  37.722, -17.368)  ( 0.01,  0.01,  0.00)
    torsion ( -0.002,  -0.009,  -0.016)  ( -0.002,  -0.009,  -0.015)  ( 0.00,  0.00,  0.00)
    vdw     (  1.105,  -0.883,   0.406)  (  1.105,  -0.883,   0.406)  ( 0.01,  0.00,  0.00)
    electro (  0.759,  -0.304,   0.096)  (  0.759,  -0.304,   0.096)  ( 0.00,  0.00,  0.00)
22       ( 23.842, -32.899, -10.256)  ( 23.851, -32.883, -10.246)  ( 0.04,  0.05,  0.09)
    bond    ( 14.454, -21.636,  14.894)  ( 14.460, -21.622,  14.901)  ( 0.04,  0.07,  0.05)
    angle   (  9.873, -11.881, -26.823)  (  9.876, -11.879, -26.820)  ( 0.03,  0.01,  0.01)
    torsion ( -0.023,  -0.003,   0.019)  ( -0.023,  -0.003,   0.019)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.462,   0.621,   1.654)  ( -0.462,   0.621,   1.654)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 27.310,   2.406, -28.532)  ( 27.324,   2.420, -28.525)  ( 0.05,  0.58,  0.02)
    bond    ( 19.888,  19.685, -11.092)  ( 19.900,  19.697, -11.088)  ( 0.06,  0.06,  0.03)
    angle   (  7.749, -17.983, -18.033)  (  7.752, -17.981, -18.030)  ( 0.03,  0.01,  0.02)
    torsion (  0.020,  -0.022,  -0.003)  (  0.020,  -0.022,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.348,   0.726,   0.595)  ( -0.348,   0.726,   0.595)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-28.789,   9.268,   5.643)  (-28.777,   9.278,   5.657)  ( 0.04,  0.10,  0.25)
    bond    (-16.080,  13.930,  19.010)  (-16.071,  13.937,  19.022)  ( 0.05,  0.05,  0.06)
    angle   (-34.103,  -6.913, -23.751)  (-34.101,  -6.910, -23.749)  ( 0.01,  0.04,  0.01)
    torsion (  0.003,   0.026,  -0.016)  (  0.003,   0.026,  -0.016)  ( 0.00,  0.00,  0.00)
    vdw     ( 21.391,   2.225,  10.400)  ( 21.392,   2.225,  10.400)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 34.180,  22.216,   9.880)  ( 34.196,  22.225,   9.890)  ( 0.05,  0.04,  0.10)
    bond    ( 21.393,  15.082, -15.096)  ( 21.407,  15.089, -15.089)  ( 0.06,  0.05,  0.05)
    angle   ( 13.456,   7.526,  26.619)  ( 13.458,   7.528,  26.622)  ( 0.02,  0.04,  0.01)
    torsion ( -0.019,   0.010,  -0.017)  ( -0.019,   0.010,  -0.017)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.650,  -0.402,  -1.626)  ( -0.650,  -0.402,  -1.626)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-30.392,   1.819,  -5.822)  (-30.376,   1.824,  -5.808)  ( 0.05,  0.29,  0.24)
    bond    (-20.249,  -7.300, -19.136)  (-20.236,  -7.298, -19.124)  ( 0.07,  0.02,  0.06)
    angle   (-29.255,  18.971,  23.710)  (-29.253,  18.975,  23.712)  ( 0.01,  0.02,  0.01)
    torsion ( -0.006,  -0.023,   0.014)  ( -0.006,  -0.023,   0.014)  ( 0.00,  0.00,  0.00)
    vdw     ( 19.117,  -9.830, -10.412)  ( 19.118,  -9.830, -10.411)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( 24.827, -12.209,  28.600)  ( 24.834, -12.188,  28.607)  ( 0.03,  0.17,  0.02)
    bond    ( 11.583, -25.719,  11.135)  ( 11.587, -25.699,  11.138)  ( 0.03,  0.08,  0.03)
    angle   ( 13.816,  14.065,  18.075)  ( 13.820,  14.066,  18.078)  ( 0.02,  0.01,  0.02)
    torsion (  0.024,   0.012,   0.003)  (  0.024,   0.012,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.597,  -0.567,  -0.612)  ( -0.597,  -0.567,  -0.612)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 17 # gradients do not validate&apos; passed</Info><Info file="ffghemical.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffghemical.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffghemical.cpp" line="86">check &apos;not ok 18 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/viagra.gpr
 # Expected      2603.52127, found 2603.521266&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (1368.937, 1194.939, 1994.596)  (1368.988, 1194.963, 1994.646)  ( 0.00,  0.00,  0.00)
    bond    (1461.461, 1275.601, 2025.255)  (1461.505, 1275.614, 2025.297)  ( 0.00,  0.00,  0.00)
    angle   (-94.800, -75.151, -31.579)  (-94.792, -75.141, -31.571)  ( 0.01,  0.01,  0.03)
    torsion (  2.079,  -6.467,   0.470)  (  2.079,  -6.467,   0.470)  ( 0.00,  0.01,  0.00)
    vdw     (  0.197,   0.957,   0.451)  (  0.197,   0.957,   0.451)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-181.234, 106.019, 179.066)  (-181.181, 106.066, 179.115)  ( 0.03,  0.04,  0.03)
    bond    (-148.144,  60.423, 102.210)  (-148.102,  60.459, 102.246)  ( 0.03,  0.06,  0.04)
    angle   (-28.350,  45.228,  69.391)  (-28.340,  45.238,  69.404)  ( 0.04,  0.02,  0.02)
    torsion ( -1.446,   1.438,   1.670)  ( -1.446,   1.438,   1.670)  ( 0.02,  0.03,  0.02)
    vdw     ( -3.294,  -1.069,   5.795)  ( -3.294,  -1.069,   5.795)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-132.236, -161.559, 123.508)  (-132.188, -161.511, 123.559)  ( 0.04,  0.03,  0.04)
    bond    (-94.820, -119.067, 105.652)  (-94.784, -119.030, 105.693)  ( 0.04,  0.03,  0.04)
    angle   (-31.282, -40.683,  10.602)  (-31.271, -40.672,  10.611)  ( 0.03,  0.03,  0.09)
    torsion ( -1.488,  -1.816,   0.312)  ( -1.488,  -1.815,   0.312)  ( 0.03,  0.03,  0.01)
    vdw     ( -4.645,   0.006,   6.942)  ( -4.645,   0.006,   6.942)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-15.554, 116.238,  13.435)  (-15.508, 116.258,  13.484)  ( 0.29,  0.02,  0.36)
    bond    (-28.066,  85.668,  -9.634)  (-28.027,  85.679,  -9.591)  ( 0.14,  0.01,  0.44)
    angle   ( 14.028,  26.175,  23.400)  ( 14.034,  26.182,  23.406)  ( 0.04,  0.03,  0.03)
    torsion ( -1.256,   4.948,   0.115)  ( -1.256,   4.948,   0.116)  ( 0.02,  0.01,  0.00)
    vdw     ( -0.259,  -0.552,  -0.447)  ( -0.259,  -0.552,  -0.447)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (175.392, -87.040, -143.299)  (175.445, -86.994, -143.250)  ( 0.03,  0.05,  0.03)
    bond    (141.110, -61.763, -102.053)  (141.152, -61.727, -102.017)  ( 0.03,  0.06,  0.04)
    angle   ( 26.086, -27.000, -36.336)  ( 26.097, -26.991, -36.325)  ( 0.04,  0.03,  0.03)
    torsion (  0.894,  -1.212,  -1.769)  (  0.894,  -1.211,  -1.768)  ( 0.03,  0.04,  0.02)
    vdw     (  7.302,   2.936,  -3.141)  (  7.302,   2.936,  -3.140)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (156.932, 190.018, -117.322)  (156.980, 190.067, -117.270)  ( 0.03,  0.03,  0.04)
    bond    ( 96.212, 121.860, -105.322)  ( 96.248, 121.897, -105.281)  ( 0.04,  0.03,  0.04)
    angle   ( 52.701,  64.745,  -8.770)  ( 52.712,  64.757,  -8.760)  ( 0.02,  0.02,  0.11)
    torsion (  1.075,   2.443,  -0.727)  (  1.075,   2.444,  -0.727)  ( 0.04,  0.02,  0.02)
    vdw     (  6.944,   0.969,  -2.502)  (  6.944,   0.969,  -2.502)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-132.597, -119.030, -186.681)  (-132.547, -118.979, -186.629)  ( 0.04,  0.04,  0.03)
    bond    (-85.996, -97.284, -126.688)  (-85.958, -97.245, -126.649)  ( 0.04,  0.04,  0.03)
    angle   (-41.435, -21.293, -53.864)  (-41.424, -21.281, -53.852)  ( 0.03,  0.05,  0.02)
    torsion ( -0.017,   0.011,   0.003)  ( -0.017,   0.011,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.149,  -0.464,  -6.131)  ( -5.149,  -0.464,  -6.131)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (1573.722, -2052.011, -2187.358)  (1573.770, -2051.951, -2187.303)  ( 0.00,  0.00,  0.00)
    bond    (1548.366, -2060.217, -2183.958)  (1548.400, -2060.170, -2183.914)  ( 0.00,  0.00,  0.00)
    angle   ( 19.787,   7.107,  -6.660)  ( 19.801,   7.120,  -6.649)  ( 0.07,  0.18,  0.17)
    torsion ( -1.000,   2.025,  -1.521)  ( -1.000,   2.025,  -1.521)  ( 0.00,  0.00,  0.02)
    vdw     (  2.057,   1.304,   5.173)  (  2.058,   1.304,   5.173)  ( 0.01,  0.01,  0.00)
    electro (  4.512,  -2.230,  -0.392)  (  4.512,  -2.230,  -0.392)  ( 0.00,  0.00,  0.00)
 9       ( -7.875, -41.423, -35.450)  ( -7.869, -41.417, -35.430)  ( 0.08,  0.02,  0.06)
    bond    (  4.870,   5.245, -14.381)  (  4.872,   5.247, -14.361)  ( 0.05,  0.05,  0.14)
    angle   (-15.868, -48.162, -22.980)  (-15.864, -48.158, -22.979)  ( 0.02,  0.01,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.896,   1.038,   1.115)  (  3.896,   1.038,   1.116)  ( 0.00,  0.00,  0.00)
    electro ( -0.772,   0.456,   0.795)  ( -0.772,   0.456,   0.795)  ( 0.00,  0.00,  0.00)
10       ( 27.480, -14.236, -46.061)  ( 27.485, -14.211, -46.057)  ( 0.02,  0.17,  0.01)
    bond    (  1.010, -10.223,   1.585)  (  1.011, -10.199,   1.586)  ( 0.03,  0.24,  0.04)
    angle   ( 30.378,  -4.575, -48.799)  ( 30.382,  -4.575, -48.795)  ( 0.01,  0.00,  0.01)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.964,   0.392,   1.744)  ( -1.964,   0.392,   1.744)  ( 0.01,  0.00,  0.01)
    electro ( -1.944,   0.171,  -0.592)  ( -1.944,   0.171,  -0.592)  ( 0.00,  0.00,  0.00)
11       (-2877.076, 780.142, 282.301)  (-2877.009, 780.239, 282.319)  ( 0.00,  0.01,  0.01)
    bond    (-2944.764, 766.776, 249.933)  (-2944.709, 766.863, 249.945)  ( 0.00,  0.01,  0.01)
    angle   ( 71.107,  12.851,  27.872)  ( 71.119,  12.861,  27.874)  ( 0.02,  0.07,  0.01)
    torsion (  0.047,  -0.634,   2.789)  (  0.047,  -0.634,   2.791)  ( 0.00,  0.01,  0.08)
    vdw     ( -3.467,   1.149,   1.708)  ( -3.467,   1.149,   1.708)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-70.814, -46.331, -11.268)  (-70.728, -46.249, -11.260)  ( 0.12,  0.18,  0.07)
    bond    (-73.273, -87.425, -19.694)  (-73.200, -87.355, -19.690)  ( 0.10,  0.08,  0.02)
    angle   (  8.092,  43.087,  10.723)  (  8.105,  43.099,  10.723)  ( 0.15,  0.03,  0.01)
    torsion ( -0.013,   0.501,  -2.331)  ( -0.013,   0.501,  -2.328)  ( 0.00,  0.01,  0.13)
    vdw     ( -4.466,  -4.108,  -0.908)  ( -4.466,  -4.108,  -0.908)  ( 0.00,  0.00,  0.00)
    electro ( -1.154,   1.614,   0.942)  ( -1.154,   1.614,   0.942)  ( 0.00,  0.00,  0.00)
13       (102.858, -167.105, -50.801)  (102.960, -167.036, -50.793)  ( 0.10,  0.04,  0.02)
    bond    (101.082, -18.155,  -7.464)  (101.171, -18.100,  -7.460)  ( 0.09,  0.30,  0.06)
    angle   ( 10.732, -148.703, -38.696)  ( 10.745, -148.689, -38.695)  ( 0.12,  0.01,  0.00)
    torsion ( -0.027,   0.546,  -2.011)  ( -0.027,   0.546,  -2.008)  ( 0.00,  0.01,  0.15)
    vdw     ( -9.011,  -1.086,  -3.323)  ( -9.011,  -1.086,  -3.323)  ( 0.00,  0.03,  0.00)
    electro (  0.082,   0.294,   0.693)  (  0.082,   0.294,   0.693)  ( 0.00,  0.00,  0.00)
14       (-340.747, 243.453, 103.458)  (-340.666, 243.554, 103.468)  ( 0.02,  0.04,  0.01)
    bond    (-242.685, 169.679,  51.566)  (-242.620, 169.756,  51.571)  ( 0.03,  0.05,  0.01)
    angle   (-90.118,  80.283,  38.870)  (-90.102,  80.306,  38.871)  ( 0.02,  0.03,  0.00)
    torsion (  0.878,  -3.052,  21.109)  (  0.878,  -3.052,  21.112)  ( 0.00,  0.01,  0.02)
    vdw     ( -8.822,  -3.456,  -8.087)  ( -8.822,  -3.456,  -8.087)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-72.508, -133.206, -47.977)  (-72.415, -133.118, -47.966)  ( 0.13,  0.07,  0.02)
    bond    (-57.772, -173.544, -48.927)  (-57.694, -173.468, -48.921)  ( 0.14,  0.04,  0.01)
    angle   (-12.260,  33.289,  10.647)  (-12.246,  33.300,  10.648)  ( 0.12,  0.03,  0.01)
    torsion ( -0.061,   1.973,  -7.707)  ( -0.061,   1.974,  -7.705)  ( 0.00,  0.01,  0.04)
    vdw     ( -2.415,   5.076,  -1.989)  ( -2.415,   5.076,  -1.989)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 35.175,  96.406,  32.146)  ( 35.275,  96.474,  32.155)  ( 0.28,  0.07,  0.03)
    bond    (107.267,  64.420,  20.261)  (107.355,  64.475,  20.266)  ( 0.08,  0.09,  0.02)
    angle   (-66.999,  27.788,   6.767)  (-66.988,  27.800,   6.768)  ( 0.02,  0.04,  0.01)
    torsion (  0.086,  -0.719,   3.121)  (  0.086,  -0.718,   3.124)  ( 0.00,  0.01,  0.10)
    vdw     ( -3.559,   5.821,   1.621)  ( -3.559,   5.821,   1.621)  ( 0.00,  0.00,  0.00)
    electro ( -1.620,  -0.904,   0.376)  ( -1.620,  -0.904,   0.376)  ( 0.00,  0.00,  0.00)
17       ( 72.201, -40.896, -126.499)  ( 72.235, -40.858, -126.494)  ( 0.05,  0.09,  0.00)
    bond    ( 76.533,  48.205,  -2.919)  ( 76.562,  48.230,  -2.920)  ( 0.04,  0.05,  0.01)
    angle   ( 44.783,  15.169,  -6.917)  ( 44.787,  15.180,  -6.916)  ( 0.01,  0.07,  0.02)
    torsion ( -4.190,  -0.869, -11.772)  ( -4.190,  -0.869, -11.770)  ( 0.00,  0.01,  0.02)
    vdw     (-44.924, -103.401, -104.890)  (-44.924, -103.399, -104.888)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (119.879, -56.965, -193.631)  (119.923, -56.919, -193.582)  ( 0.04,  0.08,  0.03)
    bond    ( 90.494, -62.887, -134.670)  ( 90.528, -62.851, -134.631)  ( 0.04,  0.06,  0.03)
    angle   (  7.958,   4.349, -58.658)  (  7.967,   4.359, -58.648)  ( 0.11,  0.23,  0.02)
    torsion (  6.994,   0.785,  -1.421)  (  6.994,   0.785,  -1.420)  ( 0.01,  0.02,  0.05)
    vdw     ( 14.433,   0.788,   1.118)  ( 14.434,   0.788,   1.118)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-28.305, -137.518, 213.514)  (-28.257, -137.469, 213.564)  ( 0.17,  0.04,  0.02)
    bond    ( -2.959, -76.425, 133.671)  ( -2.923, -76.388, 133.709)  ( 1.23,  0.05,  0.03)
    angle   (-21.380, -58.465,  80.090)  (-21.369, -58.454,  80.102)  ( 0.05,  0.02,  0.02)
    torsion ( -6.308,  -1.853,  -1.783)  ( -6.308,  -1.852,  -1.783)  ( 0.01,  0.02,  0.01)
    vdw     (  2.343,  -0.775,   1.536)  (  2.343,  -0.775,   1.536)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (207.477, -466.150,  80.098)  (207.553, -466.061,  80.109)  ( 0.04,  0.02,  0.01)
    bond    (182.230, -600.186,  98.639)  (182.294, -600.111,  98.647)  ( 0.04,  0.01,  0.01)
    angle   ( 30.140, 138.056, -17.107)  ( 30.152, 138.069, -17.105)  ( 0.04,  0.01,  0.01)
    torsion ( -1.300,   0.946,   0.552)  ( -1.300,   0.946,   0.554)  ( 0.03,  0.01,  0.12)
    vdw     ( -3.593,  -4.966,  -1.987)  ( -3.593,  -4.966,  -1.987)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (265.038, 1019.508,  42.098)  (265.079, 1019.588,  42.105)  ( 0.02,  0.01,  0.02)
    bond    (243.258, 971.230,  40.076)  (243.286, 971.307,  40.079)  ( 0.01,  0.01,  0.01)
    angle   ( 14.169,  42.623,   0.148)  ( 14.181,  42.625,   0.150)  ( 0.08,  0.01,  0.03)
    torsion ( -1.329,   0.222,   3.722)  ( -1.329,   0.222,   3.723)  ( 0.02,  0.00,  0.04)
    vdw     (  8.941,   5.434,  -1.848)  (  8.941,   5.434,  -1.848)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-402.138, -170.638, -141.037)  (-402.051, -170.537, -141.020)  ( 0.02,  0.06,  0.01)
    bond    (-503.192, -178.190, -182.315)  (-503.117, -178.102, -182.302)  ( 0.02,  0.05,  0.01)
    angle   (102.277,   0.774,  39.469)  (102.288,   0.786,  39.470)  ( 0.01,  0.93,  0.00)
    torsion ( -0.534,   0.081,   1.258)  ( -0.533,   0.081,   1.261)  ( 0.02,  0.00,  0.24)
    vdw     ( -0.689,   6.697,   0.550)  ( -0.689,   6.697,   0.550)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (266.165, -645.582, 142.771)  (266.246, -645.473, 142.789)  ( 0.03,  0.02,  0.01)
    bond    (398.592, -719.663, 195.944)  (398.659, -719.565, 195.956)  ( 0.02,  0.01,  0.01)
    angle   (-135.752,  68.646, -51.584)  (-135.740,  68.656, -51.583)  ( 0.01,  0.01,  0.00)
    torsion (  0.753,  -0.118,  -2.003)  (  0.754,  -0.118,  -2.000)  ( 0.04,  0.00,  0.18)
    vdw     (  2.572,   5.553,   0.415)  (  2.572,   5.553,   0.415)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-80.612, 704.462, -74.470)  (-80.548, 704.554, -74.454)  ( 0.08,  0.01,  0.02)
    bond    ( 93.805, 555.868,   4.190)  ( 93.859, 555.946,   4.203)  ( 0.06,  0.01,  0.31)
    angle   (-173.921, 150.290, -79.824)  (-173.912, 150.303, -79.823)  ( 0.01,  0.01,  0.00)
    torsion ( -0.452,   0.056,   1.226)  ( -0.452,   0.056,   1.228)  ( 0.02,  0.00,  0.21)
    vdw     ( -0.045,  -1.752,  -0.063)  ( -0.045,  -1.752,  -0.063)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (138.722, -254.813,  73.200)  (138.807, -254.742,  73.215)  ( 0.06,  0.03,  0.02)
    bond    ( 78.315, 129.261,  21.824)  ( 78.391, 129.313,  21.836)  ( 0.10,  0.04,  0.06)
    angle   ( 56.522, -381.810,  49.106)  ( 56.530, -381.791,  49.107)  ( 0.01,  0.00,  0.00)
    torsion (  0.678,   0.012,  -1.874)  (  0.679,   0.012,  -1.871)  ( 0.03,  0.00,  0.13)
    vdw     (  2.966,  -3.460,   3.604)  (  2.966,  -3.460,   3.604)  ( 0.00,  0.01,  0.00)
    electro (  0.241,   1.185,   0.538)  (  0.241,   1.185,   0.538)  ( 0.00,  0.00,  0.00)
26       (-136.125, -339.999, -47.804)  (-136.058, -339.912, -47.792)  ( 0.05,  0.03,  0.03)
    bond    (-101.762, -361.165,  -9.618)  (-101.706, -361.091,  -9.610)  ( 0.06,  0.02,  0.08)
    angle   (-38.960,  23.208, -34.425)  (-38.950,  23.221, -34.422)  ( 0.03,  0.06,  0.01)
    torsion (  3.895,  -1.182, -10.458)  (  3.895,  -1.182, -10.457)  ( 0.01,  0.01,  0.02)
    vdw     (  0.702,  -0.860,   6.698)  (  0.702,  -0.860,   6.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (392.556, -128.763, 160.750)  (392.620, -128.711, 160.762)  ( 0.02,  0.04,  0.01)
    bond    (379.882, -144.919, 155.173)  (379.943, -144.876, 155.182)  ( 0.02,  0.03,  0.01)
    angle   ( 14.261,  17.407,   2.817)  ( 14.264,  17.416,   2.818)  ( 0.02,  0.05,  0.04)
    torsion ( -1.305,   0.304,   3.355)  ( -1.305,   0.304,   3.356)  ( 0.01,  0.00,  0.02)
    vdw     ( -0.281,  -1.555,  -0.594)  ( -0.281,  -1.555,  -0.594)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (1315.208, -74.699, 493.401)  (1315.269, -74.607, 493.418)  ( 0.00,  0.12,  0.00)
    bond    (1185.804,  92.689, 432.055)  (1185.856,  92.772, 432.069)  ( 0.00,  0.09,  0.00)
    angle   (130.865, -167.104,  60.684)  (130.874, -167.094,  60.687)  ( 0.01,  0.01,  0.00)
    torsion ( -0.460,   0.082,   1.241)  ( -0.460,   0.082,   1.242)  ( 0.01,  0.00,  0.11)
    vdw     ( -1.001,  -0.367,  -0.579)  ( -1.001,  -0.367,  -0.579)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (-408.112, 228.407, -174.827)  (-408.095, 228.416, -174.822)  ( 0.00,  0.00,  0.00)
    bond    (-428.438, 181.023, -179.396)  (-428.422, 181.028, -179.392)  ( 0.00,  0.00,  0.00)
    angle   ( 18.109,  47.213,   4.397)  ( 18.110,  47.216,   4.397)  ( 0.00,  0.01,  0.00)
    torsion (  0.211,  -0.029,  -0.534)  (  0.211,  -0.029,  -0.534)  ( 0.00,  0.00,  0.03)
    vdw     (  2.006,   0.201,   0.706)  (  2.006,   0.201,   0.706)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-1375.379,  94.031, -519.125)  (-1375.335,  94.086, -519.072)  ( 0.00,  0.06,  0.01)
    bond    (-1368.931,   2.598, -509.342)  (-1368.899,   2.640, -509.300)  ( 0.00,  1.63,  0.01)
    angle   ( -6.421,  89.619,  -9.663)  ( -6.410,  89.632,  -9.653)  ( 0.18,  0.01,  0.11)
    torsion ( -0.024,   0.004,   0.064)  ( -0.024,   0.004,   0.065)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.003,   1.810,  -0.183)  ( -0.003,   1.810,  -0.183)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-252.322,  68.329,  72.240)  (-252.274,  68.377,  72.286)  ( 0.02,  0.07,  0.06)
    bond    (-183.680, 108.332,  28.850)  (-183.643, 108.368,  28.887)  ( 0.02,  0.03,  0.13)
    angle   (-67.485, -40.784,  37.274)  (-67.473, -40.773,  37.283)  ( 0.02,  0.03,  0.02)
    torsion ( -1.634,   0.633,   4.614)  ( -1.633,   0.633,   4.614)  ( 0.03,  0.02,  0.01)
    vdw     (  0.476,   0.149,   1.501)  (  0.476,   0.149,   1.501)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( 26.413, 201.681, -65.575)  ( 26.458, 201.731, -65.527)  ( 0.17,  0.02,  0.07)
    bond    ( 10.558, 131.097, -37.808)  ( 10.594, 131.133, -37.771)  ( 0.34,  0.03,  0.10)
    angle   ( 15.093,  68.172, -27.150)  ( 15.102,  68.185, -27.140)  ( 0.06,  0.02,  0.04)
    torsion (  0.521,   3.013,  -1.060)  (  0.521,   3.013,  -1.060)  ( 0.03,  0.02,  0.02)
    vdw     (  0.241,  -0.600,   0.443)  (  0.241,  -0.600,   0.443)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (  5.101, -166.269, -115.044)  (  5.149, -166.219, -114.995)  ( 0.95,  0.03,  0.04)
    bond    (  0.388, -85.303, -71.338)  (  0.425, -85.265, -71.301)  ( 1.43,  0.04,  0.05)
    angle   (  3.800, -80.567, -42.048)  (  3.811, -80.555, -42.036)  ( 0.29,  0.02,  0.03)
    torsion (  0.744,  -0.036,   0.075)  (  0.745,  -0.036,   0.076)  ( 0.04,  0.00,  0.00)
    vdw     (  0.168,  -0.363,  -1.733)  (  0.168,  -0.363,  -1.733)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 40.142, -80.756, -12.726)  ( 40.149, -80.731, -12.722)  ( 0.02,  0.03,  0.03)
    bond    ( 31.505, -86.048,   4.238)  ( 31.508, -86.023,   4.238)  ( 0.01,  0.03,  0.01)
    angle   ( 12.846,   3.739, -19.615)  ( 12.848,   3.740, -19.612)  ( 0.02,  0.01,  0.02)
    torsion (  2.043,   0.649,  -2.011)  (  2.043,   0.649,  -2.011)  ( 0.00,  0.00,  0.01)
    vdw     ( -6.251,   0.904,   4.662)  ( -6.251,   0.904,   4.662)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( 35.615,  22.224, -84.419)  ( 35.620,  22.231, -84.396)  ( 0.01,  0.03,  0.03)
    bond    ( 21.884,  34.000, -84.579)  ( 21.886,  34.004, -84.556)  ( 0.01,  0.01,  0.03)
    angle   ( 18.455, -11.667,   0.087)  ( 18.458, -11.664,   0.087)  ( 0.01,  0.03,  0.00)
    torsion ( -0.871,   0.454,  -0.043)  ( -0.871,   0.454,  -0.043)  ( 0.01,  0.01,  0.00)
    vdw     ( -3.853,  -0.563,   0.116)  ( -3.853,  -0.563,   0.116)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( 90.312,  11.589, -12.395)  ( 90.339,  11.593, -12.391)  ( 0.03,  0.04,  0.03)
    bond    ( 91.385,  -5.329, -13.368)  ( 91.412,  -5.328, -13.367)  ( 0.03,  0.01,  0.01)
    angle   ( -0.040,  18.084,  -7.489)  ( -0.040,  18.088,  -7.487)  ( 0.00,  0.02,  0.04)
    torsion (  0.028,  -1.127,   0.641)  (  0.028,  -1.127,   0.641)  ( 0.00,  0.01,  0.00)
    vdw     ( -1.060,  -0.039,   7.820)  ( -1.060,  -0.039,   7.821)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( -3.415,  88.678, -11.611)  ( -3.409,  88.704, -11.607)  ( 0.17,  0.03,  0.03)
    bond    (-24.076,  86.846, -10.570)  (-24.074,  86.872, -10.569)  ( 0.01,  0.03,  0.01)
    angle   ( 21.480,   4.731, -10.050)  ( 21.483,   4.731, -10.048)  ( 0.02,  0.00,  0.03)
    torsion (  2.789,   0.583,  -1.558)  (  2.789,   0.583,  -1.558)  ( 0.01,  0.00,  0.00)
    vdw     ( -3.608,  -3.482,  10.568)  ( -3.608,  -3.482,  10.568)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (-24.286, -16.595,  87.071)  (-24.281, -16.588,  87.095)  ( 0.02,  0.04,  0.03)
    bond    (-20.719, -32.829,  83.983)  (-20.718, -32.825,  84.006)  ( 0.01,  0.01,  0.03)
    angle   (-11.944,  14.964,   2.903)  (-11.941,  14.967,   2.904)  ( 0.02,  0.02,  0.02)
    torsion (  0.733,  -0.743,  -0.110)  (  0.733,  -0.743,  -0.110)  ( 0.01,  0.01,  0.00)
    vdw     (  7.645,   2.013,   0.295)  (  7.645,   2.013,   0.295)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-35.098,  80.902,  15.361)  (-35.092,  80.927,  15.366)  ( 0.02,  0.03,  0.03)
    bond    (-31.431,  85.012,  -4.595)  (-31.427,  85.037,  -4.594)  ( 0.01,  0.03,  0.01)
    angle   (-13.511,  -3.912,  19.998)  (-13.508,  -3.912,  20.001)  ( 0.02,  0.01,  0.02)
    torsion ( -1.754,  -0.523,   2.320)  ( -1.754,  -0.523,   2.321)  ( 0.00,  0.00,  0.01)
    vdw     ( 11.597,   0.324,  -2.362)  ( 11.598,   0.325,  -2.362)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       (-90.955, -11.384,  24.841)  (-90.927, -11.380,  24.845)  ( 0.03,  0.04,  0.02)
    bond    (-93.440,   4.720,  14.652)  (-93.413,   4.721,  14.653)  ( 0.03,  0.01,  0.01)
    angle   (  1.162, -17.513,  13.046)  (  1.162, -17.510,  13.049)  ( 0.01,  0.02,  0.02)
    torsion ( -0.082,   0.250,  -0.606)  ( -0.082,   0.250,  -0.606)  ( 0.00,  0.00,  0.00)
    vdw     (  1.405,   1.159,  -2.252)  (  1.405,   1.159,  -2.252)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (  7.475, -89.032,  19.001)  (  7.481, -89.007,  19.005)  ( 0.08,  0.03,  0.02)
    bond    ( 25.302, -87.579,  10.941)  ( 25.304, -87.554,  10.942)  ( 0.01,  0.03,  0.01)
    angle   (-20.325,  -4.214,  13.279)  (-20.322,  -4.213,  13.282)  ( 0.02,  0.01,  0.02)
    torsion ( -1.939,  -0.352,   1.667)  ( -1.939,  -0.352,   1.667)  ( 0.01,  0.00,  0.00)
    vdw     (  4.437,   3.112,  -6.887)  (  4.437,   3.112,  -6.887)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (-13.040,  75.288,   6.357)  (-13.034,  75.314,   6.361)  ( 0.05,  0.03,  0.07)
    bond    (-21.453,  74.914,  -3.292)  (-21.450,  74.940,  -3.291)  ( 0.01,  0.03,  0.01)
    angle   ( 14.946,   5.094,  18.557)  ( 14.949,   5.094,  18.561)  ( 0.02,  0.00,  0.02)
    torsion ( -0.016,  -0.004,   0.014)  ( -0.016,  -0.004,   0.014)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.517,  -4.716,  -8.922)  ( -6.517,  -4.716,  -8.922)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       ( 78.942,  -2.097,   9.274)  ( 78.970,  -2.093,   9.278)  ( 0.03,  0.20,  0.05)
    bond    ( 77.211,  -4.184,  -9.515)  ( 77.238,  -4.183,  -9.514)  ( 0.04,  0.01,  0.01)
    angle   (  3.619,   3.438,  27.860)  (  3.619,   3.442,  27.863)  ( 0.00,  0.11,  0.01)
    torsion (  0.007,  -0.165,   0.126)  (  0.007,  -0.165,   0.126)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.894,  -1.186,  -9.197)  ( -1.894,  -1.186,  -9.197)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       (  1.618, -21.411,  76.638)  (  1.623, -21.404,  76.662)  ( 0.32,  0.03,  0.03)
    bond    (-15.723, -27.268,  71.326)  (-15.722, -27.264,  71.349)  ( 0.01,  0.01,  0.03)
    angle   ( 25.339,   8.729,   8.920)  ( 25.342,   8.732,   8.921)  ( 0.01,  0.04,  0.01)
    torsion (  0.198,  -0.151,  -0.014)  (  0.198,  -0.151,  -0.014)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.196,  -2.721,  -3.594)  ( -8.196,  -2.721,  -3.594)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       ( 65.363,  80.715,  16.712)  ( 65.380,  80.732,  16.714)  ( 0.03,  0.02,  0.01)
    bond    ( 74.615,  74.402,  16.715)  ( 74.629,  74.416,  16.717)  ( 0.02,  0.02,  0.01)
    angle   ( -6.637,   6.301,   1.557)  ( -6.635,   6.304,   1.557)  ( 0.04,  0.04,  0.01)
    torsion ( -0.008,   0.091,  -0.372)  ( -0.008,   0.091,  -0.371)  ( 0.00,  0.00,  0.03)
    vdw     ( -1.755,  -0.098,  -0.282)  ( -1.755,  -0.098,  -0.282)  ( 0.01,  0.00,  0.00)
    electro ( -0.852,   0.018,  -0.906)  ( -0.852,   0.018,  -0.906)  ( 0.00,  0.00,  0.00)
46       (-15.678, 103.911,  28.069)  (-15.669, 103.937,  28.072)  ( 0.05,  0.03,  0.01)
    bond    (-17.811,  88.988,  23.233)  (-17.810,  89.014,  23.235)  ( 0.01,  0.03,  0.01)
    angle   ( 54.867,  10.478,   1.919)  ( 54.872,  10.478,   1.919)  ( 0.01,  0.00,  0.00)
    torsion (  0.012,  -0.370,   1.425)  (  0.012,  -0.370,   1.425)  ( 0.00,  0.00,  0.05)
    vdw     (-52.947,   4.483,   1.841)  (-52.946,   4.483,   1.841)  ( 0.00,  0.00,  0.01)
    electro (  0.202,   0.332,  -0.349)  (  0.202,   0.332,  -0.349)  ( 0.00,  0.00,  0.00)
47       ( 47.413, -89.732, -26.405)  ( 47.421, -89.707, -26.402)  ( 0.02,  0.03,  0.01)
    bond    ( 27.135, -94.224, -26.191)  ( 27.138, -94.199, -26.189)  ( 0.01,  0.03,  0.01)
    angle   ( 23.097,   6.332,   1.160)  ( 23.102,   6.333,   1.160)  ( 0.02,  0.01,  0.01)
    torsion ( -0.042,   0.706,  -2.585)  ( -0.042,   0.706,  -2.584)  ( 0.00,  0.00,  0.03)
    vdw     ( -6.179,  -2.208,   1.373)  ( -6.178,  -2.208,   1.373)  ( 0.01,  0.00,  0.00)
    electro (  3.401,  -0.339,  -0.162)  (  3.401,  -0.339,  -0.162)  ( 0.00,  0.00,  0.00)
48       (-81.499,  -2.165,  48.436)  (-81.472,  -2.162,  48.442)  ( 0.03,  0.16,  0.01)
    bond    (-88.637,  -2.317,  20.880)  (-88.611,  -2.317,  20.882)  ( 0.03,  0.02,  0.01)
    angle   (  5.474,  -2.071,  22.996)  (  5.474,  -2.068,  23.000)  ( 0.00,  0.14,  0.01)
    torsion (  1.564,   0.257,   6.664)  (  1.564,   0.257,   6.664)  ( 0.00,  0.00,  0.00)
    vdw     (  0.101,   1.966,  -2.104)  (  0.101,   1.966,  -2.104)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 26.087,  12.127,  63.288)  ( 26.098,  12.135,  63.306)  ( 0.04,  0.07,  0.03)
    bond    ( 27.464,  27.278,  46.599)  ( 27.470,  27.284,  46.615)  ( 0.02,  0.02,  0.04)
    angle   (-45.485,  -9.884,  32.585)  (-45.483,  -9.881,  32.586)  ( 0.01,  0.02,  0.00)
    torsion (  1.360,   1.464,  -1.659)  (  1.361,   1.464,  -1.659)  ( 0.02,  0.00,  0.01)
    vdw     ( 42.749,  -6.731, -14.236)  ( 42.750,  -6.731, -14.236)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-19.866,  79.203, -21.187)  (-19.859,  79.227, -21.183)  ( 0.04,  0.03,  0.02)
    bond    (-29.029,  74.253,   5.631)  (-29.025,  74.277,   5.631)  ( 0.01,  0.03,  0.01)
    angle   ( 10.553,   6.257, -28.126)  ( 10.556,   6.257, -28.123)  ( 0.03,  0.01,  0.01)
    torsion ( -0.656,  -0.240,  -0.212)  ( -0.656,  -0.240,  -0.212)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.734,  -1.067,   1.521)  ( -0.734,  -1.067,   1.521)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       ( 59.536,  24.952, -44.172)  ( 59.562,  24.957, -44.166)  ( 0.04,  0.02,  0.01)
    bond    ( 64.561,   5.165, -19.507)  ( 64.586,   5.165, -19.505)  ( 0.04,  0.01,  0.01)
    angle   (-12.918,  24.858, -36.193)  (-12.918,  24.862, -36.190)  ( 0.00,  0.01,  0.01)
    torsion (  0.060,   0.650,   0.370)  (  0.060,   0.650,   0.370)  ( 0.00,  0.01,  0.00)
    vdw     (  7.833,  -5.721,  11.159)  (  7.833,  -5.721,  11.159)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (-30.239, -15.909, -77.733)  (-30.229, -15.900, -77.717)  ( 0.03,  0.06,  0.02)
    bond    (-39.923, -37.279, -58.542)  (-39.916, -37.273, -58.527)  ( 0.02,  0.02,  0.03)
    angle   ( 10.108,  21.559, -20.629)  ( 10.111,  21.562, -20.628)  ( 0.03,  0.01,  0.01)
    torsion (  0.298,  -0.200,  -0.076)  (  0.298,  -0.200,  -0.076)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.722,   0.010,   1.514)  ( -0.722,   0.010,   1.514)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( 94.937,  86.353, 120.333)  ( 94.942,  86.383, 120.337)  ( 0.01,  0.04,  0.00)
    bond    (  2.433, -20.470,   2.878)  (  2.434, -20.442,   2.879)  ( 0.01,  0.14,  0.02)
    angle   ( 34.810,   5.798,  11.741)  ( 34.814,   5.798,  11.742)  ( 0.01,  0.00,  0.01)
    torsion (  1.481,  -0.354,  -3.766)  (  1.481,  -0.354,  -3.765)  ( 0.01,  0.00,  0.01)
    vdw     ( 58.309, 101.975, 110.423)  ( 58.309, 101.977, 110.425)  ( 0.00,  0.00,  0.00)
    electro ( -2.096,  -0.597,  -0.943)  ( -2.096,  -0.597,  -0.943)  ( 0.00,  0.00,  0.00)
54       (-23.592, -68.819,  -2.920)  (-23.586, -68.793,  -2.915)  ( 0.03,  0.04,  0.15)
    bond    (-23.826, -68.424,  -3.381)  (-23.823, -68.399,  -3.381)  ( 0.01,  0.04,  0.01)
    angle   ( -0.162,   0.040,   0.306)  ( -0.159,   0.040,   0.310)  ( 0.05,  0.00,  0.12)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.396,  -0.434,   0.156)  (  0.396,  -0.434,   0.156)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (-40.622,  26.985,  56.280)  (-40.610,  26.996,  56.293)  ( 0.03,  0.04,  0.02)
    bond    (-43.020,  38.071,  45.501)  (-43.010,  38.079,  45.512)  ( 0.02,  0.02,  0.02)
    angle   (  0.667, -12.551,  11.129)  (  0.669, -12.548,  11.131)  ( 0.14,  0.02,  0.02)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.731,   1.465,  -0.349)  (  1.731,   1.465,  -0.349)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       (  7.549,  17.006, -72.370)  (  7.552,  17.014, -72.346)  ( 0.05,  0.05,  0.03)
    bond    ( -1.004,  29.140, -67.460)  ( -1.003,  29.145, -67.436)  ( 0.03,  0.02,  0.03)
    angle   (  7.515, -13.544,  -5.964)  (  7.518, -13.541,  -5.964)  ( 0.04,  0.02,  0.01)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.037,   1.410,   1.055)  (  1.037,   1.410,   1.055)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( 26.853, -61.616, -59.558)  ( 26.857, -61.596, -59.547)  ( 0.01,  0.03,  0.02)
    bond    (  4.936, -71.331, -49.618)  (  4.937, -71.313, -49.608)  ( 0.01,  0.03,  0.02)
    angle   ( 21.633,  10.213, -12.532)  ( 21.637,  10.214, -12.530)  ( 0.02,  0.01,  0.01)
    torsion (  1.202,  -0.052,   0.194)  (  1.202,  -0.052,   0.194)  ( 0.01,  0.00,  0.00)
    vdw     ( -0.919,  -0.446,   2.397)  ( -0.919,  -0.446,   2.397)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( 77.245,  23.110, -24.741)  ( 77.267,  23.119, -24.738)  ( 0.03,  0.04,  0.02)
    bond    ( 71.291,  39.669,  -8.011)  ( 71.312,  39.676,  -8.010)  ( 0.03,  0.02,  0.01)
    angle   (  7.268, -17.136, -20.161)  (  7.269, -17.134, -20.158)  ( 0.01,  0.01,  0.02)
    torsion (  0.113,  -0.215,  -0.061)  (  0.113,  -0.215,  -0.061)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.427,   0.793,   3.492)  ( -1.427,   0.793,   3.492)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (-64.115, -65.184,  16.485)  (-64.094, -65.173,  16.488)  ( 0.03,  0.02,  0.02)
    bond    (-78.176, -47.083,   7.956)  (-78.155, -47.075,   7.957)  ( 0.03,  0.02,  0.01)
    angle   ( 13.238, -20.310,   9.894)  ( 13.239, -20.308,   9.897)  ( 0.01,  0.01,  0.03)
    torsion ( -0.006,  -0.084,  -0.554)  ( -0.006,  -0.083,  -0.554)  ( 0.00,  0.00,  0.01)
    vdw     (  0.828,   2.293,  -0.812)  (  0.828,   2.293,  -0.812)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( 51.878, -73.386,  31.814)  ( 51.896, -73.373,  31.819)  ( 0.03,  0.02,  0.02)
    bond    ( 69.756, -57.600,  27.076)  ( 69.771, -57.589,  27.078)  ( 0.02,  0.02,  0.01)
    angle   (-15.014, -15.981,   4.697)  (-15.013, -15.979,   4.699)  ( 0.01,  0.01,  0.05)
    torsion ( -2.419,  -2.372,   1.187)  ( -2.419,  -2.372,   1.187)  ( 0.01,  0.01,  0.01)
    vdw     ( -0.445,   2.566,  -1.146)  ( -0.445,   2.567,  -1.146)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       ( -9.341,   5.690,  83.633)  ( -9.337,   5.696,  83.659)  ( 0.05,  0.10,  0.03)
    bond    ( -7.198, -23.032,  75.880)  ( -7.197, -23.029,  75.906)  ( 0.01,  0.01,  0.03)
    angle   ( -4.131,  30.637,   8.904)  ( -4.128,  30.641,   8.905)  ( 0.09,  0.01,  0.00)
    torsion (  1.717,  -0.060,   0.145)  (  1.717,  -0.060,   0.145)  ( 0.01,  0.00,  0.00)
    vdw     (  0.271,  -1.856,  -1.296)  (  0.271,  -1.856,  -1.296)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       ( 55.826,  57.856,  12.184)  ( 55.847,  57.866,  12.188)  ( 0.04,  0.02,  0.03)
    bond    ( 65.302,  42.165,  -5.964)  ( 65.321,  42.173,  -5.964)  ( 0.03,  0.02,  0.01)
    angle   ( -9.206,  17.304,  21.554)  ( -9.205,  17.306,  21.558)  ( 0.01,  0.01,  0.02)
    torsion ( -0.690,   0.900,  -1.189)  ( -0.690,   0.900,  -1.189)  ( 0.00,  0.00,  0.01)
    vdw     (  0.421,  -2.514,  -2.218)  (  0.421,  -2.514,  -2.218)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       (-52.936,  59.665,  10.916)  (-52.917,  59.677,  10.922)  ( 0.03,  0.02,  0.05)
    bond    (-57.918,  44.816, -15.152)  (-57.901,  44.826, -15.150)  ( 0.03,  0.02,  0.01)
    angle   (  6.047,  18.030,  30.234)  (  6.048,  18.032,  30.238)  ( 0.03,  0.01,  0.01)
    torsion ( -1.141,  -1.037,   1.293)  ( -1.141,  -1.037,   1.293)  ( 0.00,  0.00,  0.01)
    vdw     (  0.077,  -2.144,  -5.459)  (  0.077,  -2.144,  -5.459)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffghemical.cpp" line="90">check &apos;not ok 18 # gradients do not validate&apos; passed</Info><TestingTime>4690000</TestingTime></TestCase><TestCase name="iterator_test">
# Testing iterators...  
<Info file="iterators.cpp" line="51">check &apos;Bail out! Cannot read test data files/attype.00.smi&apos; passed</Info><Info file="iterators.cpp" line="54">check &apos;Bail out! SMILES format is not loaded&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 2 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 3 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 4 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 5 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 6 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 7 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 8 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 9 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 10 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 11 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 12 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 13 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 14 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 15 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 16 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 17 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 18 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 19 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 20 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 21 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 22 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 23 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 24 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 25 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 26 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 27 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 28 # bond iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 29 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 30 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 31 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 32 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 33 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 34 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 35 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 36 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 37 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 38 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 39 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 40 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 41 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 42 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 43 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 44 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 45 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 46 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 47 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 48 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 49 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 50 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 51 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 52 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 53 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 54 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 55 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 56 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 57 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 58 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 59 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 60 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 61 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 62 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 63 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 64 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 65 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 66 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 67 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 68 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 69 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 70 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 71 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 72 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 73 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 74 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 75 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 76 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 77 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 78 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 79 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 80 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 81 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 82 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 83 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 84 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 85 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 86 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 87 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 88 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 89 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 90 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 91 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 92 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 93 # atom iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 94 # depth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 95 # breadth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 96 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 97 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 98 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 99 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 100 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 101 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 102 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 103 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 104 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 105 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 106 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 107 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 108 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 109 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 110 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 111 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 112 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 113 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 114 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 115 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 116 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 117 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 118 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 119 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 120 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 121 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 122 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 123 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 124 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 125 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 126 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 127 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 128 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 129 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 130 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 131 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 132 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 133 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 134 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 135 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 136 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 137 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 138 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 139 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 140 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 141 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 142 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 143 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 144 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 145 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 146 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 147 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 148 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 149 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 150 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 151 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 152 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 153 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 154 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 155 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 156 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 157 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 158 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 159 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 160 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 161 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 162 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 163 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 164 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 165 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 166 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 167 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 168 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 169 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 170 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 171 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 172 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 173 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 174 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 175 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 176 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 177 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 178 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 179 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 180 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 181 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 182 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 183 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 184 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 185 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 186 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 187 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 188 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 189 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 190 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 191 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 192 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 193 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 194 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 195 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 196 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 197 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 198 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 199 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 200 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 201 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 202 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 203 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 204 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 205 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 206 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 207 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 208 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 209 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 210 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 211 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 212 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 213 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 214 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 215 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 216 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 217 # atom iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 218 # depth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 219 # breadth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 220 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 221 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 222 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 223 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 224 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 225 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 226 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 227 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 228 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 229 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 230 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 231 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 232 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 233 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 234 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 235 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 236 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 237 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 238 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 239 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 240 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 241 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 242 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 243 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 244 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 245 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 246 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 247 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 248 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 249 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 250 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 251 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 252 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 253 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 254 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 255 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 256 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 257 # atom iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 258 # depth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 259 # breadth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 260 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 261 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 262 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 263 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 264 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 265 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 266 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 267 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 268 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 269 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 270 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 271 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 272 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 273 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 274 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 275 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 276 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 277 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 278 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 279 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 280 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 281 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 282 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 283 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 284 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 285 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 286 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 287 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 288 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 289 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 290 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 291 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 292 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 293 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 294 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 295 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 296 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 297 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 298 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 299 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 300 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 301 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 302 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 303 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 304 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 305 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 306 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 307 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 308 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 309 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 310 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 311 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 312 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 313 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 314 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 315 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 316 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 317 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 318 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 319 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 320 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 321 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 322 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 323 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 324 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 325 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 326 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 327 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 328 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 329 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 330 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 331 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 332 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 333 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 334 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 335 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 336 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 337 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 338 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 339 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 340 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 341 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 342 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 343 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 344 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 345 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 346 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 347 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 348 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 349 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 350 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 351 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 352 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 353 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 354 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 355 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 356 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 357 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 358 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 359 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 360 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 361 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 362 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 363 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 364 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 365 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 366 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 367 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 368 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 369 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 370 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 371 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 372 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 373 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 374 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 375 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 376 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 377 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 378 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 379 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 380 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 381 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 382 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 383 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 384 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 385 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 386 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 387 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 388 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 389 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 390 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 391 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 392 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 393 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 394 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 395 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 396 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 397 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 398 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 399 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 400 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 401 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 402 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 403 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 404 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 405 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 406 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 407 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 408 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 409 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 410 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 411 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 412 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 413 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 414 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 415 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 416 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 417 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 418 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 419 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 420 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 421 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 422 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 423 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 424 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 425 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 426 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 427 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 428 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 429 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 430 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 431 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 432 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 433 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 434 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 435 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 436 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 437 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 438 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 439 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 440 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 441 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 442 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 443 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 444 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 445 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 446 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 447 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 448 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 449 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 450 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 451 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 452 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 453 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 454 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 455 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 456 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 457 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 458 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 459 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 460 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 461 # atom iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 462 # depth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 463 # breadth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 464 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 465 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 466 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 467 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 468 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 469 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 470 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 471 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 472 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 473 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 474 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 475 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 476 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 477 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 478 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 479 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 480 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 481 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 482 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 483 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 484 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 485 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 486 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 487 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 488 # bond iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 489 # atom iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 490 # depth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 491 # breadth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 492 # bond iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 493 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 494 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 495 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 496 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 497 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 498 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 499 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 500 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 501 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 502 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 503 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 504 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 505 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 506 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 507 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 508 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 509 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 510 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 511 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 512 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 513 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 514 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 515 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 516 # bond iterator failed: expected 30 but found 30&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 517 # atom iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 518 # depth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 519 # breadth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 520 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 521 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 522 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 523 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 524 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 525 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 526 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 527 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 528 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 529 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 530 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 531 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 532 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 533 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 534 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 535 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 536 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 537 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 538 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 539 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 540 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 541 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 542 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 543 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 544 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 545 # atom iterator failed: expected 30 but found 30&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 546 # depth-first iterator failed: expected 30 but found 30&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 547 # breadth-first iterator failed: expected 30 but found 30&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 548 # bond iterator failed: expected 33 but found 33&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 549 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 550 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 551 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 552 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 553 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 554 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 555 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 556 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 557 # atom iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 558 # depth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 559 # breadth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 560 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 561 # atom iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 562 # depth-first iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 563 # breadth-first iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 564 # bond iterator failed: expected 33 but found 33&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 565 # atom iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 566 # depth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 567 # breadth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 568 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 569 # atom iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 570 # depth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 571 # breadth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 572 # bond iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 573 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 574 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 575 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 576 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 577 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 578 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 579 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 580 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 581 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 582 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 583 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 584 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 585 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 586 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 587 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 588 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 589 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 590 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 591 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 592 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 593 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 594 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 595 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 596 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 597 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 598 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 599 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 600 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 601 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 602 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 603 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 604 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 605 # atom iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 606 # depth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 607 # breadth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 608 # bond iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 609 # atom iterator failed: expected 32 but found 32&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 610 # depth-first iterator failed: expected 32 but found 32&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 611 # breadth-first iterator failed: expected 32 but found 32&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 612 # bond iterator failed: expected 34 but found 34&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 613 # atom iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 614 # depth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 615 # breadth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 616 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 617 # atom iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 618 # depth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 619 # breadth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 620 # bond iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 621 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 622 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 623 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 624 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 625 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 626 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 627 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 628 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 629 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 630 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 631 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 632 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 633 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 634 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 635 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 636 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 637 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 638 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 639 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 640 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 641 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 642 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 643 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 644 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 645 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 646 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 647 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 648 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 649 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 650 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 651 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 652 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 653 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 654 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 655 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 656 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 657 # atom iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 658 # depth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 659 # breadth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 660 # bond iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 661 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 662 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 663 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 664 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 665 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 666 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 667 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 668 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 669 # atom iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 670 # depth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 671 # breadth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 672 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 673 # atom iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 674 # depth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 675 # breadth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 676 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 677 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 678 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 679 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 680 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 681 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 682 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 683 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 684 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 685 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 686 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 687 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 688 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 689 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 690 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 691 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 692 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 693 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 694 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 695 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 696 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 697 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 698 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 699 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 700 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 701 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 702 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 703 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 704 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 705 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 706 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 707 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 708 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 709 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 710 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 711 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 712 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 713 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 714 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 715 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 716 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 717 # atom iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 718 # depth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 719 # breadth-first iterator failed: expected 27 but found 27&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 720 # bond iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 721 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 722 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 723 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 724 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 725 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 726 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 727 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 728 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 729 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 730 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 731 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 732 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 733 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 734 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 735 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 736 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 737 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 738 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 739 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 740 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 741 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 742 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 743 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 744 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 745 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 746 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 747 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 748 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 749 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 750 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 751 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 752 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 753 # atom iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 754 # depth-first iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 755 # breadth-first iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 756 # bond iterator failed: expected 38 but found 38&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 757 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 758 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 759 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 760 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 761 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 762 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 763 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 764 # bond iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 765 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 766 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 767 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 768 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 769 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 770 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 771 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 772 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 773 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 774 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 775 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 776 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 777 # atom iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 778 # depth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 779 # breadth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 780 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 781 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 782 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 783 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 784 # bond iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 785 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 786 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 787 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 788 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 789 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 790 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 791 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 792 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 793 # atom iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 794 # depth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 795 # breadth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 796 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 797 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 798 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 799 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 800 # bond iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 801 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 802 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 803 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 804 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 805 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 806 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 807 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 808 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 809 # atom iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 810 # depth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 811 # breadth-first iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 812 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 813 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 814 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 815 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 816 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 817 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 818 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 819 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 820 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 821 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 822 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 823 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 824 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 825 # atom iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 826 # depth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 827 # breadth-first iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 828 # bond iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 829 # atom iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 830 # depth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 831 # breadth-first iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 832 # bond iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 833 # atom iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 834 # depth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 835 # breadth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 836 # bond iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 837 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 838 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 839 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 840 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 841 # atom iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 842 # depth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 843 # breadth-first iterator failed: expected 25 but found 25&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 844 # bond iterator failed: expected 26 but found 26&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 845 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 846 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 847 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 848 # bond iterator failed: expected 29 but found 29&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 849 # atom iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 850 # depth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 851 # breadth-first iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 852 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 853 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 854 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 855 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 856 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 857 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 858 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 859 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 860 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 861 # atom iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 862 # depth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 863 # breadth-first iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 864 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 865 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 866 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 867 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 868 # bond iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 869 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 870 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 871 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 872 # bond iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 873 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 874 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 875 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 876 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 877 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 878 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 879 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 880 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 881 # atom iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 882 # depth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 883 # breadth-first iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 884 # bond iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 885 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 886 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 887 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 888 # bond iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 889 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 890 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 891 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 892 # bond iterator failed: expected 9 but found 9&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 893 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 894 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 895 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 896 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 897 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 898 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 899 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 900 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 901 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 902 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 903 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 904 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 905 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 906 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 907 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 908 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 909 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 910 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 911 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 912 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 913 # atom iterator failed: expected 66 but found 66&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 914 # depth-first iterator failed: expected 66 but found 66&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 915 # breadth-first iterator failed: expected 66 but found 66&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 916 # bond iterator failed: expected 71 but found 71&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 917 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 918 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 919 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 920 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 921 # atom iterator failed: expected 41 but found 41&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 922 # depth-first iterator failed: expected 41 but found 41&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 923 # breadth-first iterator failed: expected 41 but found 41&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 924 # bond iterator failed: expected 44 but found 44&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 925 # atom iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 926 # depth-first iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 927 # breadth-first iterator failed: expected 36 but found 36&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 928 # bond iterator failed: expected 38 but found 38&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 929 # atom iterator failed: expected 40 but found 40&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 930 # depth-first iterator failed: expected 40 but found 40&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 931 # breadth-first iterator failed: expected 40 but found 40&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 932 # bond iterator failed: expected 44 but found 44&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 933 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 934 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 935 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 936 # bond iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 937 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 938 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 939 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 940 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 941 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 942 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 943 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 944 # bond iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 945 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 946 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 947 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 948 # bond iterator failed: expected 17 but found 17&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 949 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 950 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 951 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 952 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 953 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 954 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 955 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 956 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 957 # atom iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 958 # depth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 959 # breadth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 960 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 961 # atom iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 962 # depth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 963 # breadth-first iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 964 # bond iterator failed: expected 24 but found 24&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 965 # atom iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 966 # depth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 967 # breadth-first iterator failed: expected 28 but found 28&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 968 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 969 # atom iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 970 # depth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 971 # breadth-first iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 972 # bond iterator failed: expected 23 but found 23&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 973 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 974 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 975 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 976 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 977 # atom iterator failed: expected 46 but found 46&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 978 # depth-first iterator failed: expected 46 but found 46&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 979 # breadth-first iterator failed: expected 46 but found 46&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 980 # bond iterator failed: expected 48 but found 48&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 981 # atom iterator failed: expected 34 but found 34&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 982 # depth-first iterator failed: expected 34 but found 34&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 983 # breadth-first iterator failed: expected 34 but found 34&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 984 # bond iterator failed: expected 38 but found 38&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 985 # atom iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 986 # depth-first iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 987 # breadth-first iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 988 # bond iterator failed: expected 31 but found 31&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 989 # atom iterator failed: expected 50 but found 50&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 990 # depth-first iterator failed: expected 50 but found 50&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 991 # breadth-first iterator failed: expected 50 but found 50&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 992 # bond iterator failed: expected 51 but found 51&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 993 # atom iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 994 # depth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 995 # breadth-first iterator failed: expected 14 but found 14&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 996 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 997 # atom iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 998 # depth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 999 # breadth-first iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1000 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1001 # atom iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1002 # depth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1003 # breadth-first iterator failed: expected 10 but found 10&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1004 # bond iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1005 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1006 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1007 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1008 # bond iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1009 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1010 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1011 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1012 # bond iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1013 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1014 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1015 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1016 # bond iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1017 # atom iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1018 # depth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1019 # breadth-first iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1020 # bond iterator failed: expected 13 but found 13&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1021 # atom iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1022 # depth-first iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1023 # breadth-first iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1024 # bond iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1025 # atom iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1026 # depth-first iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1027 # breadth-first iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1028 # bond iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1029 # atom iterator failed: expected 5 but found 5&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1030 # depth-first iterator failed: expected 5 but found 5&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1031 # breadth-first iterator failed: expected 5 but found 5&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1032 # bond iterator failed: expected 5 but found 5&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1033 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1034 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1035 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1036 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1037 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1038 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1039 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1040 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1041 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1042 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1043 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1044 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1045 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1046 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1047 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1048 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1049 # atom iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1050 # depth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1051 # breadth-first iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1052 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1053 # atom iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1054 # depth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1055 # breadth-first iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1056 # bond iterator failed: expected 18 but found 18&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1057 # atom iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1058 # depth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1059 # breadth-first iterator failed: expected 15 but found 15&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1060 # bond iterator failed: expected 16 but found 16&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1061 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1062 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1063 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1064 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1065 # atom iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1066 # depth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1067 # breadth-first iterator failed: expected 11 but found 11&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1068 # bond iterator failed: expected 12 but found 12&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1069 # atom iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1070 # depth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1071 # breadth-first iterator failed: expected 19 but found 19&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1072 # bond iterator failed: expected 22 but found 22&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1073 # atom iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1074 # depth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1075 # breadth-first iterator failed: expected 20 but found 20&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1076 # bond iterator failed: expected 21 but found 21&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1077 # atom iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1078 # depth-first iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1079 # breadth-first iterator failed: expected 7 but found 7&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1080 # bond iterator failed: expected 6 but found 6&apos; passed</Info><Info file="iterators.cpp" line="75">check &apos;not ok 1081 # atom iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="83">check &apos;not ok 1082 # depth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="91">check &apos;not ok 1083 # breadth-first iterator failed: expected 8 but found 8&apos; passed</Info><Info file="iterators.cpp" line="99">check &apos;not ok 1084 # bond iterator failed: expected 7 but found 7&apos; passed</Info><TestingTime>960000</TestingTime></TestCase><TestCase name="mmff94_test"># Testing MMFF94 Force Field...
<Info file="ffmmff94.cpp" line="49">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffmmff94.cpp" line="52">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffmmff94.cpp" line="61">check &apos;Bail out! SDF format is not loaded&apos; passed</Info><Info file="ffmmff94.cpp" line="65">check &apos;Bail out! Cannot load force field!&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 1 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCH3.gpr
 # Expected         6.48381, found 6.483815&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/CCCH3.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.126,   0.585,   0.090)  (  0.135,   0.591,   0.092)  ( 0.11,  0.38,  0.02)
    bond    (  5.444,  -0.322,   0.940)  (  5.453,  -0.317,   0.940)  ( 0.15,  0.17,  0.03)
    angle   ( -3.144,   3.284,  -0.185)  ( -3.143,   3.286,  -0.185)  ( 0.04,  0.05,  0.00)
    strbnd  (  0.821,   0.356,   0.189)  (  0.820,   0.356,   0.189)  ( 0.05,  0.02,  0.00)
    torsion ( -0.002,  -0.001,   0.011)  ( -0.002,  -0.001,   0.012)  ( 0.00,  0.00,  0.00)
    oop     (  0.001,   0.000,  -0.004)  (  0.001,   0.000,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.993,  -2.733,  -0.862)  ( -2.993,  -2.733,  -0.862)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (  0.005,  -0.485,  -0.075)  (  0.014,  -0.479,  -0.074)  ( 0.00,  0.30,  0.01)
    bond    ( -1.425,   2.736,   0.062)  ( -1.417,   2.741,   0.063)  ( 0.57,  0.18,  0.00)
    angle   (  2.727,  -4.678,  -0.041)  (  2.729,  -4.676,  -0.040)  ( 0.04,  0.04,  0.00)
    strbnd  ( -1.258,   1.415,  -0.062)  ( -1.259,   1.415,  -0.062)  ( 0.05,  0.03,  0.00)
    torsion ( -0.038,   0.042,  -0.037)  ( -0.038,   0.042,  -0.035)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.002)  ( -0.000,  -0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -0.157,  -0.257,  -0.053)  ( -0.155,  -0.254,  -0.053)  ( 0.03,  0.06,  0.00)
    bond    (  1.001,   1.336,   0.334)  (  1.002,   1.338,   0.334)  ( 0.13,  0.17,  0.00)
    angle   (  1.170,  -0.904,   0.107)  (  1.170,  -0.903,   0.107)  ( 0.03,  0.02,  0.00)
    strbnd  ( -0.387,  -0.691,  -0.149)  ( -0.387,  -0.691,  -0.149)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,   0.002)  ( -0.000,  -0.000,   0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.001)  ( -0.000,  -0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.702,   0.097,  -0.115)  ( -0.702,   0.097,  -0.115)  ( 0.00,  0.00,  0.00)
    electro ( -1.238,  -0.095,  -0.233)  ( -1.238,  -0.095,  -0.233)  ( 0.00,  0.00,  0.00)
 4       (  0.051,  -0.223,   0.013)  (  0.052,  -0.219,   0.013)  ( 0.01,  0.07,  0.00)
    bond    (  0.920,  -1.942,  -0.058)  (  0.921,  -1.939,  -0.058)  ( 0.06,  0.15,  0.00)
    angle   (  2.328,   1.090,   0.544)  (  2.328,   1.090,   0.544)  ( 0.02,  0.01,  0.00)
    strbnd  ( -0.081,   0.439,   0.036)  ( -0.081,   0.439,   0.036)  ( 0.00,  0.00,  0.00)
    torsion ( -0.005,  -0.003,   0.028)  ( -0.005,  -0.003,   0.028)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.001)  ( -0.000,  -0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.060,  -0.212,  -0.397)  ( -2.060,  -0.212,  -0.397)  ( 0.00,  0.00,  0.00)
    electro ( -1.051,   0.406,  -0.142)  ( -1.051,   0.406,  -0.142)  ( 0.00,  0.00,  0.00)
 5       ( -0.071,   0.238,  -0.004)  ( -0.070,   0.241,  -0.004)  ( 0.01,  0.07,  0.00)
    bond    ( -1.466,   3.472,   0.138)  ( -1.466,   3.475,   0.138)  ( 0.04,  0.09,  0.00)
    angle   ( -1.154,  -0.476,  -0.262)  ( -1.154,  -0.476,  -0.262)  ( 0.04,  0.00,  0.00)
    strbnd  (  0.847,  -1.640,  -0.037)  (  0.847,  -1.640,  -0.037)  ( 0.00,  0.00,  0.00)
    torsion (  0.003,   0.002,  -0.015)  (  0.003,   0.002,  -0.015)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.394,  -0.600,  -0.002)  (  0.394,  -0.600,  -0.002)  ( 0.00,  0.00,  0.00)
    electro (  1.306,  -0.518,   0.175)  (  1.306,  -0.518,   0.175)  ( 0.00,  0.00,  0.00)
 6       ( -0.085,   0.212,   0.066)  ( -0.080,   0.218,   0.072)  ( 0.05,  0.12,  0.04)
    bond    ( -4.108,  -4.327,  -1.180)  ( -4.103,  -4.322,  -1.176)  ( 0.11,  0.10,  0.38)
    angle   (  1.049,   3.668,   0.644)  (  1.051,   3.670,   0.645)  ( 0.18,  0.05,  0.09)
    strbnd  (  0.154,   0.857,   0.117)  (  0.153,   0.856,   0.117)  ( 0.01,  0.07,  0.01)
    torsion (  0.223,  -0.189,  -0.004)  (  0.223,  -0.189,  -0.003)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.613,  -0.005,   0.289)  (  1.613,  -0.005,   0.289)  ( 0.00,  0.00,  0.00)
    electro (  0.983,   0.207,   0.200)  (  0.983,   0.207,   0.200)  ( 0.00,  0.00,  0.00)
 7       (  0.072,  -0.091,  -0.029)  (  0.074,  -0.088,  -0.029)  ( 0.01,  0.03,  0.00)
    bond    (  0.557,  -1.079,  -0.035)  (  0.558,  -1.076,  -0.035)  ( 0.04,  0.25,  0.00)
    angle   ( -3.023,  -1.543,  -0.744)  ( -3.022,  -1.543,  -0.744)  ( 0.01,  0.01,  0.03)
    strbnd  ( -0.260,  -0.178,  -0.065)  ( -0.260,  -0.178,  -0.065)  ( 0.00,  0.00,  0.00)
    torsion (  0.002,   0.002,  -0.014)  (  0.002,   0.002,  -0.014)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.795,   2.707,   0.829)  (  2.795,   2.707,   0.829)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -0.020,   0.010,  -0.003)  ( -0.019,   0.010,  -0.000)  ( 0.00,  0.00,  0.00)
    bond    ( -0.380,   0.132,  -0.769)  ( -0.379,   0.132,  -0.766)  ( 0.02,  0.00,  0.21)
    angle   (  0.035,  -0.232,  -0.058)  (  0.036,  -0.231,  -0.058)  ( 0.00,  0.01,  0.00)
    strbnd  (  0.014,  -0.329,   0.405)  (  0.014,  -0.329,   0.405)  ( 0.00,  0.00,  0.00)
    torsion ( -0.127,   0.087,   0.078)  ( -0.127,   0.087,   0.078)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.438,   0.351,   0.341)  (  0.438,   0.351,   0.341)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (  0.047,  -0.020,  -0.019)  (  0.048,  -0.019,  -0.017)  ( 0.01,  0.00,  0.00)
    bond    ( -0.570,  -0.032,   0.558)  ( -0.568,  -0.032,   0.559)  ( 0.10,  0.00,  0.09)
    angle   (  0.005,  -0.216,  -0.007)  (  0.006,  -0.216,  -0.007)  ( 0.00,  0.01,  0.00)
    strbnd  (  0.152,  -0.227,  -0.433)  (  0.152,  -0.227,  -0.433)  ( 0.00,  0.00,  0.00)
    torsion ( -0.055,   0.061,  -0.053)  ( -0.055,   0.061,  -0.053)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.515,   0.395,  -0.084)  (  0.515,   0.395,  -0.084)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 1 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 2 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCN.gpr
 # Expected         8.64766, found 8.647657&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/CCCN.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.018,  -0.341,  -0.002)  (  0.027,  -0.334,  -0.000)  ( 0.02,  0.23,  0.00)
    bond    (  5.237,   0.172,   1.390)  (  5.245,   0.178,   1.391)  ( 0.15,  0.09,  0.04)
    angle   ( -3.469,   1.277,  -0.875)  ( -3.468,   1.279,  -0.875)  ( 0.03,  0.14,  0.01)
    strbnd  (  1.478,   0.534,   0.407)  (  1.477,   0.533,   0.407)  ( 0.04,  0.03,  0.00)
    torsion ( -0.001,  -0.000,   0.002)  ( -0.001,  -0.000,   0.003)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.000)  ( -0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.604,  -0.435,  -0.173)  ( -0.604,  -0.435,  -0.173)  ( 0.00,  0.00,  0.00)
    electro ( -2.623,  -1.889,  -0.753)  ( -2.623,  -1.889,  -0.753)  ( 0.00,  0.00,  0.00)
 2       ( -0.035,   0.614,  -0.000)  ( -0.026,   0.621,   0.002)  ( 0.03,  0.42,  0.00)
    bond    ( -4.097,   4.193,  -0.946)  ( -4.089,   4.199,  -0.946)  ( 0.20,  0.13,  0.06)
    angle   (  6.070,  -3.235,   1.494)  (  6.071,  -3.233,   1.494)  ( 0.02,  0.06,  0.02)
    strbnd  ( -2.009,  -0.344,  -0.542)  ( -2.010,  -0.344,  -0.542)  ( 0.03,  0.02,  0.00)
    torsion (  0.001,   0.000,  -0.005)  (  0.001,   0.000,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  0.063,   0.140,   0.024)  (  0.065,   0.142,   0.025)  ( 0.01,  0.04,  0.00)
    bond    (  1.119,   1.704,   0.350)  (  1.120,   1.706,   0.350)  ( 0.10,  0.15,  0.00)
    angle   (  1.146,  -0.809,   0.277)  (  1.146,  -0.809,   0.277)  ( 0.03,  0.02,  0.00)
    strbnd  ( -0.382,  -0.759,  -0.125)  ( -0.382,  -0.759,  -0.125)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,  -0.000,   0.003)  ( -0.001,  -0.000,   0.003)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.717,  -0.020,  -0.190)  ( -0.717,  -0.020,  -0.190)  ( 0.00,  0.00,  0.00)
    electro ( -1.101,   0.024,  -0.290)  ( -1.101,   0.024,  -0.290)  ( 0.00,  0.00,  0.00)
 4       ( -0.062,   0.129,  -0.016)  ( -0.061,   0.132,  -0.016)  ( 0.01,  0.04,  0.00)
    bond    (  1.259,  -2.407,   0.256)  (  1.260,  -2.404,   0.256)  ( 0.06,  0.12,  0.00)
    angle   (  2.423,   1.342,   0.683)  (  2.423,   1.343,   0.683)  ( 0.02,  0.01,  0.00)
    strbnd  ( -0.083,   0.405,  -0.009)  ( -0.083,   0.405,  -0.009)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,   0.000,  -0.004)  (  0.001,   0.000,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.868,  -0.122,  -0.761)  ( -2.868,  -0.122,  -0.761)  ( 0.00,  0.00,  0.00)
    electro ( -0.793,   0.911,  -0.180)  ( -0.793,   0.911,  -0.180)  ( 0.00,  0.00,  0.00)
 5       (  0.040,  -0.110,   0.006)  (  0.041,  -0.107,   0.006)  ( 0.01,  0.03,  0.00)
    bond    ( -0.396,   0.799,  -0.079)  ( -0.395,   0.802,  -0.079)  ( 0.03,  0.24,  0.00)
    angle   ( -2.535,  -1.318,  -0.711)  ( -2.535,  -1.318,  -0.711)  ( 0.02,  0.01,  0.00)
    strbnd  (  0.514,  -0.809,   0.110)  (  0.514,  -0.809,   0.110)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,   0.000,  -0.002)  (  0.000,   0.000,  -0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.000)  ( -0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.567,  -0.187,   0.144)  (  0.567,  -0.187,   0.144)  ( 0.00,  0.00,  0.00)
    electro (  1.889,   1.405,   0.544)  (  1.889,   1.405,   0.544)  ( 0.00,  0.00,  0.00)
 6       (  0.390,  -0.270,   0.111)  (  0.397,  -0.259,   0.113)  ( 0.24,  0.29,  0.02)
    bond    ( -3.396,  -4.839,  -1.050)  ( -3.390,  -4.829,  -1.049)  ( 0.15,  0.21,  0.05)
    angle   ( -3.250,   2.439,  -0.769)  ( -3.249,   2.440,  -0.768)  ( 0.03,  0.02,  0.06)
    strbnd  (  0.484,   0.974,   0.159)  (  0.484,   0.974,   0.159)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,  -0.000,   0.004)  ( -0.001,  -0.000,   0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,   0.000)  ( -0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.977,   0.183,   0.792)  (  2.977,   0.183,   0.792)  ( 0.00,  0.00,  0.00)
    electro (  3.577,   0.972,   0.975)  (  3.577,   0.972,   0.975)  ( 0.00,  0.00,  0.00)
 7       ( -0.447,  -0.202,  -0.130)  ( -0.443,  -0.195,  -0.129)  ( 0.18,  0.16,  0.01)
    bond    (  0.245,   0.341,   0.076)  (  0.249,   0.348,   0.077)  ( 0.10,  0.26,  0.00)
    angle   ( -0.389,   0.299,  -0.100)  ( -0.389,   0.299,  -0.099)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.646,   0.581,   0.189)  (  0.646,   0.581,   0.189)  ( 0.00,  0.00,  0.00)
    electro ( -0.949,  -1.423,  -0.296)  ( -0.949,  -1.423,  -0.296)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 2 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 3 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CH3CONH2.gpr
 # Expected       -28.64465, found -28.644654&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/CH3CONH2.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( -0.124,   0.344,  -0.637)  ( -0.119,   0.347,  -0.633)  ( 0.06,  0.09,  0.26)
    bond    (  4.786,   0.643,  -1.120)  (  4.790,   0.648,  -1.116)  ( 0.08,  0.30,  0.40)
    angle   ( -4.248,  -1.205,   2.065)  ( -4.246,  -1.204,   2.067)  ( 0.04,  0.13,  0.09)
    strbnd  (  1.309,   0.175,  -0.296)  (  1.308,   0.175,  -0.297)  ( 0.05,  0.01,  0.02)
    torsion (  0.038,  -0.180,   0.270)  (  0.038,  -0.180,   0.270)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,   0.019,   0.011)  ( -0.000,   0.016,   0.009)  ( 0.00,  0.01,  0.00)
    vdw     ( -0.992,   0.534,  -0.937)  ( -0.992,   0.534,  -0.937)  ( 0.00,  0.00,  0.00)
    electro ( -1.018,   0.358,  -0.630)  ( -1.018,   0.358,  -0.630)  ( 0.00,  0.00,  0.00)
 2       (  0.112,  -0.042,   0.049)  (  0.120,  -0.040,   0.055)  ( 0.08,  0.01,  0.03)
    bond    ( -6.313,   3.829,  -6.633)  ( -6.307,   3.832,  -6.625)  ( 0.09,  0.07,  0.12)
    angle   ( 14.795,   1.490,  -2.461)  ( 14.798,   1.491,  -2.460)  ( 0.02,  0.05,  0.06)
    strbnd  ( -8.362,  -5.365,   9.214)  ( -8.362,  -5.366,   9.212)  ( 0.01,  0.01,  0.02)
    torsion ( -0.008,  -0.021,  -0.086)  ( -0.008,  -0.021,  -0.086)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.026,   0.015)  (  0.000,   0.024,   0.014)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -0.084,  -0.011,   0.022)  ( -0.082,  -0.016,   0.024)  ( 0.02,  0.01,  0.00)
    bond    ( -1.795,  -1.762,   3.022)  ( -1.793,  -1.760,   3.028)  ( 0.11,  0.11,  0.18)
    angle   ( -8.883,   2.272,  -3.938)  ( -8.882,   2.272,  -3.938)  ( 0.01,  0.00,  0.00)
    strbnd  (  5.080,   5.487,  -9.440)  (  5.080,   5.487,  -9.440)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,  -0.052,  -0.030)  (  0.000,  -0.052,  -0.030)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,   0.025,   0.014)  ( -0.000,   0.018,   0.010)  ( 0.00,  0.02,  0.01)
    vdw     (  2.113,   0.148,  -0.250)  (  2.113,   0.148,  -0.250)  ( 0.00,  0.00,  0.00)
    electro (  3.400,  -6.130,  10.644)  (  3.400,  -6.130,  10.644)  ( 0.00,  0.00,  0.00)
 4       ( -0.053,  -0.027,   0.018)  ( -0.044,   0.044,   0.063)  ( 0.05,  0.19,  0.08)
    bond    (  1.797,  -0.285,   0.335)  (  1.804,  -0.284,   0.341)  ( 0.39,  0.05,  0.18)
    angle   ( -6.314,   1.453,  -2.828)  ( -6.313,   1.453,  -2.827)  ( 0.03,  0.02,  0.04)
    strbnd  (  0.607,  -1.012,   1.791)  (  0.607,  -1.012,   1.791)  ( 0.01,  0.01,  0.02)
    torsion (  0.002,   0.484,   0.279)  (  0.002,   0.484,   0.279)  ( 0.00,  0.02,  0.00)
    oop     (  0.001,  -0.313,  -0.179)  (  0.001,  -0.245,  -0.140)  ( 0.00,  2.14,  0.70)
    vdw     (  3.855,  -0.353,   0.619)  (  3.855,  -0.353,   0.619)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (  0.018,   0.028,  -0.035)  (  0.020,  -0.002,  -0.049)  ( 0.00,  0.08,  0.05)
    bond    ( -2.157,  -2.229,   3.948)  ( -2.156,  -2.228,   3.951)  ( 0.04,  0.04,  0.08)
    angle   ( -0.484,   0.182,  -0.161)  ( -0.483,   0.182,  -0.161)  ( 0.03,  0.00,  0.00)
    strbnd  (  0.577,   0.505,  -0.902)  (  0.577,   0.505,  -0.902)  ( 0.00,  0.00,  0.00)
    torsion ( -0.003,  -0.213,  -0.121)  ( -0.003,  -0.213,  -0.121)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.125,   0.071)  (  0.000,   0.094,   0.053)  ( 0.00,  0.39,  0.12)
    vdw     (  1.088,  -0.556,   0.972)  (  1.088,  -0.556,   0.972)  ( 0.00,  0.00,  0.00)
    electro (  0.996,   2.213,  -3.840)  (  0.996,   2.213,  -3.840)  ( 0.00,  0.00,  0.00)
 6       (  0.021,   0.003,  -0.007)  (  0.026,  -0.021,  -0.020)  ( 0.01,  0.01,  0.01)
    bond    (  3.250,   0.122,  -0.167)  (  3.255,   0.122,  -0.167)  ( 0.15,  0.00,  0.00)
    angle   (  0.458,  -3.605,   6.307)  (  0.458,  -3.605,   6.308)  ( 0.00,  0.00,  0.01)
    strbnd  ( -0.266,  -0.042,   0.065)  ( -0.266,  -0.042,   0.065)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.156,  -0.091)  (  0.001,  -0.156,  -0.091)  ( 0.00,  0.00,  0.00)
    oop     ( -0.001,   0.118,   0.067)  ( -0.001,   0.093,   0.053)  ( 0.00,  0.29,  0.10)
    vdw     ( -0.044,   0.008,  -0.015)  ( -0.044,   0.008,  -0.015)  ( 0.00,  0.00,  0.00)
    electro ( -3.378,   3.559,  -6.174)  ( -3.378,   3.559,  -6.174)  ( 0.00,  0.00,  0.00)
 7       ( -0.050,  -0.182,   0.030)  ( -0.049,  -0.179,   0.030)  ( 0.00,  0.06,  0.00)
    bond    (  0.021,   0.069,  -0.002)  (  0.021,   0.073,  -0.002)  ( 0.00,  0.02,  0.00)
    angle   (  1.553,  -0.437,   0.860)  (  1.553,  -0.437,   0.860)  ( 0.03,  0.00,  0.04)
    strbnd  (  0.368,   0.645,  -0.047)  (  0.368,   0.645,  -0.047)  ( 0.00,  0.00,  0.00)
    torsion ( -0.015,   0.001,  -0.149)  ( -0.015,   0.001,  -0.149)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.977,  -0.460,  -0.633)  ( -1.977,  -0.460,  -0.633)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -0.053,   0.067,   0.183)  ( -0.052,   0.068,   0.186)  ( 0.00,  0.01,  0.05)
    bond    (  0.017,  -0.029,  -0.055)  (  0.018,  -0.028,  -0.053)  ( 0.00,  0.00,  0.01)
    angle   (  1.567,  -0.533,   0.815)  (  1.568,  -0.532,   0.815)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.370,  -0.276,  -0.582)  (  0.370,  -0.276,  -0.582)  ( 0.00,  0.00,  0.00)
    torsion ( -0.016,   0.130,  -0.075)  ( -0.016,   0.130,  -0.075)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.992,   0.775,   0.081)  ( -1.992,   0.775,   0.081)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (  0.179,  -0.202,   0.342)  (  0.180,  -0.201,   0.344)  ( 0.02,  0.02,  0.08)
    bond    (  0.367,  -0.375,   0.641)  (  0.368,  -0.374,   0.643)  ( 0.02,  0.03,  0.13)
    angle   (  1.546,   0.380,  -0.664)  (  1.547,   0.380,  -0.664)  ( 0.03,  0.01,  0.01)
    strbnd  (  0.317,  -0.116,   0.199)  (  0.317,  -0.116,   0.199)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.006,   0.003)  ( -0.000,   0.006,   0.003)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.052,  -0.097,   0.162)  ( -2.052,  -0.097,   0.162)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 3 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 4 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/COOCH3.gpr
 # Expected        -2.84895, found -2.848953&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/COOCH3.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.431,   0.382,   0.004)  (  0.436,   0.388,   0.009)  ( 0.22,  0.23,  0.00)
    bond    ( -4.893,   2.856,  -3.005)  ( -4.889,   2.861,  -3.000)  ( 0.09,  0.16,  0.15)
    angle   (  1.859,  -4.639,   2.751)  (  1.861,  -4.637,   2.752)  ( 0.10,  0.04,  0.06)
    strbnd  (  0.352,  -0.450,   0.642)  (  0.351,  -0.450,   0.641)  ( 0.05,  0.03,  0.04)
    torsion ( -0.296,  -0.439,   0.009)  ( -0.296,  -0.439,   0.009)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.689,   2.322,   0.608)  (  5.689,   2.322,   0.608)  ( 0.00,  0.00,  0.00)
    electro ( -2.279,   0.731,  -1.001)  ( -2.279,   0.731,  -1.001)  ( 0.00,  0.00,  0.00)
 2       ( -0.776,  -0.622,  -0.218)  ( -0.780,  -0.606,  -0.189)  ( 0.23,  0.97,  0.62)
    bond    (  7.306,  -2.470,   3.157)  (  7.312,  -2.468,   3.158)  ( 0.07,  0.08,  0.02)
    angle   (  2.892,   8.647,  -4.003)  (  2.893,   8.648,  -4.002)  ( 0.01,  0.02,  0.01)
    strbnd  (-10.808,  -7.207,  -0.152)  (-10.809,  -7.207,  -0.152)  ( 0.00,  0.00,  0.00)
    torsion ( -0.221,   0.486,   0.955)  ( -0.221,   0.486,   0.955)  ( 0.00,  0.00,  0.01)
    oop     (  0.054,  -0.078,  -0.175)  (  0.045,  -0.066,  -0.147)  ( 0.04,  0.09,  0.48)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  0.077,  -0.215,  -0.263)  (  0.077,  -0.212,  -0.263)  ( 0.01,  0.07,  0.02)
    bond    (  0.045,   0.977,   0.187)  (  0.045,   0.980,   0.187)  ( 0.00,  0.32,  0.00)
    angle   ( -5.704,   0.511,  -1.299)  ( -5.703,   0.511,  -1.299)  ( 0.01,  0.00,  0.04)
    strbnd  ( -0.435,   0.449,  -0.226)  ( -0.435,   0.449,  -0.226)  ( 0.00,  0.00,  0.00)
    torsion ( -0.156,  -0.037,   0.231)  ( -0.156,  -0.037,   0.231)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.326,  -2.115,   0.844)  (  6.326,  -2.115,   0.844)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( -0.154,  -0.035,   0.283)  ( -0.151,  -0.034,   0.284)  ( 0.04,  0.00,  0.03)
    bond    ( -0.518,  -0.212,   0.225)  ( -0.515,  -0.211,   0.226)  ( 0.13,  0.01,  0.01)
    angle   (  0.309,  -0.045,   0.666)  (  0.310,  -0.044,   0.666)  ( 0.01,  0.00,  0.03)
    strbnd  ( -0.108,   0.417,  -0.398)  ( -0.108,   0.418,  -0.398)  ( 0.00,  0.00,  0.00)
    torsion ( -0.012,  -0.211,  -0.225)  ( -0.012,  -0.211,  -0.225)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.175,   0.014,   0.016)  (  0.175,   0.014,   0.016)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -0.220,  -0.180,  -0.107)  ( -0.219,  -0.179,  -0.104)  ( 0.01,  0.01,  0.04)
    bond    (  0.005,  -0.076,  -0.456)  (  0.005,  -0.076,  -0.453)  ( 0.00,  0.00,  0.15)
    angle   ( -1.188,  -0.996,   0.154)  ( -1.187,  -0.996,   0.154)  ( 0.05,  0.05,  0.00)
    strbnd  ( -0.441,   0.249,  -0.473)  ( -0.441,   0.249,  -0.473)  ( 0.00,  0.00,  0.00)
    torsion (  0.429,   0.568,  -0.091)  (  0.429,   0.568,  -0.091)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.975,   0.076,   0.758)  (  0.975,   0.076,   0.758)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (  0.815,   1.141,  -0.215)  (  0.859,   1.097,  -0.325)  ( 3.58,  3.85,  2.36)
    bond    ( -0.770,  -0.798,   0.110)  ( -0.761,  -0.793,   0.112)  ( 0.74,  0.41,  0.02)
    angle   ( -6.533,  -4.058,  -0.587)  ( -6.531,  -4.056,  -0.587)  ( 0.02,  0.05,  0.02)
    strbnd  ( 13.048,   4.199,   2.149)  ( 13.046,   4.199,   2.149)  ( 0.02,  0.01,  0.01)
    torsion (  0.259,  -0.370,  -0.890)  (  0.259,  -0.370,  -0.889)  ( 0.00,  0.00,  0.01)
    oop     ( -0.183,   0.268,   0.599)  ( -0.148,   0.217,   0.486)  ( 0.64,  1.36,  6.75)
    vdw     ( -5.005,   1.900,  -1.595)  ( -5.005,   1.900,  -1.595)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( -0.169,  -0.110,  -0.044)  ( -0.176,  -0.088,   0.003)  ( 0.12,  0.24,  0.21)
    bond    ( -1.232,   0.565,  -0.626)  ( -1.226,   0.566,  -0.625)  ( 0.52,  0.08,  0.10)
    angle   ( -0.414,  -0.699,   0.179)  ( -0.414,  -0.698,   0.179)  ( 0.01,  0.04,  0.00)
    strbnd  ( -1.351,   0.487,  -0.628)  ( -1.351,   0.487,  -0.628)  ( 0.01,  0.00,  0.00)
    torsion ( -0.063,   0.092,   0.208)  ( -0.063,   0.092,   0.208)  ( 0.00,  0.00,  0.00)
    oop     (  0.065,  -0.095,  -0.213)  (  0.051,  -0.075,  -0.167)  ( 0.09,  0.19,  0.96)
    vdw     ( -0.079,   0.007,  -0.027)  ( -0.079,   0.007,  -0.027)  ( 0.00,  0.00,  0.00)
    electro (  2.906,  -0.466,   1.064)  (  2.906,  -0.466,   1.064)  ( 0.00,  0.00,  0.00)
 8       ( -0.035,  -0.388,   0.541)  ( -0.047,  -0.367,   0.584)  ( 0.04,  0.83,  2.29)
    bond    (  0.028,  -0.862,   0.394)  (  0.028,  -0.860,   0.395)  ( 0.00,  0.24,  0.02)
    angle   (  8.772,   1.272,   2.136)  (  8.772,   1.272,   2.136)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.253,   1.856,  -0.912)  ( -0.253,   1.856,  -0.912)  ( 0.00,  0.00,  0.00)
    torsion (  0.061,  -0.089,  -0.197)  (  0.061,  -0.089,  -0.197)  ( 0.00,  0.00,  0.00)
    oop     (  0.065,  -0.096,  -0.213)  (  0.052,  -0.077,  -0.171)  ( 0.08,  0.18,  0.89)
    vdw     ( -8.081,  -2.204,  -0.604)  ( -8.081,  -2.204,  -0.604)  ( 0.00,  0.00,  0.00)
    electro ( -0.627,  -0.265,  -0.063)  ( -0.627,  -0.265,  -0.063)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 4 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 5 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/NCH3-3.gpr
 # Expected        21.22882, found 21.228816&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/NCH3-3.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  6.021,  -8.841,  15.336)  (  6.025,  -8.837,  15.339)  ( 0.07,  0.04,  0.02)
    bond    ( 13.697, -19.381,  33.622)  ( 13.700, -19.379,  33.624)  ( 0.02,  0.02,  0.01)
    angle   ( -4.188,   5.759,  -9.944)  ( -4.187,   5.761,  -9.942)  ( 0.03,  0.02,  0.02)
    strbnd  ( -3.294,   4.646,  -8.104)  ( -3.295,   4.645,  -8.105)  ( 0.02,  0.01,  0.01)
    torsion ( -0.194,   0.135,  -0.238)  ( -0.194,   0.135,  -0.238)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( -9.933,  -2.704,   4.639)  ( -9.929,  -2.699,   4.644)  ( 0.04,  0.19,  0.11)
    bond    (-13.151,   0.001,   0.002)  (-13.148,   0.005,   0.006)  ( 0.03,  0.00,  0.00)
    angle   ( -5.431,  -2.186,   3.739)  ( -5.429,  -2.184,   3.741)  ( 0.03,  0.08,  0.04)
    strbnd  (  4.098,  -2.031,   3.530)  (  4.097,  -2.031,   3.529)  ( 0.04,  0.02,  0.01)
    torsion ( -0.000,   0.166,  -0.285)  (  0.000,   0.166,  -0.285)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.551,   1.346,  -2.346)  (  4.551,   1.346,  -2.346)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  3.813,   8.396,   5.795)  (  3.819,   8.400,   5.800)  ( 0.14,  0.05,  0.09)
    bond    (  4.362,  12.392,  -0.017)  (  4.366,  12.395,  -0.013)  ( 0.09,  0.03,  0.01)
    angle   (  3.888,   4.351,   3.744)  (  3.890,   4.353,   3.746)  ( 0.05,  0.04,  0.04)
    strbnd  (  0.568,  -4.531,   3.529)  (  0.568,  -4.532,   3.529)  ( 0.03,  0.03,  0.01)
    torsion (  0.479,  -0.170,   0.882)  (  0.479,  -0.170,   0.882)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.484,  -3.646,  -2.343)  ( -5.484,  -3.646,  -2.343)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (  3.726,  -9.185,  -4.409)  (  3.731,  -9.180,  -4.405)  ( 0.14,  0.05,  0.09)
    bond    (  4.377,  -6.197, -10.754)  (  4.381,  -6.194, -10.751)  ( 0.09,  0.06,  0.03)
    angle   (  3.836,  -5.397,  -1.958)  (  3.837,  -5.396,  -1.956)  ( 0.05,  0.03,  0.09)
    strbnd  (  0.555,  -0.774,   5.727)  (  0.555,  -0.774,   5.725)  ( 0.03,  0.04,  0.02)
    torsion (  0.478,  -0.675,   0.585)  (  0.478,  -0.675,   0.585)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.520,   3.858,   1.991)  ( -5.520,   3.858,   1.991)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -2.313,  28.066,   0.105)  ( -2.312,  28.068,   0.106)  ( 0.04,  0.01,  0.01)
    bond    ( -9.351,  26.406,  -0.000)  ( -9.351,  26.409,   0.000)  ( 0.00,  0.01,  0.00)
    angle   (  1.760,   0.623,  -0.007)  (  1.760,   0.623,  -0.006)  ( 0.03,  0.00,  0.00)
    strbnd  ( -1.908,  -0.349,   0.000)  ( -1.908,  -0.349,   0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,   0.152)  (  0.000,   0.000,   0.152)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.187,   1.385,  -0.040)  (  7.187,   1.385,  -0.040)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( -9.233, -13.275,  23.034)  ( -9.232, -13.274,  23.036)  ( 0.01,  0.01,  0.01)
    bond    ( -9.334, -13.210,  22.872)  ( -9.334, -13.209,  22.874)  ( 0.00,  0.01,  0.01)
    angle   (  1.828,  -0.303,   0.571)  (  1.829,  -0.302,   0.572)  ( 0.02,  0.01,  0.01)
    strbnd  ( -1.910,   0.171,  -0.295)  ( -1.910,   0.171,  -0.295)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.000,   0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.183,   0.066,  -0.115)  (  0.183,   0.066,  -0.115)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( -2.162, -14.129, -24.316)  ( -2.161, -14.129, -24.314)  ( 0.04,  0.01,  0.01)
    bond    ( -9.329, -13.205, -22.882)  ( -9.329, -13.205, -22.880)  ( 0.00,  0.01,  0.01)
    angle   (  1.840,  -0.299,  -0.578)  (  1.840,  -0.299,  -0.578)  ( 0.02,  0.01,  0.01)
    strbnd  ( -1.909,   0.172,   0.297)  ( -1.909,   0.172,   0.297)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.133,   0.077)  (  0.000,  -0.133,   0.077)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.238,  -0.665,  -1.230)  (  7.238,  -0.665,  -1.230)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 27.568,  -1.841,  -1.569)  ( 27.570,  -1.840,  -1.569)  ( 0.01,  0.04,  0.04)
    bond    ( 28.025,  -0.000,  -0.000)  ( 28.028,   0.000,   0.000)  ( 0.01,  0.00,  0.00)
    angle   ( -0.000,  -1.856,  -0.010)  (  0.000,  -1.856,  -0.009)  ( 0.00,  0.03,  0.00)
    strbnd  (  0.304,   1.915,  -0.000)  (  0.304,   1.915,  -0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.469)  (  0.000,   0.000,  -0.469)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.762,  -1.899,  -1.090)  ( -0.762,  -1.899,  -1.090)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-11.584,  11.851,  21.981)  (-11.583,  11.852,  21.983)  ( 0.01,  0.01,  0.01)
    bond    ( -9.334,  13.208,  22.872)  ( -9.334,  13.209,  22.874)  ( 0.00,  0.01,  0.01)
    angle   ( -0.885,  -1.619,   0.574)  ( -0.885,  -1.619,   0.574)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.798,   1.743,  -0.296)  (  0.798,   1.743,  -0.296)  ( 0.00,  0.00,  0.00)
    torsion ( -0.382,   0.135,  -0.234)  ( -0.382,   0.135,  -0.234)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.780,  -1.617,  -0.934)  ( -1.780,  -1.617,  -0.934)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-10.930,   9.420, -22.678)  (-10.929,   9.421, -22.676)  ( 0.01,  0.01,  0.01)
    bond    ( -9.322,  13.191, -22.863)  ( -9.321,  13.191, -22.861)  ( 0.00,  0.01,  0.01)
    angle   ( -0.882,  -1.631,  -0.581)  ( -0.882,  -1.630,  -0.581)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.799,   1.742,   0.299)  (  0.799,   1.742,   0.299)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.000,  -0.001)  (  0.001,  -0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.527,  -3.881,   0.468)  ( -1.527,  -3.881,   0.468)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 27.570,   2.262,   0.809)  ( 27.573,   2.263,   0.809)  ( 0.01,  0.03,  0.05)
    bond    ( 28.025,  -0.007,  -0.015)  ( 28.028,  -0.007,  -0.015)  ( 0.01,  0.00,  0.00)
    angle   (  0.001,   0.926,   1.618)  (  0.001,   0.926,   1.618)  ( 0.00,  0.04,  0.03)
    strbnd  (  0.305,  -0.958,  -1.660)  (  0.305,  -0.958,  -1.660)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.407,  -0.235)  ( -0.000,   0.407,  -0.235)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.761,   1.895,   1.101)  ( -0.761,   1.895,   1.101)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-10.972,  14.917, -19.519)  (-10.971,  14.918, -19.517)  ( 0.01,  0.01,  0.01)
    bond    ( -9.344,  13.207, -22.875)  ( -9.344,  13.208, -22.874)  ( 0.00,  0.01,  0.01)
    angle   ( -0.889,   1.308,   1.118)  ( -0.889,   1.309,   1.119)  ( 0.03,  0.03,  0.02)
    strbnd  (  0.798,  -1.129,  -1.364)  (  0.798,  -1.129,  -1.364)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,  -0.001,   0.000)  ( -0.001,  -0.001,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.536,   1.532,   3.602)  ( -1.536,   1.532,   3.602)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-11.601, -24.965,   0.763)  (-11.600, -24.963,   0.763)  ( 0.01,  0.01,  0.05)
    bond    ( -9.343, -26.426,   0.015)  ( -9.342, -26.424,   0.015)  ( 0.00,  0.01,  0.00)
    angle   ( -0.888,   0.315,   1.704)  ( -0.887,   0.315,   1.705)  ( 0.03,  0.00,  0.03)
    strbnd  (  0.799,  -0.614,  -1.659)  (  0.799,  -0.614,  -1.659)  ( 0.00,  0.00,  0.00)
    torsion ( -0.381,   0.135,  -0.233)  ( -0.381,   0.135,  -0.233)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.789,   1.626,   0.936)  ( -1.789,   1.626,   0.936)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 5 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 6 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/PCH3-3.gpr
 # Expected       118.74484, found 118.744836&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/PCH3-3.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-94.849, 134.077, -232.261)  (-94.840, 134.085, -232.257)  ( 0.01,  0.01,  0.00)
    bond    (-98.615, 139.541, -241.698)  (-98.607, 139.548, -241.694)  ( 0.01,  0.01,  0.00)
    angle   (-17.077,  24.042, -41.606)  (-17.076,  24.043, -41.605)  ( 0.01,  0.00,  0.00)
    strbnd  ( 20.845, -29.505,  51.044)  ( 20.845, -29.506,  51.044)  ( 0.00,  0.00,  0.00)
    torsion ( -0.002,  -0.001,  -0.002)  ( -0.002,  -0.001,  -0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (267.229,   1.097,  -1.985)  (267.239,   1.101,  -1.981)  ( 0.00,  0.37,  0.20)
    bond    (324.092,   0.002,   0.003)  (324.102,   0.005,   0.006)  ( 0.00,  0.00,  0.00)
    angle   ( -7.067,  -9.049,  15.613)  ( -7.066,  -9.047,  15.614)  ( 0.02,  0.02,  0.01)
    strbnd  (-54.347,   8.796, -15.254)  (-54.349,   8.796, -15.255)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.001,  -0.000)  (  0.000,   0.001,  -0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.551,   1.346,  -2.346)  (  4.551,   1.346,  -2.346)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-92.994, -251.370,  -1.993)  (-92.989, -251.361,  -1.989)  ( 0.01,  0.00,  0.20)
    bond    (-108.221, -305.529,  -0.016)  (-108.218, -305.520,  -0.013)  ( 0.00,  0.00,  0.00)
    angle   ( 10.871,   3.619,  15.618)  ( 10.872,   3.621,  15.619)  ( 0.01,  0.04,  0.01)
    strbnd  (  9.840,  54.186, -15.254)  (  9.840,  54.184, -15.254)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.000,   0.003)  (  0.001,  -0.000,   0.003)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.484,  -3.646,  -2.343)  ( -5.484,  -3.646,  -2.343)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-92.879, 127.455, 216.653)  (-92.874, 127.461, 216.661)  ( 0.01,  0.00,  0.00)
    bond    (-107.982, 152.791, 264.561)  (-107.978, 152.795, 264.568)  ( 0.00,  0.00,  0.00)
    angle   ( 10.825, -15.317,   4.617)  ( 10.827, -15.315,   4.619)  ( 0.01,  0.01,  0.03)
    strbnd  (  9.798, -13.878, -54.515)  (  9.798, -13.878, -54.516)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.001,  -0.001)  ( -0.000,   0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.520,   3.858,   1.991)  ( -5.520,   3.858,   1.991)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 14.020,  33.684,  -0.046)  ( 14.021,  33.686,  -0.046)  ( 0.01,  0.01,  0.00)
    bond    ( -9.351,  26.406,  -0.000)  ( -9.351,  26.409,   0.000)  ( 0.00,  0.01,  0.00)
    angle   (  2.316,   0.820,  -0.007)  (  2.316,   0.820,  -0.006)  ( 0.02,  0.00,  0.00)
    strbnd  ( 13.869,   5.072,   0.000)  ( 13.869,   5.072,   0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.187,   1.385,  -0.040)  (  7.187,   1.385,  -0.040)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (  7.090, -16.075,  27.884)  (  7.091, -16.074,  27.886)  ( 0.01,  0.01,  0.01)
    bond    ( -9.334, -13.210,  22.872)  ( -9.334, -13.209,  22.874)  ( 0.00,  0.01,  0.01)
    angle   (  2.371,  -0.399,   0.737)  (  2.371,  -0.398,   0.737)  ( 0.02,  0.01,  0.01)
    strbnd  ( 13.871,  -2.534,   4.389)  ( 13.871,  -2.534,   4.389)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.000,   0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.183,   0.066,  -0.115)  (  0.183,   0.066,  -0.115)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 14.159, -16.794, -29.238)  ( 14.160, -16.793, -29.236)  ( 0.01,  0.01,  0.01)
    bond    ( -9.329, -13.205, -22.882)  ( -9.329, -13.205, -22.880)  ( 0.00,  0.01,  0.01)
    angle   (  2.378,  -0.394,  -0.743)  (  2.378,  -0.394,  -0.742)  ( 0.02,  0.01,  0.01)
    strbnd  ( 13.873,  -2.530,  -4.384)  ( 13.873,  -2.530,  -4.384)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.001,   0.000)  (  0.000,  -0.001,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.238,  -0.665,  -1.230)  (  7.238,  -0.665,  -1.230)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 27.412, -19.113,  -1.101)  ( 27.414, -19.112,  -1.100)  ( 0.01,  0.00,  0.05)
    bond    ( 28.025,  -0.000,  -0.000)  ( 28.028,   0.000,   0.000)  ( 0.01,  0.00,  0.00)
    angle   ( -0.000,  -2.447,  -0.010)  (  0.000,  -2.447,  -0.009)  ( 0.00,  0.02,  0.00)
    strbnd  (  0.148, -14.767,  -0.000)  (  0.148, -14.767,  -0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.762,  -1.899,  -1.090)  ( -0.762,  -1.899,  -1.090)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-19.291,  -2.738,  27.067)  (-19.291,  -2.737,  27.069)  ( 0.00,  0.04,  0.01)
    bond    ( -9.334,  13.208,  22.872)  ( -9.334,  13.209,  22.874)  ( 0.00,  0.01,  0.01)
    angle   ( -1.157,  -2.100,   0.740)  ( -1.157,  -2.099,   0.740)  ( 0.03,  0.02,  0.01)
    strbnd  ( -7.020, -12.229,   4.389)  ( -7.020, -12.229,   4.389)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,  -0.000,   0.000)  (  0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.780,  -1.617,  -0.934)  ( -1.780,  -1.617,  -0.934)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-19.016,  -5.032, -27.526)  (-19.015,  -5.031, -27.524)  ( 0.00,  0.02,  0.01)
    bond    ( -9.322,  13.191, -22.863)  ( -9.321,  13.191, -22.861)  ( 0.00,  0.01,  0.01)
    angle   ( -1.152,  -2.108,  -0.747)  ( -1.152,  -2.107,  -0.746)  ( 0.03,  0.02,  0.01)
    strbnd  ( -7.016, -12.234,  -4.385)  ( -7.016, -12.234,  -4.385)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.000,  -0.000)  (  0.001,  -0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.527,  -3.881,   0.468)  ( -1.527,  -3.881,   0.468)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 27.424,  10.493,  15.999)  ( 27.427,  10.494,  16.000)  ( 0.01,  0.01,  0.00)
    bond    ( 28.025,  -0.007,  -0.015)  ( 28.028,  -0.007,  -0.015)  ( 0.01,  0.00,  0.00)
    angle   (  0.001,   1.221,   2.128)  (  0.001,   1.221,   2.129)  ( 0.00,  0.03,  0.02)
    strbnd  (  0.159,   7.384,  12.785)  (  0.159,   7.384,  12.785)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.001,  -0.001)  ( -0.000,   0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.761,   1.895,   1.101)  ( -0.761,   1.895,   1.101)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-19.052,  26.348,  -9.424)  (-19.051,  26.349,  -9.422)  ( 0.00,  0.00,  0.02)
    bond    ( -9.344,  13.207, -22.875)  ( -9.344,  13.208, -22.874)  ( 0.00,  0.01,  0.01)
    angle   ( -1.160,   1.692,   1.451)  ( -1.160,   1.692,   1.451)  ( 0.03,  0.02,  0.01)
    strbnd  ( -7.010,   9.918,   8.398)  ( -7.010,   9.918,   8.398)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,  -0.001,   0.000)  ( -0.001,  -0.001,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.536,   1.532,   3.602)  ( -1.536,   1.532,   3.602)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-19.294, -22.069,  15.940)  (-19.293, -22.066,  15.940)  ( 0.00,  0.01,  0.00)
    bond    ( -9.343, -26.426,   0.015)  ( -9.342, -26.424,   0.015)  ( 0.00,  0.01,  0.00)
    angle   ( -1.157,   0.410,   2.200)  ( -1.157,   0.410,   2.200)  ( 0.03,  0.00,  0.02)
    strbnd  ( -7.007,   2.322,  12.788)  ( -7.007,   2.322,  12.788)  ( 0.00,  0.00,  0.00)
    torsion (  0.002,  -0.001,   0.001)  (  0.002,  -0.001,   0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.789,   1.626,   0.936)  ( -1.789,   1.626,   0.936)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 6 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 7 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/atorvastin.gpr
 # Expected        78.32574, found 78.325740&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/atorvastin.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.188,  -0.341,  -0.447)  (  0.196,  -0.337,  -0.439)  ( 0.15,  0.15,  0.36)
    bond    ( 12.215,  -2.444,  -2.026)  ( 12.221,  -2.440,  -2.025)  ( 0.05,  0.20,  0.04)
    angle   (  1.031,   1.567,   0.419)  (  1.033,   1.568,   0.419)  ( 0.17,  0.09,  0.01)
    strbnd  ( -0.276,   0.595,   0.200)  ( -0.276,   0.595,   0.200)  ( 0.00,  0.01,  0.00)
    torsion (  0.026,  -0.060,   0.134)  (  0.026,  -0.060,   0.135)  ( 0.00,  0.00,  0.02)
    oop     ( -0.003,   0.011,  -0.034)  ( -0.003,   0.009,  -0.028)  ( 0.00,  0.00,  0.02)
    vdw     (-13.301,   0.238,   1.219)  (-13.301,   0.238,   1.219)  ( 0.00,  0.00,  0.00)
    electro (  0.497,  -0.246,  -0.360)  (  0.497,  -0.246,  -0.360)  ( 0.00,  0.00,  0.00)
 2       (  0.154,  -0.533,   0.257)  (  0.158,  -0.515,   0.227)  ( 0.07,  0.95,  0.78)
    bond    (  8.668,  -9.202,  -3.657)  (  8.674,  -9.197,  -3.657)  ( 0.06,  0.06,  0.02)
    angle   (  1.060,  -2.236,  -0.846)  (  1.061,  -2.234,  -0.846)  ( 0.15,  0.07,  0.02)
    strbnd  ( -2.306,  -0.145,   0.209)  ( -2.306,  -0.145,   0.209)  ( 0.01,  0.00,  0.00)
    torsion ( -0.009,  -0.028,   0.128)  ( -0.009,  -0.028,   0.129)  ( 0.00,  0.00,  0.02)
    oop     (  0.014,  -0.067,   0.198)  (  0.012,  -0.056,   0.166)  ( 0.00,  0.08,  0.64)
    vdw     ( -6.352,  11.522,   4.701)  ( -6.352,  11.522,   4.701)  ( 0.00,  0.00,  0.00)
    electro ( -0.922,  -0.376,  -0.475)  ( -0.922,  -0.376,  -0.475)  ( 0.00,  0.00,  0.00)
 3       ( -0.038,  -0.435,   0.232)  ( -0.028,  -0.443,   0.277)  ( 0.04,  0.35,  1.04)
    bond    ( -6.462, -14.039,  -4.598)  ( -6.457, -14.034,  -4.597)  ( 0.08,  0.04,  0.02)
    angle   (  4.729,   7.796,   2.474)  (  4.731,   7.798,   2.474)  ( 0.04,  0.02,  0.01)
    strbnd  (  3.737,  -3.706,  -1.522)  (  3.737,  -3.707,  -1.522)  ( 0.00,  0.00,  0.00)
    torsion (  0.300,  -2.114,   5.663)  (  0.300,  -2.114,   5.664)  ( 0.00,  0.01,  0.02)
    oop     ( -0.022,   0.095,  -0.277)  ( -0.019,   0.080,  -0.234)  ( 0.01,  0.14,  1.19)
    vdw     ( -2.173,  13.069,   0.311)  ( -2.172,  13.069,   0.311)  ( 0.01,  0.00,  0.00)
    electro ( -0.148,  -1.535,  -1.819)  ( -0.148,  -1.535,  -1.819)  ( 0.00,  0.00,  0.00)
 4       (  0.395,   0.197,   0.303)  (  0.401,   0.407,   0.178)  ( 0.23,  4.13,  3.78)
    bond    ( -4.734,   2.347,   1.095)  ( -4.729,   2.352,   1.096)  ( 0.11,  0.20,  0.07)
    angle   (-10.062,  -2.611,   4.140)  (-10.060,  -2.609,   4.140)  ( 0.02,  0.07,  0.01)
    strbnd  (  3.811,   0.602,   0.274)  (  3.811,   0.601,   0.274)  ( 0.00,  0.01,  0.00)
    torsion ( -0.109,   2.386,  -1.969)  ( -0.109,   2.387,  -1.968)  ( 0.00,  0.01,  0.06)
    oop     (  0.013,  -1.116,   0.755)  (  0.012,  -0.912,   0.628)  ( 0.00, 18.25,  9.61)
    vdw     (  9.138,  -2.304,  -5.262)  (  9.139,  -2.304,  -5.262)  ( 0.00,  0.00,  0.00)
    electro (  2.337,   0.892,   1.269)  (  2.337,   0.892,   1.269)  ( 0.00,  0.00,  0.00)
 5       (  0.329,  -0.092,  -0.786)  (  0.326,  -0.033,  -0.929)  ( 0.11,  0.54, 11.24)
    bond    ( -9.877,  12.321,   6.024)  ( -9.872,  12.326,   6.025)  ( 0.05,  0.04,  0.01)
    angle   (  0.777,  -3.545,  -1.191)  (  0.779,  -3.544,  -1.191)  ( 0.13,  0.04,  0.02)
    strbnd  (  3.218,   2.140,   0.609)  (  3.218,   2.140,   0.609)  ( 0.01,  0.01,  0.00)
    torsion (  0.010,   0.739,  -2.169)  (  0.010,   0.739,  -2.168)  ( 0.00,  0.01,  0.06)
    oop     (  0.069,  -0.304,   0.854)  (  0.058,  -0.251,   0.709)  ( 0.07,  1.59, 12.40)
    vdw     (  4.433, -11.904,  -4.594)  (  4.433, -11.904,  -4.594)  ( 0.00,  0.00,  0.00)
    electro (  1.700,   0.460,  -0.319)  (  1.700,   0.460,  -0.319)  ( 0.00,  0.00,  0.00)
 6       (  0.290,   0.013,  -0.920)  (  0.296,   0.020,  -0.923)  ( 0.17,  0.01,  0.28)
    bond    ( 10.935,  11.123,   2.675)  ( 10.940,  11.128,   2.676)  ( 0.05,  0.04,  0.03)
    angle   ( -1.841,   0.246,   0.285)  ( -1.839,   0.247,   0.285)  ( 0.09,  0.04,  0.01)
    strbnd  ( -0.658,   0.437,   0.063)  ( -0.658,   0.437,   0.063)  ( 0.01,  0.01,  0.00)
    torsion ( -0.004,   0.151,  -0.129)  ( -0.004,   0.151,  -0.128)  ( 0.00,  0.00,  0.02)
    oop     ( -0.010,   0.040,  -0.102)  ( -0.011,   0.041,  -0.108)  ( 0.00,  0.00,  0.05)
    vdw     ( -7.809, -11.860,  -3.494)  ( -7.809, -11.860,  -3.494)  ( 0.00,  0.00,  0.00)
    electro ( -0.323,  -0.125,  -0.217)  ( -0.323,  -0.125,  -0.217)  ( 0.00,  0.00,  0.00)
 7       ( -0.284,  -0.843,  -2.698)  ( -0.266,  -1.684,  -2.018)  ( 0.51, 70.87, 25.21)
    bond    ( -8.014,   7.203,  10.301)  ( -8.008,   7.206,  10.304)  ( 0.07,  0.04,  0.04)
    angle   ( 23.571,  -6.002, -12.520)  ( 23.573,  -6.000, -12.519)  ( 0.01,  0.02,  0.01)
    strbnd  ( -5.963,   1.001,   0.741)  ( -5.964,   1.001,   0.741)  ( 0.01,  0.02,  0.02)
    torsion ( -2.504, -12.743,   5.344)  ( -2.504, -12.742,   5.344)  ( 0.00,  0.00,  0.01)
    oop     (  0.288,   5.178,  -4.155)  (  0.299,   4.332,  -3.480)  ( 0.31, 16.33, 16.25)
    vdw     ( -1.708,   5.497,  -2.750)  ( -1.708,   5.497,  -2.750)  ( 0.01,  0.00,  0.00)
    electro ( -5.954,  -0.978,   0.342)  ( -5.954,  -0.978,   0.342)  ( 0.00,  0.00,  0.00)
 8       ( -2.332,   4.648,   9.846)  ( -2.348,   5.520,   9.515)  ( 0.68, 18.77,  3.37)
    bond    (  7.906,   3.155,   6.283)  (  7.911,   3.158,   6.291)  ( 0.07,  0.08,  0.13)
    angle   (-11.927,  11.968,  23.696)  (-11.925,  11.969,  23.697)  ( 0.02,  0.01,  0.01)
    strbnd  ( -0.172,  -3.227,  -7.634)  ( -0.173,  -3.227,  -7.635)  ( 0.02,  0.01,  0.01)
    torsion ( -1.724,   6.797, -17.832)  ( -1.724,   6.797, -17.832)  ( 0.00,  0.01,  0.00)
    oop     ( -0.107,  -5.155,   2.589)  ( -0.130,  -4.287,   2.249)  ( 0.24, 16.84, 13.14)
    vdw     (  4.239,  -5.387,   2.000)  (  4.239,  -5.387,   2.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.546,  -3.502,   0.745)  ( -0.546,  -3.502,   0.745)  ( 0.00,  0.00,  0.00)
 9       (  2.586,  -3.839,  -7.626)  (  2.607,  -4.217,  -7.411)  ( 0.81,  9.83,  2.81)
    bond    (  6.677,  -9.432, -17.814)  (  6.678,  -9.430, -17.808)  ( 0.01,  0.02,  0.03)
    angle   ( -3.223,  -0.345,  -1.026)  ( -3.222,  -0.345,  -1.026)  ( 0.03,  0.00,  0.01)
    strbnd  ( -3.032,   4.056,   7.810)  ( -3.032,   4.056,   7.810)  ( 0.01,  0.00,  0.00)
    torsion ( -0.306,   6.009,  -3.297)  ( -0.306,   6.009,  -3.297)  ( 0.00,  0.00,  0.00)
    oop     ( -0.071,   1.455,  -0.797)  ( -0.052,   1.075,  -0.589)  ( 0.14, 26.08, 16.60)
    vdw     (  7.280,  -5.048,  11.866)  (  7.280,  -5.048,  11.866)  ( 0.00,  0.00,  0.00)
    electro ( -4.739,  -0.534,  -4.368)  ( -4.739,  -0.534,  -4.368)  ( 0.00,  0.00,  0.00)
10       (  1.000,  -0.547,  -0.386)  (  0.964,  -0.759,  -0.741)  ( 3.60, 11.58, 13.71)
    bond    (  9.695,  23.920,  -3.884)  (  9.701,  23.924,  -3.884)  ( 0.06,  0.02,  0.01)
    angle   (-15.143, -13.685, -10.389)  (-15.141, -13.683, -10.388)  ( 0.01,  0.01,  0.01)
    strbnd  (  1.542, -11.914,   0.169)  (  1.542, -11.915,   0.169)  ( 0.03,  0.01,  0.00)
    torsion (  1.960,  -0.605,  10.880)  (  1.960,  -0.605,  10.881)  ( 0.00,  0.01,  0.01)
    oop     (  0.202,   1.528,   1.715)  (  0.159,   1.310,   1.358)  ( 0.87, 14.24, 20.83)
    vdw     (  3.415,   0.682,   1.760)  (  3.415,   0.682,   1.760)  ( 0.00,  0.01,  0.00)
    electro ( -0.671,  -0.472,  -0.637)  ( -0.671,  -0.472,  -0.637)  ( 0.00,  0.00,  0.00)
11       ( -0.171,  -0.241,  -0.542)  ( -0.161,  -0.078,   0.014)  ( 0.16,  3.94, 30.15)
    bond    (-13.094,  -5.115,  -0.788)  (-13.089,  -5.111,  -0.787)  ( 0.04,  0.09,  0.05)
    angle   ( -2.503,   4.242,  11.159)  ( -2.501,   4.244,  11.160)  ( 0.09,  0.05,  0.00)
    strbnd  ( 10.155,   7.918,  -0.812)  ( 10.154,   7.917,  -0.812)  ( 0.01,  0.01,  0.01)
    torsion (  1.046,  -1.903,  -2.449)  (  1.046,  -1.903,  -2.448)  ( 0.00,  0.00,  0.02)
    oop     ( -0.039,  -0.779,  -2.945)  ( -0.036,  -0.622,  -2.390)  ( 0.01, 12.26, 18.83)
    vdw     ( -0.018,  -4.278,  -1.767)  ( -0.018,  -4.278,  -1.767)  ( 0.00,  0.00,  0.00)
    electro (  4.282,  -0.325,  -2.941)  (  4.282,  -0.325,  -2.941)  ( 0.00,  0.00,  0.00)
12       (  0.049,  -0.113,  -0.121)  (  0.055,  -0.152,  -0.269)  ( 0.03,  0.44,  1.79)
    bond    ( -6.964,  10.847,  -2.041)  ( -6.957,  10.853,  -2.041)  ( 0.09,  0.05,  0.02)
    angle   (  3.466, -18.735,   1.444)  (  3.468, -18.732,   1.444)  ( 0.06,  0.01,  0.03)
    strbnd  (  5.241,  10.045,  -1.635)  (  5.240,  10.043,  -1.635)  ( 0.02,  0.01,  0.00)
    torsion ( -0.277,  -0.199,   0.243)  ( -0.277,  -0.199,   0.244)  ( 0.00,  0.00,  0.02)
    oop     ( -0.002,   0.243,   0.879)  ( -0.004,   0.197,   0.730)  ( 0.00,  1.12, 13.12)
    vdw     ( -1.680,  -2.461,   0.754)  ( -1.680,  -2.461,   0.754)  ( 0.00,  0.00,  0.00)
    electro (  0.266,   0.147,   0.236)  (  0.266,   0.147,   0.236)  ( 0.00,  0.00,  0.00)
13       ( -0.078,  -0.184,  -0.755)  ( -0.074,  -0.168,  -0.701)  ( 0.03,  0.30,  4.09)
    bond    ( -0.615,   7.046,  -1.142)  ( -0.607,   7.052,  -1.141)  ( 0.46,  0.08,  0.02)
    angle   ( 11.508, -14.725,   2.128)  ( 11.510, -14.723,   2.128)  ( 0.02,  0.01,  0.00)
    strbnd  (  1.450,  -2.787,   0.428)  (  1.450,  -2.788,   0.428)  ( 0.05,  0.05,  0.00)
    torsion ( -0.027,   0.521,  -1.869)  ( -0.027,   0.521,  -1.868)  ( 0.00,  0.00,  0.05)
    oop     (  0.024,  -0.050,  -0.214)  (  0.019,  -0.040,  -0.161)  ( 0.01,  0.05,  1.13)
    vdw     (-11.109,   9.890,   1.556)  (-11.109,   9.890,   1.556)  ( 0.00,  0.00,  0.00)
    electro ( -1.309,  -0.078,  -1.642)  ( -1.309,  -0.078,  -1.642)  ( 0.00,  0.00,  0.00)
14       (  0.065,   0.155,  -0.135)  (  0.072,   0.173,  -0.094)  ( 0.05,  0.27,  0.54)
    bond    (-12.462, -21.961,   0.624)  (-12.457, -21.955,   0.624)  ( 0.04,  0.02,  0.01)
    angle   ( 14.830,  22.322,  -1.521)  ( 14.832,  22.323,  -1.521)  ( 0.01,  0.01,  0.01)
    strbnd  ( -5.263,  -1.582,  -0.270)  ( -5.263,  -1.582,  -0.270)  ( 0.01,  0.03,  0.00)
    torsion ( -0.035,  -0.626,   1.222)  ( -0.035,  -0.626,   1.223)  ( 0.00,  0.00,  0.11)
    oop     (  0.004,  -0.049,  -0.081)  (  0.005,  -0.038,  -0.042)  ( 0.00,  0.06,  0.32)
    vdw     (  2.604,   2.443,   0.387)  (  2.604,   2.443,   0.387)  ( 0.00,  0.00,  0.00)
    electro (  0.386,  -0.392,  -0.495)  (  0.386,  -0.392,  -0.495)  ( 0.00,  0.00,  0.00)
15       ( -0.317,  -0.056,  -0.394)  ( -0.265,  -0.054,  -0.076)  ( 1.64,  0.01, 12.53)
    bond    ( 11.061,   5.919,  -3.067)  ( 11.066,   5.923,  -3.067)  ( 0.04,  0.08,  0.01)
    angle   ( -7.487, -15.811,  -0.250)  ( -7.485, -15.809,  -0.250)  ( 0.02,  0.01,  0.00)
    strbnd  ( -3.290,   0.620,   0.718)  ( -3.290,   0.620,   0.718)  ( 0.00,  0.01,  0.00)
    torsion ( -0.712,  -0.073,   3.004)  ( -0.712,  -0.073,   3.005)  ( 0.00,  0.00,  0.05)
    oop     ( -0.261,   0.034,  -1.913)  ( -0.216,   0.031,  -1.596)  ( 1.17,  0.01, 16.54)
    vdw     (  0.370,   9.262,   0.830)  (  0.370,   9.262,   0.830)  ( 0.00,  0.00,  0.00)
    electro (  0.002,  -0.007,   0.283)  (  0.002,  -0.007,   0.283)  ( 0.00,  0.00,  0.00)
16       ( -0.296,   0.185,   0.933)  ( -0.304,   0.195,   0.788)  ( 0.24,  0.19, 13.60)
    bond    ( 14.452, -16.403,  -3.890)  ( 14.458, -16.398,  -3.890)  ( 0.04,  0.03,  0.01)
    angle   (-10.953,   5.321,   1.176)  (-10.951,   5.322,   1.176)  ( 0.02,  0.03,  0.00)
    strbnd  (  6.693,   8.480,  -0.639)  (  6.693,   8.479,  -0.639)  ( 0.00,  0.00,  0.00)
    torsion (  0.233,  -0.130,   1.677)  (  0.233,  -0.130,   1.679)  ( 0.00,  0.00,  0.08)
    oop     (  0.089,  -0.027,   0.816)  (  0.073,  -0.024,   0.668)  ( 0.14,  0.01, 12.02)
    vdw     (-10.495,   2.954,   2.887)  (-10.495,   2.954,   2.887)  ( 0.00,  0.01,  0.00)
    electro ( -0.314,  -0.010,  -1.094)  ( -0.314,  -0.010,  -1.094)  ( 0.00,  0.00,  0.00)
17       ( -0.587,   0.280,   1.052)  ( -0.579,   0.287,   1.054)  ( 0.44,  0.18,  0.24)
    bond    ( 11.943,  13.623,   0.244)  ( 11.949,  13.628,   0.244)  ( 0.05,  0.04,  0.01)
    angle   (  1.276,  -3.469,  -0.726)  (  1.277,  -3.467,  -0.726)  ( 0.13,  0.05,  0.00)
    strbnd  (  0.726,  -3.329,  -0.300)  (  0.726,  -3.330,  -0.300)  ( 0.01,  0.01,  0.00)
    torsion (  0.227,  -0.156,   1.421)  (  0.227,  -0.156,   1.422)  ( 0.00,  0.00,  0.09)
    oop     ( -0.004,   0.002,  -0.021)  ( -0.003,   0.002,  -0.020)  ( 0.00,  0.00,  0.00)
    vdw     (-14.498,  -6.002,   0.935)  (-14.498,  -6.002,   0.935)  ( 0.00,  0.00,  0.00)
    electro ( -0.257,  -0.389,  -0.500)  ( -0.257,  -0.389,  -0.500)  ( 0.00,  0.00,  0.00)
18       ( -0.846,  -0.010,   0.550)  ( -0.842,   0.000,   0.523)  ( 0.35,  0.01,  1.48)
    bond    ( -3.720,  10.016,   1.464)  ( -3.714,  10.021,   1.464)  ( 0.15,  0.06,  0.01)
    angle   (  3.372,   1.996,  -0.096)  (  3.374,   1.998,  -0.096)  ( 0.05,  0.09,  0.00)
    strbnd  (  1.201,  -0.848,  -0.145)  (  1.201,  -0.848,  -0.145)  ( 0.02,  0.01,  0.00)
    torsion (  0.005,  -0.001,   0.213)  (  0.005,  -0.001,   0.214)  ( 0.00,  0.00,  0.03)
    oop     (  0.015,  -0.016,   0.164)  (  0.012,  -0.013,   0.136)  ( 0.00,  0.00,  0.47)
    vdw     ( -1.486, -11.784,  -0.891)  ( -1.486, -11.784,  -0.891)  ( 0.00,  0.00,  0.00)
    electro ( -0.234,   0.627,  -0.159)  ( -0.234,   0.627,  -0.159)  ( 0.00,  0.00,  0.00)
19       ( -0.802,  -0.231,  -0.241)  ( -0.791,  -0.227,  -0.206)  ( 0.81,  0.09,  0.83)
    bond    ( -3.439,  12.608,   1.190)  ( -3.434,  12.614,   1.190)  ( 0.17,  0.04,  0.02)
    angle   ( -7.033,   2.531,   1.010)  ( -7.031,   2.533,   1.010)  ( 0.02,  0.06,  0.01)
    strbnd  ( -0.939,  -6.205,  -0.494)  ( -0.939,  -6.206,  -0.494)  ( 0.02,  0.00,  0.00)
    torsion (  0.083,  -0.036,   0.405)  (  0.083,  -0.036,   0.406)  ( 0.00,  0.00,  0.05)
    oop     ( -0.015,   0.016,  -0.180)  ( -0.012,   0.013,  -0.147)  ( 0.00,  0.00,  0.59)
    vdw     ( 11.128,  -8.501,  -1.965)  ( 11.128,  -8.501,  -1.965)  ( 0.00,  0.00,  0.00)
    electro ( -0.587,  -0.644,  -0.207)  ( -0.587,  -0.644,  -0.207)  ( 0.00,  0.00,  0.00)
20       ( -0.443,  -0.226,  -0.393)  ( -0.449,  -0.219,  -0.466)  ( 0.23,  0.15,  2.88)
    bond    (-23.028,   1.536,   2.475)  (-23.023,   1.541,   2.475)  ( 0.02,  0.33,  0.01)
    angle   ( 15.846,  -1.882,  -2.254)  ( 15.848,  -1.881,  -2.254)  ( 0.01,  0.09,  0.00)
    strbnd  ( -4.096,   7.781,   0.817)  ( -4.097,   7.781,   0.817)  ( 0.00,  0.00,  0.00)
    torsion (  0.129,   0.136,   0.405)  (  0.129,   0.136,   0.407)  ( 0.00,  0.00,  0.05)
    oop     (  0.078,  -0.007,   0.518)  (  0.065,  -0.007,   0.443)  ( 0.10,  0.00,  3.88)
    vdw     ( 11.264,  -7.207,  -2.094)  ( 11.264,  -7.207,  -2.094)  ( 0.00,  0.00,  0.00)
    electro ( -0.635,  -0.582,  -0.260)  ( -0.635,  -0.582,  -0.260)  ( 0.00,  0.00,  0.00)
21       (  0.070,   0.058,   0.371)  (  0.079,  -0.006,   0.153)  ( 0.07,  0.37,  8.09)
    bond    (  7.503, -21.569,  13.282)  (  7.507, -21.565,  13.286)  ( 0.05,  0.02,  0.03)
    angle   ( -8.074,  14.944, -23.421)  ( -8.072,  14.947, -23.419)  ( 0.03,  0.01,  0.01)
    strbnd  (  2.250,   2.780,   1.796)  (  2.249,   2.779,   1.795)  ( 0.04,  0.04,  0.03)
    torsion ( -0.293,   1.133,   8.011)  ( -0.293,   1.133,   8.011)  ( 0.00,  0.01,  0.00)
    oop     ( -0.019,   0.274,   0.893)  ( -0.015,   0.206,   0.669)  ( 0.01,  1.89, 19.93)
    vdw     ( -0.617,   2.348,  -0.996)  ( -0.617,   2.348,  -0.996)  ( 0.00,  0.00,  0.00)
    electro ( -0.681,   0.147,   0.808)  ( -0.681,   0.147,   0.808)  ( 0.00,  0.00,  0.00)
22       (  0.335,  -0.174,   0.517)  (  0.341,  -0.168,   0.522)  ( 0.18,  0.10,  0.29)
    bond    ( 10.845,  -2.778,  -8.094)  ( 10.850,  -2.774,  -8.090)  ( 0.04,  0.15,  0.05)
    angle   ( -9.008,  -1.801,   6.507)  ( -9.006,  -1.799,   6.508)  ( 0.02,  0.10,  0.03)
    strbnd  (  0.507,  -2.141,   2.316)  (  0.507,  -2.141,   2.315)  ( 0.04,  0.02,  0.03)
    torsion (  0.379,   2.149,  -1.075)  (  0.379,   2.149,  -1.075)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.389,   4.398,   0.864)  ( -2.389,   4.398,   0.864)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -0.056,  -0.173,  -0.298)  ( -0.051,  -0.167,  -0.292)  ( 0.03,  0.09,  0.18)
    bond    ( -9.863,  -5.250,   2.250)  ( -9.858,  -5.246,   2.255)  ( 0.04,  0.08,  0.21)
    angle   ( 12.507,   0.572,   0.600)  ( 12.509,   0.573,   0.602)  ( 0.02,  0.10,  0.10)
    strbnd  (  0.608,  -3.802,   1.723)  (  0.607,  -3.803,   1.722)  ( 0.05,  0.02,  0.03)
    torsion ( -1.338,   1.223,  -0.733)  ( -1.338,   1.223,  -0.733)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.970,   7.085,  -4.139)  ( -1.970,   7.085,  -4.139)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (  0.006,  -0.005,   0.058)  (  0.011,   0.000,   0.060)  ( 0.00,  0.00,  0.02)
    bond    ( -0.866, -18.509,   3.882)  ( -0.862, -18.505,   3.887)  ( 0.40,  0.02,  0.12)
    angle   (  5.959,  26.024,  -8.109)  (  5.962,  26.026,  -8.108)  ( 0.04,  0.01,  0.02)
    strbnd  (-10.525,  -2.634,   0.562)  (-10.527,  -2.635,   0.562)  ( 0.02,  0.03,  0.02)
    torsion ( -0.876,  -1.089,   1.253)  ( -0.876,  -1.089,   1.253)  ( 0.00,  0.00,  0.01)
    oop     ( -0.001,   0.002,   0.014)  ( -0.000,   0.002,   0.010)  ( 0.00,  0.00,  0.00)
    vdw     (  2.349,  -4.597,   0.926)  (  2.349,  -4.597,   0.926)  ( 0.01,  0.00,  0.00)
    electro (  3.966,   0.797,   1.529)  (  3.966,   0.797,   1.529)  ( 0.00,  0.00,  0.00)
25       ( -0.014,  -0.101,  -0.165)  ( -0.009,  -0.095,  -0.159)  ( 0.01,  0.06,  0.10)
    bond    ( -3.870,  12.275,  -0.924)  ( -3.866,  12.279,  -0.920)  ( 0.10,  0.03,  0.41)
    angle   ( -5.572, -18.333,   5.423)  ( -5.570, -18.330,   5.425)  ( 0.04,  0.01,  0.03)
    strbnd  ( -1.114,  -2.631,  -0.165)  ( -1.115,  -2.631,  -0.166)  ( 0.10,  0.02,  0.00)
    torsion (  3.318,  -0.490,  -3.647)  (  3.318,  -0.490,  -3.647)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.225,   9.078,  -0.852)  (  7.225,   9.078,  -0.852)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( -0.228,   0.018,   0.143)  ( -0.223,   0.024,   0.149)  ( 0.11,  0.01,  0.08)
    bond    (  4.426, -15.861,  -0.954)  (  4.429, -15.857,  -0.949)  ( 0.08,  0.03,  0.45)
    angle   ( -8.266,  12.873,  -7.689)  ( -8.264,  12.875,  -7.687)  ( 0.02,  0.02,  0.03)
    strbnd  (  1.193,   5.294,   4.137)  (  1.192,   5.293,   4.136)  ( 0.07,  0.01,  0.03)
    torsion ( -0.164,  -0.701,   3.652)  ( -0.164,  -0.701,   3.652)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.542,  -1.377,   0.272)  ( -0.542,  -1.377,   0.272)  ( 0.01,  0.00,  0.00)
    electro (  3.125,  -0.209,   0.725)  (  3.125,  -0.209,   0.725)  ( 0.00,  0.00,  0.00)
27       ( -0.131,   0.200,   0.315)  ( -0.126,   0.205,   0.322)  ( 0.06,  0.11,  0.19)
    bond    ( -1.243,  14.723,   1.076)  ( -1.239,  14.727,   1.080)  ( 0.30,  0.03,  0.41)
    angle   ( -2.830, -11.271,   1.923)  ( -2.828, -11.269,   1.924)  ( 0.07,  0.02,  0.10)
    strbnd  (  1.105,  -0.095,   0.631)  (  1.104,  -0.095,   0.630)  ( 0.10,  0.01,  0.02)
    torsion (  1.263,  -4.544,  -4.977)  (  1.263,  -4.544,  -4.977)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.574,   1.387,   1.663)  (  1.574,   1.387,   1.663)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       ( -0.164,   0.308,   0.056)  ( -0.159,   0.314,   0.060)  ( 0.08,  0.19,  0.03)
    bond    ( -2.953, -11.140,   2.764)  ( -2.949, -11.136,   2.768)  ( 0.12,  0.04,  0.15)
    angle   ( -6.707,  11.635,   3.591)  ( -6.705,  11.637,   3.594)  ( 0.03,  0.02,  0.06)
    strbnd  (  1.933,  -1.383,  -4.721)  (  1.932,  -1.383,  -4.722)  ( 0.05,  0.02,  0.03)
    torsion ( -0.767,   1.045,   0.680)  ( -0.767,   1.045,   0.680)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.685,  -1.579,   0.134)  ( -1.684,  -1.579,   0.134)  ( 0.01,  0.00,  0.00)
    electro ( 10.015,   1.730,  -2.393)  ( 10.015,   1.730,  -2.393)  ( 0.00,  0.00,  0.00)
29       ( -0.089,   0.132,  -0.028)  ( -0.179,   0.268,   0.043)  ( 0.80,  1.80,  0.20)
    bond    ( -3.268,   7.249,   5.605)  ( -3.264,   7.254,   5.609)  ( 0.11,  0.06,  0.08)
    angle   (  1.228,  -5.262,  -5.708)  (  1.229,  -5.261,  -5.706)  ( 0.14,  0.03,  0.04)
    strbnd  ( -1.075,   1.910,   2.578)  ( -1.075,   1.910,   2.578)  ( 0.06,  0.02,  0.02)
    torsion ( -1.983,  -2.819,  -0.108)  ( -1.983,  -2.819,  -0.108)  ( 0.00,  0.00,  0.00)
    oop     (  0.919,  -1.262,  -0.629)  (  0.825,  -1.132,  -0.564)  ( 8.72, 10.33,  4.10)
    vdw     (  3.898,  -0.356,  -3.193)  (  3.898,  -0.356,  -3.193)  ( 0.00,  0.00,  0.00)
    electro (  0.191,   0.672,   1.426)  (  0.191,   0.672,   1.426)  ( 0.00,  0.00,  0.00)
30       ( -1.041,   1.402,   0.516)  ( -0.212,   0.334,  -0.021)  (79.69, 76.21, 27.71)
    bond    ( -1.273,  -3.810,   6.037)  ( -1.269,  -3.807,   6.047)  ( 0.30,  0.07,  0.16)
    angle   (  1.224,   1.913,   5.350)  (  1.225,   1.914,   5.352)  ( 0.15,  0.07,  0.03)
    strbnd  ( -1.468,   0.550,  -3.069)  ( -1.469,   0.549,  -3.071)  ( 0.07,  0.04,  0.07)
    torsion ( -0.091,   0.173,   0.599)  ( -0.091,   0.173,   0.599)  ( 0.00,  0.00,  0.00)
    oop     ( -3.638,   4.815,   2.435)  ( -2.812,   3.743,   1.888)  (22.69, 22.26, 22.46)
    vdw     (  6.948,  -1.148,  -6.767)  (  6.948,  -1.148,  -6.767)  ( 0.00,  0.00,  0.00)
    electro ( -2.744,  -1.090,  -4.069)  ( -2.744,  -1.090,  -4.069)  ( 0.00,  0.00,  0.00)
31       (  0.881,  -1.368,  -1.069)  (  0.511,  -0.885,  -0.813)  (32.66, 35.29, 23.90)
    bond    (  0.058,   0.328,  -0.551)  (  0.058,   0.330,  -0.546)  ( 0.00,  0.06,  0.28)
    angle   ( -2.127,  -1.116,  -0.901)  ( -2.127,  -1.116,  -0.901)  ( 0.03,  0.02,  0.01)
    strbnd  ( -0.372,  -0.811,   1.064)  ( -0.372,  -0.811,   1.064)  ( 0.00,  0.01,  0.01)
    torsion (  0.357,  -0.491,  -0.258)  (  0.357,  -0.491,  -0.258)  ( 0.00,  0.00,  0.00)
    oop     (  1.362,  -1.784,  -0.930)  (  0.991,  -1.303,  -0.680)  (27.26, 26.94, 23.28)
    vdw     (  3.653,   3.015,  -1.101)  (  3.653,   3.015,  -1.101)  ( 0.00,  0.00,  0.00)
    electro ( -2.050,  -0.510,   1.609)  ( -2.050,  -0.510,   1.609)  ( 0.00,  0.00,  0.00)
32       ( -0.790,   1.265,   0.167)  ( -1.145,   1.728,   0.403)  (28.05, 36.58,  3.95)
    bond    ( -3.495,  -0.110,  -5.185)  ( -3.493,  -0.110,  -5.181)  ( 0.06,  0.00,  0.09)
    angle   (  0.338,   0.315,  -0.235)  (  0.339,   0.316,  -0.235)  ( 0.01,  0.02,  0.00)
    strbnd  (  0.426,  -0.497,   1.754)  (  0.426,  -0.497,   1.754)  ( 0.01,  0.00,  0.01)
    torsion ( -0.160,   0.219,   0.103)  ( -0.160,   0.219,   0.103)  ( 0.00,  0.00,  0.00)
    oop     (  1.355,  -1.770,  -0.876)  (  0.997,  -1.308,  -0.644)  (26.43, 26.10, 20.31)
    vdw     (  8.930,   2.395,  -1.527)  (  8.930,   2.395,  -1.527)  ( 0.00,  0.00,  0.00)
    electro ( -8.183,   0.713,   6.132)  ( -8.183,   0.713,   6.132)  ( 0.00,  0.00,  0.00)
33       ( -0.924,   0.360,  -0.139)  ( -0.923,   0.367,  -0.135)  ( 0.06,  0.24,  0.05)
    bond    ( -0.019,  -1.678,  -1.610)  ( -0.019,  -1.671,  -1.608)  ( 0.00,  0.37,  0.18)
    angle   (  8.749,  -2.680,   5.549)  (  8.750,  -2.680,   5.550)  ( 0.01,  0.01,  0.02)
    strbnd  (  0.282,  -2.395,  -3.567)  (  0.282,  -2.395,  -3.567)  ( 0.00,  0.00,  0.01)
    torsion ( -0.756,   0.926,  -0.619)  ( -0.756,   0.926,  -0.619)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.059,   4.362,   2.702)  (  2.059,   4.362,   2.702)  ( 0.01,  0.00,  0.00)
    electro (-11.239,   1.825,  -2.594)  (-11.239,   1.825,  -2.594)  ( 0.00,  0.00,  0.00)
34       (  0.039,   0.551,   0.057)  (  0.045,   0.552,   0.061)  ( 0.02,  0.04,  0.02)
    bond    ( 13.740,   3.045, -11.264)  ( 13.745,   3.046, -11.261)  ( 0.04,  0.01,  0.03)
    angle   (  3.434,  -0.862,  -3.531)  (  3.435,  -0.861,  -3.530)  ( 0.02,  0.04,  0.03)
    strbnd  ( -0.868,  -0.657,   2.046)  ( -0.868,  -0.658,   2.046)  ( 0.01,  0.00,  0.02)
    torsion ( -0.397,   0.278,   0.129)  ( -0.397,   0.278,   0.129)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.894,   2.781,   6.709)  ( -1.894,   2.781,   6.709)  ( 0.01,  0.00,  0.00)
    electro (-13.976,  -4.035,   5.969)  (-13.976,  -4.035,   5.969)  ( 0.00,  0.00,  0.00)
35       (  0.215,  -0.454,  -0.523)  (  0.219,  -0.455,  -0.517)  ( 0.09,  0.06,  0.31)
    bond    (  2.204,  -0.030,  -0.236)  (  2.207,  -0.030,  -0.236)  ( 0.17,  0.00,  0.00)
    angle   ( -0.031,  -0.619,  -0.215)  ( -0.031,  -0.619,  -0.215)  ( 0.00,  0.04,  0.00)
    strbnd  ( -0.630,  -0.117,   0.028)  ( -0.630,  -0.117,   0.028)  ( 0.00,  0.00,  0.00)
    torsion ( -0.041,   0.142,  -0.401)  ( -0.041,   0.142,  -0.401)  ( 0.00,  0.00,  0.01)
    oop     ( -0.003,   0.009,  -0.025)  ( -0.002,   0.007,  -0.019)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.755,   0.010,   0.078)  ( -0.755,   0.010,   0.078)  ( 0.00,  0.00,  0.00)
    electro ( -0.529,   0.151,   0.248)  ( -0.529,   0.151,   0.248)  ( 0.00,  0.00,  0.00)
36       (  0.007,  -0.633,   0.684)  (  0.009,  -0.634,   0.697)  ( 0.00,  0.08,  0.86)
    bond    (  1.008,  -1.858,  -0.711)  (  1.009,  -1.855,  -0.710)  ( 0.08,  0.14,  0.03)
    angle   ( -0.810,  -0.409,  -0.083)  ( -0.810,  -0.408,  -0.083)  ( 0.04,  0.01,  0.00)
    strbnd  ( -0.164,   0.654,   0.244)  ( -0.164,   0.654,   0.244)  ( 0.00,  0.00,  0.00)
    torsion (  0.047,  -0.195,   0.576)  (  0.047,  -0.195,   0.577)  ( 0.00,  0.00,  0.02)
    oop     ( -0.004,   0.018,  -0.054)  ( -0.003,   0.014,  -0.042)  ( 0.00,  0.01,  0.06)
    vdw     ( -0.412,   0.629,   0.244)  ( -0.412,   0.629,   0.244)  ( 0.00,  0.00,  0.00)
    electro (  0.342,   0.528,   0.467)  (  0.342,   0.528,   0.467)  ( 0.00,  0.00,  0.00)
37       (  0.096,  -0.359,   0.906)  (  0.096,  -0.349,   0.884)  ( 0.00,  0.37,  1.99)
    bond    ( -1.065,  -1.705,  -0.491)  ( -1.064,  -1.702,  -0.491)  ( 0.09,  0.15,  0.01)
    angle   (  2.772,  -1.525,  -0.719)  (  2.772,  -1.525,  -0.719)  ( 0.02,  0.01,  0.00)
    strbnd  (  0.823,   1.075,   0.277)  (  0.823,   1.075,   0.277)  ( 0.00,  0.00,  0.00)
    torsion (  0.096,  -0.361,   1.046)  (  0.096,  -0.361,   1.046)  ( 0.00,  0.00,  0.03)
    oop     (  0.009,  -0.035,   0.104)  (  0.007,  -0.028,   0.081)  ( 0.00,  0.03,  0.23)
    vdw     ( -4.611,   3.272,  -0.769)  ( -4.611,   3.272,  -0.769)  ( 0.00,  0.00,  0.00)
    electro (  2.074,  -1.079,   1.460)  (  2.074,  -1.079,   1.460)  ( 0.00,  0.00,  0.00)
38       (  0.416,   0.331,  -1.341)  (  0.422,   0.308,  -1.264)  ( 0.26,  0.77,  5.76)
    bond    ( -0.610,   1.154,   0.431)  ( -0.609,   1.156,   0.432)  ( 0.05,  0.23,  0.02)
    angle   (  2.171,   1.091,   0.140)  (  2.172,   1.091,   0.140)  ( 0.03,  0.01,  0.00)
    strbnd  (  0.292,  -0.874,  -0.249)  (  0.292,  -0.874,  -0.249)  ( 0.00,  0.00,  0.00)
    torsion ( -0.070,   0.364,  -1.074)  ( -0.070,   0.364,  -1.074)  ( 0.00,  0.00,  0.03)
    oop     ( -0.025,   0.116,  -0.346)  ( -0.021,   0.090,  -0.270)  ( 0.01,  0.30,  2.65)
    vdw     ( -0.968,  -2.087,  -0.646)  ( -0.967,  -2.087,  -0.646)  ( 0.00,  0.00,  0.00)
    electro ( -0.374,   0.569,   0.403)  ( -0.374,   0.569,   0.403)  ( 0.00,  0.00,  0.00)
39       (  0.380,   0.037,  -1.541)  (  0.384,   0.035,  -1.525)  ( 0.13,  0.01,  1.04)
    bond    (  1.161,   1.766,   0.453)  (  1.162,   1.769,   0.453)  ( 0.09,  0.14,  0.01)
    angle   (  0.496,  -0.284,  -0.165)  (  0.497,  -0.284,  -0.165)  ( 0.02,  0.00,  0.00)
    strbnd  ( -0.428,  -0.962,  -0.256)  ( -0.428,  -0.962,  -0.256)  ( 0.00,  0.00,  0.00)
    torsion ( -0.154,   0.452,  -1.372)  ( -0.154,   0.452,  -1.372)  ( 0.00,  0.00,  0.02)
    oop     ( -0.008,   0.023,  -0.071)  ( -0.006,   0.018,  -0.055)  ( 0.00,  0.01,  0.11)
    vdw     ( -0.423,  -0.628,  -0.165)  ( -0.423,  -0.628,  -0.165)  ( 0.00,  0.00,  0.00)
    electro ( -0.264,  -0.330,   0.035)  ( -0.264,  -0.330,   0.035)  ( 0.00,  0.00,  0.00)
40       ( -0.101,   0.325,   0.544)  ( -0.080,   0.624,   0.227)  ( 0.21,  9.73, 17.27)
    bond    (  1.250,  -2.067,  -1.848)  (  1.251,  -2.065,  -1.846)  ( 0.07,  0.11,  0.10)
    angle   ( -6.227,  -1.125,  -2.962)  ( -6.226,  -1.124,  -2.961)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.245,  -0.553,  -0.380)  ( -0.245,  -0.553,  -0.380)  ( 0.00,  0.00,  0.00)
    torsion (  1.954,  -0.617,   2.015)  (  1.954,  -0.617,   2.015)  ( 0.00,  0.01,  0.00)
    oop     ( -0.207,  -1.458,   1.491)  ( -0.188,  -1.161,   1.172)  ( 0.40, 20.38, 21.43)
    vdw     ( -0.907,   0.415,  -2.870)  ( -0.907,   0.416,  -2.870)  ( 0.01,  0.00,  0.00)
    electro (  4.281,   5.730,   5.098)  (  4.281,   5.730,   5.098)  ( 0.00,  0.00,  0.00)
41       (  0.150,  -0.326,  -1.122)  (  0.157,  -0.331,  -1.164)  ( 0.10,  0.15,  3.77)
    bond    (  1.745,  -1.007,   0.287)  (  1.748,  -1.006,   0.287)  ( 0.17,  0.10,  0.00)
    angle   (  0.464,   0.801,  -0.015)  (  0.464,   0.801,  -0.015)  ( 0.01,  0.05,  0.00)
    strbnd  (  0.646,   0.353,  -0.007)  (  0.646,   0.352,  -0.007)  ( 0.00,  0.00,  0.00)
    torsion (  0.413,  -0.701,  -4.980)  (  0.413,  -0.701,  -4.980)  ( 0.00,  0.00,  0.01)
    oop     ( -0.012,   0.022,   0.147)  ( -0.008,   0.015,   0.104)  ( 0.00,  0.01,  0.63)
    vdw     ( -2.888,  -0.070,   2.547)  ( -2.888,  -0.069,   2.547)  ( 0.00,  0.00,  0.00)
    electro ( -0.219,   0.276,   0.899)  ( -0.219,   0.276,   0.899)  ( 0.00,  0.00,  0.00)
42       ( -0.022,   0.418,   1.179)  ( -0.018,   0.419,   1.189)  ( 0.01,  0.03,  0.81)
    bond    ( -1.375,   0.917,   0.310)  ( -1.372,   0.918,   0.310)  ( 0.19,  0.11,  0.00)
    angle   (  3.321,   4.944,   0.058)  (  3.321,   4.944,   0.059)  ( 0.01,  0.01,  0.00)
    strbnd  ( -1.480,   0.664,   0.304)  ( -1.480,   0.664,   0.304)  ( 0.00,  0.00,  0.00)
    torsion ( -0.662,   0.518,  -4.465)  ( -0.662,   0.518,  -4.465)  ( 0.00,  0.00,  0.01)
    oop     ( -0.006,   0.005,  -0.042)  ( -0.005,   0.004,  -0.033)  ( 0.00,  0.00,  0.04)
    vdw     ( -0.590,  -7.239,   3.112)  ( -0.590,  -7.239,   3.112)  ( 0.00,  0.00,  0.00)
    electro (  0.772,   0.610,   1.902)  (  0.772,   0.610,   1.902)  ( 0.00,  0.00,  0.00)
43       ( -0.711,   0.449,   1.668)  ( -0.707,   0.450,   1.672)  ( 0.26,  0.04,  0.25)
    bond    (  1.870,   0.804,  -0.109)  (  1.873,   0.804,  -0.109)  ( 0.17,  0.05,  0.00)
    angle   ( -0.221,   0.524,   0.072)  ( -0.221,   0.524,   0.072)  ( 0.00,  0.03,  0.00)
    strbnd  ( -1.440,  -0.145,   0.136)  ( -1.440,  -0.145,   0.136)  ( 0.00,  0.00,  0.00)
    torsion (  0.118,  -0.120,   1.139)  (  0.118,  -0.120,   1.139)  ( 0.00,  0.00,  0.03)
    oop     ( -0.002,   0.002,  -0.018)  ( -0.001,   0.001,  -0.014)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.750,  -0.350,   0.003)  ( -0.750,  -0.350,   0.003)  ( 0.00,  0.00,  0.00)
    electro ( -0.286,  -0.265,   0.445)  ( -0.286,  -0.265,   0.445)  ( 0.00,  0.00,  0.00)
44       ( -1.146,   0.069,   0.778)  ( -1.144,   0.072,   0.788)  ( 0.15,  0.02,  0.80)
    bond    (  0.202,   1.622,   0.146)  (  0.202,   1.625,   0.146)  ( 0.00,  0.23,  0.00)
    angle   ( -1.147,   0.132,   0.122)  ( -1.147,   0.132,   0.122)  ( 0.06,  0.00,  0.00)
    strbnd  ( -0.299,  -0.281,   0.005)  ( -0.299,  -0.281,   0.005)  ( 0.00,  0.00,  0.00)
    torsion (  0.051,  -0.056,   0.548)  (  0.051,  -0.056,   0.549)  ( 0.00,  0.00,  0.02)
    oop     ( -0.004,   0.004,  -0.044)  ( -0.003,   0.003,  -0.034)  ( 0.00,  0.00,  0.04)
    vdw     ( -0.104,  -0.746,  -0.073)  ( -0.104,  -0.746,  -0.073)  ( 0.00,  0.00,  0.00)
    electro (  0.156,  -0.607,   0.072)  (  0.156,  -0.607,   0.072)  ( 0.00,  0.00,  0.00)
45       ( -0.998,  -0.419,  -0.572)  ( -0.997,  -0.416,  -0.591)  ( 0.09,  0.14,  1.07)
    bond    ( -2.026,   1.473,   0.312)  ( -2.024,   1.474,   0.312)  ( 0.12,  0.09,  0.00)
    angle   ( -0.884,  -1.211,  -0.011)  ( -0.883,  -1.211,  -0.011)  ( 0.02,  0.04,  0.00)
    strbnd  (  0.669,   0.039,  -0.071)  (  0.669,   0.039,  -0.071)  ( 0.00,  0.00,  0.00)
    torsion ( -0.083,   0.075,  -0.891)  ( -0.083,   0.075,  -0.891)  ( 0.00,  0.00,  0.03)
    oop     (  0.008,  -0.007,   0.085)  (  0.006,  -0.006,   0.066)  ( 0.00,  0.00,  0.16)
    vdw     (  0.563,  -0.681,  -0.091)  (  0.563,  -0.681,  -0.091)  ( 0.00,  0.00,  0.00)
    electro (  0.755,  -0.106,   0.094)  (  0.755,  -0.106,   0.094)  ( 0.00,  0.00,  0.00)
46       ( -0.462,  -0.436,  -1.022)  ( -0.460,  -0.433,  -1.041)  ( 0.05,  0.11,  1.86)
    bond    ( -1.548,  -0.548,   0.144)  ( -1.545,  -0.547,   0.145)  ( 0.21,  0.02,  0.00)
    angle   ( -2.690,   7.839,   0.924)  ( -2.690,   7.840,   0.924)  ( 0.00,  0.01,  0.00)
    strbnd  (  2.263,   1.431,  -0.188)  (  2.263,   1.431,  -0.188)  ( 0.00,  0.00,  0.00)
    torsion ( -0.041,   0.010,  -0.399)  ( -0.041,   0.010,  -0.398)  ( 0.00,  0.00,  0.01)
    oop     (  0.011,  -0.007,   0.092)  (  0.009,  -0.005,   0.072)  ( 0.00,  0.00,  0.18)
    vdw     (  2.373, -10.506,  -1.864)  (  2.373, -10.506,  -1.864)  ( 0.00,  0.00,  0.00)
    electro ( -0.829,   1.345,   0.268)  ( -0.829,   1.345,   0.268)  ( 0.00,  0.00,  0.00)
47       ( -0.364,   0.001,   0.224)  ( -0.363,   0.002,   0.227)  ( 0.04,  0.00,  0.06)
    bond    (  2.065,   0.651,   4.277)  (  2.066,   0.651,   4.280)  ( 0.03,  0.01,  0.06)
    angle   ( -1.189,   0.877,   0.440)  ( -1.189,   0.878,   0.440)  ( 0.04,  0.06,  0.01)
    strbnd  ( -1.004,  -2.559,  -2.464)  ( -1.004,  -2.559,  -2.464)  ( 0.00,  0.00,  0.00)
    torsion (  0.081,   1.012,  -0.193)  (  0.081,   1.012,  -0.193)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.317,   0.020,  -1.836)  ( -0.317,   0.020,  -1.835)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (  0.158,   0.208,   0.381)  (  0.161,   0.209,   0.382)  ( 0.05,  0.03,  0.02)
    bond    ( -1.345,  -0.662,  -0.174)  ( -1.342,  -0.661,  -0.174)  ( 0.21,  0.04,  0.00)
    angle   (  2.482,  -5.347,   1.171)  (  2.482,  -5.347,   1.171)  ( 0.00,  0.01,  0.04)
    strbnd  ( -0.569,  -0.838,  -0.623)  ( -0.569,  -0.838,  -0.623)  ( 0.00,  0.00,  0.00)
    torsion (  0.479,  -1.375,   1.531)  (  0.479,  -1.375,   1.531)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.889,   8.429,  -1.524)  ( -0.889,   8.429,  -1.524)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (  0.370,  -0.684,   0.437)  (  0.371,  -0.684,   0.441)  ( 0.03,  0.03,  0.14)
    bond    ( -0.186,   0.025,  -0.685)  ( -0.186,   0.025,  -0.682)  ( 0.00,  0.00,  0.22)
    angle   (  1.336,  -2.129,  -0.442)  (  1.336,  -2.128,  -0.442)  ( 0.04,  0.02,  0.00)
    strbnd  (  0.611,  -0.262,  -0.310)  (  0.611,  -0.262,  -0.310)  ( 0.00,  0.00,  0.00)
    torsion ( -0.104,  -0.201,   0.021)  ( -0.104,  -0.201,   0.021)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.287,   1.882,   1.854)  ( -1.287,   1.882,   1.854)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (  0.588,   0.088,   1.012)  (  0.589,   0.092,   1.013)  ( 0.04,  0.03,  0.07)
    bond    (  0.403,  -2.471,   0.627)  (  0.403,  -2.468,   0.627)  ( 0.00,  0.12,  0.01)
    angle   (  5.516,   0.699,  -0.794)  (  5.517,   0.699,  -0.793)  ( 0.01,  0.00,  0.04)
    strbnd  (  0.314,   1.208,  -0.817)  (  0.314,   1.208,  -0.817)  ( 0.00,  0.00,  0.00)
    torsion ( -0.531,  -0.207,  -0.474)  ( -0.531,  -0.207,  -0.474)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.114,   0.860,   2.470)  ( -5.114,   0.860,   2.470)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       ( -0.316,  -0.193,  -0.505)  ( -0.315,  -0.192,  -0.503)  ( 0.06,  0.02,  0.10)
    bond    (  0.716,  -0.298,  -0.826)  (  0.717,  -0.297,  -0.824)  ( 0.10,  0.01,  0.15)
    angle   (  1.189,  -5.329,   2.958)  (  1.189,  -5.328,   2.959)  ( 0.03,  0.01,  0.01)
    strbnd  ( -0.047,  -0.589,  -0.422)  ( -0.047,  -0.589,  -0.422)  ( 0.00,  0.00,  0.00)
    torsion (  0.936,  -0.735,   1.080)  (  0.936,  -0.735,   1.080)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.110,   6.758,  -3.296)  ( -3.110,   6.758,  -3.296)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       ( -0.101,  -0.092,  -0.176)  ( -0.100,  -0.090,  -0.175)  ( 0.01,  0.02,  0.01)
    bond    (  1.134,  -2.431,   0.852)  (  1.134,  -2.428,   0.852)  ( 0.05,  0.10,  0.03)
    angle   ( -3.696,  -1.139,   1.674)  ( -3.696,  -1.138,   1.675)  ( 0.01,  0.01,  0.03)
    strbnd  ( -1.209,   1.211,  -0.450)  ( -1.209,   1.211,  -0.450)  ( 0.00,  0.00,  0.00)
    torsion ( -0.018,   0.060,   0.194)  ( -0.018,   0.060,   0.194)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.689,   2.206,  -2.447)  (  3.689,   2.206,  -2.447)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (  0.304,  -0.091,  -0.474)  (  0.305,  -0.090,  -0.471)  ( 0.04,  0.01,  0.12)
    bond    ( -0.341,  -0.134,  -0.569)  ( -0.341,  -0.134,  -0.567)  ( 0.03,  0.00,  0.14)
    angle   (  0.912,  -4.148,   0.434)  (  0.913,  -4.147,   0.434)  ( 0.03,  0.01,  0.01)
    strbnd  ( -0.362,  -0.327,   0.331)  ( -0.362,  -0.327,   0.331)  ( 0.00,  0.00,  0.00)
    torsion (  0.427,  -0.471,  -0.145)  (  0.427,  -0.471,  -0.145)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.333,   4.990,  -0.524)  ( -0.333,   4.990,  -0.524)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       (  0.047,   0.327,   0.213)  (  0.048,   0.328,   0.216)  ( 0.00,  0.04,  0.06)
    bond    (  0.044,   0.448,  -1.022)  (  0.044,   0.449,  -1.019)  ( 0.00,  0.02,  0.28)
    angle   ( -5.073,   4.709,   1.855)  ( -5.072,   4.710,   1.855)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.688,  -1.108,  -0.508)  ( -0.688,  -1.108,  -0.508)  ( 0.00,  0.00,  0.00)
    torsion (  0.301,   0.513,   0.239)  (  0.301,   0.513,   0.239)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.463,  -4.236,  -0.352)  (  5.463,  -4.236,  -0.352)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       ( -0.139,  -0.301,   0.325)  ( -0.139,  -0.299,   0.327)  ( 0.01,  0.06,  0.06)
    bond    (  0.004,  -0.058,  -0.057)  (  0.004,  -0.056,  -0.056)  ( 0.00,  0.01,  0.01)
    angle   ( -0.993,   1.847,  -1.929)  ( -0.992,   1.847,  -1.929)  ( 0.07,  0.01,  0.01)
    strbnd  ( -0.720,  -1.271,   0.377)  ( -0.720,  -1.271,   0.377)  ( 0.00,  0.00,  0.00)
    torsion (  0.101,   0.125,  -0.120)  (  0.101,   0.125,  -0.120)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.469,  -0.945,   2.055)  (  1.469,  -0.944,   2.055)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( -0.037,  -0.300,  -0.241)  ( -0.036,  -0.299,  -0.238)  ( 0.00,  0.04,  0.06)
    bond    (  0.176,   1.777,  -3.219)  (  0.177,   1.777,  -3.216)  ( 0.00,  0.04,  0.08)
    angle   ( -1.373,  -1.962,  -1.160)  ( -1.373,  -1.962,  -1.159)  ( 0.05,  0.02,  0.01)
    strbnd  ( -0.304,   0.067,   1.171)  ( -0.304,   0.067,   1.171)  ( 0.00,  0.00,  0.00)
    torsion ( -1.378,   0.531,   0.218)  ( -1.378,   0.532,   0.218)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.841,  -0.714,   2.749)  (  2.842,  -0.714,   2.749)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       (  0.041,   0.148,  -0.296)  (  0.041,   0.150,  -0.294)  ( 0.00,  0.03,  0.06)
    bond    ( -0.135,   2.007,   2.146)  ( -0.135,   2.009,   2.147)  ( 0.00,  0.08,  0.08)
    angle   (  0.451,  -0.692,   0.675)  (  0.452,  -0.692,   0.675)  ( 0.03,  0.02,  0.02)
    strbnd  ( -0.177,  -0.030,  -0.939)  ( -0.177,  -0.030,  -0.939)  ( 0.00,  0.00,  0.00)
    torsion ( -1.075,  -0.300,   0.213)  ( -1.075,  -0.300,   0.213)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.976,  -0.838,  -2.392)  (  0.976,  -0.838,  -2.392)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( -0.254,   0.017,  -0.064)  ( -0.254,   0.019,  -0.062)  ( 0.02,  0.00,  0.02)
    bond    ( -0.040,  -1.500,   1.928)  ( -0.040,  -1.499,   1.930)  ( 0.00,  0.08,  0.11)
    angle   ( -1.136,   1.312,   0.995)  ( -1.135,   1.312,   0.995)  ( 0.05,  0.03,  0.02)
    strbnd  (  0.280,  -0.457,  -0.574)  (  0.280,  -0.457,  -0.574)  ( 0.00,  0.00,  0.00)
    torsion (  0.158,   0.214,   0.170)  (  0.158,   0.214,   0.170)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.484,   0.449,  -2.583)  (  0.484,   0.449,  -2.583)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       ( -0.039,   0.371,   0.524)  ( -0.039,   0.373,   0.526)  ( 0.00,  0.07,  0.11)
    bond    (  0.250,   2.246,  -2.453)  (  0.250,   2.247,  -2.451)  ( 0.00,  0.07,  0.07)
    angle   ( -0.227,   0.092,   0.062)  ( -0.226,   0.092,   0.062)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.193,  -0.135,   1.231)  ( -0.193,  -0.135,   1.231)  ( 0.00,  0.00,  0.00)
    torsion (  0.564,   2.085,   1.969)  (  0.564,   2.085,   1.969)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.433,  -3.917,  -0.285)  ( -0.433,  -3.917,  -0.285)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( -0.063,  -0.072,   0.504)  ( -0.062,  -0.071,   0.506)  ( 0.01,  0.01,  0.13)
    bond    (  0.260,   1.745,   3.031)  (  0.260,   1.746,   3.033)  ( 0.00,  0.05,  0.08)
    angle   (  3.751,  -1.603,   0.601)  (  3.752,  -1.603,   0.601)  ( 0.02,  0.02,  0.01)
    strbnd  ( -0.199,  -0.015,  -1.540)  ( -0.199,  -0.015,  -1.540)  ( 0.00,  0.00,  0.00)
    torsion ( -1.382,   1.853,  -0.948)  ( -1.382,   1.853,  -0.948)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.493,  -2.052,  -0.640)  ( -2.493,  -2.052,  -0.640)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       ( -0.281,   0.189,  -0.034)  ( -0.280,   0.192,  -0.033)  ( 0.02,  0.06,  0.00)
    bond    (  0.133,  -2.004,   0.580)  (  0.133,  -2.001,   0.581)  ( 0.00,  0.15,  0.02)
    angle   (  0.076,  -0.444,  -1.547)  (  0.077,  -0.444,  -1.546)  ( 0.00,  0.00,  0.04)
    strbnd  ( -0.121,  -0.013,   0.295)  ( -0.121,  -0.013,   0.295)  ( 0.00,  0.00,  0.00)
    torsion (  0.940,   0.033,  -0.103)  (  0.940,   0.033,  -0.103)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.309,   2.616,   0.740)  ( -1.309,   2.616,   0.740)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       ( -0.037,   0.359,   0.037)  ( -0.037,   0.362,   0.038)  ( 0.00,  0.10,  0.00)
    bond    ( -0.580,   1.889,  -0.905)  ( -0.580,   1.891,  -0.905)  ( 0.01,  0.13,  0.05)
    angle   ( -0.273,   0.763,   1.769)  ( -0.273,   0.763,   1.769)  ( 0.01,  0.01,  0.02)
    strbnd  ( -0.325,   0.488,   0.279)  ( -0.325,   0.488,   0.279)  ( 0.00,  0.00,  0.00)
    torsion (  1.294,   0.792,   0.827)  (  1.294,   0.792,   0.827)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.153,  -3.573,  -1.933)  ( -0.153,  -3.573,  -1.933)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( -0.297,   0.195,   0.097)  ( -0.296,   0.196,   0.100)  ( 0.03,  0.01,  0.03)
    bond    (  0.610,   0.315,   1.633)  (  0.610,   0.315,   1.636)  ( 0.02,  0.00,  0.18)
    angle   ( -1.418,   1.386,   0.261)  ( -1.418,   1.387,   0.261)  ( 0.03,  0.03,  0.00)
    strbnd  ( -0.282,   0.382,   0.365)  ( -0.282,   0.382,   0.365)  ( 0.00,  0.00,  0.00)
    torsion (  0.426,   0.990,  -0.350)  (  0.426,   0.990,  -0.350)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.367,  -2.878,  -1.812)  (  0.367,  -2.878,  -1.812)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       (  5.704,  -0.249,   0.138)  (  5.704,  -0.244,   0.139)  ( 0.00,  0.13,  0.01)
    bond    (  0.052,   0.524,  -0.141)  (  0.052,   0.529,  -0.141)  ( 0.00,  0.27,  0.01)
    angle   (  0.150,  -0.836,  -3.088)  (  0.150,  -0.836,  -3.088)  ( 0.00,  0.00,  0.02)
    strbnd  ( -0.049,  -0.575,   0.050)  ( -0.049,  -0.575,   0.050)  ( 0.00,  0.00,  0.00)
    torsion (  0.430,  -0.034,   0.030)  (  0.430,  -0.034,   0.030)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.052,   1.173,   1.899)  (  0.052,   1.173,   1.900)  ( 0.00,  0.00,  0.00)
    electro (  5.069,  -0.500,   1.387)  (  5.069,  -0.500,   1.387)  ( 0.00,  0.00,  0.00)
65       ( -0.114,   0.570,  -0.149)  ( -0.109,   0.571,  -0.148)  ( 0.06,  0.02,  0.01)
    bond    (-17.085,  -2.760,   0.383)  (-17.080,  -2.760,   0.384)  ( 0.03,  0.01,  0.00)
    angle   (  0.082,  -0.169,   2.424)  (  0.082,  -0.169,   2.425)  ( 0.00,  0.00,  0.02)
    strbnd  (  0.390,   0.135,  -0.958)  (  0.390,   0.135,  -0.958)  ( 0.00,  0.00,  0.00)
    torsion ( -0.084,   0.524,   0.039)  ( -0.084,   0.524,   0.039)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.216,   1.133,   7.265)  ( -1.216,   1.133,   7.265)  ( 0.00,  0.00,  0.00)
    electro ( 17.799,   1.709,  -9.304)  ( 17.799,   1.709,  -9.304)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 7 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 8 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/bipyrrole.gpr
 # Expected        18.04199, found 18.041995&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/bipyrrole.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( -1.689,  29.086,  12.210)  ( -1.712,  28.999,  12.369)  ( 1.37,  0.30,  1.31)
    bond    (-17.707,   8.335,   2.191)  (-17.700,   8.340,   2.193)  ( 0.04,  0.06,  0.09)
    angle   ( 17.323,  25.618,  18.944)  ( 17.325,  25.620,  18.945)  ( 0.01,  0.01,  0.00)
    strbnd  ( -1.493,  -7.945,  -5.133)  ( -1.494,  -7.946,  -5.134)  ( 0.06,  0.01,  0.00)
    torsion (  0.601,   2.014,  -3.362)  (  0.601,   2.014,  -3.362)  ( 0.00,  0.01,  0.02)
    oop     (  0.117,   0.376,  -0.635)  (  0.086,   0.283,  -0.479)  ( 0.37,  3.48,  9.93)
    vdw     ( -0.601,  -0.190,  -0.199)  ( -0.601,  -0.190,  -0.199)  ( 0.00,  0.00,  0.00)
    electro (  0.071,   0.878,   0.403)  (  0.071,   0.878,   0.403)  ( 0.00,  0.00,  0.00)
 2       (-43.130,  -3.367,  -5.439)  (-43.097,  -3.287,  -5.559)  ( 0.08,  2.37,  2.21)
    bond    (-26.717,  -2.707,  -7.585)  (-26.711,  -2.702,  -7.583)  ( 0.02,  0.19,  0.02)
    angle   (-14.462,  -4.144,  -5.035)  (-14.460,  -4.143,  -5.035)  ( 0.01,  0.04,  0.01)
    strbnd  (  0.308,   7.811,   4.693)  (  0.308,   7.811,   4.693)  ( 0.01,  0.01,  0.01)
    torsion ( -0.735,  -2.026,   3.413)  ( -0.735,  -2.026,   3.414)  ( 0.00,  0.02,  0.03)
    oop     ( -0.154,  -0.448,   0.744)  ( -0.128,  -0.375,   0.621)  ( 0.40,  3.29,  9.15)
    vdw     ( -1.663,  -1.307,  -1.215)  ( -1.663,  -1.307,  -1.215)  ( 0.00,  0.00,  0.00)
    electro (  0.292,  -0.546,  -0.454)  (  0.292,  -0.546,  -0.454)  ( 0.00,  0.00,  0.00)
 3       ( 26.796,  24.803,  13.755)  ( 26.768,  24.706,  13.928)  ( 0.10,  0.39,  1.26)
    bond    ( 32.244,   7.181,  11.384)  ( 32.249,   7.186,  11.386)  ( 0.02,  0.06,  0.02)
    angle   ( -9.397,   6.895,   4.311)  ( -9.395,   6.897,   4.311)  ( 0.02,  0.02,  0.02)
    strbnd  (  5.047,   6.760,   5.135)  (  5.046,   6.759,   5.135)  ( 0.01,  0.01,  0.00)
    torsion (  1.173,   3.527,  -5.707)  (  1.173,   3.527,  -5.706)  ( 0.00,  0.01,  0.01)
    oop     (  0.194,   0.561,  -0.910)  (  0.159,   0.458,  -0.741)  ( 0.66,  5.78, 15.45)
    vdw     ( -2.822,   0.795,   0.719)  ( -2.822,   0.795,   0.719)  ( 0.00,  0.00,  0.00)
    electro (  0.358,  -0.916,  -1.176)  (  0.358,  -0.916,  -1.176)  ( 0.00,  0.00,  0.00)
 4       ( 30.208,   3.073,   6.213)  ( 30.217,   3.098,   6.474)  ( 0.03,  0.82,  4.20)
    bond    ( 44.923,   3.054,  10.850)  ( 44.929,   3.058,  10.852)  ( 0.01,  0.15,  0.02)
    angle   (-11.137,   3.853,   1.631)  (-11.135,   3.855,   1.632)  ( 0.02,  0.05,  0.04)
    strbnd  ( -0.803,  -4.122,  -2.305)  ( -0.804,  -4.123,  -2.306)  ( 0.08,  0.01,  0.01)
    torsion ( -0.049,  -0.229,  -1.535)  ( -0.049,  -0.229,  -1.535)  ( 0.00,  0.01,  0.05)
    oop     ( -0.023,  -0.118,  -0.821)  ( -0.022,  -0.100,  -0.563)  ( 0.00,  0.22, 21.19)
    vdw     ( -2.511,   0.309,  -1.489)  ( -2.511,   0.309,  -1.489)  ( 0.00,  0.00,  0.00)
    electro ( -0.191,   0.327,  -0.117)  ( -0.191,   0.327,  -0.117)  ( 0.00,  0.00,  0.00)
 5       ( -7.948, -76.115, -41.479)  ( -7.959, -76.161, -41.385)  ( 0.13,  0.06,  0.22)
    bond    (  8.045, -42.089, -24.804)  (  8.052, -42.083, -24.802)  ( 0.09,  0.01,  0.01)
    angle   (-16.828, -30.092, -21.409)  (-16.826, -30.090, -21.409)  ( 0.01,  0.01,  0.00)
    strbnd  (  5.512,  -1.560,   0.571)  (  5.511,  -1.560,   0.570)  ( 0.02,  0.01,  0.01)
    torsion ( -1.167,  -3.866,   6.122)  ( -1.167,  -3.866,   6.123)  ( 0.00,  0.01,  0.01)
    oop     (  0.067,   0.201,  -0.328)  (  0.049,   0.147,  -0.238)  ( 0.12,  1.07,  2.94)
    vdw     ( -3.591,   1.489,  -1.515)  ( -3.591,   1.489,  -1.515)  ( 0.00,  0.00,  0.00)
    electro (  0.014,  -0.198,  -0.115)  (  0.014,  -0.198,  -0.115)  ( 0.00,  0.00,  0.00)
 6       (-30.115,  -5.188,  10.096)  (-30.112,  -5.199,   9.547)  ( 0.01,  0.20,  5.44)
    bond    (-46.066,  -5.896,   0.687)  (-46.059,  -5.889,   0.688)  ( 0.01,  0.11,  0.01)
    angle   ( 11.582,  -5.904,   1.352)  ( 11.584,  -5.902,   1.352)  ( 0.02,  0.04,  0.01)
    strbnd  (  1.321,   5.298,   0.111)  (  1.319,   5.297,   0.111)  ( 0.08,  0.01,  0.00)
    torsion (  0.044,   1.140,   6.540)  (  0.044,   1.140,   6.541)  ( 0.00,  0.01,  0.02)
    oop     ( -0.012,   0.131,   2.561)  ( -0.016,   0.112,   2.010)  ( 0.00,  0.24, 21.51)
    vdw     (  2.802,   0.309,  -0.945)  (  2.802,   0.309,  -0.945)  ( 0.00,  0.00,  0.00)
    electro (  0.213,  -0.266,  -0.210)  (  0.213,  -0.266,  -0.210)  ( 0.00,  0.00,  0.00)
 7       ( 12.679,  86.994, -19.032)  ( 12.708,  86.952, -19.290)  ( 0.23,  0.05,  1.36)
    bond    ( -5.030,  48.598,  -6.009)  ( -5.023,  48.605,  -6.009)  ( 0.14,  0.01,  0.00)
    angle   ( 20.610,  38.351,  -5.278)  ( 20.612,  38.353,  -5.277)  ( 0.01,  0.01,  0.00)
    strbnd  ( -7.020,   1.621,  -1.168)  ( -7.021,   1.621,  -1.168)  ( 0.02,  0.02,  0.01)
    torsion (  0.098,  -1.110,  -6.501)  (  0.098,  -1.110,  -6.500)  ( 0.00,  0.00,  0.01)
    oop     (  0.002,   0.211,   1.179)  (  0.023,   0.161,   0.920)  ( 0.00,  1.07, 21.98)
    vdw     (  4.021,  -0.905,  -1.238)  (  4.021,  -0.905,  -1.238)  ( 0.00,  0.00,  0.00)
    electro ( -0.002,   0.227,  -0.017)  ( -0.002,   0.227,  -0.017)  ( 0.00,  0.00,  0.00)
 8       ( -0.374, -32.479,   6.496)  ( -0.367, -32.479,   6.410)  ( 0.27,  0.00,  1.32)
    bond    ( 17.320,  -9.193,   0.193)  ( 17.327,  -9.187,   0.193)  ( 0.04,  0.07,  0.00)
    angle   (-21.343, -31.556,   3.930)  (-21.342, -31.553,   3.930)  ( 0.01,  0.01,  0.00)
    strbnd  (  3.117,   8.773,  -0.540)  (  3.116,   8.771,  -0.540)  ( 0.03,  0.01,  0.00)
    torsion (  0.062,   0.254,   3.026)  (  0.062,   0.254,   3.027)  ( 0.00,  0.00,  0.04)
    oop     ( -0.019,  -0.027,  -0.085)  ( -0.020,  -0.034,  -0.172)  ( 0.00,  0.02,  0.74)
    vdw     (  0.599,   0.238,  -0.003)  (  0.599,   0.238,  -0.003)  ( 0.00,  0.00,  0.00)
    electro ( -0.111,  -0.968,  -0.025)  ( -0.111,  -0.968,  -0.025)  ( 0.00,  0.00,  0.00)
 9       ( 44.803,   3.914,   2.819)  ( 44.806,   3.912,   2.710)  ( 0.01,  0.07,  3.89)
    bond    ( 27.504,   4.642,  -1.536)  ( 27.511,   4.648,  -1.536)  ( 0.02,  0.14,  0.00)
    angle   ( 15.991,   5.308,  -0.805)  ( 15.993,   5.309,  -0.804)  ( 0.01,  0.04,  0.01)
    strbnd  ( -0.547,  -8.870,   0.817)  ( -0.547,  -8.870,   0.817)  ( 0.03,  0.01,  0.00)
    torsion (  0.167,   0.437,   4.249)  (  0.167,   0.437,   4.250)  ( 0.00,  0.00,  0.03)
    oop     (  0.027,   0.073,   0.647)  (  0.022,   0.062,   0.536)  ( 0.01,  0.08,  7.17)
    vdw     (  1.899,   1.622,  -0.325)  (  1.899,   1.622,  -0.325)  ( 0.00,  0.00,  0.00)
    electro ( -0.238,   0.703,  -0.227)  ( -0.238,   0.703,  -0.227)  ( 0.00,  0.00,  0.00)
10       (-30.928, -25.769,  -2.929)  (-30.914, -25.703,  -2.394)  ( 0.05,  0.26, 18.30)
    bond    (-33.338, -10.219,   2.044)  (-33.333, -10.213,   2.044)  ( 0.02,  0.06,  0.00)
    angle   (  5.728,  -6.663,   4.844)  (  5.730,  -6.662,   4.844)  ( 0.04,  0.03,  0.01)
    strbnd  ( -5.454,  -7.832,   0.921)  ( -5.455,  -7.833,   0.921)  ( 0.01,  0.01,  0.00)
    torsion ( -0.215,  -0.970,  -8.075)  ( -0.215,  -0.970,  -8.074)  ( 0.00,  0.00,  0.01)
    oop     ( -0.036,  -0.302,  -2.716)  ( -0.028,  -0.244,  -2.181)  ( 0.03,  1.76, 19.68)
    vdw     (  2.593,  -1.118,   0.786)  (  2.593,  -1.118,   0.786)  ( 0.00,  0.00,  0.00)
    electro ( -0.206,   1.335,  -0.734)  ( -0.206,   1.335,  -0.734)  ( 0.00,  0.00,  0.00)
11       (-26.673, -22.301,   4.179)  (-26.670, -22.312,   4.023)  ( 0.01,  0.05,  3.72)
    bond    ( -1.917,  -0.727,  -0.074)  ( -1.913,  -0.722,  -0.070)  ( 0.20,  0.32,  0.03)
    angle   (-29.136, -26.052,   2.735)  (-29.134, -26.050,   2.736)  ( 0.01,  0.01,  0.05)
    strbnd  (  4.010,   7.688,  -1.200)  (  4.009,   7.687,  -1.200)  ( 0.01,  0.02,  0.04)
    torsion (  0.015,   0.059,   0.642)  (  0.015,   0.059,   0.642)  ( 0.00,  0.00,  0.01)
    oop     (  0.009,   0.064,   0.656)  (  0.007,   0.048,   0.495)  ( 0.00,  0.10, 10.56)
    vdw     (  0.354,  -2.969,   0.608)  (  0.354,  -2.969,   0.608)  ( 0.00,  0.00,  0.00)
    electro ( -0.008,  -0.365,   0.812)  ( -0.008,  -0.365,   0.812)  ( 0.00,  0.00,  0.00)
12       ( -2.353,   3.616,  -2.204)  ( -2.349,   3.623,  -2.123)  ( 0.17,  0.21,  3.71)
    bond    ( -1.203,  -0.681,   0.064)  ( -1.200,  -0.680,   0.064)  ( 0.25,  0.07,  0.00)
    angle   ( -3.337,   5.858,  -0.289)  ( -3.337,   5.858,  -0.289)  ( 0.00,  0.01,  0.00)
    strbnd  (  0.884,  -1.534,   0.070)  (  0.884,  -1.534,   0.070)  ( 0.00,  0.00,  0.00)
    torsion ( -0.026,  -0.127,  -1.856)  ( -0.026,  -0.127,  -1.856)  ( 0.00,  0.00,  0.02)
    oop     ( -0.003,  -0.017,  -0.242)  ( -0.002,  -0.012,  -0.160)  ( 0.00,  0.01,  1.97)
    vdw     (  0.644,   0.265,  -0.021)  (  0.644,   0.265,  -0.021)  ( 0.00,  0.00,  0.00)
    electro (  0.688,  -0.147,   0.070)  (  0.688,  -0.147,   0.070)  ( 0.00,  0.00,  0.00)
13       ( -2.636,  -4.315,  -0.527)  ( -2.633,  -4.310,  -0.497)  ( 0.12,  0.12,  1.55)
    bond    ( -1.376,   1.267,  -0.103)  ( -1.374,   1.269,  -0.103)  ( 0.15,  0.14,  0.00)
    angle   ( -4.815,  -5.170,   0.545)  ( -4.815,  -5.170,   0.545)  ( 0.01,  0.01,  0.00)
    strbnd  (  1.880,   0.883,  -0.174)  (  1.880,   0.883,  -0.174)  ( 0.00,  0.00,  0.00)
    torsion ( -0.019,  -0.089,  -0.837)  ( -0.019,  -0.089,  -0.837)  ( 0.00,  0.00,  0.03)
    oop     ( -0.002,  -0.010,  -0.098)  ( -0.002,  -0.007,  -0.069)  ( 0.00,  0.00,  0.29)
    vdw     (  1.159,  -0.292,  -0.017)  (  1.159,  -0.292,  -0.017)  ( 0.00,  0.00,  0.00)
    electro (  0.537,  -0.904,   0.158)  (  0.537,  -0.904,   0.158)  ( 0.00,  0.00,  0.00)
14       ( 26.387,  19.947,  15.099)  ( 26.410,  20.006,  15.016)  ( 0.09,  0.30,  0.55)
    bond    (  2.000,   0.807,   0.393)  (  2.004,   0.812,   0.397)  ( 0.19,  0.36,  0.17)
    angle   ( 29.017,  24.625,  15.667)  ( 29.019,  24.627,  15.669)  ( 0.01,  0.01,  0.01)
    strbnd  ( -3.684,  -7.464,  -4.429)  ( -3.685,  -7.465,  -4.430)  ( 0.02,  0.01,  0.02)
    torsion ( -0.089,  -0.284,   0.463)  ( -0.089,  -0.284,   0.463)  ( 0.00,  0.00,  0.01)
    oop     ( -0.074,  -0.220,   0.362)  ( -0.056,  -0.166,   0.274)  ( 0.13,  1.19,  3.21)
    vdw     ( -0.663,   2.502,   1.775)  ( -0.663,   2.502,   1.775)  ( 0.00,  0.00,  0.00)
    electro ( -0.120,  -0.020,   0.867)  ( -0.120,  -0.020,   0.867)  ( 0.00,  0.00,  0.00)
15       (  2.734,  -4.218,  -1.241)  (  2.759,  -4.149,  -1.353)  ( 0.92,  1.64,  9.06)
    bond    (  1.169,   0.545,   0.557)  (  1.172,   0.545,   0.558)  ( 0.23,  0.03,  0.03)
    angle   (  3.953,  -5.603,  -2.827)  (  3.953,  -5.602,  -2.827)  ( 0.00,  0.01,  0.00)
    strbnd  ( -0.998,   1.310,   0.666)  ( -0.998,   1.310,   0.666)  ( 0.00,  0.00,  0.00)
    torsion ( -0.049,  -0.169,   0.268)  ( -0.049,  -0.169,   0.269)  ( 0.00,  0.00,  0.01)
    oop     ( -0.064,  -0.204,   0.334)  ( -0.042,  -0.136,   0.220)  ( 0.14,  1.39,  3.78)
    vdw     ( -0.604,  -0.224,  -0.242)  ( -0.604,  -0.224,  -0.242)  ( 0.00,  0.00,  0.00)
    electro ( -0.672,   0.127,   0.003)  ( -0.672,   0.127,   0.003)  ( 0.00,  0.00,  0.00)
16       (  2.391,   3.742,   2.202)  (  2.388,   3.728,   2.229)  ( 0.11,  0.37,  1.19)
    bond    (  1.377,  -1.119,  -0.400)  (  1.379,  -1.118,  -0.400)  ( 0.16,  0.13,  0.01)
    angle   (  4.447,   4.280,   3.375)  (  4.447,   4.280,   3.375)  ( 0.01,  0.01,  0.01)
    strbnd  ( -1.774,  -0.686,  -0.825)  ( -1.774,  -0.686,  -0.825)  ( 0.00,  0.00,  0.00)
    torsion (  0.054,   0.148,  -0.229)  (  0.054,   0.148,  -0.229)  ( 0.00,  0.00,  0.01)
    oop     (  0.018,   0.053,  -0.087)  (  0.012,   0.037,  -0.061)  ( 0.01,  0.08,  0.22)
    vdw     ( -1.150,   0.297,  -0.072)  ( -1.149,   0.297,  -0.072)  ( 0.00,  0.00,  0.00)
    electro ( -0.582,   0.770,   0.440)  ( -0.582,   0.770,   0.440)  ( 0.00,  0.00,  0.00)
17       ( 12.700,  29.735,  18.160)  ( 12.716,  29.786,  18.083)  ( 0.13,  0.17,  0.43)
    bond    ( -3.169,  26.110,  15.008)  ( -3.169,  26.113,  15.009)  ( 0.01,  0.01,  0.01)
    angle   ( 14.067,   0.347,   2.366)  ( 14.068,   0.347,   2.366)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.226,   2.694,   1.435)  ( -0.226,   2.694,   1.435)  ( 0.00,  0.00,  0.00)
    torsion (  0.187,   0.538,  -0.897)  (  0.187,   0.538,  -0.897)  ( 0.00,  0.00,  0.01)
    oop     ( -0.055,  -0.172,   0.287)  ( -0.040,  -0.125,   0.208)  ( 0.09,  0.81,  2.26)
    vdw     ( -0.563,  -0.467,  -0.562)  ( -0.563,  -0.467,  -0.562)  ( 0.00,  0.00,  0.00)
    electro (  2.460,   0.686,   0.523)  (  2.460,   0.686,   0.523)  ( 0.00,  0.00,  0.00)
18       (-16.599, -32.980,  10.375)  (-16.610, -32.935,  10.606)  ( 0.07,  0.13,  2.23)
    bond    (  1.321, -29.709,   5.246)  (  1.321, -29.705,   5.247)  ( 0.01,  0.01,  0.01)
    angle   (-16.050,  -0.489,   1.274)  (-16.050,  -0.489,   1.274)  ( 0.01,  0.00,  0.00)
    strbnd  (  0.072,  -3.233,   0.861)  (  0.072,  -3.233,   0.861)  ( 0.00,  0.00,  0.00)
    torsion ( -0.052,   0.751,   4.265)  ( -0.052,   0.751,   4.266)  ( 0.00,  0.00,  0.00)
    oop     (  0.009,  -0.150,  -0.851)  ( -0.004,  -0.110,  -0.620)  ( 0.01,  0.60, 19.63)
    vdw     (  0.603,   0.572,  -0.221)  (  0.603,   0.572,  -0.221)  ( 0.00,  0.00,  0.00)
    electro ( -2.501,  -0.722,  -0.200)  ( -2.501,  -0.722,  -0.200)  ( 0.00,  0.00,  0.00)
19       ( -9.549, -16.055,  -9.499)  ( -9.547, -16.054,  -9.498)  ( 0.02,  0.01,  0.01)
    bond    (  6.549,  -6.489,  -5.236)  (  6.550,  -6.488,  -5.235)  ( 0.02,  0.02,  0.02)
    angle   (-15.891, -11.333,  -5.837)  (-15.890, -11.333,  -5.837)  ( 0.00,  0.00,  0.01)
    strbnd  ( -1.046,   0.503,   0.436)  ( -1.046,   0.503,   0.436)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.839,   1.264,   1.139)  (  0.839,   1.264,   1.139)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( -6.872,  -6.628,  -8.449)  ( -6.870,  -6.627,  -8.448)  ( 0.02,  0.01,  0.02)
    bond    ( -7.287,   3.445,  -8.054)  ( -7.286,   3.445,  -8.052)  ( 0.02,  0.01,  0.02)
    angle   ( -1.156, -10.327,  -3.372)  ( -1.156, -10.326,  -3.372)  ( 0.02,  0.01,  0.01)
    strbnd  (  1.415,  -1.060,   1.430)  (  1.415,  -1.060,   1.430)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.156,   1.313,   1.547)  (  0.156,   1.313,   1.547)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( -5.154, -11.419,  -3.897)  ( -5.153, -11.418,  -3.895)  ( 0.02,  0.01,  0.04)
    bond    ( -5.951,  -7.142,   6.246)  ( -5.950,  -7.141,   6.247)  ( 0.02,  0.02,  0.02)
    angle   ( -0.744,  -6.990,  -8.698)  ( -0.743,  -6.990,  -8.698)  ( 0.02,  0.00,  0.01)
    strbnd  (  1.377,   1.441,  -1.809)  (  1.377,   1.441,  -1.809)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.163,   1.273,   0.365)  (  0.163,   1.273,   0.365)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (  6.707,  14.950,  -4.095)  (  6.709,  14.951,  -4.094)  ( 0.04,  0.00,  0.03)
    bond    ( 10.180,   0.038,  -5.182)  ( 10.183,   0.038,  -5.181)  ( 0.02,  0.00,  0.01)
    angle   ( -0.643,  16.864,  -1.139)  ( -0.642,  16.864,  -1.139)  ( 0.01,  0.00,  0.03)
    strbnd  ( -2.565,   0.430,   1.327)  ( -2.565,   0.430,   1.327)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.266,  -2.382,   0.899)  ( -0.266,  -2.382,   0.899)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (  7.712,   7.044,   4.929)  (  7.712,   7.045,   4.931)  ( 0.01,  0.01,  0.05)
    bond    (  2.115,   4.636,   9.930)  (  2.115,   4.637,   9.932)  ( 0.01,  0.01,  0.02)
    angle   (  6.274,   3.725,  -3.075)  (  6.274,   3.725,  -3.075)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.199,  -0.342,  -1.642)  ( -0.199,  -0.342,  -1.642)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.477,  -0.975,  -0.284)  ( -0.477,  -0.975,  -0.284)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 10.798,  13.827,  -7.791)  ( 10.799,  13.829,  -7.790)  ( 0.01,  0.01,  0.02)
    bond    ( -5.076,   7.231,  -5.839)  ( -5.075,   7.232,  -5.838)  ( 0.01,  0.02,  0.02)
    angle   ( 15.920,   8.574,  -3.218)  ( 15.920,   8.575,  -3.218)  ( 0.00,  0.00,  0.01)
    strbnd  (  0.876,  -0.556,   0.755)  (  0.876,  -0.556,   0.755)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.922,  -1.422,   0.511)  ( -0.922,  -1.422,   0.511)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 8 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 9 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/buckyball.gpr
 # Expected      1770.65075, found 1770.650748&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/buckyball.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 31.323, -70.042,  35.464)  ( 31.043, -69.725,  35.899)  ( 0.89,  0.45,  1.23)
    bond    ( 23.782, -43.522,  16.947)  ( 23.786, -43.518,  16.949)  ( 0.02,  0.01,  0.01)
    angle   ( -1.489,  18.645,  -4.974)  ( -1.489,  18.646,  -4.974)  ( 0.04,  0.01,  0.01)
    strbnd  ( -4.501, -47.752,  17.244)  ( -4.502, -47.753,  17.244)  ( 0.02,  0.00,  0.00)
    torsion (  7.267,  -3.807,  -1.657)  (  7.267,  -3.806,  -1.657)  ( 0.00,  0.01,  0.04)
    oop     (  1.132,  -2.281,  -2.985)  (  0.848,  -1.970,  -2.552)  (25.11, 13.63, 14.50)
    vdw     (  5.113,   8.667,  10.865)  (  5.113,   8.667,  10.865)  ( 0.00,  0.00,  0.00)
    electro (  0.021,   0.008,   0.024)  (  0.021,   0.008,   0.024)  ( 0.00,  0.00,  0.00)
 2       ( -0.005, -22.566, -21.819)  ( -0.060, -22.561, -21.805)  ( 0.03,  0.02,  0.06)
    bond    ( -0.003,  34.123, -31.161)  (  0.000,  34.128, -31.160)  ( 0.00,  0.01,  0.00)
    angle   ( -0.001, -24.732,  15.299)  (  0.000, -24.730,  15.299)  ( 0.00,  0.01,  0.00)
    strbnd  (  0.001, -42.149, -12.214)  (  0.000, -42.149, -12.214)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -1.624,  -2.638)  (  0.000,  -1.623,  -2.637)  ( 0.00,  0.01,  0.03)
    oop     ( -0.000,  -0.006,  -0.013)  ( -0.060,  -0.007,  -0.001)  ( 0.00,  0.00,  0.02)
    vdw     ( -0.000,  11.821,   8.908)  (  0.000,  11.821,   8.908)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -0.005, -27.927, -49.411)  (  0.033, -27.920, -49.640)  ( 0.02,  0.03,  0.46)
    bond    ( -0.003, -34.133, -31.161)  (  0.000, -34.128, -31.160)  ( 0.00,  0.01,  0.00)
    angle   ( -0.002,  -0.052,  -0.013)  (  0.000,  -0.051,  -0.014)  ( 0.00,  0.01,  0.00)
    strbnd  (  0.000,  18.067, -27.109)  ( -0.000,  18.067, -27.109)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,   0.006,  -0.022)  (  0.000,   0.006,  -0.021)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,   0.006,  -0.013)  (  0.033,   0.007,  -0.244)  ( 0.00,  0.00,  0.30)
    vdw     ( -0.000, -11.821,   8.908)  ( -0.000, -11.821,   8.908)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 21.131,  12.796, -25.898)  ( 21.123,  12.847, -25.783)  ( 0.04,  0.40,  0.44)
    bond    ( 43.256,  -7.494, -14.578)  ( 43.260,  -7.491, -14.577)  ( 0.01,  0.04,  0.01)
    angle   (-17.159,  -4.724,  -2.987)  (-17.158,  -4.723,  -2.987)  ( 0.01,  0.03,  0.00)
    strbnd  (-10.056,  32.899, -17.936)  (-10.056,  32.899, -17.936)  ( 0.00,  0.00,  0.00)
    torsion ( -0.018,   0.789,  -1.277)  ( -0.018,   0.789,  -1.276)  ( 0.00,  0.03,  0.05)
    oop     ( -0.005,  -0.008,   0.015)  ( -0.018,   0.039,   0.128)  ( 0.01,  0.04,  0.17)
    vdw     (  5.113,  -8.667,  10.865)  (  5.113,  -8.667,  10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 14.289,   9.363, -31.569)  ( 14.369,   9.412, -31.694)  ( 0.56,  0.52,  0.40)
    bond    (-12.136,  26.876, -35.755)  (-12.133,  26.880, -35.753)  ( 0.03,  0.01,  0.01)
    angle   (  9.408,   0.081,  15.319)  (  9.409,   0.083,  15.319)  ( 0.01,  0.01,  0.00)
    strbnd  ( 29.706, -20.775, -13.853)  ( 29.706, -20.776, -13.853)  ( 0.00,  0.00,  0.00)
    torsion (  1.323,   0.014,  -0.827)  (  1.324,   0.014,  -0.827)  ( 0.03,  0.00,  0.05)
    oop     (  0.007,   0.003,  -0.008)  (  0.083,   0.046,  -0.136)  ( 0.05,  0.01,  0.10)
    vdw     (-14.019,   3.164,   3.556)  (-14.019,   3.165,   3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 25.646, -70.343,  41.408)  ( 25.779, -70.434,  41.229)  ( 0.52,  0.13,  0.43)
    bond    ( 19.389, -46.358,  15.253)  ( 19.393, -46.354,  15.256)  ( 0.02,  0.01,  0.02)
    angle   ( -9.438,  -0.019, -15.261)  ( -9.437,  -0.018, -15.261)  ( 0.01,  0.00,  0.00)
    strbnd  ( 34.316, -24.105,  33.759)  ( 34.316, -24.106,  33.759)  ( 0.00,  0.00,  0.00)
    torsion ( -4.610,   3.306,   4.108)  ( -4.610,   3.307,   4.109)  ( 0.01,  0.01,  0.01)
    oop     (  0.007,  -0.003,  -0.008)  (  0.136,  -0.098,  -0.190)  ( 0.09,  0.03,  0.15)
    vdw     (-14.019,  -3.165,   3.556)  (-14.019,  -3.165,   3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-27.988, -66.702,  38.743)  (-27.769, -66.483,  39.153)  ( 0.78,  0.33,  1.06)
    bond    (-23.790, -43.522,  16.947)  (-23.786, -43.518,  16.949)  ( 0.02,  0.01,  0.01)
    angle   (  1.488,  18.645,  -4.974)  (  1.489,  18.646,  -4.974)  ( 0.04,  0.01,  0.01)
    strbnd  (  4.503, -47.752,  17.244)  (  4.502, -47.753,  17.244)  ( 0.02,  0.00,  0.00)
    torsion ( -3.949,  -0.487,   1.661)  ( -3.948,  -0.487,   1.662)  ( 0.01,  0.02,  0.04)
    oop     ( -1.132,  -2.281,  -2.985)  ( -0.917,  -2.067,  -2.577)  (18.96,  9.36, 13.67)
    vdw     ( -5.113,   8.667,  10.865)  ( -5.113,   8.667,  10.865)  ( 0.00,  0.00,  0.00)
    electro (  0.005,   0.028,  -0.015)  (  0.005,   0.028,  -0.015)  ( 0.00,  0.00,  0.00)
 8       (-21.142,  12.796, -25.898)  (-21.123,  12.847, -25.783)  ( 0.09,  0.40,  0.44)
    bond    (-43.264,  -7.494, -14.578)  (-43.260,  -7.491, -14.577)  ( 0.01,  0.04,  0.01)
    angle   ( 17.157,  -4.724,  -2.987)  ( 17.158,  -4.723,  -2.987)  ( 0.01,  0.03,  0.00)
    strbnd  ( 10.057,  32.899, -17.936)  ( 10.056,  32.899, -17.936)  ( 0.00,  0.00,  0.00)
    torsion (  0.017,   0.789,  -1.277)  (  0.018,   0.789,  -1.276)  ( 0.00,  0.03,  0.05)
    oop     (  0.005,  -0.008,   0.015)  (  0.018,   0.039,   0.128)  ( 0.01,  0.04,  0.17)
    vdw     ( -5.113,  -8.667,  10.865)  ( -5.113,  -8.667,  10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-67.739,  49.370,  25.129)  (-67.833,  49.115,  25.292)  ( 0.14,  0.52,  0.65)
    bond    (-36.107,  35.751,  12.130)  (-36.102,  35.753,  12.133)  ( 0.01,  0.01,  0.02)
    angle   ( 17.149,   4.693,   2.954)  ( 17.150,   4.693,   2.954)  ( 0.01,  0.00,  0.00)
    strbnd  (-51.963,  13.261,  -5.254)  (-51.963,  13.260,  -5.254)  ( 0.00,  0.00,  0.01)
    torsion (  0.014,  -0.786,   1.288)  (  0.015,  -0.785,   1.288)  ( 0.00,  0.05,  0.03)
    oop     (  0.003,   0.008,  -0.007)  ( -0.097,  -0.250,   0.152)  ( 0.03,  0.20,  0.12)
    vdw     (  3.164,  -3.556,  14.019)  (  3.165,  -3.556,  14.019)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 31.236,  47.185,  -1.239)  ( 31.215,  47.123,  -1.138)  ( 0.07,  0.13,  8.16)
    bond    ( 14.575,  43.256,   7.487)  ( 14.577,  43.260,   7.491)  ( 0.01,  0.01,  0.04)
    angle   (  0.070,  -0.076,   0.002)  (  0.070,  -0.074,   0.003)  ( 0.00,  0.01,  0.00)
    strbnd  ( 27.502,  -1.085, -17.420)  ( 27.502,  -1.086, -17.420)  ( 0.00,  0.04,  0.00)
    torsion ( -0.031,  -0.018,   0.018)  ( -0.030,  -0.018,   0.018)  ( 0.00,  0.00,  0.00)
    oop     ( -0.016,  -0.005,   0.008)  ( -0.039,  -0.073,   0.104)  ( 0.04,  0.03,  0.07)
    vdw     (-10.865,   5.113,   8.667)  (-10.865,   5.113,   8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-39.118, -31.509, -71.923)  (-39.212, -31.409, -71.821)  ( 0.24,  0.32,  0.14)
    bond    (-16.950, -23.790, -43.522)  (-16.949, -23.786, -43.518)  ( 0.01,  0.02,  0.01)
    angle   (  7.665, -10.561,  12.380)  (  7.665, -10.560,  12.382)  ( 0.01,  0.00,  0.01)
    strbnd  (-17.617,   7.935, -50.278)  (-17.617,   7.935, -50.278)  ( 0.00,  0.01,  0.00)
    torsion ( -1.335,   0.015,   0.822)  ( -1.334,   0.016,   0.822)  ( 0.05,  0.00,  0.02)
    oop     ( -0.016,   0.005,   0.008)  ( -0.112,   0.100,   0.104)  ( 0.15,  0.04,  0.07)
    vdw     (-10.865,  -5.113,   8.667)  (-10.865,  -5.113,   8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (136.277,  26.528,  22.209)  (136.459,  26.368,  21.970)  ( 0.13,  0.60,  1.07)
    bond    (135.066,   1.214,  17.360)  (135.071,   1.217,  17.364)  ( 0.00,  0.25,  0.02)
    angle   ( 12.089,  -6.240,  -2.707)  ( 12.090,  -6.239,  -2.706)  ( 0.01,  0.02,  0.05)
    strbnd  ( -8.934,  23.739,  -9.368)  ( -8.935,  23.739,  -9.369)  ( 0.01,  0.00,  0.01)
    torsion ( -3.957,   1.984,  -0.076)  ( -3.957,   1.985,  -0.075)  ( 0.00,  0.03,  0.00)
    oop     ( -1.135,   2.283,   2.995)  ( -0.959,   2.119,   2.750)  (15.53,  7.20,  8.16)
    vdw     (  3.164,   3.556,  14.019)  (  3.165,   3.556,  14.019)  ( 0.01,  0.00,  0.00)
    electro ( -0.017,  -0.008,  -0.013)  ( -0.017,  -0.008,  -0.013)  ( 0.00,  0.00,  0.00)
13       ( 24.935,  12.481, -15.758)  ( 25.063,  12.565, -15.803)  ( 0.51,  0.67,  0.29)
    bond    ( 35.751, -12.136, -26.884)  ( 35.753, -12.133, -26.880)  ( 0.01,  0.03,  0.01)
    angle   ( -4.772,   2.895,  17.041)  ( -4.771,   2.895,  17.042)  ( 0.01,  0.03,  0.01)
    strbnd  ( -0.679,  38.688,  -2.733)  ( -0.679,  38.688,  -2.734)  ( 0.01,  0.00,  0.02)
    torsion ( -1.817,  -2.954,  -0.013)  ( -1.817,  -2.953,  -0.013)  ( 0.03,  0.01,  0.00)
    oop     (  0.008,   0.007,  -0.003)  (  0.133,   0.087,  -0.054)  ( 0.10,  0.05,  0.01)
    vdw     ( -3.556, -14.019,  -3.165)  ( -3.556, -14.019,  -3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-40.621,  37.564,  40.544)  (-40.622,  37.359,  40.558)  ( 0.00,  0.55,  0.04)
    bond    (-39.008,  34.071,   7.727)  (-39.005,  34.073,   7.732)  ( 0.01,  0.00,  0.07)
    angle   ( 23.587, -15.993,  -0.394)  ( 23.587, -15.993,  -0.394)  ( 0.00,  0.00,  0.03)
    strbnd  (-21.093,  27.377,  36.616)  (-21.093,  27.377,  36.616)  ( 0.00,  0.00,  0.00)
    torsion (  3.443,  -0.703,   2.414)  (  3.443,  -0.702,   2.414)  ( 0.01,  0.05,  0.01)
    oop     (  1.146,   3.688,  -0.699)  (  1.141,   3.480,  -0.689)  ( 0.40,  5.63,  0.65)
    vdw     ( -8.667, -10.865,  -5.113)  ( -8.667, -10.865,  -5.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.029,  -0.012,  -0.008)  ( -0.029,  -0.012,  -0.008)  ( 0.00,  0.00,  0.00)
15       ( 27.578,  16.756,  15.749)  ( 27.368,  16.646,  15.699)  ( 0.76,  0.66,  0.31)
    bond    ( 35.751, -12.136,  26.876)  ( 35.753, -12.133,  26.880)  ( 0.01,  0.03,  0.01)
    angle   ( -4.772,   2.895, -17.043)  ( -4.771,   2.895, -17.042)  ( 0.01,  0.03,  0.01)
    strbnd  ( -0.679,  38.688,   2.734)  ( -0.679,  38.688,   2.734)  ( 0.01,  0.00,  0.02)
    torsion (  0.825,   1.322,   0.014)  (  0.826,   1.322,   0.014)  ( 0.05,  0.03,  0.00)
    oop     (  0.008,   0.007,   0.003)  ( -0.205,  -0.108,  -0.052)  ( 0.16,  0.08,  0.02)
    vdw     ( -3.556, -14.019,   3.164)  ( -3.556, -14.019,   3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 51.807,  -8.464,  -1.583)  ( 51.932,  -7.772,  -1.549)  ( 0.24,  8.17,  2.11)
    bond    ( 83.777,  -7.832,  -0.005)  ( 83.783,  -7.831,   0.000)  ( 0.01,  0.01,  0.00)
    angle   (-37.741,  26.250,  -0.002)  (-37.740,  26.250,  -0.000)  ( 0.00,  0.00,  0.00)
    strbnd  ( 22.370, -18.021,  -1.213)  ( 22.369, -18.021,  -1.214)  ( 0.00,  0.00,  0.07)
    torsion ( -2.428,   7.449,  -0.448)  ( -2.428,   7.450,  -0.448)  ( 0.01,  0.01,  0.02)
    oop     ( -2.301,  -7.395,  -0.000)  ( -2.183,  -6.706,   0.027)  ( 5.11,  9.32,  0.00)
    vdw     (-11.821,  -8.908,  -0.000)  (-11.821,  -8.908,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.049,  -0.007,   0.085)  ( -0.049,  -0.007,   0.085)  ( 0.00,  0.00,  0.00)
17       (-26.018, -68.142,  37.927)  (-25.793, -67.980,  38.061)  ( 0.86,  0.24,  0.35)
    bond    (-19.396, -46.358,  15.253)  (-19.393, -46.354,  15.256)  ( 0.02,  0.01,  0.02)
    angle   ( 12.147,  11.972,  -9.007)  ( 12.148,  11.973,  -9.007)  ( 0.01,  0.01,  0.00)
    strbnd  (-31.398, -25.505,  30.961)  (-31.399, -25.505,  30.961)  ( 0.00,  0.00,  0.00)
    torsion (  1.612,  -3.975,  -0.524)  (  1.613,  -3.975,  -0.523)  ( 0.03,  0.01,  0.03)
    oop     ( -3.005,  -1.139,  -2.295)  ( -2.785,  -0.981,  -2.164)  ( 7.32, 13.83,  5.70)
    vdw     ( 14.019,  -3.165,   3.556)  ( 14.019,  -3.165,   3.556)  ( 0.00,  0.01,  0.00)
    electro (  0.003,   0.028,  -0.018)  (  0.003,   0.028,  -0.018)  ( 0.00,  0.00,  0.00)
18       ( 67.728,  49.371,  25.130)  ( 67.833,  49.347,  25.204)  ( 0.16,  0.05,  0.29)
    bond    ( 36.097,  35.751,  12.130)  ( 36.102,  35.753,  12.133)  ( 0.01,  0.01,  0.02)
    angle   (-17.150,   4.693,   2.954)  (-17.149,   4.693,   2.954)  ( 0.01,  0.00,  0.00)
    strbnd  ( 51.964,  13.261,  -5.254)  ( 51.963,  13.260,  -5.254)  ( 0.00,  0.00,  0.01)
    torsion ( -0.015,  -0.786,   1.288)  ( -0.015,  -0.785,   1.288)  ( 0.00,  0.05,  0.03)
    oop     ( -0.003,   0.008,  -0.007)  (  0.097,  -0.018,   0.064)  ( 0.03,  0.02,  0.05)
    vdw     ( -3.165,  -3.556,  14.019)  ( -3.165,  -3.556,  14.019)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-44.052,  29.182, -41.644)  (-44.158,  28.755, -41.798)  ( 0.24,  1.47,  0.37)
    bond    (-39.008,  34.071,  -7.737)  (-39.005,  34.073,  -7.732)  ( 0.01,  0.00,  0.07)
    angle   ( 23.586, -15.993,   0.393)  ( 23.587, -15.993,   0.394)  ( 0.00,  0.00,  0.03)
    strbnd  (-21.093,  27.377, -36.615)  (-21.093,  27.377, -36.616)  ( 0.00,  0.00,  0.00)
    torsion ( -0.017,  -9.085,  -3.479)  ( -0.017,  -9.085,  -3.479)  ( 0.00,  0.01,  0.01)
    oop     (  1.146,   3.688,   0.698)  (  1.036,   3.258,   0.539)  ( 9.56, 11.67, 11.13)
    vdw     ( -8.667, -10.865,   5.113)  ( -8.667, -10.865,   5.113)  ( 0.00,  0.00,  0.00)
    electro (  0.001,  -0.011,  -0.017)  (  0.001,  -0.011,  -0.017)  ( 0.00,  0.00,  0.00)
20       ( 28.849,  34.559,  65.866)  ( 28.812,  34.281,  65.880)  ( 0.13,  0.80,  0.02)
    bond    ( 39.001,  34.071,   7.727)  ( 39.005,  34.073,   7.732)  ( 0.01,  0.00,  0.07)
    angle   (-18.869, -13.077,  16.691)  (-18.869, -13.076,  16.692)  ( 0.00,  0.01,  0.00)
    strbnd  (  6.474,  18.342,  44.854)  (  6.473,  18.342,  44.853)  ( 0.01,  0.00,  0.00)
    torsion ( -5.354,   2.386,   2.414)  ( -5.353,   2.387,   2.414)  ( 0.01,  0.03,  0.01)
    oop     ( -1.146,   3.688,  -0.699)  ( -1.186,   3.408,  -0.689)  ( 3.52,  7.60,  0.65)
    vdw     (  8.667, -10.865,  -5.113)  (  8.667, -10.865,  -5.113)  ( 0.00,  0.00,  0.00)
    electro (  0.076,   0.013,  -0.009)  (  0.076,   0.013,  -0.009)  ( 0.00,  0.00,  0.00)
21       (-29.046,  -4.329, -10.640)  (-29.118,  -4.281, -10.766)  ( 0.25,  1.11,  1.18)
    bond    ( 12.130,  26.876, -35.755)  ( 12.133,  26.880, -35.753)  ( 0.03,  0.01,  0.01)
    angle   (-12.338, -17.043,  20.047)  (-12.337, -17.042,  20.048)  ( 0.01,  0.01,  0.00)
    strbnd  (-40.218, -17.343,   3.155)  (-40.219, -17.344,   3.155)  ( 0.00,  0.00,  0.01)
    torsion ( -2.631,   0.014,  -1.635)  ( -2.630,   0.014,  -1.635)  ( 0.02,  0.00,  0.04)
    oop     ( -0.007,   0.003,  -0.008)  ( -0.084,   0.046,  -0.137)  ( 0.06,  0.01,  0.11)
    vdw     ( 14.019,   3.164,   3.556)  ( 14.019,   3.165,   3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 35.610,  -3.951,   2.676)  ( 35.454,  -4.007,   2.682)  ( 0.44,  1.40,  0.22)
    bond    ( 31.159,  -0.003,  34.123)  ( 31.160,   0.000,  34.128)  ( 0.00,  0.00,  0.01)
    angle   ( -7.641,  10.582, -12.341)  ( -7.642,  10.584, -12.339)  ( 0.01,  0.02,  0.01)
    strbnd  ( 19.661, -14.530, -30.107)  ( 19.661, -14.530, -30.108)  ( 0.00,  0.00,  0.00)
    torsion (  1.326,  -0.001,  -0.814)  (  1.326,  -0.000,  -0.813)  ( 0.06,  0.00,  0.01)
    oop     (  0.012,  -0.000,  -0.006)  ( -0.145,  -0.060,  -0.007)  ( 0.19,  0.00,  0.00)
    vdw     ( -8.908,  -0.000,  11.821)  ( -8.908,  -0.000,  11.821)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-38.737, -25.721, -66.594)  (-38.843, -25.525, -66.465)  ( 0.27,  0.76,  0.19)
    bond    (-15.259, -19.396, -46.358)  (-15.256, -19.393, -46.354)  ( 0.02,  0.02,  0.01)
    angle   (  9.006,  12.147,  11.973)  (  9.006,  12.148,  11.974)  ( 0.00,  0.01,  0.01)
    strbnd  (-30.960, -31.398, -25.505)  (-30.961, -31.399, -25.505)  ( 0.00,  0.00,  0.00)
    torsion ( -0.256,   1.888,  -2.379)  ( -0.255,   1.889,  -2.379)  ( 0.02,  0.02,  0.01)
    oop     (  2.294,  -3.005,  -1.139)  (  2.185,  -2.814,  -1.014)  ( 4.77,  6.36, 10.97)
    vdw     ( -3.556,  14.019,  -3.165)  ( -3.556,  14.019,  -3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.007,   0.025,  -0.021)  ( -0.007,   0.025,  -0.021)  ( 0.00,  0.00,  0.00)
24       ( 60.456, -97.431, -39.221)  ( 60.199, -97.570, -39.407)  ( 0.43,  0.14,  0.47)
    bond    ( 51.387, -113.911, -53.790)  ( 51.389, -113.905, -53.785)  ( 0.00,  0.00,  0.01)
    angle   ( -9.694,  -7.639,   5.079)  ( -9.693,  -7.638,   5.081)  ( 0.01,  0.02,  0.04)
    strbnd  (  8.751,  23.342,  -6.355)  (  8.750,  23.341,  -6.356)  ( 0.01,  0.00,  0.01)
    torsion ( -3.892,   4.787,   4.871)  ( -3.892,   4.788,   4.872)  ( 0.02,  0.00,  0.01)
    oop     (  3.007,   1.139,   2.292)  (  2.747,   0.993,   2.100)  ( 8.65, 12.81,  8.37)
    vdw     ( 10.865,  -5.113,   8.667)  ( 10.865,  -5.113,   8.667)  ( 0.00,  0.00,  0.00)
    electro (  0.033,  -0.035,   0.015)  (  0.033,  -0.035,   0.015)  ( 0.00,  0.00,  0.00)
25       ( 58.980,  74.406, -105.243)  ( 59.245,  74.045, -105.464)  ( 0.45,  0.49,  0.21)
    bond    ( 53.781,  51.387, -113.911)  ( 53.785,  51.389, -113.905)  ( 0.01,  0.00,  0.00)
    angle   (  6.224,  -2.707, -11.958)  (  6.226,  -2.706, -11.957)  ( 0.03,  0.04,  0.01)
    strbnd  ( 10.481,  11.763,  21.946)  ( 10.480,  11.763,  21.945)  ( 0.01,  0.00,  0.00)
    torsion ( -0.547,   0.110,   2.641)  ( -0.547,   0.110,   2.641)  ( 0.01,  0.01,  0.01)
    oop     ( -2.292,   3.007,   1.139)  ( -2.033,   2.642,   0.911)  (11.28, 12.12, 19.95)
    vdw     ( -8.667,  10.865,  -5.113)  ( -8.667,  10.865,  -5.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.018,   0.014)  ( -0.000,  -0.018,   0.014)  ( 0.00,  0.00,  0.00)
26       (-116.767,  10.793,  30.278)  (-116.893,  10.574,  30.045)  ( 0.11,  2.02,  0.77)
    bond    (-135.075,   1.214,  17.360)  (-135.071,   1.217,  17.364)  ( 0.00,  0.25,  0.02)
    angle   ( -0.784, -13.231,   1.610)  ( -0.782, -13.229,   1.611)  ( 0.12,  0.01,  0.09)
    strbnd  ( 13.683,  19.950,  -5.939)  ( 13.682,  19.949,  -5.939)  ( 0.01,  0.00,  0.01)
    torsion (  7.492,  -2.981,   0.212)  (  7.492,  -2.980,   0.213)  ( 0.00,  0.02,  0.01)
    oop     (  1.135,   2.283,   2.995)  (  1.003,   2.060,   2.756)  (11.57,  9.75,  7.97)
    vdw     ( -3.165,   3.556,  14.019)  ( -3.165,   3.556,  14.019)  ( 0.01,  0.00,  0.00)
    electro ( -0.053,   0.001,   0.022)  ( -0.053,   0.001,   0.022)  ( 0.00,  0.00,  0.00)
27       ( 10.634, -29.044,  -4.329)  ( 10.424, -28.924,  -4.378)  ( 1.98,  0.41,  1.14)
    bond    ( 35.751,  12.130,  26.876)  ( 35.753,  12.133,  26.880)  ( 0.01,  0.03,  0.01)
    angle   (-20.047, -12.337, -17.043)  (-20.047, -12.336, -17.042)  ( 0.00,  0.01,  0.01)
    strbnd  ( -3.155, -40.218, -17.343)  ( -3.155, -40.219, -17.344)  ( 0.01,  0.00,  0.00)
    torsion (  1.633,  -2.629,   0.014)  (  1.634,  -2.629,   0.014)  ( 0.04,  0.01,  0.00)
    oop     (  0.008,  -0.007,   0.003)  ( -0.205,   0.108,  -0.052)  ( 0.16,  0.08,  0.02)
    vdw     ( -3.556,  14.019,   3.164)  ( -3.556,  14.019,   3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-80.173, -13.495,  91.263)  (-80.106, -13.802,  91.405)  ( 0.08,  2.28,  0.16)
    bond    (-80.991, -32.067, 104.351)  (-80.984, -32.067, 104.355)  ( 0.01,  0.00,  0.00)
    angle   ( -5.780, -10.181,  -6.552)  ( -5.778, -10.180,  -6.550)  ( 0.02,  0.01,  0.03)
    strbnd  ( 17.767,  17.403,   0.778)  ( 17.767,  17.403,   0.777)  ( 0.00,  0.00,  0.07)
    torsion (  1.844,  -1.247,  -6.648)  (  1.844,  -1.247,  -6.647)  ( 0.01,  0.05,  0.00)
    oop     ( -1.149,   3.694,  -0.703)  ( -1.090,   3.385,  -0.567)  ( 5.13,  8.37,  9.53)
    vdw     (-11.821,   8.908,  -0.000)  (-11.821,   8.908,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.044,  -0.004,   0.037)  ( -0.044,  -0.004,   0.037)  ( 0.00,  0.00,  0.00)
29       ( 92.535, -14.074, -68.063)  ( 92.517, -14.095, -68.080)  ( 0.02,  0.15,  0.02)
    bond    (100.420, -43.951, -73.114)  (100.424, -43.949, -73.108)  ( 0.00,  0.00,  0.01)
    angle   (-11.270,   6.979,  -4.229)  (-11.268,   6.980,  -4.227)  ( 0.02,  0.02,  0.04)
    strbnd  ( -1.765,   8.417,  15.196)  ( -1.766,   8.417,  15.195)  ( 0.04,  0.00,  0.00)
    torsion ( -3.521,   3.609,  -0.804)  ( -3.520,   3.609,  -0.804)  ( 0.01,  0.01,  0.02)
    oop     (  0.003,   0.007,   0.002)  ( -0.021,  -0.017,  -0.022)  ( 0.01,  0.02,  0.00)
    vdw     (  8.667,  10.865,  -5.113)  (  8.667,  10.865,  -5.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-37.916, -10.182, -31.859)  (-37.968,  -9.730, -31.963)  ( 0.14,  4.44,  0.33)
    bond    (-69.136,   1.233, -23.716)  (-69.129,   1.234, -23.711)  ( 0.01,  0.08,  0.02)
    angle   ( 31.983,  16.133,  -7.428)  ( 31.984,  16.134,  -7.426)  ( 0.00,  0.01,  0.03)
    strbnd  (-19.196, -18.175,  -1.231)  (-19.197, -18.176,  -1.232)  ( 0.00,  0.00,  0.06)
    torsion (  5.490,   3.218,  -0.173)  (  5.490,   3.219,  -0.173)  ( 0.00,  0.03,  0.01)
    oop     (  1.149,  -3.695,   0.703)  (  1.090,  -3.245,   0.592)  ( 5.13, 12.18,  7.79)
    vdw     ( 11.821,  -8.908,  -0.000)  ( 11.821,  -8.908,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.027,   0.011,  -0.014)  ( -0.027,   0.011,  -0.014)  ( 0.00,  0.00,  0.00)
31       ( 49.407,  -0.005, -27.927)  ( 49.495,   0.033, -27.920)  ( 0.18,  0.02,  0.03)
    bond    ( 31.159,  -0.003, -34.133)  ( 31.160,   0.000, -34.128)  ( 0.00,  0.00,  0.01)
    angle   (  0.014,  -0.002,  -0.052)  (  0.014,   0.000,  -0.051)  ( 0.00,  0.00,  0.01)
    strbnd  ( 27.109,   0.000,  18.067)  ( 27.109,  -0.000,  18.067)  ( 0.00,  0.00,  0.00)
    torsion (  0.020,  -0.000,   0.006)  (  0.021,  -0.000,   0.006)  ( 0.00,  0.00,  0.00)
    oop     (  0.012,  -0.000,   0.006)  (  0.098,   0.033,   0.007)  ( 0.11,  0.00,  0.00)
    vdw     ( -8.908,  -0.000, -11.821)  ( -8.908,   0.000, -11.821)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-43.299, -22.717,  65.917)  (-42.959, -22.830,  66.023)  ( 0.79,  0.50,  0.16)
    bond    (-34.074,  -7.737,  39.001)  (-34.073,  -7.732,  39.005)  ( 0.00,  0.07,  0.01)
    angle   ( 13.017,   9.629, -10.483)  ( 13.017,   9.630, -10.483)  ( 0.01,  0.01,  0.00)
    strbnd  (-28.620, -32.842,  26.431)  (-28.620, -32.842,  26.430)  ( 0.00,  0.00,  0.00)
    torsion ( -0.785,   2.435,   3.481)  ( -0.785,   2.435,   3.481)  ( 0.05,  0.01,  0.01)
    oop     ( -3.689,   0.698,  -1.146)  ( -3.351,   0.579,  -1.044)  ( 9.16,  8.31,  8.92)
    vdw     ( 10.865,   5.113,   8.667)  ( 10.865,   5.113,   8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.012,  -0.013,  -0.033)  ( -0.012,  -0.013,  -0.033)  ( 0.00,  0.00,  0.00)
33       (-65.117, -42.017, -23.676)  (-65.222, -41.583, -23.830)  ( 0.16,  1.03,  0.65)
    bond    (-39.008, -34.074,  -7.737)  (-39.005, -34.073,  -7.732)  ( 0.01,  0.00,  0.07)
    angle   ( 10.483,  13.017,   9.629)  ( 10.483,  13.017,   9.630)  ( 0.00,  0.01,  0.01)
    strbnd  (-26.430, -28.620, -32.842)  (-26.430, -28.620, -32.842)  ( 0.00,  0.00,  0.00)
    torsion ( -2.664,   0.469,   1.448)  ( -2.663,   0.469,   1.449)  ( 0.01,  0.03,  0.02)
    oop     (  1.146,  -3.689,   0.698)  (  1.036,  -3.258,   0.539)  ( 9.56, 11.68, 11.13)
    vdw     ( -8.667,  10.865,   5.113)  ( -8.667,  10.865,   5.113)  ( 0.00,  0.00,  0.00)
    electro (  0.024,   0.016,   0.014)  (  0.024,   0.016,   0.014)  ( 0.00,  0.00,  0.00)
34       ( 96.071, -17.044, -60.948)  ( 96.079, -17.112, -60.944)  ( 0.01,  0.40,  0.01)
    bond    ( 95.631, -41.133, -80.648)  ( 95.638, -41.132, -80.644)  ( 0.01,  0.00,  0.01)
    angle   (  0.020,  -0.065,  13.973)  (  0.022,  -0.064,  13.975)  ( 0.00,  0.01,  0.01)
    strbnd  (-11.391,  13.851,   0.804)  (-11.392,  13.850,   0.803)  ( 0.01,  0.00,  0.06)
    torsion ( -0.007,   1.401,   4.923)  ( -0.007,   1.401,   4.923)  ( 0.00,  0.03,  0.00)
    oop     ( -0.003,  -0.006,  -0.000)  ( -0.003,  -0.076,  -0.002)  ( 0.00,  0.04,  0.00)
    vdw     ( 11.821,   8.908,  -0.000)  ( 11.821,   8.908,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-55.058,  70.603,   1.283)  (-55.110,  70.573,   1.267)  ( 0.09,  0.04,  1.23)
    bond    (-103.156,  81.866,   4.460)  (-103.153,  81.870,   4.465)  ( 0.00,  0.01,  0.11)
    angle   ( 18.071, -16.284, -11.405)  ( 18.073, -16.282, -11.403)  ( 0.01,  0.01,  0.02)
    strbnd  ( 18.702,  -5.647,  14.945)  ( 18.701,  -5.648,  14.945)  ( 0.00,  0.01,  0.00)
    torsion (  7.772,  -3.347,  -3.551)  (  7.773,  -3.347,  -3.551)  ( 0.00,  0.01,  0.01)
    oop     ( -0.004,  -0.003,  -0.001)  ( -0.059,  -0.038,  -0.024)  ( 0.02,  0.01,  0.00)
    vdw     (  3.556,  14.019,  -3.165)  (  3.556,  14.019,  -3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( 12.265, -19.855, -14.892)  ( 12.383, -19.779, -14.930)  ( 0.97,  0.39,  0.25)
    bond    (  8.484, -49.112, -23.807)  (  8.487, -49.108, -23.802)  ( 0.03,  0.01,  0.02)
    angle   (-12.895,  18.233,  15.035)  (-12.894,  18.235,  15.037)  ( 0.01,  0.01,  0.01)
    strbnd  ( 18.645,  -6.246, -13.944)  ( 18.644,  -6.246, -13.945)  ( 0.00,  0.01,  0.01)
    torsion ( -5.521,   3.254,   4.658)  ( -5.521,   3.254,   4.658)  ( 0.01,  0.00,  0.01)
    oop     ( -0.004,  -0.003,   0.001)  (  0.111,   0.068,  -0.043)  ( 0.04,  0.02,  0.01)
    vdw     (  3.556,  14.019,   3.164)  (  3.556,  14.019,   3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (-11.534,  90.519,  79.335)  (-11.842,  90.661,  79.284)  ( 2.66,  0.16,  0.06)
    bond    (-32.067, 104.351,  80.977)  (-32.067, 104.355,  80.984)  ( 0.00,  0.00,  0.01)
    angle   (-10.181,  -6.552,   5.777)  (-10.180,  -6.550,   5.778)  ( 0.01,  0.03,  0.02)
    strbnd  ( 17.403,   0.778, -17.766)  ( 17.403,   0.777, -17.767)  ( 0.00,  0.07,  0.00)
    torsion (  0.691,  -7.369,  -2.666)  (  0.692,  -7.369,  -2.666)  ( 0.05,  0.00,  0.01)
    oop     (  3.694,  -0.703,   1.149)  (  3.385,  -0.567,   1.090)  ( 8.37,  9.53,  5.13)
    vdw     (  8.908,  -0.000,  11.821)  (  8.908,  -0.000,  11.821)  ( 0.00,  0.00,  0.00)
    electro (  0.018,   0.015,   0.043)  (  0.018,   0.015,   0.043)  ( 0.00,  0.00,  0.00)
38       (-20.470, -14.247,  78.101)  (-19.952, -14.541,  78.153)  ( 2.53,  2.06,  0.07)
    bond    (-35.755, -12.136,  36.097)  (-35.753, -12.133,  36.102)  ( 0.01,  0.02,  0.01)
    angle   ( 13.735,   1.864,  -0.027)  ( 13.736,   1.864,  -0.026)  ( 0.00,  0.02,  0.00)
    strbnd  (  2.119,  13.573,  45.241)  (  2.119,  13.573,  45.241)  ( 0.02,  0.00,  0.00)
    torsion ( -1.138,  -6.101,  -0.012)  ( -1.137,  -6.101,  -0.012)  ( 0.05,  0.01,  0.00)
    oop     ( -2.998,   2.572,  -0.003)  ( -2.482,   2.275,   0.044)  (17.19, 11.55,  0.01)
    vdw     (  3.556, -14.019,  -3.165)  (  3.556, -14.019,  -3.165)  ( 0.00,  0.00,  0.01)
    electro (  0.010,   0.000,  -0.031)  (  0.010,   0.000,  -0.031)  ( 0.00,  0.00,  0.00)
39       (-85.874, -81.036, -31.829)  (-86.171, -80.871, -31.866)  ( 0.35,  0.20,  0.12)
    bond    (-103.156, -81.874, -33.768)  (-103.153, -81.870, -33.763)  ( 0.00,  0.01,  0.02)
    angle   ( -6.699,   2.423,  11.401)  ( -6.698,   2.424,  11.403)  ( 0.02,  0.05,  0.02)
    strbnd  ( 16.163,   5.145, -17.458)  ( 16.163,   5.144, -17.459)  ( 0.00,  0.01,  0.00)
    torsion (  1.309,   9.889,   4.841)  (  1.309,   9.890,   4.842)  ( 0.03,  0.00,  0.01)
    oop     (  2.986,  -2.562,   0.001)  (  2.685,  -2.402,  -0.043)  (10.07,  6.23,  0.01)
    vdw     (  3.556, -14.019,   3.164)  (  3.556, -14.019,   3.165)  ( 0.00,  0.00,  0.01)
    electro ( -0.032,  -0.038,  -0.011)  ( -0.032,  -0.038,  -0.011)  ( 0.00,  0.00,  0.00)
40       ( -5.308,  40.901,  79.177)  ( -5.323,  40.954,  79.178)  ( 0.28,  0.13,  0.00)
    bond    (-30.073,  36.729, 122.954)  (-30.069,  36.731, 122.960)  ( 0.01,  0.01,  0.00)
    angle   ( 13.179, -13.263, -19.355)  ( 13.181, -13.262, -19.353)  ( 0.01,  0.01,  0.01)
    strbnd  ( -2.815,   8.609, -22.653)  ( -2.815,   8.609, -22.654)  ( 0.03,  0.01,  0.00)
    torsion (  5.731,  -2.047,  -6.880)  (  5.731,  -2.046,  -6.880)  ( 0.00,  0.02,  0.00)
    oop     (  0.003,   0.007,  -0.002)  ( -0.017,   0.057,  -0.008)  ( 0.01,  0.03,  0.00)
    vdw     (  8.667,  10.865,   5.113)  (  8.667,  10.865,   5.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       ( 30.719, -81.494, -85.567)  ( 30.707, -81.890, -85.325)  ( 0.04,  0.49,  0.28)
    bond    ( 33.758, -103.156, -81.874)  ( 33.763, -103.153, -81.870)  ( 0.02,  0.00,  0.01)
    angle   (-11.405,  -6.700,   2.422)  (-11.403,  -6.699,   2.424)  ( 0.02,  0.02,  0.05)
    strbnd  ( 15.955,  18.524,   6.779)  ( 15.954,  18.523,   6.778)  ( 0.00,  0.00,  0.01)
    torsion ( -4.417,   3.306,   3.735)  ( -4.417,   3.307,   3.735)  ( 0.01,  0.01,  0.01)
    oop     ( -0.001,   2.986,  -2.562)  ( -0.020,   2.586,  -2.326)  ( 0.00, 13.37,  9.23)
    vdw     ( -3.165,   3.556, -14.019)  ( -3.165,   3.556, -14.019)  ( 0.01,  0.00,  0.00)
    electro ( -0.005,  -0.009,  -0.048)  ( -0.005,  -0.009,  -0.048)  ( 0.00,  0.00,  0.00)
42       (-42.941, 110.290,  31.214)  (-43.028, 110.279,  31.626)  ( 0.20,  0.01,  1.32)
    bond    (-49.403, 115.074,  53.013)  (-49.397, 115.078,  53.014)  ( 0.01,  0.00,  0.00)
    angle   (-11.674,  -5.503,   3.169)  (-11.672,  -5.501,   3.170)  ( 0.01,  0.03,  0.04)
    strbnd  ( 23.312,  -2.912,  -8.167)  ( 23.312,  -2.913,  -8.168)  ( 0.00,  0.03,  0.01)
    torsion ( -0.746,  -6.229,  -2.206)  ( -0.746,  -6.229,  -2.205)  ( 0.02,  0.00,  0.02)
    oop     (  0.705,   1.157,  -3.711)  (  0.611,   1.141,  -3.302)  ( 6.63,  1.36, 11.03)
    vdw     ( -5.113,   8.667, -10.865)  ( -5.113,   8.667, -10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.023,   0.037,  -0.019)  ( -0.023,   0.037,  -0.019)  ( 0.00,  0.00,  0.00)
43       (-64.425, -42.279, -24.365)  (-64.324, -42.030, -24.468)  ( 0.16,  0.59,  0.42)
    bond    (-36.107, -35.755, -12.136)  (-36.102, -35.753, -12.133)  ( 0.01,  0.01,  0.02)
    angle   ( 17.148,   9.008,  -1.063)  ( 17.149,   9.009,  -1.063)  ( 0.01,  0.01,  0.03)
    strbnd  (-48.672, -14.889,   3.060)  (-48.673, -14.890,   3.060)  ( 0.00,  0.00,  0.02)
    torsion (  0.014,  -1.214,  -2.794)  (  0.015,  -1.213,  -2.793)  ( 0.00,  0.04,  0.01)
    oop     (  0.003,  -2.998,   2.572)  (  0.098,  -2.751,   2.466)  ( 0.03,  8.22,  4.13)
    vdw     (  3.164,   3.556, -14.019)  (  3.165,   3.556, -14.019)  ( 0.01,  0.00,  0.00)
    electro (  0.024,   0.012,   0.015)  (  0.024,   0.012,   0.015)  ( 0.00,  0.00,  0.00)
44       ( 31.236,  47.185,   1.229)  ( 31.422,  47.323,   1.333)  ( 0.60,  0.29,  8.46)
    bond    ( 14.575,  43.256,  -7.494)  ( 14.577,  43.260,  -7.491)  ( 0.01,  0.01,  0.04)
    angle   (  0.070,  -0.076,  -0.004)  (  0.070,  -0.074,  -0.003)  ( 0.00,  0.01,  0.00)
    strbnd  ( 27.502,  -1.085,  17.421)  ( 27.502,  -1.086,  17.420)  ( 0.00,  0.04,  0.00)
    torsion ( -0.031,  -0.018,  -0.018)  ( -0.030,  -0.018,  -0.018)  ( 0.00,  0.00,  0.00)
    oop     ( -0.016,  -0.005,  -0.008)  (  0.169,   0.128,   0.091)  ( 0.29,  0.06,  0.08)
    vdw     (-10.865,   5.113,  -8.667)  (-10.865,   5.113,  -8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       ( 47.632, 101.178,   6.986)  ( 47.553, 101.243,   7.036)  ( 0.16,  0.06,  0.72)
    bond    ( 36.729, 122.954,  30.064)  ( 36.731, 122.960,  30.069)  ( 0.01,  0.00,  0.01)
    angle   ( -7.003,  -4.414, -11.347)  ( -7.002,  -4.412, -11.345)  ( 0.02,  0.04,  0.02)
    strbnd  (  8.339, -20.248,   1.352)  (  8.338, -20.249,   1.351)  ( 0.01,  0.00,  0.05)
    torsion ( -1.304,  -2.225,  -4.413)  ( -1.304,  -2.225,  -4.413)  ( 0.04,  0.00,  0.00)
    oop     (  0.007,  -0.002,  -0.003)  ( -0.075,   0.057,   0.041)  ( 0.06,  0.01,  0.02)
    vdw     ( 10.865,   5.113,  -8.667)  ( 10.865,   5.113,  -8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       ( 31.236, -47.197,   1.229)  ( 31.422, -47.323,   1.333)  ( 0.60,  0.27,  8.46)
    bond    ( 14.575, -43.264,  -7.494)  ( 14.577, -43.260,  -7.491)  ( 0.01,  0.01,  0.04)
    angle   (  0.070,   0.073,  -0.004)  (  0.070,   0.074,  -0.003)  ( 0.00,  0.01,  0.00)
    strbnd  ( 27.502,   1.086,  17.421)  ( 27.502,   1.086,  17.420)  ( 0.00,  0.04,  0.00)
    torsion ( -0.031,   0.017,  -0.018)  ( -0.030,   0.018,  -0.018)  ( 0.00,  0.00,  0.00)
    oop     ( -0.016,   0.005,  -0.008)  (  0.169,  -0.128,   0.091)  ( 0.29,  0.06,  0.08)
    vdw     (-10.865,  -5.113,  -8.667)  (-10.865,  -5.113,  -8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       (  2.010, -29.452,  48.508)  (  1.941, -29.399,  48.391)  ( 3.47,  0.18,  0.24)
    bond    (-12.136, -26.884,  35.751)  (-12.133, -26.880,  35.753)  ( 0.03,  0.01,  0.01)
    angle   ( -0.033,  -0.085,  -0.043)  ( -0.033,  -0.083,  -0.043)  ( 0.00,  0.01,  0.00)
    strbnd  ( 28.176,   0.699,  16.330)  ( 28.175,   0.698,  16.330)  ( 0.00,  0.03,  0.00)
    torsion (  0.017,  -0.014,   0.019)  (  0.017,  -0.014,   0.019)  ( 0.00,  0.00,  0.00)
    oop     (  0.007,  -0.003,   0.008)  ( -0.067,   0.044,  -0.112)  ( 0.05,  0.01,  0.09)
    vdw     (-14.019,  -3.165,  -3.556)  (-14.019,  -3.165,  -3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       ( -8.823, -46.844, -72.199)  ( -8.859, -46.853, -72.191)  ( 0.41,  0.02,  0.01)
    bond    (-41.133, -80.648, -95.645)  (-41.132, -80.644, -95.638)  ( 0.00,  0.01,  0.01)
    angle   (  2.907,  23.204,  13.075)  (  2.908,  23.207,  13.077)  ( 0.03,  0.01,  0.01)
    strbnd  ( 16.974,   2.806,  18.852)  ( 16.974,   2.805,  18.852)  ( 0.00,  0.03,  0.00)
    torsion (  3.527,   7.794,   3.336)  (  3.528,   7.794,   3.337)  ( 0.01,  0.00,  0.00)
    oop     ( -0.006,  -0.000,   0.003)  ( -0.044,  -0.014,   0.003)  ( 0.02,  0.00,  0.00)
    vdw     (  8.908,  -0.000, -11.821)  (  8.908,   0.000, -11.821)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 97.340,  13.039,  42.050)  ( 97.325,  12.993,  42.052)  ( 0.02,  0.36,  0.00)
    bond    (100.420,  43.947,  73.102)  (100.424,  43.949,  73.108)  ( 0.00,  0.00,  0.01)
    angle   (-13.067,  -2.970,  -9.328)  (-13.065,  -2.969,  -9.326)  ( 0.01,  0.04,  0.02)
    strbnd  (  0.087,  -6.373, -22.693)  (  0.087,  -6.374, -22.694)  ( 0.01,  0.01,  0.00)
    torsion (  1.229, -10.693,  -4.142)  (  1.229, -10.692,  -4.141)  ( 0.02,  0.00,  0.01)
    oop     (  0.003,  -0.007,  -0.002)  ( -0.017,  -0.057,  -0.008)  ( 0.01,  0.03,  0.00)
    vdw     (  8.667, -10.865,   5.113)  (  8.667, -10.865,   5.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       ( 50.772,  95.580, -88.230)  ( 50.760,  95.983, -87.988)  ( 0.02,  0.42,  0.27)
    bond    ( 33.758, 103.151, -81.874)  ( 33.763, 103.153, -81.870)  ( 0.02,  0.00,  0.01)
    angle   ( -0.097,  13.689,  -1.895)  ( -0.095,  13.690,  -1.893)  ( 0.02,  0.01,  0.06)
    strbnd  ( 20.492, -15.718,   5.046)  ( 20.491, -15.718,   5.046)  ( 0.00,  0.00,  0.01)
    torsion ( -0.236,   0.991,   7.067)  ( -0.236,   0.991,   7.068)  ( 0.01,  0.03,  0.01)
    oop     ( -0.001,  -2.986,  -2.562)  ( -0.020,  -2.586,  -2.326)  ( 0.00, 13.38,  9.23)
    vdw     ( -3.165,  -3.556, -14.019)  ( -3.165,  -3.556, -14.019)  ( 0.01,  0.00,  0.00)
    electro (  0.021,   0.009,   0.006)  (  0.021,   0.009,   0.006)  ( 0.00,  0.00,  0.00)
51       ( -4.396,  25.012,   9.738)  ( -4.455,  24.980,   9.769)  ( 1.34,  0.13,  0.31)
    bond    (-25.089,  38.808,  30.355)  (-25.087,  38.814,  30.359)  ( 0.01,  0.01,  0.01)
    angle   (  3.280, -24.081, -11.304)  (  3.281, -24.079, -11.302)  ( 0.04,  0.01,  0.02)
    strbnd  (  7.907,  22.909,   1.389)  (  7.907,  22.908,   1.388)  ( 0.01,  0.00,  0.06)
    torsion ( -1.366,  -7.513,  -2.030)  ( -1.366,  -7.513,  -2.030)  ( 0.02,  0.00,  0.01)
    oop     (  0.007,   0.002,  -0.003)  ( -0.055,  -0.037,   0.021)  ( 0.04,  0.01,  0.01)
    vdw     ( 10.865,  -5.113,  -8.667)  ( 10.865,  -5.113,  -8.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       ( 39.919, -82.707,   7.328)  ( 39.902, -82.723,   7.355)  ( 0.04,  0.02,  0.37)
    bond    ( 32.018, -126.021,  22.496)  ( 32.022, -126.016,  22.499)  ( 0.01,  0.00,  0.01)
    angle   ( -1.942,  26.146,   5.142)  ( -1.940,  26.148,   5.143)  ( 0.08,  0.01,  0.03)
    strbnd  ( -5.642,  11.284, -16.768)  ( -5.642,  11.283, -16.769)  ( 0.01,  0.01,  0.00)
    torsion (  1.470,   9.050,   0.011)  (  1.470,   9.051,   0.012)  ( 0.01,  0.00,  0.00)
    oop     ( -0.003,  -0.001,   0.003)  ( -0.026,  -0.024,   0.026)  ( 0.01,  0.00,  0.01)
    vdw     ( 14.019,  -3.165,  -3.556)  ( 14.019,  -3.165,  -3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( -7.375, -17.930,  24.530)  ( -7.440, -17.881,  24.416)  ( 0.88,  0.27,  0.46)
    bond    ( 43.256,   7.487,  14.575)  ( 43.260,   7.491,  14.577)  ( 0.01,  0.04,  0.01)
    angle   (-27.712,  -7.629,  -4.654)  (-27.710,  -7.627,  -4.654)  ( 0.00,  0.02,  0.00)
    strbnd  (-28.009, -24.864,  22.906)  (-28.010, -24.865,  22.906)  ( 0.00,  0.00,  0.00)
    torsion ( -0.018,  -1.598,   2.583)  ( -0.018,  -1.598,   2.583)  ( 0.00,  0.02,  0.02)
    oop     ( -0.005,   0.008,  -0.016)  ( -0.075,   0.051,  -0.132)  ( 0.03,  0.03,  0.18)
    vdw     (  5.113,   8.667, -10.865)  (  5.113,   8.667, -10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       (-80.982,   0.350,   2.124)  (-80.780,   0.414,   1.661)  ( 0.25,  2.23, 21.77)
    bond    (-50.996,   2.609,  11.664)  (-50.992,   2.614,  11.665)  ( 0.01,  0.20,  0.01)
    angle   ( 17.996,   6.617,  -2.470)  ( 17.997,   6.618,  -2.470)  ( 0.01,  0.01,  0.01)
    strbnd  (-45.845, -22.172,  -1.459)  (-45.845, -22.173,  -1.459)  ( 0.00,  0.00,  0.01)
    torsion ( -1.464,   2.635,  -0.422)  ( -1.464,   2.635,  -0.421)  ( 0.02,  0.01,  0.03)
    oop     ( -0.703,  -1.158,   3.713)  ( -0.506,  -1.100,   3.249)  (13.84,  5.02, 12.48)
    vdw     ( -0.000,  11.821,  -8.908)  (  0.000,  11.821,  -8.908)  ( 0.00,  0.00,  0.00)
    electro (  0.030,  -0.001,   0.005)  (  0.030,  -0.001,   0.005)  ( 0.00,  0.00,  0.00)
55       ( 51.285, 106.578,  11.691)  ( 51.296, 106.563,  11.713)  ( 0.02,  0.01,  0.19)
    bond    ( 32.018, 126.011,  22.496)  ( 32.022, 126.016,  22.499)  ( 0.01,  0.00,  0.01)
    angle   (  4.321, -11.210,   6.975)  (  4.322, -11.208,   6.976)  ( 0.04,  0.02,  0.02)
    strbnd  ( -1.280,  -6.983, -15.553)  ( -1.281,  -6.984, -15.553)  ( 0.05,  0.01,  0.00)
    torsion (  2.212,  -4.407,   1.325)  (  2.212,  -4.407,   1.326)  ( 0.01,  0.00,  0.03)
    oop     ( -0.003,   0.001,   0.003)  (  0.003,  -0.020,   0.021)  ( 0.00,  0.00,  0.01)
    vdw     ( 14.019,   3.164,  -3.556)  ( 14.019,   3.165,  -3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       (  2.010,  29.441,  48.508)  (  1.944,  29.347,  48.485)  ( 3.31,  0.32,  0.05)
    bond    (-12.136,  26.876,  35.751)  (-12.133,  26.880,  35.753)  ( 0.03,  0.01,  0.01)
    angle   ( -0.033,   0.081,  -0.043)  ( -0.033,   0.083,  -0.043)  ( 0.00,  0.01,  0.00)
    strbnd  ( 28.176,  -0.698,  16.330)  ( 28.175,  -0.698,  16.330)  ( 0.00,  0.03,  0.00)
    torsion (  0.017,   0.014,   0.019)  (  0.017,   0.014,   0.019)  ( 0.00,  0.00,  0.00)
    oop     (  0.007,   0.003,   0.008)  ( -0.064,  -0.097,  -0.018)  ( 0.05,  0.03,  0.02)
    vdw     (-14.019,   3.164,  -3.556)  (-14.019,   3.165,  -3.556)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       (-64.425,  49.407, -22.682)  (-64.368,  49.119, -22.829)  ( 0.09,  0.58,  0.65)
    bond    (-36.107,  35.751, -12.136)  (-36.102,  35.753, -12.133)  ( 0.01,  0.01,  0.02)
    angle   ( 17.148,  -9.009,  -1.063)  ( 17.149,  -9.009,  -1.063)  ( 0.01,  0.01,  0.03)
    strbnd  (-48.672,  14.890,   3.060)  (-48.673,  14.890,   3.060)  ( 0.00,  0.00,  0.02)
    torsion (  0.014,   8.343,  -1.079)  (  0.015,   8.344,  -1.078)  ( 0.00,  0.01,  0.04)
    oop     (  0.003,   2.997,   2.572)  (  0.054,   2.706,   2.421)  ( 0.01,  9.70,  5.88)
    vdw     (  3.164,  -3.556, -14.019)  (  3.165,  -3.556, -14.019)  ( 0.01,  0.00,  0.00)
    electro (  0.025,  -0.009,  -0.017)  (  0.025,  -0.009,  -0.017)  ( 0.00,  0.00,  0.00)
58       (-43.486, -112.314,  26.732)  (-43.541, -112.269,  27.025)  ( 0.13,  0.04,  1.10)
    bond    (-49.403, -115.083,  53.013)  (-49.397, -115.078,  53.014)  ( 0.01,  0.00,  0.00)
    angle   (-11.674,   5.499,   3.169)  (-11.672,   5.501,   3.170)  ( 0.01,  0.03,  0.04)
    strbnd  ( 22.767,   3.534,  -8.376)  ( 22.766,   3.534,  -8.376)  ( 0.00,  0.02,  0.01)
    torsion ( -0.746,   3.587,  -6.481)  ( -0.746,   3.587,  -6.480)  ( 0.02,  0.01,  0.01)
    oop     (  0.705,  -1.157,  -3.711)  (  0.642,  -1.118,  -3.421)  ( 4.43,  3.39,  7.81)
    vdw     ( -5.113,  -8.667, -10.865)  ( -5.113,  -8.667, -10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.022,  -0.028,  -0.017)  ( -0.022,  -0.028,  -0.017)  ( 0.00,  0.00,  0.00)
59       ( -7.375,  17.920,  24.530)  ( -7.315,  17.979,  24.586)  ( 0.81,  0.33,  0.23)
    bond    ( 43.256,  -7.494,  14.575)  ( 43.260,  -7.491,  14.577)  ( 0.01,  0.04,  0.01)
    angle   (-27.712,   7.626,  -4.654)  (-27.710,   7.627,  -4.654)  ( 0.00,  0.02,  0.00)
    strbnd  (-28.009,  24.865,  22.906)  (-28.010,  24.865,  22.906)  ( 0.00,  0.00,  0.00)
    torsion ( -0.018,   1.598,   2.582)  ( -0.018,   1.598,   2.583)  ( 0.00,  0.02,  0.03)
    oop     ( -0.005,  -0.008,  -0.016)  (  0.050,   0.046,   0.038)  ( 0.03,  0.04,  0.08)
    vdw     (  5.113,  -8.667, -10.865)  (  5.113,  -8.667, -10.865)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (-80.980,  -0.372,   2.127)  (-80.911,  -0.424,   1.867)  ( 0.09,  1.95, 12.22)
    bond    (-50.996,  -2.619,  11.664)  (-50.992,  -2.614,  11.665)  ( 0.01,  0.20,  0.01)
    angle   ( 17.997,  -6.619,  -2.470)  ( 17.998,  -6.618,  -2.470)  ( 0.01,  0.01,  0.01)
    strbnd  (-45.845,  22.174,  -1.459)  (-45.845,  22.173,  -1.459)  ( 0.00,  0.00,  0.01)
    torsion ( -1.464,  -2.635,  -0.422)  ( -1.464,  -2.635,  -0.421)  ( 0.02,  0.01,  0.03)
    oop     ( -0.703,   1.158,   3.713)  ( -0.639,   1.100,   3.452)  ( 4.49,  5.01,  7.03)
    vdw     ( -0.000, -11.821,  -8.908)  ( -0.000, -11.821,  -8.908)  ( 0.00,  0.00,  0.00)
    electro (  0.031,  -0.010,   0.008)  (  0.031,  -0.010,   0.008)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 9 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 10 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/caffeine.gpr
 # Expected       -13.64103, found -13.641028&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/caffeine.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-31.801, -143.644,  -1.824)  (-31.795, -143.636,  -1.619)  ( 0.02,  0.01, 11.26)
    bond    (-67.751, -147.018,  -1.290)  (-67.744, -147.010,  -1.291)  ( 0.01,  0.01,  0.02)
    angle   ( 67.611,  -2.315,   0.323)  ( 67.613,  -2.313,   0.323)  ( 0.00,  0.08,  0.01)
    strbnd  (-21.347,  24.108,   0.094)  (-21.348,  24.108,   0.094)  ( 0.00,  0.00,  0.00)
    torsion (  0.007,   0.007,  -0.400)  (  0.007,   0.007,  -0.399)  ( 0.00,  0.00,  0.04)
    oop     (  0.007,   0.008,  -0.661)  (  0.004,   0.006,  -0.456)  ( 0.00,  0.00, 13.56)
    vdw     ( -4.325,  -9.408,   0.090)  ( -4.325,  -9.408,   0.090)  ( 0.00,  0.00,  0.00)
    electro ( -6.003,  -9.026,   0.020)  ( -6.003,  -9.026,   0.020)  ( 0.00,  0.00,  0.00)
 2       (112.643, 108.104,   0.099)  (112.655, 108.110,   0.420)  ( 0.01,  0.01,  3.18)
    bond    (121.634,  83.595,   0.165)  (121.642,  83.602,   0.165)  ( 0.01,  0.01,  0.00)
    angle   (-18.370,  12.395,   0.990)  (-18.367,  12.397,   0.990)  ( 0.01,  0.01,  0.04)
    strbnd  ( 12.106,   5.850,   0.069)  ( 12.105,   5.849,   0.069)  ( 0.01,  0.01,  0.00)
    torsion ( -0.005,  -0.003,   0.450)  ( -0.005,  -0.003,   0.451)  ( 0.00,  0.00,  0.05)
    oop     ( -0.011,   0.012,  -1.347)  ( -0.007,   0.009,  -1.026)  ( 0.00,  0.00, 23.80)
    vdw     (  1.396, -10.174,  -0.262)  (  1.396, -10.174,  -0.262)  ( 0.01,  0.00,  0.00)
    electro ( -4.108,  16.428,   0.034)  ( -4.108,  16.428,   0.034)  ( 0.00,  0.00,  0.00)
 3       ( 60.295, -208.946,  -1.143)  ( 60.299, -208.937,  -1.320)  ( 0.01,  0.00, 15.48)
    bond    ( 41.889, -203.581,   0.279)  ( 41.895, -203.574,   0.279)  ( 0.01,  0.00,  0.01)
    angle   ( 11.868, -12.666,  -0.175)  ( 11.869, -12.665,  -0.174)  ( 0.01,  0.01,  0.01)
    strbnd  ( -4.671,   6.972,  -0.289)  ( -4.672,   6.972,  -0.288)  ( 0.02,  0.00,  0.01)
    torsion ( -0.008,   0.003,  -1.599)  ( -0.008,   0.003,  -1.598)  ( 0.00,  0.00,  0.06)
    oop     (  0.006,  -0.003,   0.647)  (  0.004,  -0.002,   0.469)  ( 0.00,  0.00, 11.54)
    vdw     ( 12.749,   1.251,   0.005)  ( 12.749,   1.251,   0.005)  ( 0.00,  0.00,  0.00)
    electro ( -1.538,  -0.922,  -0.012)  ( -1.538,  -0.922,  -0.012)  ( 0.00,  0.00,  0.00)
 4       (-90.950, 129.032,  -0.729)  (-90.940, 129.046,  -0.613)  ( 0.01,  0.01,  8.42)
    bond    (-83.159, 104.578,  -0.041)  (-83.151, 104.589,  -0.042)  ( 0.01,  0.01,  0.00)
    angle   (-22.557,  39.102,  -0.161)  (-22.555,  39.104,  -0.161)  ( 0.01,  0.01,  0.00)
    strbnd  (  7.835, -32.563,   0.203)  (  7.835, -32.565,   0.203)  ( 0.01,  0.00,  0.00)
    torsion ( -0.000,   0.001,   0.489)  ( -0.000,   0.001,   0.490)  ( 0.00,  0.00,  0.04)
    oop     ( -0.004,  -0.005,  -0.617)  ( -0.003,  -0.004,  -0.501)  ( 0.00,  0.00,  7.12)
    vdw     (  5.820,   8.230,  -0.628)  (  5.820,   8.230,  -0.628)  ( 0.00,  0.00,  0.00)
    electro (  1.115,   9.690,   0.027)  (  1.115,   9.690,   0.027)  ( 0.00,  0.00,  0.00)
 5       ( 38.670,  12.277,  -1.627)  ( 38.674,  12.284,  -1.670)  ( 0.01,  0.06,  2.65)
    bond    ( 14.954,  25.801,  -0.346)  ( 14.956,  25.809,  -0.346)  ( 0.02,  0.03,  0.00)
    angle   ( 24.044, -13.935,  -0.020)  ( 24.045, -13.935,  -0.020)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.854,  13.614,  -0.108)  (  0.854,  13.614,  -0.108)  ( 0.02,  0.00,  0.00)
    torsion (  0.000,  -0.000,  -0.020)  (  0.000,  -0.000,  -0.020)  ( 0.00,  0.00,  0.00)
    oop     (  0.001,   0.002,   0.210)  (  0.001,   0.002,   0.166)  ( 0.00,  0.00,  0.90)
    vdw     (  6.956,   4.447,  -1.421)  (  6.956,   4.447,  -1.421)  ( 0.00,  0.00,  0.00)
    electro ( -8.139, -17.653,   0.080)  ( -8.139, -17.653,   0.080)  ( 0.00,  0.00,  0.00)
 6       ( -7.559,   6.950,   0.014)  ( -7.551,   6.957,  -0.111)  ( 0.11,  0.11,  0.18)
    bond    (-14.177,  30.083,  -0.172)  (-14.170,  30.088,  -0.172)  ( 0.05,  0.02,  0.00)
    angle   ( 15.519, -35.323,   0.811)  ( 15.521, -35.320,   0.811)  ( 0.01,  0.01,  0.03)
    strbnd  ( -6.993,  12.573,  -0.050)  ( -6.994,  12.573,  -0.050)  ( 0.01,  0.00,  0.00)
    torsion ( -0.428,  -0.249,  -1.333)  ( -0.428,  -0.249,  -1.332)  ( 0.00,  0.00,  0.06)
    oop     ( -0.000,   0.004,   0.798)  ( -0.000,   0.003,   0.672)  ( 0.00,  0.00, 10.05)
    vdw     ( -5.605,   9.702,   0.013)  ( -5.605,   9.702,   0.013)  ( 0.00,  0.00,  0.00)
    electro (  4.125,  -9.839,  -0.053)  (  4.125,  -9.839,  -0.053)  ( 0.00,  0.00,  0.00)
 7       (-52.506,  63.932,  -0.487)  (-52.491,  63.942,  -0.452)  ( 0.03,  0.02,  1.73)
    bond    (-13.791,  55.421,   0.322)  (-13.779,  55.428,   0.321)  ( 0.09,  0.01,  0.01)
    angle   (-44.562,  12.508,  -0.433)  (-44.559,  12.510,  -0.433)  ( 0.01,  0.02,  0.01)
    strbnd  (  8.546, -15.478,  -0.038)  (  8.543, -15.478,  -0.037)  ( 0.02,  0.00,  0.00)
    torsion ( -0.005,  -0.002,   0.366)  ( -0.005,  -0.002,   0.366)  ( 0.00,  0.00,  0.02)
    oop     (  0.000,  -0.003,  -0.484)  (  0.001,  -0.002,  -0.449)  ( 0.00,  0.00,  1.71)
    vdw     ( -9.798,  -1.000,  -0.311)  ( -9.797,  -1.000,  -0.311)  ( 0.00,  0.01,  0.00)
    electro (  7.105,  12.486,   0.091)  (  7.105,  12.486,   0.091)  ( 0.00,  0.00,  0.00)
 8       (-25.036, -27.062,  -0.562)  (-25.025, -27.061,  -0.642)  ( 0.04,  0.00,  4.49)
    bond    (-33.079,   0.439,  -0.219)  (-33.068,   0.439,  -0.220)  ( 0.03,  0.01,  0.00)
    angle   ( -0.249, -18.729,  -0.010)  ( -0.249, -18.728,  -0.010)  ( 0.00,  0.00,  0.00)
    strbnd  ( -1.176,  -1.468,   0.003)  ( -1.176,  -1.468,   0.003)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.000,  -0.091)  (  0.001,  -0.000,  -0.091)  ( 0.00,  0.00,  0.00)
    oop     ( -0.002,  -0.000,   0.361)  ( -0.002,  -0.000,   0.281)  ( 0.00,  0.00,  2.88)
    vdw     ( -6.077,  -1.873,  -0.504)  ( -6.076,  -1.872,  -0.504)  ( 0.00,  0.02,  0.00)
    electro ( 15.545,  -5.431,  -0.101)  ( 15.545,  -5.431,  -0.101)  ( 0.00,  0.00,  0.00)
 9       (-167.403, 132.553,   1.517)  (-167.394, 132.561,   1.403)  ( 0.01,  0.01,  7.51)
    bond    (-106.748, 164.433,   2.450)  (-106.741, 164.439,   2.450)  ( 0.01,  0.00,  0.01)
    angle   (-54.180, -13.895,  -0.705)  (-54.178, -13.894,  -0.705)  ( 0.00,  0.01,  0.02)
    strbnd  ( -9.116, -12.879,  -0.485)  ( -9.117, -12.879,  -0.485)  ( 0.01,  0.00,  0.01)
    torsion ( -0.000,   0.008,  -0.293)  ( -0.000,   0.008,  -0.292)  ( 0.00,  0.00,  0.02)
    oop     ( -0.003,  -0.008,   0.580)  ( -0.001,  -0.006,   0.465)  ( 0.00,  0.00,  6.67)
    vdw     (  1.448,  -4.775,  -0.027)  (  1.448,  -4.775,  -0.027)  ( 0.00,  0.00,  0.00)
    electro (  1.194,  -0.331,  -0.003)  (  1.194,  -0.331,  -0.003)  ( 0.00,  0.00,  0.00)
10       (-36.545, -66.836,  -0.427)  (-36.542, -66.827,  -0.588)  ( 0.01,  0.01,  6.87)
    bond    (-60.000, -54.443,  -0.793)  (-59.996, -54.437,  -0.793)  ( 0.01,  0.01,  0.02)
    angle   ( 12.172,  -7.844,  -0.495)  ( 12.174,  -7.843,  -0.495)  ( 0.01,  0.01,  0.00)
    strbnd  ( 16.769,  -9.499,  -0.222)  ( 16.768,  -9.499,  -0.222)  ( 0.00,  0.00,  0.00)
    torsion (  0.009,  -0.004,   0.404)  (  0.009,  -0.004,   0.404)  ( 0.00,  0.00,  0.02)
    oop     (  0.006,  -0.014,   0.942)  (  0.004,  -0.012,   0.780)  ( 0.00,  0.00, 15.23)
    vdw     ( -4.044,  -4.643,  -0.296)  ( -4.044,  -4.643,  -0.296)  ( 0.00,  0.00,  0.00)
    electro ( -1.458,   9.611,   0.034)  ( -1.458,   9.611,   0.034)  ( 0.00,  0.00,  0.00)
11       (177.807,  -5.734,  -0.878)  (177.814,  -5.729,  -0.699)  ( 0.00,  0.09, 15.70)
    bond    (190.424, -34.991,  -0.569)  (190.431, -34.984,  -0.570)  ( 0.00,  0.02,  0.02)
    angle   ( 12.492,  33.058,   0.676)  ( 12.493,  33.060,   0.676)  ( 0.01,  0.01,  0.00)
    strbnd  (-23.269,   5.013,   0.141)  (-23.271,   5.013,   0.141)  ( 0.01,  0.00,  0.00)
    torsion ( -0.003,   0.004,  -0.154)  ( -0.003,   0.004,  -0.153)  ( 0.00,  0.00,  0.01)
    oop     ( -0.001,   0.019,  -0.947)  ( -0.001,   0.015,  -0.769)  ( 0.00,  0.01, 16.87)
    vdw     (  2.887,  -0.217,   0.047)  (  2.888,  -0.217,   0.047)  ( 0.00,  0.00,  0.00)
    electro ( -4.724,  -8.620,  -0.072)  ( -4.724,  -8.620,  -0.072)  ( 0.00,  0.00,  0.00)
12       (  0.418,   7.658,   1.313)  (  0.423,   7.664,   1.296)  ( 0.21,  0.09,  1.29)
    bond    (  6.589,   2.485,   0.654)  (  6.593,   2.489,   0.659)  ( 0.06,  0.19,  0.30)
    angle   (-12.705,  -0.697,   0.063)  (-12.703,  -0.695,   0.064)  ( 0.02,  0.13,  0.01)
    strbnd  ( 11.764,  10.015,   0.347)  ( 11.762,  10.014,   0.346)  ( 0.01,  0.00,  0.01)
    torsion ( -0.001,  -0.009,   0.228)  ( -0.001,  -0.009,   0.228)  ( 0.00,  0.00,  0.00)
    oop     ( -0.001,  -0.002,   0.096)  ( -0.001,  -0.001,   0.073)  ( 0.00,  0.00,  0.22)
    vdw     ( -1.866,  -4.107,  -0.063)  ( -1.866,  -4.107,  -0.063)  ( 0.00,  0.00,  0.00)
    electro ( -3.361,  -0.027,  -0.012)  ( -3.361,  -0.027,  -0.012)  ( 0.00,  0.00,  0.00)
13       (  3.355,   0.334,   0.229)  (  3.360,   0.341,   0.223)  ( 0.14,  0.21,  0.14)
    bond    ( -7.691,  -0.190,  -0.021)  ( -7.687,  -0.185,  -0.016)  ( 0.05,  0.09,  0.01)
    angle   ( 12.701,   4.780,  -0.478)  ( 12.703,   4.781,  -0.476)  ( 0.02,  0.04,  0.08)
    strbnd  ( -7.172,  -5.763,   0.120)  ( -7.174,  -5.763,   0.119)  ( 0.02,  0.01,  0.00)
    torsion (  0.006,   0.001,   0.522)  (  0.006,   0.001,   0.522)  ( 0.00,  0.00,  0.01)
    oop     (  0.001,   0.000,   0.079)  (  0.001,   0.000,   0.067)  ( 0.00,  0.00,  0.10)
    vdw     (  6.388,  -3.431,   0.006)  (  6.388,  -3.431,   0.006)  ( 0.00,  0.00,  0.00)
    electro ( -0.876,   4.937,   0.001)  ( -0.876,   4.937,   0.001)  ( 0.00,  0.00,  0.00)
14       (  6.025,  -3.971,   3.817)  (  6.031,  -3.966,   3.836)  ( 0.10,  0.13,  0.48)
    bond    ( 11.197, -20.692,  -0.065)  ( 11.201, -20.688,  -0.061)  ( 0.04,  0.02,  0.03)
    angle   ( -3.458,   7.005,  -0.620)  ( -3.456,   7.007,  -0.619)  ( 0.06,  0.03,  0.09)
    strbnd  (  0.022,   0.227,   0.010)  (  0.021,   0.226,   0.009)  ( 0.00,  0.02,  0.00)
    torsion (  2.182,   1.253,   4.593)  (  2.182,   1.253,   4.593)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,  -0.001,  -0.092)  (  0.000,  -0.001,  -0.080)  ( 0.00,  0.00,  0.11)
    vdw     ( -4.754,   7.307,  -0.008)  ( -4.754,   7.307,  -0.008)  ( 0.00,  0.00,  0.00)
    electro (  0.836,   0.930,   0.000)  (  0.836,   0.930,   0.001)  ( 0.00,  0.00,  0.00)
15       ( 12.319,  -8.232,   0.496)  ( 12.320,  -8.226,   0.378)  ( 0.01,  0.08,  5.82)
    bond    (  0.034,  -7.414,  -0.163)  (  0.034,  -7.411,  -0.163)  ( 0.00,  0.05,  0.00)
    angle   ( -3.333,  -0.014,  -0.078)  ( -3.332,  -0.014,  -0.078)  ( 0.02,  0.00,  0.00)
    strbnd  ( 14.081,   2.352,   0.058)  ( 14.081,   2.352,   0.058)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,  -0.006,   0.292)  (  0.001,  -0.006,   0.292)  ( 0.00,  0.00,  0.01)
    oop     (  0.000,  -0.009,   0.426)  (  0.000,  -0.007,   0.308)  ( 0.00,  0.00,  5.01)
    vdw     (  1.248,  -0.909,  -0.006)  (  1.248,  -0.909,  -0.006)  ( 0.00,  0.00,  0.00)
    electro (  0.288,  -2.231,  -0.033)  (  0.288,  -2.231,  -0.033)  ( 0.00,  0.00,  0.00)
16       (  2.292,  -2.400,  -0.222)  (  2.293,  -2.396,  -0.222)  ( 0.03,  0.15,  0.01)
    bond    ( -0.033,  -1.994,  -0.084)  ( -0.033,  -1.991,  -0.084)  ( 0.00,  0.17,  0.00)
    angle   (  4.789,  -0.077,  -0.059)  (  4.790,  -0.077,  -0.058)  ( 0.01,  0.00,  0.00)
    strbnd  (  0.480,   0.450,   0.033)  (  0.480,   0.450,   0.033)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,   0.002,  -0.047)  (  0.000,   0.002,  -0.047)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.944,  -0.780,  -0.066)  ( -2.944,  -0.780,  -0.066)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (  1.997,   0.993,   2.898)  (  1.998,   0.993,   2.900)  ( 0.06,  0.08,  0.09)
    bond    ( -0.653,   0.424,   1.150)  ( -0.653,   0.424,   1.152)  ( 0.05,  0.01,  0.21)
    angle   (  3.405,   1.793,   1.268)  (  3.405,   1.793,   1.268)  ( 0.01,  0.03,  0.01)
    strbnd  (  0.585,   0.083,  -0.196)  (  0.585,   0.083,  -0.196)  ( 0.00,  0.00,  0.00)
    torsion (  0.013,  -0.038,   0.021)  (  0.013,  -0.038,   0.021)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.352,  -1.269,   0.655)  ( -1.352,  -1.269,   0.655)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (  1.632,   1.234,  -3.363)  (  1.633,   1.235,  -3.360)  ( 0.07,  0.08,  0.07)
    bond    ( -0.951,   0.766,  -1.640)  ( -0.950,   0.766,  -1.638)  ( 0.07,  0.04,  0.14)
    angle   (  3.514,   1.887,  -1.156)  (  3.515,   1.887,  -1.156)  ( 0.01,  0.02,  0.02)
    strbnd  (  0.596,   0.070,   0.229)  (  0.596,   0.070,   0.229)  ( 0.00,  0.00,  0.00)
    torsion ( -0.014,   0.040,   0.027)  ( -0.014,   0.040,   0.027)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.514,  -1.528,  -0.823)  ( -1.514,  -1.528,  -0.823)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( -2.129,   0.712,  -3.609)  ( -2.129,   0.712,  -3.606)  ( 0.04,  0.05,  0.08)
    bond    (  0.687,   0.547,  -1.969)  (  0.688,   0.547,  -1.967)  ( 0.02,  0.01,  0.15)
    angle   ( -3.841,   0.334,  -1.250)  ( -3.840,   0.334,  -1.250)  ( 0.02,  0.01,  0.01)
    strbnd  ( -0.610,  -0.068,   0.219)  ( -0.610,  -0.068,   0.219)  ( 0.00,  0.00,  0.00)
    torsion ( -0.002,   0.312,   0.086)  ( -0.002,   0.312,   0.086)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.636,  -0.414,  -0.695)  (  1.636,  -0.414,  -0.695)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (  1.618,  -1.698,   1.205)  (  1.619,  -1.695,   1.206)  ( 0.06,  0.18,  0.05)
    bond    (  0.757,  -1.956,   0.504)  (  0.757,  -1.953,   0.504)  ( 0.03,  0.15,  0.01)
    angle   ( -4.778,  -1.747,   0.406)  ( -4.777,  -1.747,   0.406)  ( 0.01,  0.01,  0.02)
    strbnd  ( -0.615,   0.196,  -0.049)  ( -0.615,   0.196,  -0.049)  ( 0.00,  0.00,  0.00)
    torsion ( -0.003,  -0.082,  -0.316)  ( -0.003,  -0.082,  -0.316)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.257,   1.892,   0.660)  (  6.257,   1.892,   0.660)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (  0.226,   0.629,   3.988)  (  0.227,   0.631,   3.990)  ( 0.02,  0.12,  0.05)
    bond    (  0.773,   1.536,   1.536)  (  0.773,   1.538,   1.538)  ( 0.03,  0.10,  0.10)
    angle   ( -4.132,   1.062,   1.014)  ( -4.131,   1.063,   1.014)  ( 0.01,  0.03,  0.03)
    strbnd  ( -0.608,  -0.148,  -0.136)  ( -0.608,  -0.148,  -0.136)  ( 0.00,  0.00,  0.00)
    torsion (  0.005,  -0.232,   0.230)  (  0.005,  -0.232,   0.230)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.189,  -1.590,   1.344)  (  4.189,  -1.590,   1.344)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( -2.916,   0.868,   1.447)  ( -2.913,   0.869,   1.448)  ( 0.08,  0.06,  0.11)
    bond    ( -1.870,  -0.110,   1.417)  ( -1.868,  -0.110,   1.418)  ( 0.12,  0.00,  0.09)
    angle   (  0.520,  -2.593,   0.484)  (  0.520,  -2.593,   0.484)  ( 0.01,  0.02,  0.01)
    strbnd  (  0.654,  -1.205,   0.011)  (  0.654,  -1.205,   0.011)  ( 0.00,  0.00,  0.00)
    torsion ( -1.476,  -0.834,  -2.010)  ( -1.476,  -0.834,  -2.010)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.743,   5.611,   1.545)  ( -0.743,   5.611,   1.545)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -2.183,   4.636,   0.845)  ( -2.181,   4.638,   0.846)  ( 0.08,  0.05,  0.06)
    bond    (  1.483,   1.776,   0.765)  (  1.485,   1.778,   0.766)  ( 0.09,  0.10,  0.03)
    angle   (  2.624,  -2.307,   0.268)  (  2.625,  -2.307,   0.268)  ( 0.01,  0.01,  0.01)
    strbnd  (  0.634,  -1.241,  -0.006)  (  0.634,  -1.242,  -0.006)  ( 0.00,  0.00,  0.00)
    torsion (  0.519,   0.264,  -1.620)  (  0.519,   0.264,  -1.620)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.443,   6.144,   1.437)  ( -7.443,   6.144,   1.437)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( -0.385,  -1.510,  -3.049)  ( -0.385,  -1.510,  -3.046)  ( 0.03,  0.04,  0.10)
    bond    ( -0.615,   0.404,  -1.895)  ( -0.615,   0.404,  -1.892)  ( 0.02,  0.01,  0.16)
    angle   (  0.873,  -1.806,  -0.669)  (  0.873,  -1.806,  -0.669)  ( 0.04,  0.03,  0.01)
    strbnd  (  0.665,  -1.206,   0.041)  (  0.665,  -1.206,   0.041)  ( 0.00,  0.00,  0.00)
    torsion ( -0.796,  -0.434,   0.166)  ( -0.796,  -0.434,   0.166)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.512,   1.532,  -0.692)  ( -0.512,   1.532,  -0.692)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 10 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 11 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/cholesterol.gpr
 # Expected       112.23600, found 112.235998&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/cholesterol.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.967,   0.259,  -0.197)  (  0.972,   0.264,  -0.191)  ( 0.49,  0.14,  0.12)
    bond    (  0.905,   2.623,   8.120)  (  0.909,   2.627,   8.124)  ( 0.37,  0.15,  0.05)
    angle   (  7.385,   0.772,  -9.892)  (  7.388,   0.774,  -9.889)  ( 0.03,  0.16,  0.02)
    strbnd  (  0.181,   1.490,  -0.840)  (  0.180,   1.489,  -0.841)  ( 0.02,  0.06,  0.05)
    torsion ( -3.658,  -1.057,   2.616)  ( -3.658,  -1.057,   2.616)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.221,  -3.068,  -0.045)  ( -3.221,  -3.068,  -0.045)  ( 0.00,  0.00,  0.00)
    electro ( -0.625,  -0.501,  -0.156)  ( -0.625,  -0.501,  -0.156)  ( 0.00,  0.00,  0.00)
 2       (  0.736,   0.034,   0.004)  (  0.742,   0.039,   0.010)  ( 0.41,  0.02,  0.00)
    bond    ( 11.123,  -1.351,  -2.048)  ( 11.127,  -1.347,  -2.044)  ( 0.04,  0.29,  0.21)
    angle   ( -8.045,   1.278,   9.737)  ( -8.043,   1.280,   9.739)  ( 0.03,  0.16,  0.02)
    strbnd  (  0.965,  -2.280,   1.631)  (  0.965,  -2.281,   1.630)  ( 0.07,  0.04,  0.02)
    torsion (  4.294,   0.736,  -3.479)  (  4.294,   0.736,  -3.478)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.601,   1.652,  -5.836)  ( -7.601,   1.652,  -5.836)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  0.562,   0.076,  -0.092)  (  0.566,   0.081,  -0.087)  ( 0.27,  0.04,  0.05)
    bond    (  6.097,  -9.677,  17.390)  (  6.101,  -9.673,  17.394)  ( 0.06,  0.04,  0.02)
    angle   ( -1.378,   4.252, -13.110)  ( -1.376,   4.254, -13.108)  ( 0.15,  0.05,  0.02)
    strbnd  (  0.257,   0.181,  -0.552)  (  0.256,   0.180,  -0.552)  ( 0.03,  0.01,  0.03)
    torsion ( -0.355,   2.764,   0.802)  ( -0.355,   2.764,   0.802)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.059,   2.557,  -4.623)  ( -4.059,   2.557,  -4.623)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (  1.701,   0.453,   0.308)  (  1.706,   0.472,   0.382)  ( 0.30,  0.89,  2.27)
    bond    (  8.642,  10.885,  -8.146)  (  8.646,  10.889,  -8.142)  ( 0.04,  0.04,  0.05)
    angle   ( -7.598,  -8.113,  12.883)  ( -7.596,  -8.111,  12.884)  ( 0.03,  0.02,  0.01)
    strbnd  ( -1.384,   1.903,  -1.050)  ( -1.385,   1.903,  -1.050)  ( 0.08,  0.03,  0.05)
    torsion (  3.685,   2.177,  -4.847)  (  3.685,   2.177,  -4.846)  ( 0.00,  0.00,  0.00)
    oop     ( -0.002,  -0.088,  -0.446)  ( -0.002,  -0.075,  -0.377)  ( 0.00,  0.12,  3.03)
    vdw     ( -1.895,  -6.707,   1.430)  ( -1.894,  -6.706,   1.430)  ( 0.00,  0.00,  0.00)
    electro (  0.253,   0.395,   0.484)  (  0.253,   0.395,   0.484)  ( 0.00,  0.00,  0.00)
 5       ( -7.881,   4.561,  -0.394)  ( -7.869,   4.521,  -0.631)  ( 0.15,  0.89,  9.35)
    bond    (-12.705,  14.137,  -1.636)  (-12.697,  14.141,  -1.636)  ( 0.06,  0.03,  0.02)
    angle   (  1.253,   3.126,  -9.477)  (  1.254,   3.128,  -9.476)  ( 0.12,  0.05,  0.01)
    strbnd  (  1.419,  -3.117,   0.027)  (  1.419,  -3.117,   0.027)  ( 0.04,  0.02,  0.00)
    torsion ( -0.255,   1.581,   7.797)  ( -0.255,   1.581,   7.798)  ( 0.00,  0.00,  0.01)
    oop     ( -0.011,   0.244,   1.272)  ( -0.007,   0.197,   1.032)  ( 0.00,  1.13, 18.83)
    vdw     (  0.999, -11.742,   1.783)  (  0.999, -11.742,   1.783)  ( 0.02,  0.00,  0.00)
    electro (  1.419,   0.332,  -0.159)  (  1.419,   0.332,  -0.159)  ( 0.00,  0.00,  0.00)
 6       (  8.807,  -4.640,   1.194)  (  8.815,  -4.619,   1.257)  ( 0.09,  0.45,  5.20)
    bond    (  3.884,   4.853,  -0.204)  (  3.892,   4.858,  -0.204)  ( 0.19,  0.11,  0.01)
    angle   (  1.621,  -0.921,   2.154)  (  1.622,  -0.919,   2.155)  ( 0.08,  0.16,  0.02)
    strbnd  ( -1.690,   1.656,  -0.349)  ( -1.691,   1.655,  -0.349)  ( 0.04,  0.03,  0.00)
    torsion ( -0.062,  -0.722,  -2.668)  ( -0.062,  -0.722,  -2.667)  ( 0.00,  0.00,  0.04)
    oop     ( -0.011,  -0.030,  -0.074)  ( -0.011,  -0.015,  -0.014)  ( 0.00,  0.04,  0.45)
    vdw     (  4.938,  -9.590,   2.718)  (  4.938,  -9.589,   2.718)  ( 0.00,  0.00,  0.00)
    electro (  0.127,   0.114,  -0.383)  (  0.127,   0.114,  -0.383)  ( 0.00,  0.00,  0.00)
 7       ( -0.810,   0.444,  -0.283)  ( -0.805,   0.450,  -0.270)  ( 0.42,  0.25,  0.37)
    bond    (-11.282,  11.208,   0.541)  (-11.278,  11.212,   0.545)  ( 0.04,  0.03,  0.24)
    angle   (  9.286,  -4.053,  -3.402)  (  9.288,  -4.051,  -3.400)  ( 0.02,  0.05,  0.04)
    strbnd  (  0.811,  -0.072,  -0.853)  (  0.810,  -0.073,  -0.854)  ( 0.06,  0.01,  0.03)
    torsion ( -1.331,  -0.869,   0.696)  ( -1.331,  -0.869,   0.696)  ( 0.00,  0.00,  0.02)
    oop     (  0.009,  -0.020,  -0.131)  (  0.009,  -0.019,  -0.124)  ( 0.00,  0.00,  0.09)
    vdw     (  0.881,  -5.592,   2.703)  (  0.881,  -5.592,   2.703)  ( 0.01,  0.00,  0.00)
    electro (  0.815,  -0.158,   0.163)  (  0.815,  -0.158,   0.163)  ( 0.00,  0.00,  0.00)
 8       (  0.736,   0.178,   0.067)  (  0.740,   0.183,   0.072)  ( 0.35,  0.09,  0.04)
    bond    ( -1.261,  -2.729, -19.147)  ( -1.258,  -2.725, -19.143)  ( 0.27,  0.13,  0.02)
    angle   ( -9.942,   7.503,  26.405)  ( -9.940,   7.505,  26.407)  ( 0.02,  0.03,  0.01)
    strbnd  (  4.138,   2.113,   0.872)  (  4.137,   2.112,   0.871)  ( 0.02,  0.04,  0.03)
    torsion (  2.267,  -2.809,  -7.166)  (  2.267,  -2.809,  -7.166)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.533,  -3.900,  -0.897)  (  5.533,  -3.899,  -0.897)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (  0.364,   0.232,  -0.008)  (  0.369,   0.237,  -0.002)  ( 0.20,  0.11,  0.00)
    bond    ( -6.983,  11.163,   5.799)  ( -6.980,  11.166,   5.803)  ( 0.06,  0.03,  0.07)
    angle   (  6.589,   0.564, -10.864)  (  6.592,   0.566, -10.862)  ( 0.04,  0.12,  0.02)
    strbnd  ( -4.331,  -9.696,   0.323)  ( -4.332,  -9.697,   0.323)  ( 0.02,  0.01,  0.01)
    torsion (  0.192,   1.536,   1.287)  (  0.192,   1.536,   1.287)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.897,  -3.334,   3.446)  (  4.897,  -3.334,   3.447)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (  0.279,   0.320,   0.215)  (  0.284,   0.326,   0.221)  ( 0.13,  0.18,  0.13)
    bond    (  3.926,  16.947,  -8.842)  (  3.929,  16.951,  -8.838)  ( 0.09,  0.02,  0.05)
    angle   ( -6.642,  -8.727,   8.491)  ( -6.640,  -8.725,   8.493)  ( 0.03,  0.02,  0.02)
    strbnd  ( -1.913,  -4.925,   2.830)  ( -1.914,  -4.925,   2.830)  ( 0.05,  0.01,  0.02)
    torsion ( -1.013,  -0.173,  -1.195)  ( -1.013,  -0.173,  -1.195)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.922,  -2.802,  -1.070)  (  5.922,  -2.802,  -1.070)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (  0.045,   0.535,   0.496)  (  0.051,   0.539,   0.502)  ( 0.03,  0.24,  0.29)
    bond    (-22.008,  -2.471,  -8.891)  (-22.004,  -2.468,  -8.886)  ( 0.02,  0.14,  0.05)
    angle   ( 15.128,   5.024,   5.636)  ( 15.130,   5.026,   5.638)  ( 0.01,  0.04,  0.03)
    strbnd  (  6.334,   1.549,   3.089)  (  6.333,   1.548,   3.089)  ( 0.01,  0.06,  0.02)
    torsion ( -1.616,   1.448,   1.166)  ( -1.616,   1.448,   1.166)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.209,  -5.015,  -0.504)  (  2.209,  -5.015,  -0.504)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (  0.018,  -0.028,  -0.133)  (  0.022,  -0.023,  -0.128)  ( 0.01,  0.01,  0.07)
    bond    (-12.958,  14.537,  15.529)  (-12.956,  14.540,  15.533)  ( 0.02,  0.02,  0.03)
    angle   (  5.486, -21.711, -16.528)  (  5.488, -21.709, -16.526)  ( 0.04,  0.01,  0.01)
    strbnd  (  4.156,   8.341,  -1.058)  (  4.155,   8.340,  -1.059)  ( 0.02,  0.01,  0.04)
    torsion (  0.521,  -0.105,  -0.116)  (  0.521,  -0.105,  -0.116)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.814,  -1.090,   2.040)  (  2.814,  -1.090,   2.040)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( -0.345,  -0.098,  -0.425)  ( -0.340,  -0.093,  -0.420)  ( 0.16,  0.05,  0.21)
    bond    ( 19.196, -25.927,  -5.472)  ( 19.199, -25.923,  -5.468)  ( 0.02,  0.01,  0.07)
    angle   (-20.973,  31.110,   6.384)  (-20.971,  31.112,   6.386)  ( 0.01,  0.01,  0.03)
    strbnd  ( -1.801,  -4.659,   1.967)  ( -1.802,  -4.660,   1.966)  ( 0.04,  0.02,  0.03)
    torsion (  2.190,  -1.303,  -1.287)  (  2.190,  -1.303,  -1.287)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.043,   0.681,  -2.017)  (  1.043,   0.681,  -2.017)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       ( -0.307,  -0.668,  -1.189)  ( -0.302,  -0.663,  -1.183)  ( 0.14,  0.32,  0.49)
    bond    (-22.467,  22.959, -11.970)  (-22.463,  22.963, -11.965)  ( 0.01,  0.02,  0.04)
    angle   ( 20.677, -26.111,   8.252)  ( 20.679, -26.109,   8.254)  ( 0.01,  0.01,  0.02)
    strbnd  (  1.372,  -1.663,  -0.432)  (  1.371,  -1.664,  -0.432)  ( 0.07,  0.05,  0.02)
    torsion ( -0.738,   1.381,   1.027)  ( -0.738,   1.381,   1.027)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.849,   2.766,   1.934)  (  0.849,   2.766,   1.934)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( -0.779,  -0.703,  -0.742)  ( -0.774,  -0.698,  -0.735)  ( 0.36,  0.34,  0.45)
    bond    ( 11.046, -27.491,   7.813)  ( 11.049, -27.488,   7.817)  ( 0.03,  0.01,  0.06)
    angle   (-13.695,  29.364,  -9.854)  (-13.693,  29.366,  -9.852)  ( 0.01,  0.01,  0.02)
    strbnd  ( -1.160,   1.909,  -1.027)  ( -1.161,   1.909,  -1.027)  ( 0.08,  0.04,  0.03)
    torsion (  0.502,  -0.879,  -1.143)  (  0.502,  -0.879,  -1.143)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.527,  -3.606,   3.470)  (  2.528,  -3.606,   3.470)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( -1.065,  -0.614,   1.036)  ( -1.061,  -0.609,   1.042)  ( 0.45,  0.30,  0.57)
    bond    ( -9.763,  20.766,  -9.836)  ( -9.759,  20.769,  -9.832)  ( 0.04,  0.02,  0.05)
    angle   (  9.857, -21.778,   9.882)  (  9.859, -21.776,   9.884)  ( 0.02,  0.01,  0.02)
    strbnd  (  0.357,   0.332,   0.998)  (  0.356,   0.331,   0.998)  ( 0.03,  0.03,  0.03)
    torsion ( -0.978,   0.700,   0.353)  ( -0.978,   0.700,   0.353)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.539,  -0.634,  -0.360)  ( -0.539,  -0.634,  -0.360)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( -1.087,  -1.069,   0.177)  ( -1.083,  -1.064,   0.183)  ( 0.43,  0.46,  0.10)
    bond    ( -1.901, -13.454,  13.464)  ( -1.897, -13.450,  13.468)  ( 0.18,  0.03,  0.03)
    angle   (  1.193,   9.826, -16.679)  (  1.195,   9.828, -16.677)  ( 0.18,  0.02,  0.01)
    strbnd  ( -3.337,   0.795,   1.409)  ( -3.338,   0.794,   1.408)  ( 0.03,  0.08,  0.02)
    torsion (  0.974,   1.005,   1.909)  (  0.974,   1.005,   1.909)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.983,   0.759,   0.074)  (  1.983,   0.759,   0.074)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       ( -0.972,  -1.131,   0.537)  ( -0.966,  -1.126,   0.543)  ( 0.57,  0.45,  0.31)
    bond    (  8.970,  -7.168,  -3.472)  (  8.974,  -7.164,  -3.467)  ( 0.05,  0.06,  0.13)
    angle   ( -7.660,   2.779,   4.648)  ( -7.658,   2.781,   4.650)  ( 0.02,  0.07,  0.04)
    strbnd  ( -0.534,  -1.586,   1.106)  ( -0.535,  -1.587,   1.106)  ( 0.03,  0.05,  0.04)
    torsion ( -0.534,  -0.161,  -0.695)  ( -0.534,  -0.161,  -0.695)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.214,   5.005,  -1.050)  ( -1.214,   5.005,  -1.050)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( -0.892,  -1.390,  -0.413)  ( -0.887,  -1.384,  -0.407)  ( 0.44,  0.43,  0.23)
    bond    (-14.431,   0.239,  -5.354)  (-14.427,   0.243,  -5.350)  ( 0.03,  0.11,  0.08)
    angle   (  5.190,  -0.465,   6.381)  (  5.192,  -0.463,   6.382)  ( 0.04,  0.09,  0.03)
    strbnd  (  2.347,  -0.745,   1.442)  (  2.346,  -0.746,   1.441)  ( 0.04,  0.03,  0.03)
    torsion (  0.871,  -0.786,  -1.907)  (  0.871,  -0.786,  -1.907)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.131,   0.367,  -0.974)  (  5.131,   0.367,  -0.974)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( -1.255,   0.127,  -0.110)  ( -1.249,   0.133,  -0.106)  ( 0.48,  0.08,  0.05)
    bond    (  4.252,  -7.565,  15.329)  (  4.256,  -7.560,  15.333)  ( 0.11,  0.06,  0.03)
    angle   (  1.408,   3.130,  -7.552)  (  1.409,   3.132,  -7.550)  ( 0.13,  0.06,  0.03)
    strbnd  (  0.392,   0.525,  -4.232)  (  0.392,   0.524,  -4.233)  ( 0.02,  0.03,  0.02)
    torsion ( -2.747,   1.008,   0.725)  ( -2.747,   1.008,   0.725)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.560,   3.029,  -4.380)  ( -4.560,   3.029,  -4.380)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (  0.264,   0.125,  -0.017)  (  0.269,   0.129,  -0.012)  ( 0.13,  0.06,  0.01)
    bond    ( 20.008,  -3.510,  -2.218)  ( 20.012,  -3.507,  -2.215)  ( 0.02,  0.09,  0.15)
    angle   (-15.231,  -7.030,   0.649)  (-15.229,  -7.028,   0.651)  ( 0.01,  0.03,  0.15)
    strbnd  ( -8.351,  11.149,   4.002)  ( -8.352,  11.148,   4.001)  ( 0.01,  0.01,  0.02)
    torsion (  1.984,  -2.010,  -1.712)  (  1.984,  -2.010,  -1.712)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.854,   1.526,  -0.737)  (  1.854,   1.526,  -0.737)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (  0.427,   0.342,  -0.042)  (  0.433,   0.348,  -0.037)  ( 0.25,  0.20,  0.02)
    bond    (  4.959,  -8.811, -19.046)  (  4.964,  -8.806, -19.042)  ( 0.09,  0.05,  0.02)
    angle   ( -3.781,   3.630,  13.839)  ( -3.779,   3.632,  13.841)  ( 0.05,  0.05,  0.01)
    strbnd  (  1.990,  -1.284,  -2.382)  (  1.989,  -1.285,  -2.383)  ( 0.02,  0.04,  0.04)
    torsion ( -0.424,  -0.578,   0.131)  ( -0.424,  -0.578,   0.131)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.317,   7.386,   7.417)  ( -2.317,   7.386,   7.417)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (  0.262,   0.237,   0.013)  (  0.267,   0.243,   0.019)  ( 0.12,  0.14,  0.01)
    bond    ( -9.101, -14.027,  14.486)  ( -9.097, -14.023,  14.490)  ( 0.04,  0.03,  0.03)
    angle   ( 10.251,   5.425, -14.704)  ( 10.253,   5.427, -14.702)  ( 0.02,  0.04,  0.01)
    strbnd  (  4.541,  -0.227,   0.888)  (  4.540,  -0.227,   0.888)  ( 0.02,  0.01,  0.06)
    torsion ( -1.610,   3.720,   3.452)  ( -1.610,   3.720,   3.452)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.819,   5.346,  -4.109)  ( -3.819,   5.346,  -4.109)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (  0.357,   0.362,   0.364)  (  0.362,   0.367,   0.370)  ( 0.18,  0.17,  0.22)
    bond    ( 21.264, -13.824,  -2.826)  ( 21.268, -13.820,  -2.821)  ( 0.02,  0.03,  0.16)
    angle   (-16.268,  12.918,  11.920)  (-16.266,  12.920,  11.922)  ( 0.01,  0.02,  0.01)
    strbnd  ( -2.042,  -2.702,   2.306)  ( -2.043,  -2.703,   2.305)  ( 0.04,  0.04,  0.01)
    torsion (  0.242,  -0.309,  -3.665)  (  0.242,  -0.309,  -3.665)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.840,   4.280,  -7.371)  ( -2.839,   4.280,  -7.371)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  0.298,   0.643,   0.076)  (  0.302,   0.648,   0.081)  ( 0.13,  0.32,  0.04)
    bond    (-17.007,  -1.605,  19.177)  (-17.004,  -1.602,  19.181)  ( 0.02,  0.21,  0.02)
    angle   ( 20.289, -11.578, -20.050)  ( 20.291, -11.576, -20.048)  ( 0.01,  0.02,  0.01)
    strbnd  (  0.219,   4.268,  -0.478)  (  0.218,   4.267,  -0.478)  ( 0.02,  0.02,  0.02)
    torsion ( -1.834,   2.984,   4.550)  ( -1.834,   2.984,   4.550)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.369,   6.574,  -3.124)  ( -1.369,   6.574,  -3.124)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (  1.237,  -0.464,   0.129)  (  1.240,  -0.447,   0.208)  ( 0.27,  0.79,  1.02)
    bond    ( 15.847,  -1.098,  -7.962)  ( 15.850,  -1.095,  -7.959)  ( 0.02,  0.29,  0.04)
    angle   (-11.285,  -1.723,  11.202)  (-11.283,  -1.722,  11.203)  ( 0.02,  0.12,  0.02)
    strbnd  ( -2.536,   2.403,   1.664)  ( -2.537,   2.402,   1.663)  ( 0.03,  0.03,  0.04)
    torsion (  1.195,  -2.901,  -3.945)  (  1.195,  -2.901,  -3.945)  ( 0.00,  0.00,  0.01)
    oop     (  0.005,  -0.076,  -0.452)  (  0.004,  -0.064,  -0.378)  ( 0.00,  0.09,  3.34)
    vdw     ( -1.368,   2.242,  -0.525)  ( -1.367,   2.242,  -0.525)  ( 0.01,  0.00,  0.00)
    electro ( -0.621,   0.690,   0.148)  ( -0.621,   0.690,   0.148)  ( 0.00,  0.00,  0.00)
27       (  0.236,   0.612,   0.037)  (  0.242,   0.618,   0.042)  ( 0.14,  0.35,  0.02)
    bond    (  5.055, -10.233, -17.302)  (  5.059, -10.229, -17.298)  ( 0.09,  0.04,  0.02)
    angle   ( -3.183,   7.842,  10.800)  ( -3.181,   7.843,  10.802)  ( 0.06,  0.02,  0.02)
    strbnd  (  1.203,   0.907,  -0.607)  (  1.203,   0.907,  -0.608)  ( 0.04,  0.05,  0.06)
    torsion ( -0.959,  -0.405,  -0.114)  ( -0.959,  -0.405,  -0.114)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.881,   2.501,   7.260)  ( -1.880,   2.501,   7.260)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (  0.896,  -0.479,  -0.925)  (  0.900,  -0.477,  -0.920)  ( 0.38,  0.08,  0.45)
    bond    (  7.820,   3.623,  -3.208)  (  7.824,   3.624,  -3.204)  ( 0.05,  0.03,  0.12)
    angle   ( -2.167,   1.247,   4.426)  ( -2.166,   1.247,   4.428)  ( 0.01,  0.03,  0.03)
    strbnd  (  0.310,   0.219,   0.140)  (  0.310,   0.219,   0.140)  ( 0.00,  0.00,  0.01)
    torsion (  0.871,  -2.454,  -0.635)  (  0.871,  -2.454,  -0.635)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.614,  -2.920,  -1.379)  ( -3.614,  -2.920,  -1.379)  ( 0.00,  0.00,  0.00)
    electro ( -2.324,  -0.193,  -0.270)  ( -2.323,  -0.193,  -0.270)  ( 0.00,  0.00,  0.00)
29       (  0.408,   0.492,   0.031)  (  0.409,   0.493,   0.034)  ( 0.03,  0.06,  0.01)
    bond    ( -1.093,   2.730,   5.745)  ( -1.093,   2.731,   5.748)  ( 0.01,  0.02,  0.04)
    angle   ( -0.447,  -1.804,   0.772)  ( -0.446,  -1.803,   0.772)  ( 0.03,  0.03,  0.01)
    strbnd  ( -0.651,  -1.825,  -2.101)  ( -0.651,  -1.825,  -2.101)  ( 0.00,  0.00,  0.00)
    torsion (  1.322,  -0.173,   0.334)  (  1.322,  -0.173,   0.334)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.277,   1.563,  -4.719)  (  1.277,   1.563,  -4.719)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (  0.503,   0.033,   0.106)  (  0.504,   0.034,   0.109)  ( 0.04,  0.00,  0.03)
    bond    (  0.388,  -0.566,  -1.877)  (  0.388,  -0.566,  -1.874)  ( 0.01,  0.02,  0.16)
    angle   ( -1.222,   1.435,  -0.686)  ( -1.222,   1.436,  -0.686)  ( 0.05,  0.04,  0.00)
    strbnd  ( -0.562,   0.515,   1.009)  ( -0.562,   0.515,   1.009)  ( 0.00,  0.00,  0.00)
    torsion ( -1.037,   0.246,  -0.289)  ( -1.037,   0.246,  -0.289)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.936,  -1.598,   1.950)  (  2.936,  -1.598,   1.950)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (  0.438,   0.182,   0.134)  (  0.439,   0.183,   0.137)  ( 0.04,  0.02,  0.04)
    bond    ( -1.114,   1.979,   6.032)  ( -1.114,   1.980,   6.035)  ( 0.01,  0.02,  0.05)
    angle   ( -0.690,   1.900,  -0.751)  ( -0.689,   1.901,  -0.751)  ( 0.04,  0.03,  0.01)
    strbnd  (  0.022,  -0.078,  -2.039)  (  0.022,  -0.078,  -2.039)  ( 0.00,  0.00,  0.00)
    torsion (  0.783,   1.067,  -0.206)  (  0.783,   1.067,  -0.206)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.437,  -4.688,  -2.903)  (  1.437,  -4.687,  -2.903)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (  1.763,   0.235,  -0.010)  (  1.764,   0.236,  -0.007)  ( 0.05,  0.03,  0.00)
    bond    ( -0.495,   1.091,   2.241)  ( -0.495,   1.092,   2.244)  ( 0.01,  0.06,  0.12)
    angle   ( -0.145,   0.135,  -0.098)  ( -0.144,   0.135,  -0.098)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.003,  -0.325,  -0.202)  ( -0.003,  -0.325,  -0.202)  ( 0.00,  0.00,  0.00)
    torsion (  1.861,   0.535,   0.150)  (  1.861,   0.535,   0.150)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.545,  -1.202,  -2.101)  (  0.545,  -1.202,  -2.101)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (  0.648,   0.036,  -0.155)  (  0.650,   0.037,  -0.153)  ( 0.11,  0.00,  0.03)
    bond    (  2.130,  -0.511,   2.443)  (  2.132,  -0.511,   2.445)  ( 0.07,  0.00,  0.08)
    angle   (  2.580,  -0.905,  -2.439)  (  2.580,  -0.904,  -2.439)  ( 0.01,  0.05,  0.01)
    strbnd  ( -0.613,   0.221,  -1.607)  ( -0.613,   0.221,  -1.607)  ( 0.00,  0.00,  0.00)
    torsion ( -2.226,   0.124,   1.967)  ( -2.226,   0.125,   1.967)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.223,   1.107,  -0.518)  ( -1.223,   1.107,  -0.518)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (  0.623,  -0.025,  -0.099)  (  0.624,  -0.024,  -0.096)  ( 0.07,  0.00,  0.02)
    bond    (  1.205,  -1.083,  -2.206)  (  1.205,  -1.082,  -2.204)  ( 0.05,  0.05,  0.10)
    angle   (  4.429,  -0.679,   2.755)  (  4.430,  -0.679,   2.755)  ( 0.01,  0.03,  0.01)
    strbnd  ( -0.025,   0.560,   1.229)  ( -0.025,   0.560,   1.229)  ( 0.00,  0.00,  0.00)
    torsion ( -1.189,  -0.747,  -0.284)  ( -1.189,  -0.747,  -0.284)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.797,   1.923,  -1.593)  ( -3.797,   1.923,  -1.593)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (  0.727,   0.236,   0.113)  (  0.728,   0.237,   0.115)  ( 0.07,  0.02,  0.03)
    bond    ( -1.135,   1.111,   3.160)  ( -1.134,   1.111,   3.163)  ( 0.03,  0.03,  0.08)
    angle   (  2.191,   0.137,   0.737)  (  2.191,   0.138,   0.737)  ( 0.03,  0.01,  0.01)
    strbnd  (  1.028,  -1.182,  -0.643)  (  1.028,  -1.182,  -0.643)  ( 0.00,  0.00,  0.00)
    torsion (  0.059,  -1.190,   0.439)  (  0.059,  -1.190,   0.439)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.416,   1.359,  -3.581)  ( -1.416,   1.359,  -3.581)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (  0.488,   0.270,  -0.116)  (  0.489,   0.274,  -0.116)  ( 0.04,  0.09,  0.01)
    bond    (  0.456,  -2.299,   0.220)  (  0.456,  -2.296,   0.220)  ( 0.01,  0.14,  0.00)
    angle   (  2.467,   0.624,   1.393)  (  2.468,   0.624,   1.393)  ( 0.02,  0.00,  0.04)
    strbnd  (  0.024,   1.326,   0.945)  (  0.024,   1.326,   0.945)  ( 0.00,  0.00,  0.00)
    torsion (  0.177,  -0.003,  -0.400)  (  0.177,  -0.003,  -0.399)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.636,   0.622,  -2.274)  ( -2.636,   0.622,  -2.274)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (  0.151,   1.287,   0.431)  (  0.152,   1.288,   0.434)  ( 0.02,  0.05,  0.13)
    bond    (  1.073,  -0.388,  -2.975)  (  1.074,  -0.388,  -2.972)  ( 0.04,  0.00,  0.10)
    angle   ( -0.794,   2.840,  -0.658)  ( -0.793,   2.841,  -0.658)  ( 0.04,  0.02,  0.00)
    strbnd  ( -0.284,   0.981,   1.653)  ( -0.284,   0.981,   1.653)  ( 0.00,  0.00,  0.00)
    torsion ( -1.057,  -0.640,  -0.298)  ( -1.057,  -0.640,  -0.298)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.212,  -1.506,   2.709)  (  1.212,  -1.506,   2.709)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (  0.339,   0.476,   1.257)  (  0.340,   0.479,   1.258)  ( 0.03,  0.15,  0.04)
    bond    ( -0.805,   4.071,   0.318)  ( -0.805,   4.074,   0.318)  ( 0.01,  0.08,  0.00)
    angle   (  5.353,   1.181,  -1.582)  (  5.354,   1.181,  -1.581)  ( 0.01,  0.00,  0.03)
    strbnd  (  0.930,  -1.391,  -0.658)  (  0.930,  -1.391,  -0.658)  ( 0.00,  0.00,  0.00)
    torsion ( -1.899,  -0.571,   2.506)  ( -1.899,  -0.571,   2.506)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.240,  -2.814,   0.673)  ( -3.240,  -2.814,   0.673)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (  0.197,   1.934,  -0.224)  (  0.196,   1.943,  -0.193)  ( 0.02,  0.45,  0.70)
    bond    ( -0.322,   6.022,  -1.065)  ( -0.322,   6.026,  -1.065)  ( 0.00,  0.06,  0.01)
    angle   ( -3.546,  -0.243,  -0.303)  ( -3.546,  -0.243,  -0.303)  ( 0.02,  0.00,  0.00)
    strbnd  (  0.529,  -2.091,   0.417)  (  0.529,  -2.091,   0.417)  ( 0.00,  0.00,  0.00)
    torsion (  0.017,   0.060,   0.336)  (  0.017,   0.060,   0.337)  ( 0.00,  0.00,  0.01)
    oop     (  0.010,  -0.029,  -0.170)  (  0.008,  -0.024,  -0.139)  ( 0.00,  0.02,  0.52)
    vdw     (  2.635,  -1.088,   0.220)  (  2.635,  -1.088,   0.220)  ( 0.00,  0.00,  0.00)
    electro (  0.875,  -0.697,   0.340)  (  0.875,  -0.697,   0.340)  ( 0.00,  0.00,  0.00)
40       (  0.840,  -0.019,  -0.312)  (  0.841,  -0.018,  -0.309)  ( 0.11,  0.00,  0.07)
    bond    ( -1.264,   0.699,  -1.919)  ( -1.263,   0.699,  -1.917)  ( 0.07,  0.02,  0.11)
    angle   (  0.476,   0.291,  -0.208)  (  0.477,   0.292,  -0.208)  ( 0.02,  0.02,  0.00)
    strbnd  (  0.323,   0.150,   1.507)  (  0.323,   0.150,   1.507)  ( 0.00,  0.00,  0.00)
    torsion (  0.949,   0.716,  -0.364)  (  0.949,   0.716,  -0.364)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.355,  -1.875,   0.672)  (  0.355,  -1.875,   0.672)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (  0.302,   0.253,  -0.644)  (  0.303,   0.254,  -0.641)  ( 0.04,  0.02,  0.15)
    bond    ( -1.052,   0.652,   1.694)  ( -1.051,   0.653,   1.696)  ( 0.08,  0.02,  0.13)
    angle   (  1.336,   3.153,  -0.385)  (  1.337,   3.153,  -0.384)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.202,   0.175,  -1.360)  (  0.202,   0.175,  -1.360)  ( 0.00,  0.00,  0.00)
    torsion ( -0.348,  -0.299,  -0.101)  ( -0.348,  -0.299,  -0.101)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.164,  -3.428,  -0.491)  (  0.164,  -3.428,  -0.491)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (  0.242,  -0.051,   0.087)  (  0.243,  -0.051,   0.090)  ( 0.02,  0.00,  0.03)
    bond    (  0.344,   0.091,  -1.789)  (  0.344,   0.091,  -1.786)  ( 0.00,  0.00,  0.18)
    angle   ( -2.274,   1.718,  -0.351)  ( -2.274,   1.718,  -0.351)  ( 0.02,  0.03,  0.00)
    strbnd  (  0.055,   0.966,   0.467)  (  0.055,   0.966,   0.467)  ( 0.00,  0.00,  0.00)
    torsion (  0.347,   0.529,   0.094)  (  0.347,   0.529,   0.094)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.770,  -3.355,   1.666)  (  1.770,  -3.355,   1.666)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (  0.647,   0.422,  -0.099)  (  0.648,   0.424,  -0.099)  ( 0.07,  0.12,  0.01)
    bond    ( -0.598,   1.361,   0.419)  ( -0.597,   1.363,   0.420)  ( 0.03,  0.19,  0.01)
    angle   (  0.254,   1.061,  -3.086)  (  0.255,   1.061,  -3.085)  ( 0.01,  0.01,  0.02)
    strbnd  (  0.585,   0.274,  -0.771)  (  0.585,   0.274,  -0.771)  ( 0.00,  0.00,  0.00)
    torsion ( -0.431,  -0.894,   2.291)  ( -0.431,  -0.894,   2.291)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.837,  -1.379,   1.046)  (  0.837,  -1.379,   1.046)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       ( -0.948,   0.980,   0.797)  ( -0.947,   0.982,   0.799)  ( 0.08,  0.11,  0.21)
    bond    ( -0.079,  -0.094,  -0.209)  ( -0.078,  -0.094,  -0.207)  ( 0.00,  0.00,  0.05)
    angle   ( -1.561,   3.754,  -1.115)  ( -1.561,   3.755,  -1.115)  ( 0.03,  0.01,  0.01)
    strbnd  ( -1.025,   0.299,   0.384)  ( -1.025,   0.299,   0.384)  ( 0.00,  0.00,  0.00)
    torsion (  0.309,  -1.025,   0.349)  (  0.309,  -1.025,   0.349)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.408,  -1.954,   1.389)  (  1.408,  -1.954,   1.389)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       (  0.684,   0.907,   1.369)  (  0.687,   0.908,   1.370)  ( 0.16,  0.08,  0.09)
    bond    ( -1.901,   0.820,   1.194)  ( -1.899,   0.820,   1.195)  ( 0.11,  0.03,  0.07)
    angle   ( -0.217,  -0.147,  -0.244)  ( -0.216,  -0.146,  -0.243)  ( 0.00,  0.01,  0.01)
    strbnd  ( -0.303,  -0.559,  -1.117)  ( -0.303,  -0.559,  -1.117)  ( 0.00,  0.00,  0.00)
    torsion (  1.043,   1.144,   0.873)  (  1.043,   1.144,   0.873)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.062,  -0.352,   0.663)  (  2.062,  -0.352,   0.663)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       (  0.367,  -0.348,   0.007)  (  0.368,  -0.346,   0.010)  ( 0.03,  0.04,  0.00)
    bond    ( -0.743,   1.942,   5.648)  ( -0.743,   1.943,   5.651)  ( 0.01,  0.02,  0.05)
    angle   ( -0.834,   2.429,  -0.945)  ( -0.833,   2.430,  -0.945)  ( 0.05,  0.03,  0.01)
    strbnd  ( -0.401,  -0.284,  -2.968)  ( -0.401,  -0.284,  -2.968)  ( 0.00,  0.00,  0.00)
    torsion ( -0.439,  -1.217,   0.361)  ( -0.439,  -1.217,   0.361)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.784,  -3.218,  -2.089)  (  2.784,  -3.218,  -2.089)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       (  0.015,  -0.265,   0.203)  (  0.016,  -0.264,   0.204)  ( 0.00,  0.04,  0.03)
    bond    (  0.405,  -0.387,  -0.424)  (  0.406,  -0.386,  -0.423)  ( 0.05,  0.04,  0.05)
    angle   ( -2.172,  -2.780,   0.450)  ( -2.171,  -2.779,   0.451)  ( 0.02,  0.01,  0.02)
    strbnd  ( -0.734,   0.044,   1.793)  ( -0.734,   0.044,   1.793)  ( 0.00,  0.00,  0.00)
    torsion ( -0.276,  -0.075,  -0.196)  ( -0.276,  -0.075,  -0.196)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.791,   2.933,  -1.421)  (  2.791,   2.933,  -1.421)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       ( -0.723,  -0.153,  -2.370)  ( -0.721,  -0.151,  -2.369)  ( 0.12,  0.03,  0.05)
    bond    ( -0.977,   1.037,   0.786)  ( -0.976,   1.038,   0.787)  ( 0.12,  0.13,  0.06)
    angle   ( -0.242,   0.074,  -0.397)  ( -0.241,   0.074,  -0.397)  ( 0.01,  0.00,  0.01)
    strbnd  (  0.015,  -0.149,  -2.101)  (  0.015,  -0.149,  -2.101)  ( 0.00,  0.00,  0.00)
    torsion ( -0.303,   0.391,  -0.890)  ( -0.303,   0.391,  -0.890)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.783,  -1.505,   0.233)  (  0.783,  -1.505,   0.233)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (  0.608,  -1.419,  -1.523)  (  0.609,  -1.418,  -1.520)  ( 0.04,  0.06,  0.21)
    bond    ( -0.234,   0.800,  -3.501)  ( -0.234,   0.800,  -3.498)  ( 0.00,  0.01,  0.09)
    angle   ( -0.364,  -2.283,  -0.498)  ( -0.363,  -2.283,  -0.498)  ( 0.02,  0.02,  0.00)
    strbnd  ( -1.308,   0.802,   1.925)  ( -1.308,   0.802,   1.925)  ( 0.00,  0.00,  0.00)
    torsion (  1.209,  -1.267,  -0.371)  (  1.209,  -1.267,  -0.371)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.305,   0.529,   0.922)  (  1.305,   0.529,   0.922)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       ( -1.926,  -0.688,  -1.325)  ( -1.925,  -0.687,  -1.323)  ( 0.05,  0.11,  0.15)
    bond    (  1.132,  -1.684,  -2.127)  (  1.132,  -1.683,  -2.125)  ( 0.04,  0.07,  0.08)
    angle   ( -0.386,   0.713,  -0.771)  ( -0.386,   0.714,  -0.771)  ( 0.02,  0.03,  0.02)
    strbnd  ( -0.234,  -0.477,   1.916)  ( -0.234,  -0.478,   1.916)  ( 0.00,  0.00,  0.00)
    torsion ( -0.839,   0.814,  -1.092)  ( -0.839,   0.814,  -1.092)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.600,  -0.054,   0.749)  ( -1.600,  -0.054,   0.749)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (  0.141,  -0.997,  -1.237)  (  0.142,  -0.996,  -1.234)  ( 0.01,  0.10,  0.23)
    bond    ( -0.459,   0.602,  -1.366)  ( -0.459,   0.603,  -1.364)  ( 0.01,  0.03,  0.19)
    angle   ( -4.840,  -2.593,   0.483)  ( -4.839,  -2.592,   0.483)  ( 0.01,  0.02,  0.01)
    strbnd  ( -0.066,  -0.914,  -1.669)  ( -0.066,  -0.914,  -1.669)  ( 0.00,  0.00,  0.00)
    torsion (  0.609,  -0.569,  -0.456)  (  0.609,  -0.569,  -0.456)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.897,   2.477,   1.772)  (  4.897,   2.477,   1.772)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       ( -2.339,   0.741,   1.932)  ( -2.338,   0.742,   1.935)  ( 0.04,  0.05,  0.15)
    bond    ( -0.579,   0.431,  -1.609)  ( -0.579,   0.431,  -1.606)  ( 0.02,  0.01,  0.17)
    angle   ( -0.609,   2.084,   0.779)  ( -0.609,   2.085,   0.779)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.098,   0.859,   1.399)  (  0.098,   0.859,   1.399)  ( 0.00,  0.00,  0.00)
    torsion ( -0.384,  -0.338,   0.048)  ( -0.384,  -0.338,   0.048)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.864,  -2.295,   1.315)  ( -0.864,  -2.295,   1.315)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (  0.056,  -1.491,   2.539)  (  0.057,  -1.489,   2.541)  ( 0.01,  0.13,  0.06)
    bond    ( -1.594,   2.825,   2.595)  ( -1.593,   2.827,   2.597)  ( 0.03,  0.05,  0.05)
    angle   ( -1.514,  -2.295,   1.569)  ( -1.514,  -2.295,   1.569)  ( 0.03,  0.01,  0.02)
    strbnd  (  0.494,  -0.602,  -2.308)  (  0.494,  -0.602,  -2.308)  ( 0.00,  0.00,  0.00)
    torsion (  1.240,  -0.042,   0.806)  (  1.240,  -0.042,   0.806)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.431,  -1.377,  -0.123)  (  1.431,  -1.377,  -0.123)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       ( -1.751,  -1.353,   0.152)  ( -1.750,  -1.352,   0.155)  ( 0.04,  0.06,  0.05)
    bond    ( -0.353,   0.090,   4.018)  ( -0.353,   0.090,   4.021)  ( 0.00,  0.00,  0.08)
    angle   ( -0.173,  -0.584,  -0.002)  ( -0.173,  -0.583,  -0.002)  ( 0.01,  0.04,  0.00)
    strbnd  (  0.100,  -0.938,  -1.958)  (  0.100,  -0.938,  -1.958)  ( 0.00,  0.00,  0.00)
    torsion ( -1.477,  -0.328,  -0.122)  ( -1.476,  -0.328,  -0.122)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.153,   0.407,  -1.784)  (  0.153,   0.407,  -1.784)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       ( -0.691,  -0.566,  -0.526)  ( -0.688,  -0.566,  -0.525)  ( 0.22,  0.04,  0.04)
    bond    ( -0.658,  -0.057,  -0.193)  ( -0.655,  -0.057,  -0.193)  ( 0.21,  0.00,  0.01)
    angle   (  0.205,  -4.548,   0.655)  (  0.205,  -4.547,   0.655)  ( 0.00,  0.01,  0.03)
    strbnd  ( -0.169,  -0.573,  -0.356)  ( -0.169,  -0.573,  -0.356)  ( 0.00,  0.00,  0.00)
    torsion (  0.064,   0.110,  -0.250)  (  0.064,   0.110,  -0.250)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.132,   4.501,  -0.381)  ( -0.132,   4.502,  -0.381)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( -1.939,  -2.205,   0.809)  ( -1.938,  -2.204,   0.812)  ( 0.03,  0.03,  0.27)
    bond    ( -0.033,  -0.223,  -1.036)  ( -0.033,  -0.223,  -1.033)  ( 0.00,  0.00,  0.31)
    angle   (  0.267,  -3.200,   0.682)  (  0.267,  -3.200,   0.682)  ( 0.01,  0.02,  0.00)
    strbnd  (  0.445,  -0.392,   0.323)  (  0.445,  -0.392,   0.323)  ( 0.00,  0.00,  0.00)
    torsion ( -0.267,  -0.189,   0.049)  ( -0.267,  -0.189,   0.049)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.350,   1.799,   0.791)  ( -2.350,   1.799,   0.791)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( -0.222,  -0.711,   1.702)  ( -0.221,  -0.708,   1.703)  ( 0.02,  0.16,  0.07)
    bond    ( -1.423,  -3.015,   1.849)  ( -1.423,  -3.013,   1.849)  ( 0.03,  0.07,  0.04)
    angle   (  1.191,  -0.586,  -0.038)  (  1.192,  -0.586,  -0.038)  ( 0.04,  0.01,  0.00)
    strbnd  (  0.927,   0.636,  -0.840)  (  0.927,   0.636,  -0.840)  ( 0.00,  0.00,  0.00)
    torsion (  0.670,   0.208,   0.854)  (  0.670,   0.208,   0.854)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.587,   2.046,  -0.123)  ( -1.587,   2.046,  -0.123)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( -1.065,  -1.279,  -1.213)  ( -1.063,  -1.277,  -1.212)  ( 0.14,  0.19,  0.05)
    bond    ( -0.341,   0.461,   0.108)  ( -0.340,   0.463,   0.108)  ( 0.04,  0.10,  0.00)
    angle   ( -2.386,  -1.529,  -0.965)  ( -2.386,  -1.529,  -0.964)  ( 0.01,  0.01,  0.04)
    strbnd  ( -0.455,  -0.647,  -0.480)  ( -0.455,  -0.647,  -0.480)  ( 0.00,  0.00,  0.00)
    torsion (  0.014,   0.020,  -0.041)  (  0.014,   0.020,  -0.041)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.104,   0.416,   0.164)  (  2.104,   0.416,   0.164)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       ( -1.070,  -1.140,  -0.343)  ( -1.069,  -1.138,  -0.342)  ( 0.10,  0.20,  0.03)
    bond    ( -1.369,  -2.487,   1.248)  ( -1.368,  -2.484,   1.248)  ( 0.05,  0.09,  0.04)
    angle   ( -1.624,   0.072,  -1.636)  ( -1.623,   0.072,  -1.636)  ( 0.03,  0.00,  0.03)
    strbnd  ( -0.372,   0.804,  -0.765)  ( -0.372,   0.804,  -0.765)  ( 0.00,  0.00,  0.00)
    torsion ( -0.290,   0.448,   0.574)  ( -0.290,   0.448,   0.574)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.584,   0.022,   0.237)  (  2.584,   0.022,   0.237)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( -0.358,  -1.910,  -0.423)  ( -0.357,  -1.909,  -0.420)  ( 0.02,  0.03,  0.14)
    bond    (  0.061,  -0.358,  -2.470)  (  0.061,  -0.358,  -2.467)  ( 0.00,  0.00,  0.13)
    angle   ( -2.334,  -1.222,   0.119)  ( -2.334,  -1.222,   0.119)  ( 0.02,  0.04,  0.00)
    strbnd  ( -0.879,   0.068,   0.565)  ( -0.879,   0.068,   0.565)  ( 0.00,  0.00,  0.00)
    torsion (  0.016,  -0.218,   0.032)  (  0.016,  -0.218,   0.032)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.778,  -0.179,   1.331)  (  2.778,  -0.179,   1.331)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       ( -1.170,  -0.189,   0.037)  ( -1.168,  -0.188,   0.038)  ( 0.25,  0.01,  0.00)
    bond    ( -0.428,  -0.103,  -0.175)  ( -0.426,  -0.103,  -0.175)  ( 0.12,  0.00,  0.01)
    angle   ( -0.331,  -3.245,   2.709)  ( -0.331,  -3.244,   2.710)  ( 0.00,  0.01,  0.02)
    strbnd  ( -0.890,  -0.655,   0.505)  ( -0.890,  -0.655,   0.505)  ( 0.00,  0.00,  0.00)
    torsion ( -0.146,   0.349,   0.151)  ( -0.146,   0.349,   0.152)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.626,   3.464,  -3.153)  (  0.626,   3.464,  -3.153)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       ( -1.757,   0.318,   0.260)  ( -1.756,   0.322,   0.261)  ( 0.03,  0.11,  0.02)
    bond    (  0.021,   0.242,  -0.008)  (  0.021,   0.246,  -0.008)  ( 0.00,  0.08,  0.00)
    angle   (  2.576,  -0.098,   3.676)  (  2.576,  -0.098,   3.677)  ( 0.02,  0.00,  0.01)
    strbnd  (  0.261,   0.641,   0.904)  (  0.261,   0.642,   0.904)  ( 0.00,  0.00,  0.00)
    torsion (  1.156,  -0.106,  -0.183)  (  1.156,  -0.106,  -0.183)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.770,  -0.362,  -4.129)  ( -5.770,  -0.362,  -4.129)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( -1.163,   0.855,  -0.571)  ( -1.161,   0.856,  -0.570)  ( 0.16,  0.08,  0.09)
    bond    ( -1.786,   1.024,   1.583)  ( -1.785,   1.024,   1.584)  ( 0.09,  0.05,  0.08)
    angle   (  0.428,  -0.094,   0.542)  (  0.428,  -0.094,   0.543)  ( 0.01,  0.00,  0.02)
    strbnd  (  0.673,  -0.673,   0.446)  (  0.673,  -0.673,   0.446)  ( 0.00,  0.00,  0.00)
    torsion ( -0.227,  -0.276,  -0.077)  ( -0.227,  -0.276,  -0.077)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.250,   0.874,  -3.065)  ( -0.250,   0.874,  -3.065)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       (  0.790,  -0.989,   0.790)  (  0.793,  -0.989,   0.791)  ( 0.25,  0.06,  0.06)
    bond    (  0.666,   0.107,  -0.162)  (  0.670,   0.108,  -0.162)  ( 0.21,  0.00,  0.00)
    angle   ( -0.821,  -2.989,  -5.388)  ( -0.821,  -2.989,  -5.387)  ( 0.00,  0.02,  0.01)
    strbnd  ( -1.303,  -0.763,  -0.758)  ( -1.303,  -0.763,  -0.758)  ( 0.00,  0.00,  0.00)
    torsion (  0.159,  -0.563,   0.283)  (  0.159,  -0.563,   0.283)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.089,   3.218,   6.815)  (  2.089,   3.218,   6.815)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
65       (  1.612,   1.583,  -0.244)  (  1.613,   1.584,  -0.242)  ( 0.09,  0.07,  0.05)
    bond    ( -0.305,   0.226,  -0.426)  ( -0.304,   0.227,  -0.424)  ( 0.03,  0.01,  0.08)
    angle   (  3.626,  -2.262,  -3.808)  (  3.626,  -2.262,  -3.808)  ( 0.01,  0.02,  0.01)
    strbnd  (  0.994,  -1.017,  -0.192)  (  0.994,  -1.017,  -0.192)  ( 0.00,  0.00,  0.00)
    torsion (  0.256,   0.264,  -0.043)  (  0.256,   0.264,  -0.043)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.959,   4.372,   4.225)  ( -2.958,   4.372,   4.225)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
66       ( -1.078,   0.552,  -0.760)  ( -1.078,   0.556,  -0.759)  ( 0.06,  0.19,  0.05)
    bond    (  0.016,   0.113,   0.003)  (  0.016,   0.116,   0.003)  ( 0.00,  0.04,  0.00)
    angle   (  2.563,  -0.264,  -3.412)  (  2.563,  -0.264,  -3.411)  ( 0.02,  0.00,  0.02)
    strbnd  (  0.510,   0.950,  -1.109)  (  0.510,   0.950,  -1.109)  ( 0.00,  0.00,  0.00)
    torsion ( -0.450,   0.067,  -0.151)  ( -0.450,   0.067,  -0.151)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.718,  -0.314,   3.909)  ( -3.717,  -0.314,   3.909)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
67       (  0.335,   0.250,   0.082)  (  0.336,   0.253,   0.082)  ( 0.02,  0.08,  0.00)
    bond    (  0.214,  -2.095,   0.090)  (  0.214,  -2.092,   0.090)  ( 0.00,  0.16,  0.00)
    angle   (  1.574,   0.246,   1.978)  (  1.575,   0.246,   1.979)  ( 0.04,  0.00,  0.03)
    strbnd  ( -0.777,   1.004,   0.844)  ( -0.777,   1.004,   0.844)  ( 0.00,  0.00,  0.00)
    torsion (  0.181,  -0.026,  -1.050)  (  0.181,  -0.026,  -1.050)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.857,   1.121,  -1.781)  ( -0.857,   1.121,  -1.781)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
68       (  0.121,   0.190,   0.044)  (  0.122,   0.191,   0.047)  ( 0.01,  0.02,  0.01)
    bond    ( -0.946,   0.945,   2.916)  ( -0.946,   0.945,   2.919)  ( 0.03,  0.03,  0.09)
    angle   (  2.086,  -0.263,   0.761)  (  2.086,  -0.263,   0.761)  ( 0.03,  0.01,  0.01)
    strbnd  (  0.013,  -1.433,  -0.930)  (  0.013,  -1.433,  -0.930)  ( 0.00,  0.00,  0.00)
    torsion (  0.192,  -1.114,   0.423)  (  0.192,  -1.114,   0.423)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.224,   2.055,  -3.126)  ( -1.224,   2.055,  -3.126)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
69       (  0.670,   0.306,   0.584)  (  0.671,   0.308,   0.587)  ( 0.08,  0.04,  0.14)
    bond    ( -0.089,   0.102,   0.156)  ( -0.088,   0.103,   0.158)  ( 0.01,  0.01,  0.03)
    angle   (  0.439,  -2.980,   2.180)  (  0.440,  -2.979,   2.180)  ( 0.02,  0.02,  0.01)
    strbnd  (  0.329,   0.312,   1.723)  (  0.329,   0.312,   1.723)  ( 0.00,  0.00,  0.00)
    torsion (  0.972,  -0.601,   0.932)  (  0.972,  -0.601,   0.933)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.982,   3.473,  -4.407)  ( -0.982,   3.473,  -4.407)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
70       (  0.106,   0.582,   0.566)  (  0.107,   0.583,   0.568)  ( 0.02,  0.04,  0.13)
    bond    (  1.818,  -0.560,   2.482)  (  1.819,  -0.560,   2.484)  ( 0.06,  0.01,  0.08)
    angle   ( -0.401,  -1.568,  -0.060)  ( -0.400,  -1.567,  -0.060)  ( 0.01,  0.04,  0.00)
    strbnd  ( -0.251,  -0.339,  -2.165)  ( -0.251,  -0.339,  -2.165)  ( 0.00,  0.00,  0.00)
    torsion ( -1.175,   0.745,   1.028)  ( -1.175,   0.745,   1.028)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.115,   2.304,  -0.719)  (  0.115,   2.304,  -0.719)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
71       (  0.738,   0.197,   0.250)  (  0.741,   0.198,   0.251)  ( 0.20,  0.02,  0.02)
    bond    (  1.848,   0.749,  -0.682)  (  1.850,   0.749,  -0.682)  ( 0.14,  0.03,  0.02)
    angle   ( -0.676,  -2.968,  -5.094)  ( -0.676,  -2.967,  -5.094)  ( 0.01,  0.02,  0.01)
    strbnd  ( -1.187,  -1.166,  -0.503)  ( -1.187,  -1.166,  -0.503)  ( 0.00,  0.00,  0.00)
    torsion (  0.213,  -0.324,   0.223)  (  0.213,  -0.324,   0.223)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.541,   3.906,   6.307)  (  0.541,   3.906,   6.307)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
72       (  0.699,   1.329,  -0.078)  (  0.701,   1.330,  -0.076)  ( 0.13,  0.05,  0.02)
    bond    ( -0.821,   0.235,  -0.916)  ( -0.820,   0.235,  -0.914)  ( 0.12,  0.00,  0.17)
    angle   (  3.757,  -0.301,  -3.447)  (  3.757,  -0.301,  -3.447)  ( 0.01,  0.01,  0.01)
    strbnd  (  1.187,  -0.802,  -0.115)  (  1.187,  -0.802,  -0.115)  ( 0.00,  0.00,  0.00)
    torsion ( -0.090,  -0.149,   0.042)  ( -0.090,  -0.149,   0.042)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.334,   2.346,   4.357)  ( -3.333,   2.346,   4.357)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
73       ( -0.259,   0.501,  -0.385)  ( -0.258,   0.505,  -0.385)  ( 0.01,  0.17,  0.02)
    bond    ( -0.024,   0.218,  -0.017)  ( -0.024,   0.221,  -0.017)  ( 0.00,  0.07,  0.00)
    angle   (  2.747,   0.023,  -3.607)  (  2.748,   0.023,  -3.606)  ( 0.02,  0.00,  0.02)
    strbnd  (  0.214,   0.580,  -1.173)  (  0.214,   0.580,  -1.173)  ( 0.00,  0.00,  0.00)
    torsion ( -0.122,  -0.015,  -0.032)  ( -0.122,  -0.015,  -0.032)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.075,  -0.304,   4.442)  ( -3.075,  -0.304,   4.443)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
74       (  0.198,   2.184,  -1.550)  (  0.200,   2.185,  -1.547)  ( 0.04,  0.04,  0.23)
    bond    ( -0.028,  -0.019,  -0.043)  ( -0.027,  -0.018,  -0.040)  ( 0.00,  0.00,  0.01)
    angle   (  2.217,   0.907,  -1.911)  (  2.217,   0.907,  -1.911)  ( 0.01,  0.00,  0.01)
    strbnd  (  0.644,   0.343,   0.113)  (  0.644,   0.343,   0.113)  ( 0.01,  0.00,  0.00)
    torsion ( -0.820,   1.602,  -0.191)  ( -0.820,   1.602,  -0.191)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.896,  -0.668,   0.650)  ( -1.896,  -0.668,   0.650)  ( 0.00,  0.00,  0.00)
    electro (  0.081,   0.018,  -0.168)  (  0.081,   0.018,  -0.168)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 11 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 12 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ciprofloxacin.gpr
 # Expected       104.10832, found 104.108317&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/ciprofloxacin.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( -0.188,  -0.096,  -0.051)  ( -0.197,  -0.054,  -0.010)  ( 0.17,  0.40,  0.21)
    bond    (  6.718,   6.276,  -0.511)  (  6.723,   6.283,  -0.510)  ( 0.07,  0.11,  0.05)
    angle   (  7.350,   2.161,   1.524)  (  7.352,   2.163,   1.524)  ( 0.02,  0.08,  0.00)
    strbnd  ( -5.562,  -3.003,  -0.620)  ( -5.562,  -3.004,  -0.620)  ( 0.00,  0.02,  0.00)
    torsion (  0.209,  -0.213,  -0.135)  (  0.209,  -0.213,  -0.134)  ( 0.00,  0.00,  0.01)
    oop     (  0.102,  -0.210,  -0.295)  (  0.087,  -0.177,  -0.256)  ( 0.15,  0.71,  1.15)
    vdw     ( -9.274,  -5.085,  -0.061)  ( -9.274,  -5.085,  -0.061)  ( 0.00,  0.00,  0.00)
    electro (  0.268,  -0.021,   0.047)  (  0.268,  -0.021,   0.047)  ( 0.00,  0.00,  0.00)
 2       ( -0.091,  -0.060,  -0.056)  ( -0.090,  -0.044,  -0.030)  ( 0.01,  0.09,  0.14)
    bond    (  5.859,  -4.939,   3.180)  (  5.864,  -4.931,   3.182)  ( 0.09,  0.16,  0.04)
    angle   ( -5.582,   0.865,  -2.937)  ( -5.580,   0.867,  -2.937)  ( 0.03,  0.13,  0.01)
    strbnd  (  3.439,  -2.665,   1.582)  (  3.438,  -2.666,   1.582)  ( 0.02,  0.03,  0.00)
    torsion ( -0.645,   0.747,   3.059)  ( -0.645,   0.747,   3.060)  ( 0.01,  0.01,  0.04)
    oop     (  0.034,  -0.042,  -0.149)  (  0.029,  -0.036,  -0.126)  ( 0.02,  0.03,  0.34)
    vdw     ( -3.802,   4.778,  -4.508)  ( -3.801,   4.778,  -4.508)  ( 0.01,  0.00,  0.00)
    electro (  0.606,   1.196,  -0.282)  (  0.606,   1.196,  -0.282)  ( 0.00,  0.00,  0.00)
 3       (  0.200,  -0.018,  -0.182)  (  0.188,  -0.004,   0.007)  ( 0.25,  0.02,  3.44)
    bond    (  8.537,   8.504,   0.695)  (  8.543,   8.515,   0.695)  ( 0.06,  0.14,  0.00)
    angle   (-28.587,  -3.313,  -5.216)  (-28.584,  -3.311,  -5.216)  ( 0.01,  0.05,  0.00)
    strbnd  ( 13.895,   1.569,   1.674)  ( 13.894,   1.567,   1.674)  ( 0.01,  0.12,  0.00)
    torsion ( -0.070,   0.291,  -0.883)  ( -0.070,   0.291,  -0.883)  ( 0.00,  0.00,  0.04)
    oop     (  0.085,  -0.003,  -0.855)  (  0.066,  -0.001,  -0.666)  ( 0.16,  0.00, 16.12)
    vdw     ( -3.152,  -1.167,  -0.567)  ( -3.152,  -1.167,  -0.567)  ( 0.00,  0.00,  0.00)
    electro (  9.492,  -5.898,   4.971)  (  9.492,  -5.898,   4.971)  ( 0.00,  0.00,  0.00)
 4       (  0.068,   0.192,   0.159)  (  0.112,   0.118,  -0.033)  ( 0.30,  1.41,  3.04)
    bond    (  5.784,   6.960,  -1.839)  (  5.788,   6.969,  -1.837)  ( 0.07,  0.13,  0.11)
    angle   (  0.982, -10.064,   4.762)  (  0.983, -10.062,   4.762)  ( 0.17,  0.02,  0.00)
    strbnd  (  2.113,   6.313,  -2.390)  (  2.113,   6.312,  -2.391)  ( 0.01,  0.02,  0.01)
    torsion (  0.211,  -0.053,  -0.431)  (  0.211,  -0.052,  -0.430)  ( 0.00,  0.00,  0.02)
    oop     ( -0.201,   0.426,   1.012)  ( -0.162,   0.343,   0.818)  ( 0.77,  3.54, 19.20)
    vdw     ( -0.575,  -5.329,   2.147)  ( -0.575,  -5.329,   2.147)  ( 0.00,  0.00,  0.00)
    electro ( -8.246,   1.938,  -3.102)  ( -8.246,   1.938,  -3.102)  ( 0.00,  0.00,  0.00)
 5       ( -0.011,  -0.146,  -0.052)  ( -0.027,  -0.099,   0.037)  ( 0.02,  0.68,  0.47)
    bond    (  0.169,   6.053,  -2.652)  (  0.169,   6.060,  -2.651)  ( 0.00,  0.13,  0.06)
    angle   ( -0.570,  -0.029,  -0.102)  ( -0.569,  -0.029,  -0.102)  ( 0.04,  0.00,  0.00)
    strbnd  ( -0.449,  -0.737,   0.244)  ( -0.449,  -0.737,   0.244)  ( 0.00,  0.00,  0.00)
    torsion (  0.351,  -0.798,  -1.802)  (  0.351,  -0.798,  -1.802)  ( 0.00,  0.00,  0.00)
    oop     (  0.063,  -0.144,  -0.325)  (  0.046,  -0.105,  -0.237)  ( 0.11,  0.56,  2.84)
    vdw     ( -5.042,  -4.784,   2.331)  ( -5.041,  -4.784,   2.331)  ( 0.00,  0.00,  0.00)
    electro (  5.466,   0.293,   2.253)  (  5.466,   0.293,   2.253)  ( 0.00,  0.00,  0.00)
 6       (  0.048,  -0.085,  -0.062)  (  0.043,  -0.053,   0.006)  ( 0.02,  0.27,  0.42)
    bond    ( -0.057,   4.697,  -1.723)  ( -0.052,   4.701,  -1.723)  ( 0.03,  0.10,  0.04)
    angle   (  6.722,   9.815,  -3.104)  (  6.724,   9.816,  -3.104)  ( 0.03,  0.02,  0.00)
    strbnd  ( -8.096,  -2.087,  -0.459)  ( -8.096,  -2.087,  -0.459)  ( 0.00,  0.00,  0.00)
    torsion ( -0.110,   0.259,   0.519)  ( -0.110,   0.259,   0.520)  ( 0.00,  0.00,  0.06)
    oop     (  0.071,  -0.161,  -0.404)  (  0.059,  -0.135,  -0.338)  ( 0.08,  0.41,  2.65)
    vdw     (  1.049, -12.118,   4.931)  (  1.049, -12.118,   4.931)  ( 0.03,  0.00,  0.00)
    electro (  0.469,  -0.490,   0.178)  (  0.469,  -0.490,   0.178)  ( 0.00,  0.00,  0.00)
 7       (  0.011,   0.004,  -0.004)  (  0.016,   0.016,   0.019)  ( 0.01,  0.01,  0.01)
    bond    (  3.349,  -0.633,   0.565)  (  3.354,  -0.629,   0.566)  ( 0.16,  0.29,  0.05)
    angle   ( -2.010,  -5.848,   0.374)  ( -2.008,  -5.846,   0.374)  ( 0.11,  0.04,  0.01)
    strbnd  ( -0.379,  -1.736,   0.181)  ( -0.380,  -1.737,   0.181)  ( 0.03,  0.03,  0.00)
    torsion ( -0.325,   0.273,   1.507)  ( -0.325,   0.273,   1.508)  ( 0.00,  0.00,  0.09)
    oop     (  0.017,  -0.034,  -0.134)  (  0.015,  -0.028,  -0.113)  ( 0.00,  0.02,  0.29)
    vdw     ( -0.926,   8.721,  -2.733)  ( -0.925,   8.721,  -2.733)  ( 0.03,  0.00,  0.00)
    electro (  0.284,  -0.738,   0.237)  (  0.284,  -0.738,   0.237)  ( 0.00,  0.00,  0.00)
 8       ( -0.038,  -0.007,  -0.024)  ( -0.033,   0.005,  -0.006)  ( 0.02,  0.01,  0.04)
    bond    ( -2.335,  12.424,  -4.470)  ( -2.330,  12.429,  -4.470)  ( 0.23,  0.04,  0.02)
    angle   ( -1.627,  -0.904,   0.021)  ( -1.626,  -0.902,   0.021)  ( 0.10,  0.16,  0.00)
    strbnd  ( -5.052,  -1.205,  -0.263)  ( -5.052,  -1.206,  -0.263)  ( 0.00,  0.01,  0.00)
    torsion ( -0.060,   0.134,   0.425)  ( -0.060,   0.134,   0.426)  ( 0.00,  0.00,  0.05)
    oop     (  0.013,  -0.035,  -0.105)  (  0.011,  -0.030,  -0.089)  ( 0.00,  0.02,  0.17)
    vdw     (  6.553, -10.647,   4.170)  (  6.553, -10.647,   4.170)  ( 0.00,  0.00,  0.00)
    electro (  2.471,   0.227,   0.198)  (  2.471,   0.227,   0.198)  ( 0.00,  0.00,  0.00)
 9       (  0.068,   0.165,   0.082)  (  0.095,   0.134,  -0.029)  ( 0.18,  0.52,  0.90)
    bond    (  7.584,  -6.522,   1.280)  (  7.590,  -6.517,   1.281)  ( 0.08,  0.07,  0.06)
    angle   ( -6.868,  -3.074,   6.963)  ( -6.866,  -3.072,   6.964)  ( 0.03,  0.07,  0.01)
    strbnd  ( -1.384,   3.697,  -1.135)  ( -1.385,   3.696,  -1.136)  ( 0.05,  0.02,  0.01)
    torsion (  0.914,  -1.383,  -5.636)  (  0.914,  -1.383,  -5.635)  ( 0.00,  0.01,  0.01)
    oop     ( -0.133,   0.235,   0.708)  ( -0.114,   0.197,   0.595)  ( 0.26,  0.89,  7.98)
    vdw     ( -1.168,   4.392,  -3.048)  ( -1.168,   4.393,  -3.048)  ( 0.00,  0.00,  0.00)
    electro (  1.123,   2.820,   0.950)  (  1.123,   2.820,   0.950)  ( 0.00,  0.00,  0.00)
10       ( -0.080,  -0.040,  -0.026)  ( -0.075,  -0.027,  -0.010)  ( 0.04,  0.05,  0.04)
    bond    (  2.250, -21.552,   7.812)  (  2.255, -21.547,   7.813)  ( 0.22,  0.02,  0.01)
    angle   (  0.157,  10.838,  -3.791)  (  0.158,  10.840,  -3.791)  ( 0.02,  0.02,  0.01)
    strbnd  ( -4.774,   3.240,  -1.394)  ( -4.774,   3.239,  -1.394)  ( 0.00,  0.01,  0.00)
    torsion ( -0.412,   1.059,   3.327)  ( -0.412,   1.059,   3.328)  ( 0.00,  0.02,  0.04)
    oop     (  0.001,  -0.020,  -0.019)  ( -0.001,  -0.013,  -0.005)  ( 0.00,  0.01,  0.03)
    vdw     (  1.632,   4.936,  -5.898)  (  1.632,   4.937,  -5.898)  ( 0.01,  0.01,  0.00)
    electro (  1.066,   1.459,  -0.063)  (  1.066,   1.459,  -0.063)  ( 0.00,  0.00,  0.00)
11       (  0.070,  -0.162,  -0.073)  (  0.026,  -0.063,   0.018)  ( 0.31,  1.62,  0.67)
    bond    (-16.382,  -5.258,  -0.908)  (-16.377,  -5.253,  -0.907)  ( 0.03,  0.09,  0.07)
    angle   (-11.115,   1.090,   2.569)  (-11.112,   1.092,   2.569)  ( 0.02,  0.19,  0.01)
    strbnd  ( 22.133,   1.950,   2.757)  ( 22.132,   1.949,   2.757)  ( 0.00,  0.03,  0.00)
    torsion ( -0.093,   0.026,  -1.627)  ( -0.093,   0.026,  -1.626)  ( 0.00,  0.00,  0.06)
    oop     (  0.396,  -0.643,  -0.208)  (  0.345,  -0.550,  -0.119)  ( 2.03,  5.99,  1.84)
    vdw     (  4.671,   2.284,  -2.768)  (  4.672,   2.284,  -2.768)  ( 0.00,  0.00,  0.00)
    electro (  0.459,   0.390,   0.111)  (  0.459,   0.390,   0.111)  ( 0.00,  0.00,  0.00)
12       ( -0.002,   0.033,   0.022)  (  0.004,   0.024,  -0.009)  ( 0.00,  0.03,  0.07)
    bond    ( -0.083,  -1.551,   0.585)  ( -0.083,  -1.548,   0.586)  ( 0.00,  0.21,  0.03)
    angle   ( -2.409,   0.039,  -0.237)  ( -2.408,   0.039,  -0.237)  ( 0.03,  0.00,  0.00)
    strbnd  (  0.317,   2.635,  -1.018)  (  0.317,   2.635,  -1.018)  ( 0.00,  0.00,  0.00)
    torsion ( -0.335,   0.971,   2.518)  ( -0.335,   0.971,   2.518)  ( 0.00,  0.00,  0.01)
    oop     ( -0.020,   0.060,   0.155)  ( -0.016,   0.048,   0.124)  ( 0.01,  0.07,  0.49)
    vdw     (  1.947,  -0.339,  -2.146)  (  1.947,  -0.339,  -2.146)  ( 0.01,  0.00,  0.00)
    electro (  0.582,  -1.781,   0.164)  (  0.582,  -1.781,   0.164)  ( 0.00,  0.00,  0.00)
13       ( -0.131,   0.117,   0.103)  ( -0.105,   0.077,  -0.036)  ( 0.34,  0.46,  1.44)
    bond    (-10.578,  16.134,  -6.570)  (-10.572,  16.139,  -6.569)  ( 0.06,  0.03,  0.01)
    angle   (  3.774,  -9.877,   3.575)  (  3.776,  -9.875,   3.575)  ( 0.06,  0.02,  0.00)
    strbnd  (  6.607,   8.014,  -1.786)  (  6.607,   8.014,  -1.786)  ( 0.00,  0.00,  0.00)
    torsion (  0.139,  -0.606,  -1.888)  (  0.139,  -0.606,  -1.887)  ( 0.00,  0.01,  0.06)
    oop     ( -0.104,   0.267,   0.810)  ( -0.086,   0.220,   0.669)  ( 0.18,  1.24, 11.46)
    vdw     (  2.473, -10.532,   5.124)  (  2.473, -10.532,   5.124)  ( 0.01,  0.00,  0.00)
    electro ( -2.443,  -3.284,   0.838)  ( -2.443,  -3.284,   0.838)  ( 0.00,  0.00,  0.00)
14       ( -0.003,   0.005,   0.001)  ( -0.002,   0.007,  -0.002)  ( 0.00,  0.00,  0.00)
    bond    (  0.027,   1.931,  -0.640)  (  0.027,   1.934,  -0.640)  ( 0.00,  0.18,  0.02)
    angle   ( -2.454,  -0.061,  -0.290)  ( -2.454,  -0.061,  -0.290)  ( 0.03,  0.00,  0.00)
    strbnd  ( -0.157,  -0.599,   0.177)  ( -0.157,  -0.599,   0.177)  ( 0.00,  0.00,  0.00)
    torsion (  0.008,  -0.021,  -0.062)  (  0.008,  -0.021,  -0.062)  ( 0.00,  0.00,  0.00)
    oop     ( -0.002,   0.005,   0.014)  ( -0.001,   0.004,   0.011)  ( 0.00,  0.00,  0.00)
    vdw     (  3.894,  -1.054,   0.744)  (  3.894,  -1.054,   0.744)  ( 0.00,  0.00,  0.00)
    electro ( -1.319,  -0.195,   0.058)  ( -1.319,  -0.195,   0.058)  ( 0.00,  0.00,  0.00)
15       (  0.084,  -0.049,   0.001)  (  0.085,  -0.040,   0.024)  ( 0.00,  0.05,  0.00)
    bond    (  0.221,  -0.141,   0.077)  (  0.224,  -0.139,   0.077)  ( 0.07,  0.02,  0.00)
    angle   (  4.781,   6.809,  -1.605)  (  4.781,   6.810,  -1.605)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.896,   1.110,  -0.480)  ( -0.896,   1.110,  -0.480)  ( 0.00,  0.00,  0.00)
    torsion (  0.065,  -0.159,  -0.479)  (  0.065,  -0.159,  -0.479)  ( 0.00,  0.00,  0.01)
    oop     (  0.019,  -0.046,  -0.139)  (  0.016,  -0.039,  -0.116)  ( 0.01,  0.04,  0.32)
    vdw     ( -4.637,  -7.161,   2.713)  ( -4.637,  -7.161,   2.713)  ( 0.00,  0.00,  0.00)
    electro (  0.531,  -0.461,  -0.087)  (  0.531,  -0.461,  -0.087)  ( 0.00,  0.00,  0.00)
16       ( -0.036,   0.120,  -0.185)  ( -0.005,   0.018,   0.005)  ( 0.11,  1.23,  3.52)
    bond    ( 11.932,   3.001,  15.852)  ( 11.937,   3.005,  15.854)  ( 0.04,  0.13,  0.01)
    angle   ( 23.478,  14.321,  -5.626)  ( 23.480,  14.322,  -5.625)  ( 0.01,  0.01,  0.02)
    strbnd  (-17.338, -10.628,  -0.306)  (-17.339, -10.629,  -0.306)  ( 0.01,  0.01,  0.01)
    torsion (  2.457,  -3.717,  -2.036)  (  2.457,  -3.717,  -2.036)  ( 0.00,  0.00,  0.01)
    oop     ( -0.175,   1.180,  -2.156)  ( -0.150,   1.073,  -1.968)  ( 0.43,  9.08,  8.71)
    vdw     ( -3.584,  -3.576,   0.274)  ( -3.584,  -3.576,   0.274)  ( 0.00,  0.00,  0.00)
    electro (-16.806,  -0.461,  -6.188)  (-16.806,  -0.461,  -6.188)  ( 0.00,  0.00,  0.00)
17       ( -0.042,  -0.053,   0.059)  ( -0.044,  -0.034,   0.097)  ( 0.01,  0.10,  0.23)
    bond    ( -1.611,  -0.017,   3.957)  ( -1.609,  -0.012,   3.962)  ( 0.12,  0.01,  0.12)
    angle   (  6.180,   1.067,  -5.100)  (  6.182,   1.069,  -5.098)  ( 0.03,  0.17,  0.04)
    strbnd  (  0.100,  -7.392,   3.328)  (  0.099,  -7.392,   3.327)  ( 0.00,  0.01,  0.03)
    torsion (  0.098,  -0.377,   0.788)  (  0.098,  -0.377,   0.788)  ( 0.00,  0.00,  0.00)
    oop     (  0.041,  -0.083,  -0.211)  (  0.035,  -0.070,  -0.179)  ( 0.02,  0.10,  0.68)
    vdw     ( -4.964,   6.311,  -2.568)  ( -4.963,   6.311,  -2.568)  ( 0.00,  0.00,  0.00)
    electro (  0.114,   0.437,  -0.136)  (  0.114,   0.437,  -0.136)  ( 0.00,  0.00,  0.00)
18       (  0.022,  -0.013,   0.018)  (  0.025,  -0.012,   0.016)  ( 0.01,  0.00,  0.00)
    bond    (  2.427,  -1.578,   1.180)  (  2.429,  -1.577,   1.181)  ( 0.09,  0.06,  0.04)
    angle   (  0.938,   1.300,  -0.193)  (  0.938,   1.300,  -0.193)  ( 0.02,  0.03,  0.00)
    strbnd  (  0.253,   0.443,  -0.086)  (  0.253,   0.443,  -0.086)  ( 0.00,  0.00,  0.00)
    torsion ( -0.194,   0.249,   0.730)  ( -0.194,   0.249,   0.731)  ( 0.00,  0.00,  0.02)
    oop     ( -0.004,   0.005,   0.016)  ( -0.004,   0.005,   0.013)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.726,   0.545,  -1.869)  ( -0.726,   0.545,  -1.869)  ( 0.01,  0.01,  0.00)
    electro ( -2.672,  -0.977,   0.240)  ( -2.672,  -0.977,   0.240)  ( 0.00,  0.00,  0.00)
19       (  0.012,  -0.001,   0.074)  (  0.016,   0.044,   0.026)  ( 0.00,  0.01,  0.35)
    bond    ( 14.557,  -7.075, -16.796)  ( 14.561,  -7.071, -16.792)  ( 0.03,  0.06,  0.03)
    angle   ( -6.287,   1.336,   9.984)  ( -6.284,   1.338,   9.986)  ( 0.04,  0.15,  0.02)
    strbnd  ( -1.105,  -2.672,   1.853)  ( -1.106,  -2.672,   1.852)  ( 0.07,  0.04,  0.04)
    torsion ( -2.492,   2.882,  -3.676)  ( -2.492,   2.882,  -3.676)  ( 0.00,  0.00,  0.00)
    oop     (  0.033,  -0.539,   0.714)  (  0.032,  -0.499,   0.661)  ( 0.01,  2.16,  3.80)
    vdw     ( -0.883,   6.505,   5.249)  ( -0.883,   6.505,   5.250)  ( 0.01,  0.00,  0.00)
    electro ( -3.811,  -0.439,   2.744)  ( -3.811,  -0.439,   2.744)  ( 0.00,  0.00,  0.00)
20       ( -0.013,  -0.015,   0.097)  (  0.003,   0.008,   0.012)  ( 0.02,  0.03,  0.82)
    bond    ( -3.175,  21.247,  -4.289)  ( -3.171,  21.251,  -4.285)  ( 0.12,  0.02,  0.11)
    angle   ( -1.211, -12.477,   2.194)  ( -1.209, -12.475,   2.196)  ( 0.17,  0.02,  0.08)
    strbnd  ( -3.415,  -1.229,   2.715)  ( -3.416,  -1.230,   2.715)  ( 0.04,  0.07,  0.01)
    torsion ( -0.125,   0.194,   3.424)  ( -0.125,   0.195,   3.424)  ( 0.00,  0.00,  0.00)
    oop     ( -0.155,  -0.246,   0.892)  ( -0.144,  -0.228,   0.801)  ( 0.18,  0.43,  8.12)
    vdw     (  9.608,  -0.387,  -5.167)  (  9.608,  -0.387,  -5.167)  ( 0.00,  0.01,  0.00)
    electro ( -1.539,  -7.118,   0.328)  ( -1.539,  -7.118,   0.328)  ( 0.00,  0.00,  0.00)
21       ( -0.002,  -0.008,  -0.022)  (  0.000,  -0.007,  -0.021)  ( 0.00,  0.00,  0.00)
    bond    (  1.613,  -1.085,   0.142)  (  1.615,  -1.084,   0.142)  ( 0.14,  0.10,  0.00)
    angle   ( -3.259,  -5.157,  -2.297)  ( -3.259,  -5.157,  -2.296)  ( 0.01,  0.01,  0.02)
    strbnd  ( -0.614,   0.250,  -1.435)  ( -0.614,   0.250,  -1.435)  ( 0.00,  0.00,  0.00)
    torsion (  0.085,   0.141,   0.107)  (  0.085,   0.141,   0.107)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.173,   5.843,   3.461)  (  2.173,   5.843,   3.461)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (  0.001,   0.003,  -0.029)  (  0.002,   0.004,  -0.025)  ( 0.00,  0.00,  0.01)
    bond    ( -0.285,   1.036,  -3.315)  ( -0.285,   1.036,  -3.312)  ( 0.00,  0.03,  0.09)
    angle   (  0.181,  -1.068,  -0.350)  (  0.182,  -1.067,  -0.350)  ( 0.01,  0.05,  0.00)
    strbnd  (  0.973,  -1.118,   0.103)  (  0.973,  -1.118,   0.103)  ( 0.00,  0.00,  0.00)
    torsion (  0.351,  -0.744,  -0.263)  (  0.351,  -0.744,  -0.263)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.220,   1.896,   3.796)  ( -1.220,   1.896,   3.796)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (  0.003,  -0.104,  -0.010)  (  0.007,  -0.098,  -0.004)  ( 0.00,  0.06,  0.01)
    bond    ( -3.127, -17.812,   3.460)  ( -3.123, -17.808,   3.465)  ( 0.13,  0.02,  0.13)
    angle   (  0.202,   7.188,  -7.171)  (  0.204,   7.190,  -7.169)  ( 0.04,  0.03,  0.02)
    strbnd  (  3.369,  -1.380,  -2.585)  (  3.367,  -1.380,  -2.585)  ( 0.04,  0.05,  0.01)
    torsion ( -0.244,   1.380,   2.916)  ( -0.244,   1.381,   2.917)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.952,   7.510,   2.573)  ( -0.952,   7.510,   2.573)  ( 0.00,  0.00,  0.00)
    electro (  0.755,   3.009,   0.796)  (  0.755,   3.009,   0.796)  ( 0.00,  0.00,  0.00)
24       (  0.007,  -0.018,  -0.003)  (  0.008,  -0.016,  -0.001)  ( 0.00,  0.00,  0.00)
    bond    (  0.060,   1.792,   1.597)  (  0.060,   1.794,   1.599)  ( 0.00,  0.10,  0.09)
    angle   ( -3.575,  -1.364,   1.663)  ( -3.575,  -1.363,   1.664)  ( 0.02,  0.02,  0.02)
    strbnd  ( -0.521,   0.527,  -1.117)  ( -0.521,   0.527,  -1.117)  ( 0.00,  0.00,  0.00)
    torsion (  0.187,  -0.049,   0.048)  (  0.187,  -0.049,   0.048)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.856,  -0.925,  -2.194)  (  3.857,  -0.925,  -2.194)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  0.066,  -0.058,  -0.075)  (  0.072,  -0.052,  -0.069)  ( 0.04,  0.03,  0.04)
    bond    (-13.633,   0.941,  12.416)  (-13.629,   0.945,  12.421)  ( 0.03,  0.39,  0.04)
    angle   (  2.350,   2.416,  -9.408)  (  2.353,   2.418,  -9.406)  ( 0.09,  0.08,  0.02)
    strbnd  (  0.055,   4.163,  -0.501)  (  0.054,   4.162,  -0.502)  ( 0.00,  0.03,  0.04)
    torsion (  2.065,  -2.248,   1.183)  (  2.065,  -2.248,   1.183)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.223,  -3.991,  -2.667)  (  6.223,  -3.991,  -2.667)  ( 0.00,  0.00,  0.00)
    electro (  3.006,  -1.338,  -1.097)  (  3.006,  -1.338,  -1.097)  ( 0.00,  0.00,  0.00)
26       ( -0.004,  -0.009,   0.017)  ( -0.004,  -0.008,   0.020)  ( 0.00,  0.00,  0.01)
    bond    ( -0.508,   1.114,  -2.671)  ( -0.508,   1.115,  -2.668)  ( 0.01,  0.04,  0.10)
    angle   ( -3.386,  -1.138,   0.169)  ( -3.386,  -1.138,   0.170)  ( 0.02,  0.04,  0.00)
    strbnd  ( -0.285,   1.027,   0.757)  ( -0.285,   1.027,   0.757)  ( 0.00,  0.00,  0.00)
    torsion ( -0.469,   0.506,   0.301)  ( -0.469,   0.506,   0.301)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.645,  -1.519,   1.461)  (  4.645,  -1.518,   1.461)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( -0.053,   0.087,   0.044)  ( -0.047,   0.093,   0.047)  ( 0.03,  0.05,  0.01)
    bond    (-15.148,  -5.941, -10.039)  (-15.143,  -5.937, -10.037)  ( 0.03,  0.08,  0.02)
    angle   ( -5.200,  -8.059,   8.744)  ( -5.198,  -8.058,   8.745)  ( 0.03,  0.02,  0.02)
    strbnd  ( -1.543,  -1.202,   1.549)  ( -1.544,  -1.203,   1.548)  ( 0.04,  0.04,  0.03)
    torsion ( -0.831,   0.963,  -3.227)  ( -0.831,   0.963,  -3.226)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.577,   4.313,  -0.037)  (  6.577,   4.313,  -0.037)  ( 0.00,  0.00,  0.00)
    electro ( 16.093,  10.014,   3.054)  ( 16.093,  10.014,   3.054)  ( 0.00,  0.00,  0.00)
28       (  0.001,   0.014,  -0.042)  (  0.002,   0.015,  -0.039)  ( 0.00,  0.00,  0.01)
    bond    (  0.463,  -1.202,   2.694)  (  0.464,  -1.202,   2.697)  ( 0.00,  0.05,  0.10)
    angle   (  0.035,  -0.321,  -0.149)  (  0.036,  -0.320,  -0.149)  ( 0.00,  0.01,  0.00)
    strbnd  ( -0.222,  -0.567,  -1.132)  ( -0.222,  -0.567,  -1.132)  ( 0.00,  0.00,  0.00)
    torsion (  0.438,  -1.586,  -0.782)  (  0.438,  -1.586,  -0.782)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.714,   3.690,  -0.674)  ( -0.714,   3.690,  -0.674)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (  0.008,   0.030,   0.008)  (  0.008,   0.032,   0.009)  ( 0.00,  0.01,  0.00)
    bond    ( -0.087,  -1.217,  -1.051)  ( -0.087,  -1.215,  -1.050)  ( 0.00,  0.16,  0.14)
    angle   ( -0.252,   0.112,  -0.110)  ( -0.251,   0.113,  -0.110)  ( 0.02,  0.00,  0.00)
    strbnd  (  0.115,   0.045,   1.331)  (  0.115,   0.045,   1.331)  ( 0.00,  0.00,  0.00)
    torsion ( -0.210,   0.236,  -0.255)  ( -0.210,   0.236,  -0.255)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.441,   0.855,   0.093)  (  0.441,   0.855,   0.093)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -0.057,   0.017,   0.002)  ( -0.054,   0.018,   0.002)  ( 0.02,  0.00,  0.00)
    bond    ( -1.435,   0.851,  -0.093)  ( -1.433,   0.852,  -0.093)  ( 0.17,  0.08,  0.00)
    angle   ( -0.122,  -0.244,  -0.343)  ( -0.122,  -0.243,  -0.342)  ( 0.00,  0.01,  0.02)
    strbnd  (  0.598,  -0.582,   1.034)  (  0.598,  -0.582,   1.034)  ( 0.00,  0.00,  0.00)
    torsion ( -0.027,  -0.078,  -0.298)  ( -0.027,  -0.078,  -0.297)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.930,   0.070,  -0.299)  (  0.930,   0.070,  -0.299)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (  0.005,  -0.020,   0.028)  (  0.006,  -0.019,   0.031)  ( 0.00,  0.00,  0.01)
    bond    (  0.312,  -0.902,   2.849)  (  0.312,  -0.902,   2.852)  ( 0.00,  0.03,  0.11)
    angle   ( -0.502,   0.107,   0.089)  ( -0.501,   0.107,   0.089)  ( 0.03,  0.01,  0.00)
    strbnd  ( -0.940,   0.677,  -0.469)  ( -0.940,   0.677,  -0.469)  ( 0.00,  0.00,  0.00)
    torsion ( -1.235,   1.160,   0.502)  ( -1.235,   1.160,   0.502)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.370,  -1.062,  -2.942)  (  2.370,  -1.062,  -2.942)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (  0.003,  -0.016,  -0.010)  (  0.005,  -0.014,  -0.009)  ( 0.00,  0.00,  0.00)
    bond    ( -0.021,  -0.018,   0.009)  ( -0.019,  -0.016,   0.009)  ( 0.00,  0.00,  0.00)
    angle   ( -0.160,   0.222,   0.062)  ( -0.160,   0.222,   0.062)  ( 0.00,  0.01,  0.00)
    strbnd  ( -0.521,   0.030,  -0.937)  ( -0.521,   0.030,  -0.938)  ( 0.00,  0.00,  0.01)
    torsion (  0.592,  -0.069,   1.057)  (  0.592,  -0.069,   1.057)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.902,   0.369,   0.423)  (  0.902,   0.369,   0.423)  ( 0.00,  0.00,  0.00)
    electro ( -0.789,  -0.550,  -0.623)  ( -0.789,  -0.550,  -0.623)  ( 0.00,  0.00,  0.00)
33       ( -0.030,  -0.053,   0.105)  ( -0.016,  -0.048,  -0.003)  ( 0.04,  0.03,  1.14)
    bond    ( -1.616,  -9.765,   0.189)  ( -1.616,  -9.756,   0.189)  ( 0.01,  0.10,  0.00)
    angle   ( 20.636,  -3.367,   2.623)  ( 20.637,  -3.367,   2.623)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.680,   2.049,   0.006)  (  0.680,   2.049,   0.006)  ( 0.00,  0.00,  0.00)
    torsion ( -0.339,   0.113,   2.931)  ( -0.339,   0.113,   2.931)  ( 0.00,  0.00,  0.00)
    oop     ( -0.045,   0.015,   0.377)  ( -0.032,   0.011,   0.269)  ( 0.06,  0.01,  4.08)
    vdw     ( -3.314,  -1.163,  -1.055)  ( -3.314,  -1.163,  -1.055)  ( 0.00,  0.00,  0.00)
    electro (-16.031,  12.066,  -4.968)  (-16.031,  12.066,  -4.968)  ( 0.00,  0.00,  0.00)
34       (  0.021,   0.161,   0.031)  (  0.032,   0.164,  -0.011)  ( 0.02,  0.05,  0.13)
    bond    ( -3.927,   2.786,  -0.594)  ( -3.921,   2.789,  -0.594)  ( 0.15,  0.13,  0.00)
    angle   ( 16.132,  -2.853,   2.371)  ( 16.132,  -2.852,   2.372)  ( 0.00,  0.05,  0.01)
    strbnd  ( -0.845,   3.072,  -0.258)  ( -0.845,   3.072,  -0.258)  ( 0.00,  0.01,  0.00)
    torsion (  0.144,  -0.049,  -1.174)  (  0.144,  -0.049,  -1.173)  ( 0.00,  0.00,  0.02)
    oop     ( -0.036,   0.013,   0.294)  ( -0.031,   0.011,   0.252)  ( 0.02,  0.00,  1.24)
    vdw     (-11.558,  -6.965,   1.339)  (-11.558,  -6.965,   1.339)  ( 0.00,  0.00,  0.00)
    electro (  0.110,   4.158,  -1.948)  (  0.110,   4.158,  -1.948)  ( 0.00,  0.00,  0.00)
35       ( -0.101,  -0.084,  -0.013)  ( -0.097,  -0.081,  -0.013)  ( 0.04,  0.02,  0.00)
    bond    (  0.234,   0.187,   0.015)  (  0.238,   0.189,   0.015)  ( 0.08,  0.04,  0.00)
    angle   ( -9.135,  11.640,  -1.684)  ( -9.135,  11.640,  -1.684)  ( 0.00,  0.00,  0.00)
    strbnd  ( -1.252,  -0.773,  -0.092)  ( -1.252,  -0.773,  -0.092)  ( 0.00,  0.00,  0.00)
    torsion (  0.050,  -0.027,  -0.452)  (  0.050,  -0.027,  -0.452)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.204,   0.155,  -0.034)  ( -0.204,   0.155,  -0.034)  ( 0.00,  0.00,  0.00)
    electro ( 10.207, -11.265,   2.235)  ( 10.207, -11.265,   2.235)  ( 0.00,  0.00,  0.00)
36       (  0.023,  -0.029,  -0.012)  (  0.030,  -0.025,  -0.007)  ( 0.01,  0.01,  0.01)
    bond    (  1.340,  -4.011,  -2.272)  (  1.346,  -4.008,  -2.268)  ( 0.45,  0.07,  0.18)
    angle   ( -1.289,   0.664,   1.982)  ( -1.288,   0.666,   1.984)  ( 0.08,  0.10,  0.10)
    strbnd  (  0.232,  -0.792,   0.487)  (  0.231,  -0.793,   0.486)  ( 0.02,  0.03,  0.03)
    torsion ( -1.155,   0.195,  -0.282)  ( -1.155,   0.195,  -0.282)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.717,   5.471,   0.093)  (  0.717,   5.471,   0.093)  ( 0.00,  0.00,  0.00)
    electro (  0.179,  -1.556,  -0.020)  (  0.179,  -1.556,  -0.020)  ( 0.00,  0.00,  0.00)
37       (  0.029,   0.043,  -0.047)  (  0.034,   0.047,  -0.041)  ( 0.01,  0.02,  0.03)
    bond    (  1.435,  -3.700,  -1.718)  (  1.438,  -3.696,  -1.713)  ( 0.27,  0.10,  0.31)
    angle   (  0.328,   0.545,   0.556)  (  0.329,   0.546,   0.558)  ( 0.03,  0.08,  0.12)
    strbnd  ( -0.069,  -0.300,   0.440)  ( -0.069,  -0.301,   0.439)  ( 0.00,  0.01,  0.04)
    torsion (  0.956,   0.601,   0.479)  (  0.956,   0.601,   0.479)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.832,   4.136,   0.355)  ( -2.832,   4.136,   0.355)  ( 0.00,  0.00,  0.00)
    electro (  0.210,  -1.238,  -0.159)  (  0.210,  -1.238,  -0.159)  ( 0.00,  0.00,  0.00)
38       ( -0.013,   0.017,  -0.005)  ( -0.012,   0.019,  -0.003)  ( 0.00,  0.00,  0.00)
    bond    (  0.435,  -0.767,   0.899)  (  0.435,  -0.766,   0.901)  ( 0.02,  0.11,  0.17)
    angle   (  0.496,   0.229,  -0.045)  (  0.496,   0.229,  -0.045)  ( 0.03,  0.00,  0.00)
    strbnd  ( -0.157,   0.213,  -0.446)  ( -0.157,   0.213,  -0.446)  ( 0.00,  0.00,  0.00)
    torsion (  0.563,  -0.012,  -0.282)  (  0.563,  -0.012,  -0.283)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.724,   0.200,   0.015)  ( -0.724,   0.200,   0.015)  ( 0.00,  0.00,  0.00)
    electro ( -0.625,   0.154,  -0.145)  ( -0.625,   0.154,  -0.145)  ( 0.00,  0.00,  0.00)
39       ( -0.005,  -0.008,   0.012)  ( -0.003,  -0.007,   0.014)  ( 0.00,  0.00,  0.00)
    bond    (  0.863,   0.325,  -0.866)  (  0.864,   0.325,  -0.865)  ( 0.15,  0.01,  0.15)
    angle   (  0.432,  -1.789,  -0.241)  (  0.433,  -1.789,  -0.241)  ( 0.01,  0.02,  0.01)
    strbnd  ( -0.148,  -0.179,   0.111)  ( -0.148,  -0.179,   0.111)  ( 0.00,  0.00,  0.00)
    torsion (  0.500,  -0.248,   0.406)  (  0.500,  -0.248,   0.406)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.310,   2.013,   0.436)  ( -1.310,   2.013,   0.436)  ( 0.00,  0.00,  0.00)
    electro ( -0.342,  -0.130,   0.167)  ( -0.342,  -0.130,   0.167)  ( 0.00,  0.00,  0.00)
40       ( -0.029,  -0.039,   0.034)  ( -0.028,  -0.036,   0.035)  ( 0.00,  0.01,  0.00)
    bond    ( -0.592,  -0.813,   0.455)  ( -0.591,  -0.811,   0.456)  ( 0.06,  0.16,  0.03)
    angle   ( -0.349,   0.064,  -0.339)  ( -0.348,   0.064,  -0.339)  ( 0.01,  0.00,  0.02)
    strbnd  (  0.254,   0.177,  -0.194)  (  0.254,   0.177,  -0.194)  ( 0.00,  0.00,  0.00)
    torsion ( -0.231,  -0.135,  -0.540)  ( -0.231,  -0.135,  -0.540)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.504,   0.376,   0.413)  (  0.504,   0.376,   0.413)  ( 0.00,  0.00,  0.00)
    electro (  0.385,   0.292,   0.238)  (  0.385,   0.292,   0.238)  ( 0.00,  0.00,  0.00)
41       (  0.005,  -0.012,   0.021)  (  0.005,  -0.011,   0.024)  ( 0.00,  0.00,  0.01)
    bond    ( -0.265,   0.213,  -1.387)  ( -0.265,   0.213,  -1.384)  ( 0.00,  0.00,  0.25)
    angle   ( -0.002,  -0.794,  -0.122)  ( -0.001,  -0.793,  -0.122)  ( 0.00,  0.04,  0.00)
    strbnd  (  0.104,  -0.149,   0.254)  (  0.104,  -0.149,   0.254)  ( 0.00,  0.00,  0.00)
    torsion ( -0.534,  -0.473,   0.029)  ( -0.534,  -0.473,   0.029)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.465,   1.537,   0.914)  (  0.465,   1.537,   0.914)  ( 0.00,  0.00,  0.00)
    electro (  0.237,  -0.346,   0.332)  (  0.237,  -0.346,   0.332)  ( 0.00,  0.00,  0.00)
42       (  0.013,   0.008,  -0.041)  (  0.014,   0.009,  -0.038)  ( 0.00,  0.00,  0.01)
    bond    ( -1.424,  -0.121,   4.422)  ( -1.424,  -0.120,   4.425)  ( 0.03,  0.00,  0.07)
    angle   (  0.750,  -1.072,   0.212)  (  0.750,  -1.071,   0.212)  ( 0.02,  0.08,  0.00)
    strbnd  (  0.500,  -0.190,  -1.471)  (  0.500,  -0.190,  -1.471)  ( 0.00,  0.00,  0.00)
    torsion ( -0.246,   0.662,  -0.061)  ( -0.246,   0.662,  -0.061)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.074,   0.895,  -1.822)  ( -0.074,   0.895,  -1.822)  ( 0.00,  0.00,  0.00)
    electro (  0.507,  -0.167,  -1.321)  (  0.507,  -0.167,  -1.321)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 12 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 13 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/clopidogrel.gpr
 # Expected        93.43627, found 93.436274&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/clopidogrel.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.094,  -0.054,   0.252)  (  0.101,  -0.049,   0.256)  ( 0.07,  0.03,  0.10)
    bond    (  0.405,   3.441,   0.242)  (  0.412,   3.445,   0.242)  ( 0.28,  0.13,  0.00)
    angle   ( -0.409,   0.650,  -0.195)  ( -0.408,   0.652,  -0.195)  ( 0.06,  0.11,  0.00)
    strbnd  ( -0.322,  -4.041,  -0.254)  ( -0.322,  -4.042,  -0.254)  ( 0.01,  0.03,  0.00)
    torsion ( -0.032,  -0.018,   0.320)  ( -0.032,  -0.018,   0.321)  ( 0.00,  0.00,  0.03)
    oop     (  0.002,   0.001,  -0.014)  (  0.002,   0.001,  -0.012)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.047,  -0.020,  -0.019)  ( -0.047,  -0.020,  -0.019)  ( 0.00,  0.00,  0.00)
    electro (  0.497,  -0.068,   0.172)  (  0.497,  -0.068,   0.172)  ( 0.00,  0.00,  0.00)
 2       ( -0.202,  -0.384,   0.053)  ( -0.198,  -0.377,   0.070)  ( 0.09,  0.28,  0.09)
    bond    (  3.541,  -2.137,   0.264)  (  3.546,  -2.131,   0.265)  ( 0.15,  0.30,  0.00)
    angle   (  1.746,   1.275,   0.298)  (  1.748,   1.277,   0.298)  ( 0.10,  0.14,  0.00)
    strbnd  ( -2.090,   1.285,  -0.146)  ( -2.091,   1.285,  -0.146)  ( 0.05,  0.01,  0.00)
    torsion (  0.033,   0.016,  -0.297)  (  0.034,   0.016,  -0.296)  ( 0.00,  0.00,  0.04)
    oop     (  0.010,   0.005,  -0.088)  (  0.009,   0.004,  -0.072)  ( 0.00,  0.00,  0.14)
    vdw     ( -3.041,  -0.539,  -0.132)  ( -3.041,  -0.539,  -0.132)  ( 0.00,  0.00,  0.00)
    electro ( -0.403,  -0.288,   0.154)  ( -0.403,  -0.288,   0.154)  ( 0.00,  0.00,  0.00)
 3       ( -0.110,   0.062,   0.058)  ( -0.094,   0.078,  -0.063)  ( 0.18,  0.10,  0.69)
    bond    ( 10.808,   8.532,   1.851)  ( 10.812,   8.538,   1.851)  ( 0.04,  0.07,  0.01)
    angle   ( -1.280, -12.576,  -1.628)  ( -1.278, -12.574,  -1.628)  ( 0.16,  0.02,  0.03)
    strbnd  ( -2.662,  -2.231,  -0.989)  ( -2.662,  -2.232,  -0.989)  ( 0.02,  0.03,  0.01)
    torsion ( -0.153,   0.061,   1.120)  ( -0.153,   0.061,   1.121)  ( 0.00,  0.00,  0.09)
    oop     ( -0.073,  -0.051,   0.782)  ( -0.062,  -0.043,   0.660)  ( 0.08,  0.04,  9.53)
    vdw     ( -8.513,   7.070,  -1.049)  ( -8.513,   7.070,  -1.049)  ( 0.00,  0.00,  0.00)
    electro (  1.764,  -0.743,  -0.030)  (  1.764,  -0.743,  -0.030)  ( 0.00,  0.00,  0.00)
 4       ( -0.088,  -0.102,  -0.382)  ( -0.104,  -0.118,  -0.116)  ( 0.15,  0.16, 10.18)
    bond    ( 20.270,  -4.350,   1.475)  ( 20.275,  -4.343,   1.476)  ( 0.02,  0.15,  0.01)
    angle   ( 12.458,  12.739,   3.115)  ( 12.460,  12.741,   3.115)  ( 0.02,  0.01,  0.01)
    strbnd  (-17.883,  -3.513,  -1.809)  (-17.884,  -3.514,  -1.809)  ( 0.01,  0.03,  0.00)
    torsion (  0.036,   0.065,  -1.684)  (  0.036,   0.065,  -1.683)  ( 0.00,  0.00,  0.04)
    oop     (  0.171,   0.149,  -1.871)  (  0.149,   0.126,  -1.606)  ( 0.38,  0.34, 14.18)
    vdw     (-12.241,  -4.949,   0.142)  (-12.241,  -4.949,   0.142)  ( 0.00,  0.00,  0.00)
    electro ( -2.899,  -0.244,   0.249)  ( -2.899,  -0.244,   0.249)  ( 0.00,  0.00,  0.00)
 5       ( -0.068,  -0.017,  -0.125)  ( -0.065,  -0.011,  -0.111)  ( 0.02,  0.01,  0.18)
    bond    (  1.518, -21.327,  -9.249)  (  1.522, -21.323,  -9.244)  ( 0.25,  0.02,  0.05)
    angle   ( -8.489,  14.472,   7.087)  ( -8.487,  14.475,   7.088)  ( 0.02,  0.02,  0.02)
    strbnd  ( 11.557,   1.653,   2.302)  ( 11.556,   1.652,   2.302)  ( 0.01,  0.05,  0.02)
    torsion ( -0.182,   0.061,  -1.411)  ( -0.182,   0.061,  -1.410)  ( 0.00,  0.00,  0.02)
    oop     (  0.005,   0.003,  -0.040)  (  0.004,   0.002,  -0.031)  ( 0.00,  0.00,  0.04)
    vdw     ( -7.969,   3.574,   1.404)  ( -7.968,   3.574,   1.404)  ( 0.00,  0.00,  0.00)
    electro (  3.491,   1.548,  -0.219)  (  3.491,   1.548,  -0.219)  ( 0.00,  0.00,  0.00)
 6       (  0.024,  -0.167,   0.098)  (  0.031,  -0.160,   0.067)  ( 0.02,  0.11,  0.30)
    bond    ( -9.999,  -4.566,  -1.383)  ( -9.996,  -4.563,  -1.383)  ( 0.03,  0.06,  0.00)
    angle   (  0.723,  -4.226,  -0.076)  (  0.723,  -4.225,  -0.077)  ( 0.04,  0.03,  0.00)
    strbnd  ( 12.551,   6.889,   1.807)  ( 12.551,   6.889,   1.807)  ( 0.00,  0.01,  0.00)
    torsion (  0.080,   0.020,  -0.668)  (  0.080,   0.020,  -0.667)  ( 0.00,  0.00,  0.01)
    oop     ( -0.057,  -0.045,   0.532)  ( -0.054,  -0.042,   0.501)  ( 0.02,  0.02,  1.66)
    vdw     ( -3.283,   1.455,  -0.244)  ( -3.283,   1.455,  -0.244)  ( 0.00,  0.00,  0.00)
    electro (  0.009,   0.307,   0.130)  (  0.009,   0.307,   0.130)  ( 0.00,  0.00,  0.00)
 7       ( -0.002,   0.041,  -0.083)  (  0.003,   0.047,  -0.081)  ( 0.00,  0.02,  0.02)
    bond    ( 10.203,   5.616,  25.277)  ( 10.207,   5.620,  25.278)  ( 0.04,  0.07,  0.00)
    angle   (-14.427,   4.571, -29.699)  (-14.425,   4.572, -29.697)  ( 0.01,  0.03,  0.01)
    strbnd  (  1.147,  -1.228,  -0.703)  (  1.146,  -1.229,  -0.703)  ( 0.05,  0.04,  0.03)
    torsion (  1.193,  -0.605,  -0.282)  (  1.193,  -0.605,  -0.282)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.912,   0.367,   4.636)  (  5.912,   0.367,   4.636)  ( 0.00,  0.00,  0.00)
    electro ( -4.030,  -8.679,   0.687)  ( -4.030,  -8.679,   0.687)  ( 0.00,  0.00,  0.00)
 8       ( -0.124,  -0.019,  -0.296)  ( -0.123,  -0.017,  -0.295)  ( 0.01,  0.01,  0.03)
    bond    ( -0.019,  -0.836,   0.410)  ( -0.019,  -0.833,   0.411)  ( 0.00,  0.23,  0.03)
    angle   (  4.770,  -0.609,  -1.012)  (  4.771,  -0.609,  -1.012)  ( 0.01,  0.01,  0.04)
    strbnd  (  0.249,   0.128,  -1.740)  (  0.249,   0.128,  -1.740)  ( 0.00,  0.00,  0.00)
    torsion ( -0.173,  -0.083,  -0.176)  ( -0.173,  -0.083,  -0.176)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.951,   1.380,   2.222)  ( -4.951,   1.380,   2.222)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( -0.069,   0.131,  -0.224)  ( -0.068,   0.132,  -0.221)  ( 0.01,  0.01,  0.07)
    bond    ( -0.548,  -0.489,  -3.470)  ( -0.548,  -0.489,  -3.467)  ( 0.01,  0.00,  0.09)
    angle   (  2.634,  -1.083,  -0.264)  (  2.635,  -1.082,  -0.264)  ( 0.02,  0.05,  0.00)
    strbnd  (  0.419,  -1.396,   0.765)  (  0.419,  -1.396,   0.765)  ( 0.00,  0.00,  0.00)
    torsion ( -0.167,  -0.223,   0.058)  ( -0.167,  -0.223,   0.058)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.406,   3.323,   2.687)  ( -2.406,   3.323,   2.687)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( -0.074,  -0.055,  -0.182)  ( -0.069,  -0.050,  -0.177)  ( 0.04,  0.03,  0.10)
    bond    (-15.381,  12.089, -12.058)  (-15.377,  12.093, -12.053)  ( 0.02,  0.04,  0.04)
    angle   (  8.484, -11.406,  11.903)  (  8.487, -11.404,  11.904)  ( 0.03,  0.02,  0.01)
    strbnd  (  4.060,   9.673,   0.443)  (  4.059,   9.672,   0.443)  ( 0.02,  0.01,  0.02)
    torsion (  1.330,  -0.770,  -1.490)  (  1.330,  -0.769,  -1.490)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.699, -11.336,   1.328)  (  1.699, -11.336,   1.328)  ( 0.01,  0.00,  0.00)
    electro ( -0.266,   1.694,  -0.308)  ( -0.266,   1.694,  -0.308)  ( 0.00,  0.00,  0.00)
11       (  0.037,  -0.007,  -0.105)  (  0.052,   0.010,  -0.226)  ( 0.06,  0.01,  1.27)
    bond    (  9.639,  15.878,   4.037)  (  9.642,  15.883,   4.041)  ( 0.04,  0.03,  0.11)
    angle   ( -9.172,  -2.161,  -6.458)  ( -9.170,  -2.158,  -6.456)  ( 0.02,  0.11,  0.02)
    strbnd  (  1.149,  -6.264,  -0.982)  (  1.147,  -6.265,  -0.982)  ( 0.10,  0.02,  0.04)
    torsion ( -0.350,  -0.442,   3.225)  ( -0.350,  -0.442,   3.225)  ( 0.00,  0.00,  0.00)
    oop     ( -0.054,  -0.059,   0.659)  ( -0.043,  -0.047,   0.531)  ( 0.06,  0.07,  8.39)
    vdw     ( -0.242,  -4.058,  -0.450)  ( -0.242,  -4.058,  -0.450)  ( 0.00,  0.00,  0.00)
    electro ( -0.932,  -2.902,  -0.135)  ( -0.932,  -2.902,  -0.135)  ( 0.00,  0.00,  0.00)
12       (  0.007,   0.058,  -0.013)  (  0.009,   0.059,  -0.013)  ( 0.00,  0.01,  0.00)
    bond    ( -1.070,   0.929,   0.454)  ( -1.069,   0.931,   0.454)  ( 0.16,  0.12,  0.01)
    angle   (  4.468,   5.608,  -0.977)  (  4.468,   5.608,  -0.977)  ( 0.01,  0.01,  0.05)
    strbnd  (  0.788,  -0.295,  -1.704)  (  0.788,  -0.295,  -1.704)  ( 0.00,  0.00,  0.00)
    torsion ( -0.551,  -1.028,   0.811)  ( -0.551,  -1.028,   0.811)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.628,  -5.157,   1.404)  ( -3.628,  -5.157,   1.404)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( -0.120,   0.039,  -0.037)  ( -0.119,   0.040,  -0.033)  ( 0.01,  0.00,  0.01)
    bond    ( -0.328,  -0.292,  -3.901)  ( -0.328,  -0.292,  -3.897)  ( 0.00,  0.00,  0.08)
    angle   ( -0.446,   1.585,  -0.081)  ( -0.446,   1.585,  -0.081)  ( 0.02,  0.04,  0.00)
    strbnd  ( -0.722,   1.212,   0.784)  ( -0.722,   1.212,   0.784)  ( 0.00,  0.00,  0.00)
    torsion ( -0.435,   1.492,  -0.075)  ( -0.435,   1.492,  -0.075)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.812,  -3.957,   3.236)  (  1.812,  -3.957,   3.236)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (  0.067,   0.147,  -0.288)  (  0.068,   0.148,  -0.285)  ( 0.00,  0.01,  0.08)
    bond    ( -0.175,   1.062,   2.357)  ( -0.175,   1.063,   2.360)  ( 0.00,  0.05,  0.12)
    angle   ( -0.080,  -0.961,   0.427)  ( -0.080,  -0.961,   0.427)  ( 0.00,  0.04,  0.00)
    strbnd  (  0.554,   0.475,  -1.094)  (  0.554,   0.475,  -1.094)  ( 0.00,  0.00,  0.00)
    torsion ( -0.550,   1.444,  -0.691)  ( -0.550,   1.444,  -0.691)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.318,  -1.873,  -1.287)  (  0.318,  -1.873,  -1.287)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (  0.046,  -0.135,  -0.333)  (  0.047,  -0.133,  -0.331)  ( 0.00,  0.03,  0.06)
    bond    (  0.373,   1.480,  -1.330)  (  0.373,   1.482,  -1.328)  ( 0.00,  0.12,  0.11)
    angle   ( -2.004,   0.579,   0.084)  ( -2.004,   0.580,   0.085)  ( 0.03,  0.01,  0.00)
    strbnd  (  0.258,   0.339,   0.948)  (  0.258,   0.339,   0.948)  ( 0.00,  0.00,  0.00)
    torsion (  0.462,  -0.620,  -0.562)  (  0.462,  -0.620,  -0.562)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.958,  -1.914,   0.528)  (  0.958,  -1.914,   0.528)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( -0.222,  -0.176,   0.346)  ( -0.217,  -0.175,   0.342)  ( 0.09,  0.02,  0.12)
    bond    (  0.758,  -0.200,   0.086)  (  0.762,  -0.200,   0.086)  ( 0.28,  0.01,  0.00)
    angle   (  0.078,   0.315,   0.044)  (  0.078,   0.315,   0.044)  ( 0.00,  0.02,  0.00)
    strbnd  ( -0.224,   0.410,  -0.006)  ( -0.224,   0.410,  -0.006)  ( 0.00,  0.00,  0.00)
    torsion ( -0.053,  -0.023,   0.416)  ( -0.053,  -0.023,   0.416)  ( 0.00,  0.00,  0.01)
    oop     ( -0.002,  -0.001,   0.014)  ( -0.001,  -0.001,   0.010)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.370,  -0.087,  -0.051)  ( -0.370,  -0.087,  -0.051)  ( 0.00,  0.00,  0.00)
    electro ( -0.409,  -0.590,  -0.156)  ( -0.409,  -0.590,  -0.156)  ( 0.00,  0.00,  0.00)
17       ( -0.172,  -0.001,   0.210)  ( -0.170,   0.003,   0.204)  ( 0.03,  0.00,  0.14)
    bond    (  0.202,  -2.402,  -0.106)  (  0.202,  -2.398,  -0.106)  ( 0.00,  0.16,  0.00)
    angle   (  0.155,   0.010,   0.062)  (  0.156,   0.010,   0.062)  ( 0.01,  0.00,  0.00)
    strbnd  (  0.312,   1.242,   0.101)  (  0.312,   1.242,   0.101)  ( 0.00,  0.00,  0.00)
    torsion ( -0.037,  -0.018,   0.329)  ( -0.037,  -0.018,   0.329)  ( 0.00,  0.00,  0.01)
    oop     ( -0.003,  -0.001,   0.025)  ( -0.002,  -0.001,   0.018)  ( 0.00,  0.00,  0.02)
    vdw     ( -0.532,   0.720,  -0.009)  ( -0.532,   0.720,  -0.009)  ( 0.00,  0.00,  0.00)
    electro ( -0.269,   0.447,  -0.192)  ( -0.269,   0.447,  -0.192)  ( 0.00,  0.00,  0.00)
18       ( -0.081,  -0.033,  -0.057)  ( -0.060,  -0.053,  -0.067)  ( 0.17,  0.07,  0.06)
    bond    ( -6.379,   0.928, -24.889)  ( -6.375,   0.931, -24.885)  ( 0.06,  0.30,  0.02)
    angle   (  9.056,   0.616,  23.534)  (  9.058,   0.619,  23.536)  ( 0.02,  0.14,  0.01)
    strbnd  ( -5.196,  -2.586,  -0.461)  ( -5.197,  -2.587,  -0.462)  ( 0.03,  0.04,  0.02)
    torsion (  1.569,  -1.208,   0.648)  (  1.569,  -1.208,   0.648)  ( 0.00,  0.01,  0.00)
    oop     ( -0.120,   0.144,   0.106)  ( -0.104,   0.120,   0.090)  ( 0.19,  0.35,  0.17)
    vdw     (  1.409,   4.724,  -3.655)  (  1.409,   4.724,  -3.655)  ( 0.01,  0.00,  0.00)
    electro ( -0.420,  -2.651,   4.661)  ( -0.420,  -2.651,   4.661)  ( 0.00,  0.00,  0.00)
19       ( -0.058,   0.004,   0.349)  ( -0.044,   0.018,   0.354)  ( 0.08,  0.01,  0.19)
    bond    ( -2.284,   1.490,  -1.564)  ( -2.281,   1.492,  -1.560)  ( 0.13,  0.13,  0.31)
    angle   ( -1.097,  -5.742,  -2.880)  ( -1.096,  -5.741,  -2.878)  ( 0.12,  0.02,  0.06)
    strbnd  (  3.814,  -3.033,   2.137)  (  3.814,  -3.033,   2.137)  ( 0.01,  0.00,  0.01)
    torsion (  0.420,   0.671,  -0.162)  (  0.420,   0.672,  -0.162)  ( 0.02,  0.04,  0.00)
    oop     ( -0.056,  -0.065,   0.006)  ( -0.047,  -0.055,   0.005)  ( 0.05,  0.07,  0.00)
    vdw     ( -0.306,   9.504,   2.421)  ( -0.306,   9.504,   2.421)  ( 0.01,  0.00,  0.00)
    electro ( -0.549,  -2.822,   0.391)  ( -0.549,  -2.822,   0.391)  ( 0.00,  0.00,  0.00)
20       (  0.614,   0.560,   0.386)  (  0.476,   0.618,   0.475)  ( 8.50,  3.24,  3.45)
    bond    ( -2.231, -20.883,   8.347)  ( -2.227, -20.877,   8.352)  ( 0.15,  0.03,  0.06)
    angle   ( -4.426,  15.205,  -3.475)  ( -4.426,  15.207,  -3.473)  ( 0.02,  0.01,  0.05)
    strbnd  ( -4.771,  -2.312,  -7.995)  ( -4.772,  -2.313,  -7.996)  ( 0.01,  0.04,  0.02)
    torsion ( -2.925,   0.824,   1.217)  ( -2.924,   0.824,   1.217)  ( 0.01,  0.00,  0.00)
    oop     (  0.652,  -0.226,  -0.380)  (  0.510,  -0.176,  -0.296)  ( 9.29,  1.12,  3.18)
    vdw     (  7.151,   3.310,   3.612)  (  7.151,   3.310,   3.612)  ( 0.00,  0.00,  0.00)
    electro (  7.163,   4.641,  -0.940)  (  7.163,   4.641,  -0.940)  ( 0.00,  0.00,  0.00)
21       ( -0.124,  -0.034,   0.051)  ( -0.123,  -0.033,   0.055)  ( 0.01,  0.00,  0.02)
    bond    ( -0.235,  -0.308,  -2.219)  ( -0.235,  -0.308,  -2.216)  ( 0.00,  0.00,  0.15)
    angle   (  4.698,  -5.851,   0.315)  (  4.699,  -5.850,   0.315)  ( 0.01,  0.01,  0.00)
    strbnd  ( -0.581,  -0.336,   1.443)  ( -0.581,  -0.336,   1.443)  ( 0.00,  0.00,  0.00)
    torsion ( -1.301,   0.144,   0.118)  ( -1.301,   0.144,   0.118)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.704,   6.318,   0.395)  ( -2.704,   6.318,   0.395)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( -0.190,  -0.210,  -0.397)  ( -0.196,  -0.222,  -0.390)  ( 0.13,  0.24,  0.27)
    bond    (  7.110,  -5.000,  16.974)  (  7.113,  -4.998,  16.979)  ( 0.05,  0.04,  0.03)
    angle   ( -2.542,   1.862,  -6.168)  ( -2.541,   1.862,  -6.166)  ( 0.04,  0.04,  0.03)
    strbnd  ( -2.998,   2.586,   2.923)  ( -2.998,   2.586,   2.923)  ( 0.00,  0.00,  0.01)
    torsion (  0.187,   0.206,   0.004)  (  0.187,   0.207,   0.004)  ( 0.01,  0.02,  0.00)
    oop     (  0.071,   0.090,  -0.001)  (  0.059,   0.075,  -0.000)  ( 0.08,  0.13,  0.00)
    vdw     ( -3.409,   1.113, -13.213)  ( -3.409,   1.113, -13.213)  ( 0.00,  0.01,  0.00)
    electro (  1.392,  -1.067,  -0.917)  (  1.392,  -1.067,  -0.917)  ( 0.00,  0.00,  0.00)
23       ( -0.334,  -0.228,   0.485)  ( -0.328,  -0.222,   0.493)  ( 0.22,  0.13,  0.36)
    bond    ( -4.764,   3.427,  11.494)  ( -4.760,   3.429,  11.499)  ( 0.07,  0.06,  0.05)
    angle   (  1.122,  -0.757,   2.811)  (  1.123,  -0.756,   2.813)  ( 0.09,  0.04,  0.06)
    strbnd  (  2.035,  -1.610,  -1.356)  (  2.035,  -1.610,  -1.356)  ( 0.01,  0.01,  0.01)
    torsion ( -0.226,  -0.307,   0.011)  ( -0.225,  -0.307,   0.011)  ( 0.01,  0.03,  0.00)
    oop     ( -0.009,  -0.013,  -0.000)  ( -0.008,  -0.010,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.387,  -0.990, -13.718)  (  1.387,  -0.990, -13.718)  ( 0.00,  0.00,  0.00)
    electro (  0.120,   0.021,   1.244)  (  0.120,   0.021,   1.244)  ( 0.00,  0.00,  0.00)
24       (  0.020,  -0.128,  -0.527)  (  0.035,  -0.111,  -0.520)  ( 0.03,  0.21,  0.37)
    bond    ( -7.605,   5.610,   5.554)  ( -7.601,   5.612,   5.560)  ( 0.05,  0.04,  0.10)
    angle   ( -1.737,   1.343,   0.082)  ( -1.736,   1.343,   0.083)  ( 0.06,  0.05,  0.01)
    strbnd  (  0.340,  -0.282,  -1.073)  (  0.340,  -0.282,  -1.073)  ( 0.00,  0.00,  0.02)
    torsion (  0.141,   0.176,   0.004)  (  0.142,   0.177,   0.004)  ( 0.01,  0.01,  0.00)
    oop     ( -0.055,  -0.073,  -0.001)  ( -0.045,  -0.060,  -0.001)  ( 0.06,  0.10,  0.00)
    vdw     (  9.119,  -7.021,  -4.701)  (  9.119,  -7.021,  -4.701)  ( 0.00,  0.00,  0.00)
    electro ( -0.183,   0.118,  -0.392)  ( -0.183,   0.118,  -0.392)  ( 0.00,  0.00,  0.00)
25       (  0.159,   0.213,   0.583)  (  0.138,   0.184,   0.589)  ( 0.34,  0.64,  0.36)
    bond    (-11.078,   8.736,  -4.694)  (-11.074,   8.738,  -4.688)  ( 0.03,  0.02,  0.12)
    angle   (  1.300,  -0.887,  -3.803)  (  1.301,  -0.886,  -3.801)  ( 0.08,  0.06,  0.05)
    strbnd  (  1.316,  -0.991,   0.244)  (  1.316,  -0.991,   0.244)  ( 0.01,  0.01,  0.00)
    torsion ( -0.076,  -0.091,   0.002)  ( -0.076,  -0.090,   0.002)  ( 0.00,  0.01,  0.00)
    oop     (  0.140,   0.179,   0.005)  (  0.114,   0.146,   0.004)  ( 0.37,  0.60,  0.00)
    vdw     (  8.950,  -6.944,   9.005)  (  8.950,  -6.943,   9.005)  ( 0.00,  0.00,  0.00)
    electro ( -0.393,   0.211,  -0.176)  ( -0.393,   0.211,  -0.176)  ( 0.00,  0.00,  0.00)
26       (  0.084,   0.183,  -0.225)  (  0.141,   0.254,  -0.217)  ( 0.48,  1.30,  0.18)
    bond    ( -0.944,   0.846, -18.247)  ( -0.940,   0.848, -18.243)  ( 0.30,  0.17,  0.02)
    angle   (  7.126,  -5.296,   3.718)  (  7.127,  -5.296,   3.720)  ( 0.01,  0.01,  0.05)
    strbnd  ( -7.430,   5.904,   0.945)  ( -7.430,   5.904,   0.944)  ( 0.00,  0.00,  0.05)
    torsion ( -0.866,  -1.152,  -0.063)  ( -0.866,  -1.152,  -0.063)  ( 0.03,  0.06,  0.00)
    oop     ( -0.313,  -0.407,  -0.015)  ( -0.261,  -0.339,  -0.012)  ( 1.64,  2.76,  0.00)
    vdw     (  3.069,  -0.873,  13.253)  (  3.069,  -0.873,  13.253)  ( 0.00,  0.00,  0.00)
    electro ( -0.557,   1.161,   0.184)  ( -0.557,   1.161,   0.184)  ( 0.00,  0.00,  0.00)
27       ( -0.315,  -0.428,   0.139)  ( -0.314,  -0.427,   0.141)  ( 0.04,  0.02,  0.03)
    bond    (  2.446,  -1.770,   2.501)  (  2.447,  -1.769,   2.503)  ( 0.06,  0.04,  0.06)
    angle   ( -1.543,   1.181,   2.343)  ( -1.543,   1.181,   2.344)  ( 0.01,  0.01,  0.02)
    strbnd  ( -1.339,   0.977,  -0.789)  ( -1.339,   0.977,  -0.789)  ( 0.00,  0.00,  0.00)
    torsion (  0.988,   1.336,  -0.022)  (  0.988,   1.336,  -0.022)  ( 0.01,  0.02,  0.00)
    oop     (  0.002,   0.003,  -0.000)  (  0.002,   0.002,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.259,  -2.708,  -3.410)  (  1.260,  -2.708,  -3.410)  ( 0.00,  0.00,  0.00)
    electro ( -2.129,   0.554,  -0.484)  ( -2.129,   0.554,  -0.484)  ( 0.00,  0.00,  0.00)
28       (  0.161,   0.473,  -0.074)  (  0.161,   0.473,  -0.072)  ( 0.01,  0.03,  0.01)
    bond    ( -1.791,   1.438,  -1.751)  ( -1.790,   1.439,  -1.750)  ( 0.08,  0.07,  0.08)
    angle   ( -0.694,   0.523,   1.139)  ( -0.694,   0.523,   1.139)  ( 0.01,  0.00,  0.04)
    strbnd  (  0.572,  -0.470,   0.906)  (  0.572,  -0.470,   0.906)  ( 0.00,  0.00,  0.00)
    torsion (  0.222,   0.282,   0.005)  (  0.222,   0.283,   0.005)  ( 0.00,  0.01,  0.00)
    oop     (  0.006,   0.008,   0.000)  (  0.005,   0.006,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.510,  -1.901,  -1.427)  (  2.510,  -1.901,  -1.427)  ( 0.00,  0.00,  0.00)
    electro ( -0.665,   0.593,   1.054)  ( -0.665,   0.593,   1.054)  ( 0.00,  0.00,  0.00)
29       (  0.385,   0.558,   0.067)  (  0.374,   0.543,   0.069)  ( 0.44,  0.84,  0.01)
    bond    (  0.302,  -0.086,  -3.852)  (  0.302,  -0.086,  -3.850)  ( 0.00,  0.00,  0.06)
    angle   ( -6.191,   4.765,  -0.593)  ( -6.191,   4.765,  -0.593)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.076,   0.015,  -2.804)  (  0.076,   0.015,  -2.804)  ( 0.00,  0.00,  0.00)
    torsion (  0.648,   0.848,   0.032)  (  0.648,   0.848,   0.032)  ( 0.00,  0.01,  0.00)
    oop     (  0.111,   0.143,   0.005)  (  0.099,   0.128,   0.005)  ( 0.13,  0.22,  0.00)
    vdw     (  5.741,  -5.031,   8.170)  (  5.741,  -5.031,   8.171)  ( 0.00,  0.00,  0.00)
    electro ( -0.302,  -0.096,  -0.891)  ( -0.302,  -0.096,  -0.891)  ( 0.00,  0.00,  0.00)
30       ( -0.388,  -0.464,  -0.137)  ( -0.390,  -0.467,  -0.134)  ( 0.08,  0.15,  0.05)
    bond    ( -0.285,   0.192,   2.526)  ( -0.284,   0.192,   2.529)  ( 0.00,  0.00,  0.15)
    angle   (  0.191,  -0.141,   0.032)  (  0.191,  -0.141,   0.032)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.092,   0.073,  -0.831)  ( -0.092,   0.073,  -0.831)  ( 0.00,  0.00,  0.00)
    torsion ( -0.351,  -0.466,  -0.004)  ( -0.351,  -0.466,  -0.004)  ( 0.00,  0.01,  0.00)
    oop     (  0.013,   0.017,   0.000)  (  0.010,   0.013,   0.000)  ( 0.00,  0.01,  0.00)
    vdw     (  0.124,  -0.078,  -0.755)  (  0.124,  -0.078,  -0.755)  ( 0.00,  0.00,  0.00)
    electro (  0.011,  -0.061,  -1.105)  (  0.011,  -0.061,  -1.105)  ( 0.00,  0.00,  0.00)
31       ( -0.193,   0.021,   0.101)  ( -0.197,   0.014,   0.102)  ( 0.08,  0.01,  0.01)
    bond    ( -1.807,   1.366,   0.917)  ( -1.805,   1.368,   0.917)  ( 0.11,  0.09,  0.05)
    angle   (  0.005,   0.002,   0.007)  (  0.005,   0.002,   0.008)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.452,  -0.351,  -0.140)  (  0.452,  -0.351,  -0.140)  ( 0.00,  0.00,  0.00)
    torsion ( -0.111,  -0.144,  -0.004)  ( -0.110,  -0.143,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     (  0.028,   0.036,   0.000)  (  0.021,   0.028,   0.000)  ( 0.02,  0.03,  0.00)
    vdw     (  0.558,  -0.417,  -0.304)  (  0.558,  -0.417,  -0.304)  ( 0.00,  0.00,  0.00)
    electro (  0.682,  -0.472,  -0.376)  (  0.682,  -0.472,  -0.376)  ( 0.00,  0.00,  0.00)
32       ( -0.425,  -0.505,  -0.048)  ( -0.345,  -0.527,  -0.090)  ( 3.40,  1.08,  0.20)
    bond    ( -5.280,  -7.572,  -4.556)  ( -5.277,  -7.567,  -4.554)  ( 0.05,  0.06,  0.04)
    angle   ( -0.110,   0.279,  -0.337)  ( -0.110,   0.279,  -0.337)  ( 0.00,  0.01,  0.02)
    strbnd  (  1.293,   1.229,   1.466)  (  1.293,   1.229,   1.466)  ( 0.00,  0.01,  0.01)
    torsion (  1.739,  -0.595,  -1.027)  (  1.739,  -0.595,  -1.027)  ( 0.00,  0.00,  0.00)
    oop     ( -0.260,   0.090,   0.151)  ( -0.182,   0.063,   0.106)  ( 2.01,  0.24,  0.68)
    vdw     (  4.932,   0.142,   8.178)  (  4.933,   0.142,   8.178)  ( 0.00,  0.00,  0.00)
    electro ( -2.741,   5.922,  -3.924)  ( -2.741,   5.922,  -3.924)  ( 0.00,  0.00,  0.00)
33       (  0.059,   0.082,  -0.083)  (  0.099,   0.074,  -0.101)  ( 0.24,  0.07,  0.15)
    bond    (  4.715,   4.557,   6.062)  (  4.716,   4.560,   6.065)  ( 0.02,  0.07,  0.06)
    angle   ( -7.689, -18.240,  -5.025)  ( -7.688, -18.238,  -5.024)  ( 0.01,  0.01,  0.01)
    strbnd  (  3.295,  -2.419,   7.181)  (  3.295,  -2.419,   7.181)  ( 0.00,  0.01,  0.00)
    torsion ( -1.716,   0.412,   0.834)  ( -1.716,   0.412,   0.834)  ( 0.01,  0.00,  0.00)
    oop     ( -0.210,   0.072,   0.121)  ( -0.172,   0.059,   0.099)  ( 0.81,  0.10,  0.27)
    vdw     (  1.937,  10.751,  -6.247)  (  1.938,  10.752,  -6.247)  ( 0.00,  0.00,  0.00)
    electro ( -0.274,   4.948,  -3.009)  ( -0.274,   4.948,  -3.009)  ( 0.00,  0.00,  0.00)
34       (  0.389,   0.093,   0.080)  (  0.395,   0.098,   0.086)  ( 0.24,  0.05,  0.05)
    bond    ( -0.334,  -4.761,   2.356)  ( -0.329,  -4.757,   2.361)  ( 0.15,  0.10,  0.19)
    angle   (  0.189,   3.946,   0.226)  (  0.190,   3.948,   0.228)  ( 0.03,  0.05,  0.04)
    strbnd  (  0.552,   0.973,   0.402)  (  0.551,   0.972,   0.402)  ( 0.02,  0.16,  0.02)
    torsion (  1.469,  -0.111,  -0.152)  (  1.469,  -0.111,  -0.152)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.779,   1.527,  -7.078)  ( -3.779,   1.527,  -7.078)  ( 0.00,  0.00,  0.00)
    electro (  2.292,  -1.482,   4.326)  (  2.292,  -1.482,   4.326)  ( 0.00,  0.00,  0.00)
35       (  0.303,   0.212,   0.053)  (  0.304,   0.213,   0.055)  ( 0.04,  0.01,  0.01)
    bond    (  0.249,   0.013,   0.448)  (  0.250,   0.013,   0.451)  ( 0.02,  0.00,  0.12)
    angle   (  0.291,   0.661,  -0.181)  (  0.291,   0.662,  -0.181)  ( 0.01,  0.04,  0.00)
    strbnd  ( -0.215,  -0.451,  -0.159)  ( -0.215,  -0.451,  -0.159)  ( 0.00,  0.00,  0.00)
    torsion (  0.017,  -0.004,  -0.009)  (  0.017,  -0.004,  -0.009)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.039,  -0.007,  -0.046)  ( -0.039,  -0.007,  -0.046)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (  0.432,   0.172,   0.118)  (  0.434,   0.174,   0.120)  ( 0.05,  0.03,  0.02)
    bond    (  0.425,  -0.592,  -0.547)  (  0.425,  -0.590,  -0.545)  ( 0.03,  0.08,  0.07)
    angle   (  1.840,  -0.935,   2.446)  (  1.841,  -0.935,   2.446)  ( 0.02,  0.03,  0.01)
    strbnd  (  0.155,  -0.679,  -0.026)  (  0.155,  -0.679,  -0.026)  ( 0.00,  0.00,  0.00)
    torsion ( -0.272,  -0.056,  -0.151)  ( -0.272,  -0.056,  -0.151)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.715,   2.434,  -1.604)  ( -1.715,   2.434,  -1.604)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (  0.355,  -0.026,   0.062)  (  0.358,  -0.025,   0.062)  ( 0.11,  0.00,  0.00)
    bond    ( -0.517,  -0.155,   0.092)  ( -0.514,  -0.155,   0.092)  ( 0.16,  0.00,  0.00)
    angle   (  0.968,  -1.352,   3.151)  (  0.969,  -1.351,   3.152)  ( 0.01,  0.04,  0.01)
    strbnd  ( -0.412,  -0.566,   0.270)  ( -0.412,  -0.566,   0.270)  ( 0.00,  0.00,  0.00)
    torsion ( -0.011,  -0.098,  -0.229)  ( -0.011,  -0.098,  -0.229)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.326,   2.145,  -3.222)  (  0.326,   2.145,  -3.222)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 13 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 14 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/esomeprazole.gpr
 # Expected        52.69095, found 52.690954&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/esomeprazole.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (  0.102,   0.155,  -0.282)  (  0.050,   0.107,  -0.020)  ( 0.53,  0.73,  7.41)
    bond    (  7.276,   5.385,   2.590)  (  7.281,   5.390,   2.590)  ( 0.07,  0.10,  0.02)
    angle   (  4.901,  -5.978,   0.229)  (  4.902,  -5.976,   0.230)  ( 0.04,  0.03,  0.01)
    strbnd  ( -0.020,  -1.711,  -0.647)  ( -0.020,  -1.711,  -0.647)  ( 0.00,  0.01,  0.00)
    torsion ( -0.151,  -0.425,   0.365)  ( -0.151,  -0.425,   0.366)  ( 0.00,  0.00,  0.03)
    oop     (  0.345,   0.325,  -1.540)  (  0.286,   0.270,  -1.280)  ( 2.03,  1.77, 16.92)
    vdw     (-14.891,   2.733,  -1.371)  (-14.891,   2.733,  -1.371)  ( 0.00,  0.00,  0.00)
    electro (  2.642,  -0.174,   0.092)  (  2.642,  -0.174,   0.092)  ( 0.00,  0.00,  0.00)
 2       ( -0.115,  -0.196,   0.557)  (  0.022,  -0.080,   0.037)  ( 1.56,  2.28, 28.92)
    bond    (  8.112, -21.040,  -1.715)  (  8.117, -21.034,  -1.714)  ( 0.06,  0.03,  0.04)
    angle   ( -1.169,   7.194, -15.182)  ( -1.167,   7.196, -15.182)  ( 0.15,  0.03,  0.00)
    strbnd  ( -2.863,  15.068,   3.232)  ( -2.863,  15.068,   3.232)  ( 0.01,  0.01,  0.00)
    torsion ( -0.342,  -0.574,   3.648)  ( -0.342,  -0.574,   3.649)  ( 0.00,  0.00,  0.03)
    oop     ( -0.793,  -0.680,   3.202)  ( -0.664,  -0.570,   2.680)  (10.29,  7.44, 16.28)
    vdw     ( -2.911,   0.464,   7.531)  ( -2.911,   0.464,   7.532)  ( 0.00,  0.01,  0.00)
    electro ( -0.149,  -0.629,  -0.159)  ( -0.149,  -0.629,  -0.159)  ( 0.00,  0.00,  0.00)
 3       (  0.026,   0.136,  -0.305)  ( -0.057,   0.069,   0.049)  ( 0.22,  0.92, 10.79)
    bond    ( -9.190,  -3.608,  -3.894)  ( -9.185,  -3.603,  -3.893)  ( 0.05,  0.14,  0.02)
    angle   ( -1.891,   2.042,   2.324)  ( -1.889,   2.043,   2.324)  ( 0.09,  0.09,  0.02)
    strbnd  (  1.681,  -6.510,  -1.289)  (  1.680,  -6.510,  -1.289)  ( 0.02,  0.00,  0.00)
    torsion (  0.497,   0.356,  -1.699)  (  0.498,   0.356,  -1.698)  ( 0.00,  0.00,  0.05)
    oop     (  0.546,   0.446,  -2.107)  (  0.457,   0.372,  -1.755)  ( 4.90,  3.29, 16.69)
    vdw     (  9.864,   8.314,   7.297)  (  9.864,   8.314,   7.297)  ( 0.00,  0.00,  0.00)
    electro ( -1.482,  -0.903,  -0.937)  ( -1.482,  -0.903,  -0.937)  ( 0.00,  0.00,  0.00)
 4       (  0.111,   0.024,   0.098)  (  0.121,   0.034,   0.083)  ( 0.11,  0.03,  0.15)
    bond    ( -9.024,   1.819,  -2.154)  ( -9.020,   1.825,  -2.154)  ( 0.05,  0.29,  0.03)
    angle   ( -3.381,  -7.942,  -3.027)  ( -3.379,  -7.940,  -3.027)  ( 0.06,  0.02,  0.02)
    strbnd  (  0.700,  12.247,   3.116)  (  0.700,  12.246,   3.116)  ( 0.01,  0.00,  0.00)
    torsion (  0.035,   0.371,   0.858)  (  0.035,   0.371,   0.859)  ( 0.00,  0.00,  0.07)
    oop     ( -0.017,  -0.017,   0.081)  ( -0.014,  -0.013,   0.063)  ( 0.01,  0.01,  0.14)
    vdw     ( 11.835,  -8.219,   0.895)  ( 11.835,  -8.219,   0.895)  ( 0.00,  0.00,  0.00)
    electro ( -0.036,   1.764,   0.330)  ( -0.036,   1.764,   0.330)  ( 0.00,  0.00,  0.00)
 5       ( -0.013,  -0.007,   0.009)  ( -0.002,   0.001,  -0.008)  ( 0.01,  0.01,  0.02)
    bond    (  0.599,  18.391,   5.068)  (  0.604,  18.393,   5.069)  ( 0.30,  0.01,  0.01)
    angle   ( -2.567,  -4.844,  -1.977)  ( -2.566,  -4.842,  -1.977)  ( 0.01,  0.04,  0.00)
    strbnd  (  0.126,  -3.607,  -0.716)  (  0.126,  -3.607,  -0.716)  ( 0.01,  0.00,  0.01)
    torsion ( -0.412,  -0.447,   1.649)  ( -0.412,  -0.447,   1.650)  ( 0.00,  0.00,  0.04)
    oop     ( -0.023,  -0.020,   0.080)  ( -0.018,  -0.015,   0.062)  ( 0.01,  0.01,  0.14)
    vdw     ( -3.585,  -7.644,  -2.793)  ( -3.585,  -7.643,  -2.793)  ( 0.00,  0.00,  0.00)
    electro (  5.849,  -1.837,  -1.301)  (  5.849,  -1.837,  -1.301)  ( 0.00,  0.00,  0.00)
 6       (  0.044,  -0.081,   0.031)  (  0.066,  -0.058,  -0.033)  ( 0.10,  0.18,  0.20)
    bond    ( 10.729,  -1.010,   2.254)  ( 10.734,  -1.004,   2.255)  ( 0.05,  0.56,  0.03)
    angle   (  1.143,   3.497,   1.367)  (  1.144,   3.499,   1.367)  ( 0.15,  0.05,  0.02)
    strbnd  ( -2.517,   7.619,   1.196)  ( -2.517,   7.618,   1.196)  ( 0.00,  0.01,  0.00)
    torsion (  0.159,   0.163,  -0.520)  (  0.159,   0.163,  -0.519)  ( 0.00,  0.00,  0.05)
    oop     ( -0.086,  -0.090,   0.386)  ( -0.071,  -0.075,   0.319)  ( 0.13,  0.14,  2.57)
    vdw     ( -7.661, -11.450,  -4.951)  ( -7.661, -11.450,  -4.951)  ( 0.00,  0.00,  0.00)
    electro ( -1.722,   1.190,   0.299)  ( -1.722,   1.190,   0.299)  ( 0.00,  0.00,  0.00)
 7       ( -0.001,   0.098,   0.040)  (  0.008,   0.108,   0.028)  ( 0.00,  0.10,  0.05)
    bond    ( -9.535,   2.023,   0.064)  ( -9.531,   2.028,   0.068)  ( 0.04,  0.21,  0.02)
    angle   (  7.090,   1.853,   9.392)  (  7.092,   1.855,   9.394)  ( 0.03,  0.11,  0.02)
    strbnd  (  2.802,   2.634,  -5.055)  (  2.801,   2.634,  -5.056)  ( 0.04,  0.01,  0.03)
    torsion ( -1.902,  -1.148,  -3.686)  ( -1.902,  -1.148,  -3.686)  ( 0.00,  0.00,  0.00)
    oop     ( -0.031,  -0.029,   0.121)  ( -0.027,  -0.025,   0.105)  ( 0.01,  0.01,  0.20)
    vdw     (  0.252,  -4.700,  -1.166)  (  0.252,  -4.700,  -1.166)  ( 0.00,  0.00,  0.00)
    electro (  1.323,  -0.536,   0.370)  (  1.323,  -0.536,   0.370)  ( 0.00,  0.00,  0.00)
 8       (  0.066,   0.060,  -0.163)  (  0.035,   0.034,  -0.026)  ( 0.21,  0.16,  2.23)
    bond    (  1.366,   7.925,  -6.059)  (  1.366,   7.930,  -6.057)  ( 0.03,  0.06,  0.04)
    angle   ( -4.971,   2.924,  18.703)  ( -4.970,   2.924,  18.704)  ( 0.02,  0.01,  0.00)
    strbnd  (  6.002, -13.364, -10.233)  (  6.002, -13.364, -10.234)  ( 0.00,  0.00,  0.00)
    torsion ( -1.754,  -0.117,  -1.236)  ( -1.754,  -0.117,  -1.236)  ( 0.00,  0.00,  0.01)
    oop     (  0.204,   0.195,  -0.836)  (  0.171,   0.163,  -0.702)  ( 0.67,  0.61, 11.20)
    vdw     ( -1.863,   4.959,  -0.269)  ( -1.863,   4.959,  -0.269)  ( 0.01,  0.00,  0.00)
    electro (  1.083,  -2.460,  -0.232)  (  1.083,  -2.460,  -0.232)  ( 0.00,  0.00,  0.00)
 9       ( -0.179,  -0.055,  -0.034)  ( -0.173,  -0.049,  -0.029)  ( 0.10,  0.03,  0.02)
    bond    ( -1.279,  -5.277,   4.593)  ( -1.274,  -5.273,   4.598)  ( 0.36,  0.08,  0.10)
    angle   (  2.902,   2.092,  -7.874)  (  2.904,   2.094,  -7.872)  ( 0.05,  0.09,  0.03)
    strbnd  ( -1.490,  -4.290,   5.538)  ( -1.491,  -4.290,   5.537)  ( 0.03,  0.02,  0.02)
    torsion (  1.310,   0.148,   0.500)  (  1.310,   0.148,   0.500)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.133,   6.427,  -2.475)  ( -1.133,   6.427,  -2.475)  ( 0.00,  0.00,  0.00)
    electro ( -0.489,   0.845,  -0.316)  ( -0.489,   0.845,  -0.316)  ( 0.00,  0.00,  0.00)
10       ( -0.066,  -0.019,   0.147)  ( -0.041,   0.004,   0.073)  ( 0.16,  0.04,  1.08)
    bond    ( -8.551,  -5.303,  -3.605)  ( -8.546,  -5.298,  -3.601)  ( 0.05,  0.08,  0.13)
    angle   (  8.575,   4.295,   4.735)  (  8.577,   4.297,   4.737)  ( 0.02,  0.04,  0.03)
    strbnd  ( -3.559,  -3.043,  -2.147)  ( -3.560,  -3.043,  -2.147)  ( 0.03,  0.02,  0.02)
    torsion (  0.442,   0.421,  -1.896)  (  0.442,   0.421,  -1.895)  ( 0.00,  0.00,  0.01)
    oop     ( -0.113,  -0.097,   0.463)  ( -0.094,  -0.080,   0.384)  ( 0.22,  0.16,  3.69)
    vdw     (  3.906,   2.681,   2.458)  (  3.906,   2.681,   2.458)  ( 0.00,  0.00,  0.00)
    electro ( -0.767,   1.026,   0.138)  ( -0.767,   1.026,   0.138)  ( 0.00,  0.00,  0.00)
11       (  0.035,  -0.027,  -0.035)  (  0.048,  -0.013,  -0.065)  ( 0.05,  0.04,  0.11)
    bond    (  5.504,  -2.491,   1.129)  (  5.508,  -2.486,   1.133)  ( 0.08,  0.18,  0.40)
    angle   ( -6.722,   2.765,   0.097)  ( -6.721,   2.767,   0.099)  ( 0.03,  0.07,  0.01)
    strbnd  (  4.737,  -1.045,   0.544)  (  4.736,  -1.046,   0.544)  ( 0.02,  0.05,  0.02)
    torsion (  0.823,   1.626,  -1.528)  (  0.823,   1.626,  -1.527)  ( 0.00,  0.00,  0.01)
    oop     ( -0.047,  -0.047,   0.210)  ( -0.039,  -0.039,   0.174)  ( 0.04,  0.04,  0.76)
    vdw     ( -4.511,  -1.278,  -1.089)  ( -4.511,  -1.278,  -1.089)  ( 0.00,  0.00,  0.00)
    electro (  0.251,   0.444,   0.601)  (  0.251,   0.444,   0.601)  ( 0.00,  0.00,  0.00)
12       ( -0.437,  -0.217,  -0.084)  ( -0.429,  -0.209,  -0.074)  ( 0.35,  0.17,  0.09)
    bond    (  5.995, -19.907,   3.755)  (  6.002, -19.902,   3.755)  ( 0.12,  0.02,  0.01)
    angle   ( -3.995,  -8.920,   1.152)  ( -3.992,  -8.917,   1.152)  ( 0.06,  0.03,  0.01)
    strbnd  (  0.251,  10.771,  -1.679)  (  0.250,  10.770,  -1.679)  ( 0.01,  0.00,  0.00)
    torsion ( -0.002,   0.005,   0.014)  ( -0.002,   0.005,   0.016)  ( 0.00,  0.00,  0.00)
    oop     (  0.011,  -0.016,  -0.109)  (  0.010,  -0.015,  -0.101)  ( 0.00,  0.00,  0.09)
    vdw     ( -5.481,  14.382,  -2.769)  ( -5.481,  14.382,  -2.769)  ( 0.00,  0.00,  0.00)
    electro (  2.783,   3.468,  -0.448)  (  2.783,   3.468,  -0.448)  ( 0.00,  0.00,  0.00)
13       (  0.254,   0.037,  -0.080)  (  0.260,   0.045,  -0.070)  ( 0.16,  0.03,  0.09)
    bond    ( -4.290, -19.392,   2.539)  ( -4.284, -19.386,   2.539)  ( 0.15,  0.03,  0.01)
    angle   ( -5.191,   5.285,  -1.413)  ( -5.189,   5.287,  -1.413)  ( 0.03,  0.04,  0.00)
    strbnd  (  4.591,   5.480,  -0.346)  (  4.591,   5.479,  -0.346)  ( 0.02,  0.01,  0.00)
    torsion (  0.011,  -0.018,  -0.111)  (  0.011,  -0.018,  -0.109)  ( 0.00,  0.00,  0.01)
    oop     (  0.001,  -0.001,  -0.007)  ( -0.000,   0.000,   0.002)  ( 0.00,  0.00,  0.01)
    vdw     (  7.006,   7.835,  -0.459)  (  7.006,   7.835,  -0.459)  ( 0.00,  0.00,  0.00)
    electro ( -1.875,   0.848,  -0.285)  ( -1.875,   0.848,  -0.285)  ( 0.00,  0.00,  0.00)
14       ( -0.155,  -0.152,  -0.102)  ( -0.148,  -0.145,  -0.096)  ( 0.11,  0.10,  0.05)
    bond    (-18.782,  -2.708,  -1.626)  (-18.776,  -2.703,  -1.625)  ( 0.03,  0.18,  0.02)
    angle   (  6.408,   2.448,   0.325)  (  6.410,   2.450,   0.325)  ( 0.03,  0.06,  0.00)
    strbnd  ( -1.612,   1.556,  -0.422)  ( -1.612,   1.556,  -0.422)  ( 0.00,  0.03,  0.00)
    torsion (  0.007,  -0.010,  -0.064)  (  0.007,  -0.010,  -0.063)  ( 0.00,  0.00,  0.01)
    oop     (  0.003,  -0.005,  -0.031)  (  0.003,  -0.004,  -0.027)  ( 0.00,  0.00,  0.01)
    vdw     ( 15.712,  -1.488,   1.884)  ( 15.712,  -1.488,   1.884)  ( 0.00,  0.00,  0.00)
    electro ( -1.891,   0.054,  -0.168)  ( -1.891,   0.054,  -0.168)  ( 0.00,  0.00,  0.00)
15       (  0.045,   0.125,  -0.008)  (  0.052,   0.132,  -0.005)  ( 0.03,  0.09,  0.00)
    bond    ( -3.294,  18.549,  -3.151)  ( -3.288,  18.554,  -3.151)  ( 0.15,  0.03,  0.01)
    angle   (  0.032,  -6.686,   1.016)  (  0.033,  -6.684,   1.016)  ( 0.00,  0.03,  0.01)
    strbnd  ( -1.868,   1.287,  -0.386)  ( -1.869,   1.287,  -0.386)  ( 0.02,  0.01,  0.00)
    torsion (  0.008,  -0.011,  -0.076)  (  0.008,  -0.011,  -0.075)  ( 0.00,  0.00,  0.01)
    oop     (  0.000,  -0.001,  -0.005)  (  0.000,  -0.001,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     (  5.997, -14.639,   2.889)  (  5.997, -14.639,   2.889)  ( 0.00,  0.00,  0.00)
    electro ( -0.830,   1.626,  -0.295)  ( -0.830,   1.626,  -0.295)  ( 0.00,  0.00,  0.00)
16       ( -0.120,  -0.226,   0.001)  ( -0.114,  -0.217,   0.015)  ( 0.07,  0.21,  0.00)
    bond    ( 17.703,  10.762,   0.248)  ( 17.708,  10.768,   0.248)  ( 0.03,  0.06,  0.01)
    angle   ( -6.334,   2.836,  -1.003)  ( -6.332,   2.838,  -1.003)  ( 0.03,  0.06,  0.00)
    strbnd  ( -4.304,  -6.288,   0.496)  ( -4.305,  -6.289,   0.496)  ( 0.02,  0.01,  0.00)
    torsion (  0.015,  -0.032,  -0.197)  (  0.015,  -0.032,  -0.196)  ( 0.00,  0.00,  0.03)
    oop     ( -0.000,  -0.001,  -0.008)  ( -0.001,   0.000,   0.004)  ( 0.00,  0.00,  0.01)
    vdw     ( -5.454,  -8.975,   0.807)  ( -5.454,  -8.975,   0.807)  ( 0.00,  0.00,  0.00)
    electro ( -1.746,   1.472,  -0.340)  ( -1.746,   1.472,  -0.340)  ( 0.00,  0.00,  0.00)
17       (  0.255,   0.243,   0.092)  (  0.268,   0.243,   0.035)  ( 0.33,  0.01,  0.53)
    bond    ( 14.436,   1.442,   1.217)  ( 14.441,   1.448,   1.217)  ( 0.03,  0.45,  0.03)
    angle   ( 10.670,   5.036,   0.118)  ( 10.673,   5.038,   0.118)  ( 0.02,  0.05,  0.00)
    strbnd  ( -8.256,  -4.986,  -0.014)  ( -8.257,  -4.987,  -0.014)  ( 0.01,  0.01,  0.00)
    torsion ( -0.022,   0.047,   0.316)  ( -0.022,   0.047,   0.318)  ( 0.00,  0.00,  0.05)
    oop     ( -0.024,   0.040,   0.264)  ( -0.019,   0.031,   0.205)  ( 0.01,  0.04,  1.56)
    vdw     (-15.787,   1.374,  -1.831)  (-15.786,   1.374,  -1.831)  ( 0.00,  0.00,  0.00)
    electro ( -0.762,  -2.709,   0.022)  ( -0.762,  -2.709,   0.022)  ( 0.00,  0.00,  0.00)
18       (  0.272,   0.325,   0.066)  (  0.291,   0.320,  -0.038)  ( 0.53,  0.16,  0.69)
    bond    (-19.656,   8.147,  -2.814)  (-19.649,   8.154,  -2.814)  ( 0.03,  0.09,  0.01)
    angle   ( -7.991,  12.409,  -2.564)  ( -7.989,  12.411,  -2.564)  ( 0.03,  0.02,  0.00)
    strbnd  ( 22.861,   1.321,   1.838)  ( 22.860,   1.320,   1.838)  ( 0.01,  0.03,  0.00)
    torsion ( -0.100,   0.115,   0.712)  ( -0.100,   0.115,   0.713)  ( 0.00,  0.00,  0.07)
    oop     ( -0.032,   0.037,   0.280)  ( -0.020,   0.023,   0.174)  ( 0.04,  0.05,  2.95)
    vdw     (  3.868,  -6.973,   0.221)  (  3.868,  -6.973,   0.221)  ( 0.00,  0.00,  0.00)
    electro (  1.322, -14.730,   2.394)  (  1.322, -14.730,   2.394)  ( 0.00,  0.00,  0.00)
19       ( -0.123,  -0.037,   0.492)  ( -0.090,  -0.095,   0.052)  ( 0.41,  0.21, 21.69)
    bond    ( 17.643,  16.109,  -0.928)  ( 17.649,  16.118,  -0.927)  ( 0.03,  0.05,  0.02)
    angle   (  9.091,  -8.797,   4.000)  (  9.093,  -8.796,   4.001)  ( 0.02,  0.01,  0.01)
    strbnd  (-25.506,  -7.496,  -0.865)  (-25.508,  -7.497,  -0.865)  ( 0.01,  0.02,  0.01)
    torsion (  0.416,   0.003,  -1.455)  (  0.416,   0.003,  -1.454)  ( 0.00,  0.00,  0.06)
    oop     ( -0.091,   0.184,   1.246)  ( -0.064,   0.117,   0.804)  ( 0.25,  1.23, 35.47)
    vdw     (  2.466,   0.018,  -2.180)  (  2.467,   0.018,  -2.180)  ( 0.00,  0.00,  0.00)
    electro ( -4.143,  -0.058,   0.672)  ( -4.143,  -0.058,   0.672)  ( 0.00,  0.00,  0.00)
20       ( -0.180,  -0.078,  -0.328)  ( -0.196,  -0.018,   0.015)  ( 0.28,  0.47, 11.23)
    bond    (  0.669, -11.111,   1.743)  (  0.676, -11.103,   1.743)  ( 0.43,  0.07,  0.01)
    angle   ( -8.307,  -2.550,  -0.337)  ( -8.305,  -2.547,  -0.337)  ( 0.02,  0.08,  0.00)
    strbnd  (  3.253,  12.168,  -1.556)  (  3.252,  12.167,  -1.556)  ( 0.02,  0.01,  0.00)
    torsion (  0.089,  -0.008,  -0.097)  (  0.089,  -0.008,  -0.095)  ( 0.00,  0.00,  0.01)
    oop     (  0.076,  -0.140,  -0.939)  (  0.053,  -0.089,  -0.597)  ( 0.18,  0.71, 32.01)
    vdw     (  0.081,  -0.087,  -0.548)  (  0.081,  -0.087,  -0.548)  ( 0.00,  0.00,  0.00)
    electro (  3.959,   1.649,   1.406)  (  3.959,   1.649,   1.406)  ( 0.00,  0.00,  0.00)
21       (  0.033,  -0.022,  -0.104)  (  0.028,   0.009,   0.064)  ( 0.02,  0.07,  1.75)
    bond    (  4.977,   6.420,   0.115)  (  4.980,   6.425,   0.117)  ( 0.08,  0.09,  0.02)
    angle   ( -1.200,  -0.700,  -8.931)  ( -1.199,  -0.699,  -8.930)  ( 0.09,  0.06,  0.01)
    strbnd  (  5.580,  -9.697,   6.756)  (  5.580,  -9.698,   6.755)  ( 0.01,  0.00,  0.01)
    torsion (  2.257,   1.433,   5.397)  (  2.257,   1.433,   5.398)  ( 0.00,  0.00,  0.00)
    oop     (  0.030,  -0.065,  -0.446)  (  0.021,  -0.040,  -0.281)  ( 0.03,  0.16,  7.38)
    vdw     ( -3.045,  -1.071,  -2.535)  ( -3.045,  -1.071,  -2.535)  ( 0.01,  0.00,  0.00)
    electro ( -8.567,   3.659,  -0.460)  ( -8.567,   3.659,  -0.460)  ( 0.00,  0.00,  0.00)
22       (  0.030,   0.012,   0.038)  (  0.032,   0.016,   0.038)  ( 0.01,  0.01,  0.00)
    bond    ( -4.627,  -5.920,  -1.055)  ( -4.624,  -5.916,  -1.055)  ( 0.05,  0.06,  0.01)
    angle   ( -1.279,   0.117,   4.947)  ( -1.278,   0.117,   4.948)  ( 0.03,  0.00,  0.01)
    strbnd  ( -1.175,  -1.676,  -0.163)  ( -1.175,  -1.676,  -0.163)  ( 0.00,  0.01,  0.00)
    torsion ( -0.017,   0.448,  -2.440)  ( -0.017,   0.448,  -2.440)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.994,   7.618,  -1.307)  ( -3.994,   7.618,  -1.307)  ( 0.00,  0.00,  0.00)
    electro ( 11.121,  -0.575,   0.055)  ( 11.121,  -0.575,   0.055)  ( 0.00,  0.00,  0.00)
23       (  0.074,   0.020,  -0.077)  (  0.073,   0.019,  -0.064)  ( 0.00,  0.00,  0.10)
    bond    (  1.966,   1.803,   0.870)  (  1.968,   1.804,   0.870)  ( 0.09,  0.09,  0.03)
    angle   ( -1.373,   1.481,   0.033)  ( -1.372,   1.481,   0.033)  ( 0.03,  0.03,  0.00)
    strbnd  (  0.378,  -0.636,  -0.059)  (  0.378,  -0.636,  -0.059)  ( 0.00,  0.00,  0.00)
    torsion (  0.041,   0.040,  -0.176)  (  0.041,   0.040,  -0.176)  ( 0.00,  0.00,  0.00)
    oop     (  0.014,   0.015,  -0.064)  (  0.012,   0.012,  -0.051)  ( 0.00,  0.00,  0.08)
    vdw     (  0.863,  -2.400,  -0.448)  (  0.863,  -2.400,  -0.448)  ( 0.00,  0.00,  0.00)
    electro ( -1.817,  -0.283,  -0.232)  ( -1.817,  -0.283,  -0.232)  ( 0.00,  0.00,  0.00)
24       (  0.043,  -0.024,   0.098)  (  0.044,  -0.020,   0.099)  ( 0.00,  0.01,  0.01)
    bond    (  0.429,   2.379,  -0.283)  (  0.429,   2.383,  -0.283)  ( 0.00,  0.13,  0.00)
    angle   (  0.284,  -0.374,  -2.715)  (  0.285,  -0.374,  -2.714)  ( 0.02,  0.00,  0.02)
    strbnd  ( -0.744,  -0.761,   0.185)  ( -0.744,  -0.761,   0.185)  ( 0.00,  0.00,  0.00)
    torsion ( -0.625,   0.065,  -0.401)  ( -0.625,   0.065,  -0.401)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.699,  -1.332,   3.313)  (  0.699,  -1.332,   3.313)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  0.043,   0.048,   0.062)  (  0.045,   0.048,   0.064)  ( 0.01,  0.00,  0.02)
    bond    ( -0.012,  -0.007,  -0.021)  ( -0.011,  -0.007,  -0.018)  ( 0.00,  0.00,  0.00)
    angle   ( -1.034,   6.306,  -1.664)  ( -1.034,   6.306,  -1.664)  ( 0.04,  0.01,  0.01)
    strbnd  ( -0.562,   0.219,   0.095)  ( -0.562,   0.219,   0.095)  ( 0.00,  0.00,  0.00)
    torsion ( -0.037,  -1.134,   0.433)  ( -0.037,  -1.134,   0.433)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.688,  -5.336,   1.218)  (  1.688,  -5.336,   1.218)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( -0.284,  -0.046,  -0.073)  ( -0.284,  -0.045,  -0.071)  ( 0.02,  0.01,  0.02)
    bond    ( -0.628,   1.336,   2.092)  ( -0.627,   1.337,   2.095)  ( 0.01,  0.07,  0.11)
    angle   ( -0.745,  -7.579,   4.614)  ( -0.744,  -7.579,   4.614)  ( 0.03,  0.01,  0.00)
    strbnd  ( -0.133,  -0.439,   0.449)  ( -0.133,  -0.439,   0.449)  ( 0.00,  0.00,  0.00)
    torsion ( -0.063,   0.000,  -0.019)  ( -0.063,   0.000,  -0.019)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.284,   6.636,  -7.210)  (  1.284,   6.636,  -7.210)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( -0.055,   0.024,   0.090)  ( -0.053,   0.026,   0.091)  ( 0.01,  0.00,  0.01)
    bond    (  0.526,  -0.388,   0.144)  (  0.528,  -0.387,   0.144)  ( 0.11,  0.04,  0.00)
    angle   (  0.050,  -0.042,  -0.294)  (  0.050,  -0.042,  -0.294)  ( 0.00,  0.00,  0.02)
    strbnd  ( -0.519,  -0.146,   0.412)  ( -0.519,  -0.147,   0.412)  ( 0.00,  0.00,  0.00)
    torsion (  0.024,   0.049,   0.043)  (  0.024,   0.049,   0.043)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.136,   0.552,  -0.214)  ( -0.136,   0.552,  -0.214)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (  0.016,  -0.066,  -0.165)  (  0.019,  -0.065,  -0.164)  ( 0.00,  0.01,  0.01)
    bond    ( -0.618,  -0.478,  -0.203)  ( -0.616,  -0.477,  -0.203)  ( 0.12,  0.06,  0.00)
    angle   (  0.508,  -0.622,  -0.082)  (  0.508,  -0.622,  -0.081)  ( 0.01,  0.02,  0.00)
    strbnd  (  0.062,  -0.250,   0.582)  (  0.062,  -0.250,   0.582)  ( 0.00,  0.00,  0.00)
    torsion (  0.032,  -0.035,  -0.016)  (  0.032,  -0.035,  -0.016)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.032,   1.319,  -0.446)  (  0.032,   1.319,  -0.446)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( -0.044,   0.019,   0.206)  ( -0.042,   0.021,   0.208)  ( 0.01,  0.00,  0.03)
    bond    (  0.190,  -0.138,   0.157)  (  0.192,  -0.137,   0.158)  ( 0.03,  0.01,  0.02)
    angle   ( -1.278,  -5.641,  -3.328)  ( -1.277,  -5.640,  -3.328)  ( 0.02,  0.01,  0.01)
    strbnd  ( -0.058,  -0.697,   0.159)  ( -0.058,  -0.697,   0.159)  ( 0.00,  0.00,  0.00)
    torsion ( -0.378,   0.160,   0.596)  ( -0.378,   0.160,   0.596)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.480,   6.335,   2.623)  (  1.480,   6.335,   2.623)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (  0.054,  -0.026,   0.142)  (  0.055,  -0.025,   0.144)  ( 0.01,  0.00,  0.03)
    bond    ( -0.443,  -0.386,   0.756)  ( -0.442,  -0.386,   0.759)  ( 0.03,  0.02,  0.16)
    angle   ( -0.262,  -0.474,  -0.393)  ( -0.261,  -0.474,  -0.393)  ( 0.01,  0.02,  0.01)
    strbnd  ( -0.413,  -0.294,  -0.338)  ( -0.413,  -0.294,  -0.338)  ( 0.00,  0.00,  0.00)
    torsion (  0.017,  -0.020,  -0.001)  (  0.017,  -0.020,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.154,   1.148,   0.117)  (  1.155,   1.148,   0.117)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       ( -0.052,   0.041,   0.085)  ( -0.051,   0.043,   0.086)  ( 0.01,  0.01,  0.01)
    bond    (  0.468,  -0.992,  -0.774)  (  0.469,  -0.990,  -0.773)  ( 0.02,  0.18,  0.09)
    angle   ( -4.788,   0.065,  -2.987)  ( -4.788,   0.065,  -2.987)  ( 0.01,  0.00,  0.01)
    strbnd  ( -0.780,   0.245,   0.269)  ( -0.780,   0.245,   0.269)  ( 0.00,  0.00,  0.00)
    torsion (  0.095,  -0.413,   0.587)  (  0.095,  -0.413,   0.587)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.954,   1.137,   2.990)  (  4.954,   1.137,   2.990)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (  0.029,  -0.014,  -0.100)  (  0.031,  -0.012,  -0.100)  ( 0.01,  0.00,  0.01)
    bond    (  0.990,   1.125,   0.207)  (  0.992,   1.126,   0.207)  ( 0.14,  0.17,  0.00)
    angle   (  3.214,  -2.731,  -0.541)  (  3.214,  -2.730,  -0.540)  ( 0.01,  0.01,  0.02)
    strbnd  (  0.051,  -0.498,  -0.006)  (  0.050,  -0.498,  -0.006)  ( 0.00,  0.00,  0.00)
    torsion ( -0.050,  -0.015,   0.320)  ( -0.050,  -0.015,   0.320)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.176,   2.106,  -0.080)  ( -4.176,   2.106,  -0.080)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (  0.011,   0.007,  -0.103)  (  0.012,   0.009,  -0.100)  ( 0.00,  0.00,  0.02)
    bond    (  0.411,  -0.710,  -1.123)  (  0.412,  -0.709,  -1.121)  ( 0.01,  0.06,  0.20)
    angle   (  2.741,   1.372,   0.138)  (  2.741,   1.373,   0.138)  ( 0.02,  0.03,  0.00)
    strbnd  (  0.276,  -0.000,   0.286)  (  0.276,  -0.000,   0.286)  ( 0.00,  0.00,  0.00)
    torsion ( -0.286,  -0.647,   0.304)  ( -0.286,  -0.647,   0.304)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.131,  -0.007,   0.292)  ( -3.131,  -0.007,   0.292)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (  0.075,  -0.007,  -0.103)  (  0.076,  -0.006,  -0.101)  ( 0.00,  0.00,  0.02)
    bond    (  0.035,  -0.551,   0.735)  (  0.035,  -0.550,   0.737)  ( 0.00,  0.07,  0.16)
    angle   (  1.556,   0.759,   0.492)  (  1.556,   0.759,   0.493)  ( 0.03,  0.02,  0.01)
    strbnd  (  0.359,  -0.089,  -0.017)  (  0.359,  -0.089,  -0.017)  ( 0.00,  0.00,  0.00)
    torsion ( -0.120,  -0.433,  -0.317)  ( -0.120,  -0.433,  -0.317)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.755,   0.308,  -0.996)  ( -1.755,   0.308,  -0.996)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( -0.005,  -0.078,  -0.131)  ( -0.004,  -0.075,  -0.124)  ( 0.00,  0.03,  0.09)
    bond    (  0.213,   0.288,  -0.021)  (  0.214,   0.290,  -0.021)  ( 0.03,  0.07,  0.00)
    angle   ( -0.766,   0.552,  -0.161)  ( -0.765,   0.552,  -0.161)  ( 0.03,  0.01,  0.00)
    strbnd  ( -0.809,  -1.857,   0.199)  ( -0.809,  -1.857,   0.199)  ( 0.01,  0.01,  0.00)
    torsion (  0.008,  -0.011,  -0.071)  (  0.008,  -0.011,  -0.071)  ( 0.00,  0.00,  0.00)
    oop     (  0.003,  -0.004,  -0.026)  (  0.002,  -0.003,  -0.019)  ( 0.00,  0.00,  0.02)
    vdw     (  0.483,   0.490,  -0.022)  (  0.483,   0.490,  -0.022)  ( 0.00,  0.00,  0.00)
    electro (  0.863,   0.463,  -0.029)  (  0.863,   0.463,  -0.029)  ( 0.00,  0.00,  0.00)
36       (  0.039,  -0.043,  -0.102)  (  0.043,  -0.043,  -0.102)  ( 0.01,  0.00,  0.00)
    bond    ( -5.388,   0.685,  -0.688)  ( -5.385,   0.685,  -0.688)  ( 0.07,  0.01,  0.01)
    angle   (  0.045,   0.310,  -0.042)  (  0.045,   0.310,  -0.042)  ( 0.00,  0.02,  0.00)
    strbnd  (  2.007,  -0.547,   0.301)  (  2.007,  -0.547,   0.301)  ( 0.00,  0.00,  0.00)
    torsion (  0.009,  -0.013,  -0.086)  (  0.009,  -0.013,  -0.086)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,   0.000,   0.002)  ( -0.000,   0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  0.744,   0.022,   0.078)  (  0.744,   0.022,   0.078)  ( 0.00,  0.00,  0.00)
    electro (  2.623,  -0.500,   0.334)  (  2.623,  -0.500,   0.334)  ( 0.00,  0.00,  0.00)
37       ( -0.027,  -0.061,  -0.022)  ( -0.026,  -0.058,  -0.020)  ( 0.00,  0.02,  0.01)
    bond    ( -2.234,   4.953,  -0.997)  ( -2.234,   4.956,  -0.997)  ( 0.03,  0.06,  0.01)
    angle   ( -0.493,  -0.226,  -0.021)  ( -0.492,  -0.226,  -0.021)  ( 0.03,  0.00,  0.00)
    strbnd  (  1.102,  -1.804,   0.396)  (  1.102,  -1.804,   0.396)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,   0.002,   0.011)  ( -0.001,   0.002,   0.012)  ( 0.00,  0.00,  0.00)
    oop     (  0.001,  -0.001,  -0.009)  (  0.001,  -0.001,  -0.007)  ( 0.00,  0.00,  0.00)
    vdw     (  0.196,  -0.712,   0.129)  (  0.196,  -0.712,   0.129)  ( 0.00,  0.00,  0.00)
    electro (  1.404,  -2.274,   0.469)  (  1.404,  -2.274,   0.469)  ( 0.00,  0.00,  0.00)
38       (  0.019,   0.061,   0.056)  (  0.020,   0.065,   0.067)  ( 0.00,  0.03,  0.06)
    bond    ( -0.248,  -0.326,   0.024)  ( -0.247,  -0.323,   0.024)  ( 0.03,  0.08,  0.00)
    angle   ( -1.156,   0.864,  -0.242)  ( -1.156,   0.864,  -0.242)  ( 0.04,  0.02,  0.00)
    strbnd  (  1.472,   1.234,  -0.033)  (  1.472,   1.233,  -0.033)  ( 0.01,  0.01,  0.00)
    torsion ( -0.015,   0.023,   0.150)  ( -0.015,   0.023,   0.150)  ( 0.00,  0.00,  0.00)
    oop     (  0.004,  -0.006,  -0.042)  (  0.003,  -0.005,  -0.031)  ( 0.00,  0.00,  0.04)
    vdw     ( -0.337,  -0.586,   0.052)  ( -0.337,  -0.586,   0.052)  ( 0.00,  0.00,  0.00)
    electro (  0.300,  -1.141,   0.147)  (  0.300,  -1.141,   0.147)  ( 0.00,  0.00,  0.00)
39       ( -0.025,  -0.212,  -0.118)  ( -0.033,  -0.196,  -0.032)  ( 0.02,  0.33,  1.01)
    bond    ( -2.128,  -7.641,   0.774)  ( -2.127,  -7.637,   0.774)  ( 0.02,  0.06,  0.01)
    angle   (  7.287,  -1.932,   0.965)  (  7.287,  -1.932,   0.965)  ( 0.01,  0.00,  0.00)
    strbnd  ( -1.394,   0.381,  -0.179)  ( -1.394,   0.381,  -0.179)  ( 0.00,  0.00,  0.00)
    torsion (  0.097,  -0.119,  -0.912)  (  0.097,  -0.119,  -0.912)  ( 0.00,  0.00,  0.02)
    oop     (  0.030,  -0.038,  -0.291)  (  0.020,  -0.026,  -0.205)  ( 0.03,  0.04,  2.49)
    vdw     (  5.783,  -0.113,   0.437)  (  5.783,  -0.113,   0.437)  ( 0.00,  0.00,  0.00)
    electro ( -9.700,   9.250,  -0.911)  ( -9.700,   9.250,  -0.911)  ( 0.00,  0.00,  0.00)
40       (  0.037,   0.075,   0.127)  (  0.044,   0.072,   0.093)  ( 0.03,  0.02,  0.43)
    bond    ( -0.441,  -0.303,  -0.003)  ( -0.437,  -0.302,  -0.003)  ( 0.15,  0.05,  0.00)
    angle   (  0.349,  -0.508,   0.117)  (  0.349,  -0.508,   0.117)  ( 0.01,  0.03,  0.00)
    strbnd  (  0.304,  -0.485,   0.107)  (  0.304,  -0.485,   0.107)  ( 0.00,  0.00,  0.00)
    torsion ( -0.116,   0.156,   1.079)  ( -0.116,   0.156,   1.079)  ( 0.00,  0.00,  0.02)
    oop     ( -0.012,   0.017,   0.116)  ( -0.009,   0.012,   0.082)  ( 0.00,  0.01,  0.40)
    vdw     ( -0.500,   0.148,  -0.070)  ( -0.500,   0.148,  -0.070)  ( 0.00,  0.00,  0.00)
    electro (  0.452,   1.051,  -1.218)  (  0.452,   1.051,  -1.218)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 14 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 15 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ibuprofen.gpr
 # Expected       312.57114, found 312.571141&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/ibuprofen.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       (-37.071, -81.376,  -8.715)  (-37.065, -81.370,  -8.711)  ( 0.01,  0.01,  0.06)
    bond    ( -6.927,  -6.224,   0.204)  ( -6.923,  -6.219,   0.208)  ( 0.06,  0.08,  0.07)
    angle   (-43.402, -92.594,  -5.039)  (-43.401, -92.592,  -5.037)  ( 0.00,  0.00,  0.03)
    strbnd  ( 17.017,  19.808,  -1.013)  ( 17.017,  19.807,  -1.014)  ( 0.00,  0.00,  0.03)
    torsion ( -0.140,   0.089,  -0.286)  ( -0.140,   0.089,  -0.286)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.619,  -2.454,  -2.581)  ( -3.619,  -2.454,  -2.581)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-39.440,   2.545,  50.699)  (-39.434,   2.550,  50.705)  ( 0.01,  0.18,  0.01)
    bond    (  2.221,   0.743,  -4.295)  (  2.225,   0.746,  -4.291)  ( 0.19,  0.23,  0.10)
    angle   (-30.186,   6.101,  43.460)  (-30.184,   6.103,  43.462)  ( 0.01,  0.03,  0.00)
    strbnd  ( -8.549,  -6.318,  14.014)  ( -8.550,  -6.318,  14.014)  ( 0.01,  0.01,  0.00)
    torsion ( -0.634,  -0.131,  -0.999)  ( -0.634,  -0.131,  -0.999)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.292,   2.150,  -1.482)  ( -2.292,   2.150,  -1.482)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -1.587,  40.280, -47.662)  ( -1.722,  39.405, -48.005)  ( 8.54,  2.17,  0.72)
    bond    ( -0.509,   0.513,  -6.367)  ( -0.504,   0.517,  -6.364)  ( 0.25,  0.20,  0.05)
    angle   ( 13.510,  14.854, -42.989)  ( 13.512,  14.856, -42.987)  ( 0.01,  0.01,  0.00)
    strbnd  (-14.490,   2.857,  -6.469)  (-14.491,   2.857,  -6.469)  ( 0.01,  0.01,  0.01)
    torsion (  0.820,  13.476,   6.086)  (  0.820,  13.476,   6.086)  ( 0.00,  0.00,  0.00)
    oop     ( -0.965,   7.596,   5.726)  ( -1.106,   6.716,   5.379)  (13.62, 11.59,  6.06)
    vdw     (  0.470,   0.645,  -3.276)  (  0.471,   0.645,  -3.276)  ( 0.00,  0.00,  0.00)
    electro ( -0.424,   0.339,  -0.373)  ( -0.424,   0.339,  -0.373)  ( 0.00,  0.00,  0.00)
 4       ( -3.751,  47.995,  62.741)  ( -3.746,  48.001,  62.747)  ( 0.14,  0.01,  0.01)
    bond    ( -1.086,   2.486,   9.511)  ( -1.082,   2.490,   9.516)  ( 0.33,  0.17,  0.05)
    angle   ( -4.863,  51.765,  70.840)  ( -4.861,  51.767,  70.842)  ( 0.04,  0.00,  0.00)
    strbnd  (  4.026, -10.734, -19.678)  (  4.025, -10.735, -19.679)  ( 0.01,  0.01,  0.00)
    torsion (  0.144,   0.700,  -0.367)  (  0.144,   0.700,  -0.367)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.972,   3.779,   2.435)  ( -1.972,   3.779,   2.435)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-38.271, -131.602, -55.190)  (-37.494, -129.117, -53.081)  ( 2.03,  1.89,  3.82)
    bond    (  8.677, -20.361, -12.122)  (  8.681, -20.358, -12.120)  ( 0.05,  0.02,  0.02)
    angle   (-36.816, -71.485,  11.280)  (-36.815, -71.484,  11.281)  ( 0.00,  0.00,  0.01)
    strbnd  ( 12.873,  -5.181,   7.752)  ( 12.873,  -5.181,   7.752)  ( 0.00,  0.00,  0.01)
    torsion (-12.225, -29.725, -36.119)  (-12.225, -29.725, -36.119)  ( 0.00,  0.00,  0.00)
    oop     ( -5.173, -18.341, -24.805)  ( -4.402, -15.861, -22.699)  (14.90, 13.52,  8.49)
    vdw     ( -5.982,  13.988,  -1.401)  ( -5.982,  13.988,  -1.401)  ( 0.00,  0.00,  0.00)
    electro (  0.375,  -0.497,   0.224)  (  0.375,  -0.497,   0.224)  ( 0.00,  0.00,  0.00)
 6       ( 59.513,  60.458,  25.145)  ( 58.644,  59.030,  24.319)  ( 1.46,  2.36,  3.29)
    bond    ( -6.489, -13.464,  18.197)  ( -6.484, -13.459,  18.199)  ( 0.07,  0.03,  0.01)
    angle   ( 37.474,  50.266, -17.881)  ( 37.475,  50.267, -17.880)  ( 0.00,  0.00,  0.00)
    strbnd  ( -3.586,  -8.839,   8.084)  ( -3.586,  -8.840,   8.084)  ( 0.01,  0.00,  0.00)
    torsion ( 14.651,  15.387,  15.614)  ( 14.652,  15.387,  15.614)  ( 0.00,  0.00,  0.00)
    oop     (  6.902,   8.223,   9.114)  (  6.027,   6.790,   8.285)  (12.68, 17.43,  9.10)
    vdw     ( 10.851,   9.567,  -8.214)  ( 10.851,   9.567,  -8.214)  ( 0.00,  0.00,  0.00)
    electro ( -0.290,  -0.682,   0.230)  ( -0.290,  -0.682,   0.230)  ( 0.00,  0.00,  0.00)
 7       (-98.956, -30.139,   2.983)  (-97.636, -30.331,   3.395)  ( 1.33,  0.64, 13.82)
    bond    (-36.725,  -4.863,   0.794)  (-36.719,  -4.859,   0.795)  ( 0.01,  0.08,  0.10)
    angle   (-40.863, -11.120,  -0.055)  (-40.862, -11.119,  -0.054)  ( 0.00,  0.01,  0.00)
    strbnd  (-15.761, -19.921,  -0.231)  (-15.761, -19.921,  -0.231)  ( 0.00,  0.00,  0.00)
    torsion (-16.151,  -0.989,   6.996)  (-16.151,  -0.989,   6.996)  ( 0.00,  0.00,  0.01)
    oop     ( -6.016,   1.821,   0.042)  ( -4.703,   1.623,   0.453)  (21.83, 10.88,  1.72)
    vdw     ( 17.210,   4.832,  -4.353)  ( 17.210,   4.832,  -4.353)  ( 0.00,  0.00,  0.00)
    electro ( -0.650,   0.102,  -0.210)  ( -0.650,   0.102,  -0.210)  ( 0.00,  0.00,  0.00)
 8       ( 42.185, -29.144,  98.083)  ( 40.944, -28.827,  95.639)  ( 2.94,  1.09,  2.49)
    bond    (  0.216,  13.908,  14.316)  (  0.219,  13.913,  14.318)  ( 0.06,  0.04,  0.01)
    angle   ( 11.911, -57.274,  71.476)  ( 11.912, -57.273,  71.477)  ( 0.01,  0.00,  0.00)
    strbnd  ( 12.084,  27.937,   5.019)  ( 12.083,  27.936,   5.019)  ( 0.00,  0.00,  0.00)
    torsion (  3.830,   0.035,  -3.860)  (  3.830,   0.035,  -3.861)  ( 0.00,  0.00,  0.00)
    oop     (  8.502,  -2.885,  10.470)  (  7.257,  -2.574,   8.023)  (14.64, 10.77, 23.37)
    vdw     (  7.198, -12.680,   2.190)  (  7.198, -12.679,   2.190)  ( 0.00,  0.00,  0.00)
    electro ( -1.556,   1.815,  -1.528)  ( -1.556,   1.815,  -1.528)  ( 0.00,  0.00,  0.00)
 9       ( 32.579,  54.117, -119.425)  ( 32.052,  52.770, -118.804)  ( 1.62,  2.49,  0.52)
    bond    ( 10.817,   9.746, -28.895)  ( 10.820,   9.748, -28.889)  ( 0.03,  0.02,  0.02)
    angle   ( 35.048,  51.699, -72.855)  ( 35.049,  51.701, -72.854)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.568,  -4.532,  -8.148)  (  0.567,  -4.532,  -8.148)  ( 0.01,  0.00,  0.00)
    torsion ( -4.728,  -6.617, -17.279)  ( -4.728,  -6.618, -17.279)  ( 0.00,  0.01,  0.00)
    oop     (  1.204,   5.714,  -4.530)  (  0.673,   4.364,  -3.916)  (44.10, 23.64, 13.56)
    vdw     (-10.056,  -2.512,  13.221)  (-10.056,  -2.512,  13.222)  ( 0.00,  0.01,  0.00)
    electro ( -0.274,   0.620,  -0.940)  ( -0.274,   0.620,  -0.940)  ( 0.00,  0.00,  0.00)
10       ( -2.422, -19.944, 132.061)  ( -2.504, -20.293, 130.342)  ( 3.37,  1.75,  1.30)
    bond    ( 18.269,   6.335,   0.967)  ( 18.273,   6.339,   0.970)  ( 0.02,  0.07,  0.23)
    angle   (-27.608, -36.500,  84.948)  (-27.607, -36.499,  84.949)  ( 0.01,  0.00,  0.00)
    strbnd  ( 12.909,   2.314,  -3.833)  ( 12.909,   2.313,  -3.833)  ( 0.00,  0.02,  0.00)
    torsion (  5.991,   6.815,  25.602)  (  5.992,   6.815,  25.602)  ( 0.00,  0.00,  0.00)
    oop     (  0.582,   4.956,  14.815)  (  0.494,   4.602,  13.092)  ( 5.12,  7.15, 11.63)
    vdw     (-13.143,  -3.558,   9.953)  (-13.143,  -3.558,   9.953)  ( 0.00,  0.00,  0.00)
    electro (  0.579,  -0.306,  -0.390)  (  0.579,  -0.306,  -0.390)  ( 0.00,  0.00,  0.00)
11       ( 47.658, -22.934, -63.453)  ( 37.348, -23.646, -54.930)  (21.63,  3.10, 13.43)
    bond    (-11.073,   2.546,  -4.952)  (-11.069,   2.550,  -4.949)  ( 0.04,  0.18,  0.08)
    angle   ( 14.987, -10.150, -58.721)  ( 14.989, -10.148, -58.720)  ( 0.01,  0.02,  0.00)
    strbnd  ( 17.268, -10.877,  11.808)  ( 17.267, -10.878,  11.807)  ( 0.00,  0.01,  0.01)
    torsion (  6.129,   3.198,  15.790)  (  6.129,   3.198,  15.790)  ( 0.00,  0.00,  0.00)
    oop     ( 18.909,  -6.132, -23.821)  (  8.594,  -6.849, -15.303)  (54.55, 11.70, 35.76)
    vdw     (  1.389,  -2.494,  -1.281)  (  1.389,  -2.494,  -1.281)  ( 0.00,  0.00,  0.00)
    electro (  0.050,   0.975,  -2.276)  (  0.050,   0.975,  -2.276)  ( 0.00,  0.00,  0.00)
12       ( 31.693, -14.126, -65.659)  ( 31.699, -14.121, -65.654)  ( 0.02,  0.04,  0.01)
    bond    (  4.025,  -3.189,  -9.311)  (  4.029,  -3.185,  -9.307)  ( 0.10,  0.12,  0.05)
    angle   ( 35.137, -10.001, -64.710)  ( 35.139, -10.000, -64.708)  ( 0.01,  0.02,  0.00)
    strbnd  ( -5.006,   4.101,  11.332)  ( -5.006,   4.101,  11.331)  ( 0.01,  0.01,  0.01)
    torsion ( -2.865,  -1.801,  -0.962)  ( -2.865,  -1.801,  -0.962)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.401,  -3.237,  -2.009)  (  0.401,  -3.237,  -2.009)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-44.560, -77.865, 136.018)  (-22.966, -75.645, 120.406)  (48.46,  2.85, 11.48)
    bond    ( -2.460,   4.359,  -8.933)  ( -2.456,   4.363,  -8.924)  ( 0.18,  0.08,  0.10)
    angle   ( 29.524, -109.944, 134.355)  ( 29.525, -109.943, 134.355)  ( 0.00,  0.00,  0.00)
    strbnd  (-14.951,  10.444, -24.236)  (-14.952,  10.444, -24.237)  ( 0.01,  0.01,  0.01)
    torsion (  1.176,  -3.022,  -8.395)  (  1.176,  -3.022,  -8.396)  ( 0.06,  0.00,  0.01)
    oop     (-59.918,  23.973,  41.115)  (-38.329,  26.188,  25.495)  (36.03,  9.24, 37.99)
    vdw     (  2.638,  -3.488,   3.777)  (  2.638,  -3.488,   3.777)  ( 0.00,  0.00,  0.00)
    electro ( -0.568,  -0.188,  -1.665)  ( -0.568,  -0.188,  -1.665)  ( 0.00,  0.00,  0.00)
14       (-73.793,  -5.351, -43.764)  (-73.876,  -5.015, -43.336)  ( 0.11,  6.28,  0.98)
    bond    (  2.608,   8.877,  -3.192)  (  2.609,   8.883,  -3.190)  ( 0.05,  0.08,  0.06)
    angle   (-96.717,  12.033, -55.420)  (-96.718,  12.033, -55.421)  ( 0.00,  0.00,  0.00)
    strbnd  ( -4.852, -11.840,   5.276)  ( -4.852, -11.840,   5.276)  ( 0.00,  0.00,  0.00)
    torsion ( 10.732,   0.866,  11.025)  ( 10.727,   0.866,  11.022)  ( 0.04,  0.00,  0.03)
    oop     ( 12.415, -11.706,  -6.666)  ( 12.336, -11.378,  -6.235)  ( 0.64,  2.81,  6.46)
    vdw     (  1.533,  -1.793,   3.152)  (  1.533,  -1.793,   3.152)  ( 0.00,  0.00,  0.00)
    electro (  0.489,  -1.787,   2.061)  (  0.489,  -1.787,   2.061)  ( 0.00,  0.00,  0.00)
15       ( 69.217, 103.058, -57.300)  ( 58.287, 101.326, -49.815)  (15.79,  1.68, 13.06)
    bond    (  2.268,   0.918,   3.526)  (  2.270,   0.919,   3.532)  ( 0.12,  0.04,  0.18)
    angle   ( 44.112, 114.284, -58.082)  ( 44.112, 114.285, -58.082)  ( 0.00,  0.00,  0.00)
    strbnd  (  4.938,   2.167,   7.080)  (  4.938,   2.167,   7.080)  ( 0.01,  0.01,  0.00)
    torsion ( -3.970,   1.783,   2.088)  ( -3.970,   1.783,   2.088)  ( 0.00,  0.00,  0.00)
    oop     ( 25.969,  -6.898, -14.899)  ( 15.036,  -8.630,  -7.421)  (42.10, 25.12, 50.19)
    vdw     (  0.595,  -0.501,   0.672)  (  0.595,  -0.501,   0.672)  ( 0.00,  0.00,  0.00)
    electro ( -4.694,  -8.696,   2.316)  ( -4.694,  -8.696,   2.316)  ( 0.00,  0.00,  0.00)
16       ( 10.862,  32.599,  -5.193)  ( 10.865,  32.600,  -5.193)  ( 0.03,  0.00,  0.01)
    bond    ( 12.564,  -2.116,  -0.282)  ( 12.567,  -2.116,  -0.282)  ( 0.02,  0.01,  0.00)
    angle   (  5.837,  35.355,  -5.146)  (  5.837,  35.356,  -5.145)  ( 0.00,  0.00,  0.01)
    strbnd  ( -6.059,   0.924,   0.108)  ( -6.059,   0.924,   0.108)  ( 0.00,  0.00,  0.00)
    torsion (  0.025,   0.048,   0.772)  (  0.025,   0.048,   0.772)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.506,  -1.612,  -0.646)  ( -1.506,  -1.612,  -0.646)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 23.103,  21.401, -13.776)  ( 23.104,  21.402, -13.774)  ( 0.00,  0.01,  0.01)
    bond    (  0.013,   7.722,   8.189)  (  0.013,   7.723,   8.191)  ( 0.00,  0.02,  0.02)
    angle   ( 23.319,  18.754, -17.721)  ( 23.319,  18.754, -17.721)  ( 0.00,  0.00,  0.00)
    strbnd  ( -0.112,  -4.214,  -4.433)  ( -0.112,  -4.214,  -4.433)  ( 0.00,  0.00,  0.00)
    torsion (  0.254,  -0.191,   0.179)  (  0.254,  -0.191,   0.179)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.370,  -0.670,   0.010)  ( -0.370,  -0.670,   0.010)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       ( 33.905,  23.432,  15.855)  ( 33.905,  23.433,  15.857)  ( 0.00,  0.01,  0.01)
    bond    (  0.412,   8.070,  -8.784)  (  0.412,   8.072,  -8.782)  ( 0.00,  0.02,  0.02)
    angle   ( 35.086,  20.894,  20.850)  ( 35.086,  20.894,  20.850)  ( 0.00,  0.00,  0.00)
    strbnd  ( -0.271,  -3.980,   4.289)  ( -0.271,  -3.980,   4.289)  ( 0.00,  0.00,  0.00)
    torsion (  0.050,  -0.044,  -0.038)  (  0.050,  -0.044,  -0.038)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.372,  -1.509,  -0.461)  ( -1.372,  -1.509,  -0.461)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (  7.842,  13.549,  15.910)  (  7.843,  13.550,  15.912)  ( 0.01,  0.01,  0.01)
    bond    (  4.298,  -5.557,  10.878)  (  4.298,  -5.556,  10.880)  ( 0.01,  0.01,  0.02)
    angle   (  5.140,  17.037,   6.669)  (  5.140,  17.038,   6.669)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.222,   0.518,  -1.052)  ( -0.222,   0.518,  -1.052)  ( 0.00,  0.00,  0.00)
    torsion (  0.333,  -0.021,  -0.143)  (  0.333,  -0.021,  -0.143)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.708,   1.572,  -0.443)  ( -1.707,   1.572,  -0.443)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( 24.224,   9.746,   3.735)  ( 24.225,   9.747,   3.737)  ( 0.00,  0.01,  0.06)
    bond    (  0.205,   8.145,  12.537)  (  0.205,   8.145,  12.539)  ( 0.00,  0.01,  0.02)
    angle   ( 25.409,   2.588,  -2.097)  ( 25.410,   2.588,  -2.096)  ( 0.00,  0.01,  0.01)
    strbnd  ( -0.027,  -1.112,  -1.794)  ( -0.027,  -1.112,  -1.794)  ( 0.00,  0.00,  0.00)
    torsion ( -0.559,  -0.957,   0.631)  ( -0.559,  -0.957,   0.631)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.804,   1.083,  -5.542)  ( -0.804,   1.083,  -5.542)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-14.013,  -5.680, -13.049)  (-14.012,  -5.678, -13.048)  ( 0.01,  0.05,  0.00)
    bond    ( -4.768, -11.721,   2.019)  ( -4.767, -11.719,   2.019)  ( 0.01,  0.02,  0.01)
    angle   ( -9.742,   1.595, -13.739)  ( -9.741,   1.596, -13.738)  ( 0.01,  0.01,  0.00)
    strbnd  (  0.618,   1.701,  -0.398)  (  0.618,   1.701,  -0.398)  ( 0.00,  0.00,  0.00)
    torsion (  0.143,   0.073,   0.763)  (  0.143,   0.073,   0.763)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.264,   2.671,  -1.694)  ( -0.263,   2.671,  -1.694)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-11.466, -17.731, -34.136)  (-11.464, -17.730, -34.135)  ( 0.02,  0.00,  0.00)
    bond    ( 10.515,  -3.031,  -3.787)  ( 10.517,  -3.031,  -3.787)  ( 0.02,  0.01,  0.01)
    angle   (-17.099, -17.314, -33.631)  (-17.099, -17.314, -33.630)  ( 0.00,  0.00,  0.00)
    strbnd  ( -4.687,   1.352,   1.833)  ( -4.687,   1.352,   1.833)  ( 0.00,  0.00,  0.00)
    torsion ( -0.036,  -0.401,   0.221)  ( -0.036,  -0.401,   0.221)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.159,   1.663,   1.228)  ( -0.159,   1.663,   1.228)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (  9.654, -14.702, -18.379)  (  9.655, -14.701, -18.377)  ( 0.01,  0.01,  0.01)
    bond    ( -3.691,   5.903, -11.062)  ( -3.691,   5.904, -11.060)  ( 0.01,  0.01,  0.02)
    angle   ( 12.954, -19.869, -14.929)  ( 12.955, -19.869, -14.929)  ( 0.00,  0.00,  0.00)
    strbnd  (  1.489,  -2.332,   4.677)  (  1.489,  -2.332,   4.677)  ( 0.00,  0.00,  0.00)
    torsion ( -0.247,  -0.126,   0.015)  ( -0.247,  -0.126,   0.015)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.851,   1.721,   2.920)  ( -0.851,   1.721,   2.920)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 14.540,  -7.004, -26.289)  ( 14.541,  -7.001, -26.288)  ( 0.01,  0.04,  0.00)
    bond    ( -4.182,  -9.280,  -1.526)  ( -4.182,  -9.277,  -1.526)  ( 0.01,  0.03,  0.01)
    angle   ( 17.244,  -3.364, -26.810)  ( 17.244,  -3.364, -26.810)  ( 0.00,  0.00,  0.00)
    strbnd  (  2.112,   4.668,   0.929)  (  2.112,   4.668,   0.929)  ( 0.00,  0.00,  0.00)
    torsion (  0.199,  -0.107,   0.107)  (  0.199,  -0.107,   0.107)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.832,   1.079,   1.011)  ( -0.832,   1.079,   1.011)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( -2.146,  11.421,  -4.557)  ( -2.026,  11.509,  -4.281)  ( 5.59,  0.77,  6.06)
    bond    ( -0.517,  -0.905,   0.501)  ( -0.517,  -0.903,   0.502)  ( 0.04,  0.21,  0.04)
    angle   ( -5.394,   1.536,  -2.786)  ( -5.394,   1.537,  -2.786)  ( 0.01,  0.01,  0.00)
    strbnd  (  4.247,   7.387,  -3.525)  (  4.247,   7.387,  -3.525)  ( 0.00,  0.00,  0.00)
    torsion ( -1.245,   2.897,   3.928)  ( -1.245,   2.897,   3.928)  ( 0.00,  0.00,  0.00)
    oop     ( -0.602,  -0.657,  -1.800)  ( -0.483,  -0.571,  -1.525)  ( 7.15,  5.60, 15.30)
    vdw     (  1.342,   0.777,  -0.631)  (  1.342,   0.777,  -0.631)  ( 0.00,  0.00,  0.00)
    electro (  0.023,   0.386,  -0.243)  (  0.023,   0.386,  -0.243)  ( 0.00,  0.00,  0.00)
26       (  8.264,  -9.314, -14.985)  (  7.825,  -9.085, -14.187)  ( 5.32,  2.46,  5.32)
    bond    (  0.510,   0.130,   0.247)  (  0.513,   0.130,   0.248)  ( 0.15,  0.00,  0.02)
    angle   ( -0.687,  -4.473,   3.772)  ( -0.687,  -4.472,   3.772)  ( 0.00,  0.01,  0.00)
    strbnd  ( -3.764,  -0.803,  -0.766)  ( -3.764,  -0.803,  -0.766)  ( 0.00,  0.00,  0.01)
    torsion (  8.777,  -3.424, -16.387)  (  8.777,  -3.424, -16.387)  ( 0.00,  0.00,  0.00)
    oop     (  1.606,  -0.922,  -2.844)  (  1.164,  -0.694,  -2.047)  (27.55, 21.05, 28.02)
    vdw     (  1.106,  -0.058,   0.139)  (  1.106,  -0.058,   0.139)  ( 0.00,  0.00,  0.00)
    electro (  0.715,   0.236,   0.855)  (  0.715,   0.236,   0.855)  ( 0.00,  0.00,  0.00)
27       ( -9.529,  -0.985,   0.936)  ( -8.955,  -0.030,   0.838)  ( 6.02, 94.13,  9.18)
    bond    ( -0.257,   0.039,  -1.081)  ( -0.257,   0.039,  -1.078)  ( 0.01,  0.00,  0.33)
    angle   ( -2.751,   5.638,   0.859)  ( -2.751,   5.638,   0.859)  ( 0.01,  0.00,  0.00)
    strbnd  ( -0.092,   0.684,  -4.568)  ( -0.092,   0.685,  -4.568)  ( 0.00,  0.00,  0.00)
    torsion ( -4.710,  -4.641,   0.953)  ( -4.710,  -4.641,   0.953)  ( 0.00,  0.00,  0.00)
    oop     ( -2.117,  -3.288,   0.385)  ( -1.545,  -2.333,   0.283)  (27.05, 29.05,  3.92)
    vdw     ( -0.554,   0.339,   2.803)  ( -0.554,   0.339,   2.803)  ( 0.00,  0.00,  0.00)
    electro (  0.953,   0.243,   1.585)  (  0.953,   0.243,   1.585)  ( 0.00,  0.00,  0.00)
28       (-35.688,  35.118, -12.756)  (-35.400,  35.183, -12.318)  ( 0.81,  0.18,  3.44)
    bond    ( -0.608,  -0.110,   0.410)  ( -0.606,  -0.110,   0.411)  ( 0.16,  0.00,  0.05)
    angle   (-20.084,  33.989, -20.477)  (-20.083,  33.989, -20.477)  ( 0.00,  0.00,  0.00)
    strbnd  (-11.144,  -1.712,   8.116)  (-11.144,  -1.712,   8.116)  ( 0.00,  0.00,  0.00)
    torsion ( -1.403,   5.730,  -0.531)  ( -1.403,   5.730,  -0.531)  ( 0.00,  0.00,  0.00)
    oop     ( -1.298,  -1.456,  -2.303)  ( -1.013,  -1.392,  -1.865)  (21.97,  4.40, 18.99)
    vdw     ( -0.679,  -1.424,   2.000)  ( -0.679,  -1.424,   2.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.472,   0.102,   0.028)  ( -0.472,   0.102,   0.028)  ( 0.00,  0.00,  0.00)
29       (  6.269,   4.842,  17.665)  (  6.271,   4.844,  17.666)  ( 0.04,  0.03,  0.00)
    bond    ( 13.347,   7.815,   1.928)  ( 13.349,   7.816,   1.928)  ( 0.02,  0.01,  0.01)
    angle   ( -3.942,   1.678,  20.486)  ( -3.942,   1.679,  20.487)  ( 0.01,  0.03,  0.00)
    strbnd  ( -1.485,  -0.391,  -0.372)  ( -1.485,  -0.391,  -0.372)  ( 0.00,  0.00,  0.00)
    torsion ( -0.296,   0.484,   0.090)  ( -0.296,   0.484,   0.090)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.355,  -4.745,  -4.467)  ( -1.355,  -4.744,  -4.467)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -8.350,   0.131,  25.967)  ( -8.349,   0.134,  25.968)  ( 0.01,  0.04,  0.00)
    bond    ( -1.481,  11.557,   2.165)  ( -1.481,  11.560,   2.165)  ( 0.01,  0.03,  0.01)
    angle   ( -9.788,  -6.150,  26.139)  ( -9.788,  -6.150,  26.139)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.626,  -4.365,  -1.021)  (  0.626,  -4.365,  -1.021)  ( 0.00,  0.00,  0.00)
    torsion (  1.782,   0.049,   0.957)  (  1.782,   0.049,   0.957)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.511,  -0.961,  -2.273)  (  0.511,  -0.961,  -2.273)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-14.899,  11.820,  16.748)  (-14.898,  11.820,  16.750)  ( 0.01,  0.01,  0.01)
    bond    (  5.176,  -2.757,  10.225)  (  5.177,  -2.757,  10.227)  ( 0.01,  0.01,  0.02)
    angle   (-19.241,  13.946,  13.498)  (-19.241,  13.947,  13.498)  ( 0.00,  0.00,  0.00)
    strbnd  ( -2.072,   1.072,  -4.471)  ( -2.072,   1.072,  -4.471)  ( 0.00,  0.00,  0.00)
    torsion (  0.541,   0.941,  -0.020)  (  0.541,   0.941,  -0.020)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.698,  -1.382,  -2.484)  (  0.698,  -1.382,  -2.484)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( -4.993,  10.176,  24.023)  ( -4.991,  10.177,  24.024)  ( 0.05,  0.01,  0.00)
    bond    (-10.690,  -3.803,   2.337)  (-10.687,  -3.803,   2.338)  ( 0.02,  0.01,  0.01)
    angle   (  0.606,  13.614,  24.917)  (  0.606,  13.614,  24.917)  ( 0.00,  0.00,  0.00)
    strbnd  (  3.553,   1.168,  -0.972)  (  3.553,   1.168,  -0.972)  ( 0.00,  0.00,  0.00)
    torsion ( -0.030,   0.061,  -0.037)  ( -0.030,   0.061,  -0.037)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.567,  -0.863,  -2.222)  (  1.567,  -0.863,  -2.222)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 19.334, -14.895, -24.368)  ( 19.332, -14.890, -24.369)  ( 0.01,  0.03,  0.00)
    bond    ( -4.753, -12.511,   5.560)  ( -4.753, -12.507,   5.561)  ( 0.01,  0.03,  0.01)
    angle   ( 21.861, -17.415, -20.481)  ( 21.860, -17.414, -20.482)  ( 0.00,  0.00,  0.00)
    strbnd  (  2.809,   8.054,  -3.331)  (  2.809,   8.054,  -3.331)  ( 0.00,  0.00,  0.00)
    torsion ( -6.332,  -0.435,  -6.389)  ( -6.334,  -0.435,  -6.390)  ( 0.02,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.007,   0.074,  -0.052)  (  0.007,   0.074,  -0.052)  ( 0.00,  0.00,  0.00)
    electro (  5.743,   7.338,   0.326)  (  5.743,   7.338,   0.326)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 15 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 16 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/penicillin.gpr
 # Expected        12.31548, found 12.315477&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/penicillin.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( -0.056,  -0.051,   0.261)  ( -0.002,   0.035,   0.079)  ( 0.30,  0.44,  4.74)
    bond    (  6.922,   0.175,   2.287)  (  6.926,   0.180,   2.292)  ( 0.06,  0.08,  0.20)
    angle   ( -5.931,   2.410,   0.271)  ( -5.930,   2.412,   0.272)  ( 0.03,  0.08,  0.04)
    strbnd  (  0.198,   0.872,   0.213)  (  0.197,   0.872,   0.213)  ( 0.01,  0.04,  0.01)
    torsion (  0.668,  -0.373,  -2.325)  (  0.668,  -0.373,  -2.325)  ( 0.00,  0.00,  0.00)
    oop     ( -0.334,  -0.538,   1.283)  ( -0.285,  -0.457,   1.096)  ( 1.63,  4.32, 14.61)
    vdw     ( -0.832,  -1.739,  -0.997)  ( -0.832,  -1.739,  -0.997)  ( 0.00,  0.00,  0.00)
    electro ( -0.746,  -0.859,  -0.471)  ( -0.746,  -0.859,  -0.471)  ( 0.00,  0.00,  0.00)
 2       (  0.014,   0.361,  -0.764)  ( -0.160,   0.038,   0.015)  ( 0.24, 11.62, 59.47)
    bond    ( -2.739,   1.957,  -0.129)  ( -2.733,   1.965,  -0.128)  ( 0.24,  0.42,  0.02)
    angle   ( 14.443,  -7.136,   1.147)  ( 14.446,  -7.134,   1.148)  ( 0.02,  0.02,  0.06)
    strbnd  ( -7.334,   6.670,   1.385)  ( -7.335,   6.668,   1.385)  ( 0.01,  0.03,  0.02)
    torsion ( -0.037,   0.168,   0.014)  ( -0.037,   0.168,   0.014)  ( 0.00,  0.00,  0.00)
    oop     (  0.865,   1.488,  -3.541)  (  0.683,   1.157,  -2.764)  (15.70, 22.22, 21.93)
    vdw     ( -4.625,  -1.230,  -1.537)  ( -4.625,  -1.230,  -1.537)  ( 0.00,  0.00,  0.00)
    electro ( -0.559,  -1.556,   1.897)  ( -0.559,  -1.556,   1.897)  ( 0.00,  0.00,  0.00)
 3       ( -0.029,  -0.024,   0.069)  ( -0.028,  -0.021,   0.070)  ( 0.00,  0.01,  0.00)
    bond    (  0.134,   0.394,  -0.032)  (  0.135,   0.397,  -0.032)  ( 0.00,  0.12,  0.00)
    angle   (  1.589,  -0.626,  -1.067)  (  1.590,  -0.626,  -1.067)  ( 0.03,  0.00,  0.04)
    strbnd  (  0.319,   0.162,   0.070)  (  0.319,   0.162,   0.070)  ( 0.00,  0.00,  0.00)
    torsion ( -0.341,   0.212,   1.185)  ( -0.341,   0.212,   1.185)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.730,  -0.167,  -0.086)  ( -1.730,  -0.167,  -0.086)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (  0.009,  -0.000,   0.009)  (  0.010,   0.001,   0.011)  ( 0.00,  0.00,  0.00)
    bond    (  0.230,  -0.232,  -0.242)  (  0.231,  -0.231,  -0.241)  ( 0.03,  0.03,  0.03)
    angle   (  3.596,   2.214,   1.320)  (  3.596,   2.214,   1.320)  ( 0.01,  0.01,  0.02)
    strbnd  (  0.657,  -0.379,  -0.320)  (  0.657,  -0.379,  -0.320)  ( 0.00,  0.00,  0.00)
    torsion (  0.004,   0.023,  -0.019)  (  0.004,   0.023,  -0.019)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.478,  -1.627,  -0.730)  ( -4.478,  -1.627,  -0.730)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -0.022,  -0.019,   0.016)  ( -0.022,  -0.018,   0.019)  ( 0.00,  0.00,  0.01)
    bond    (  0.002,  -0.007,   0.018)  (  0.002,  -0.007,   0.021)  ( 0.00,  0.00,  0.01)
    angle   (  0.435,  -0.097,  -0.074)  (  0.436,  -0.096,  -0.074)  ( 0.02,  0.00,  0.00)
    strbnd  (  0.316,  -0.158,   0.593)  (  0.316,  -0.158,   0.593)  ( 0.00,  0.00,  0.00)
    torsion ( -0.046,   0.322,   0.110)  ( -0.046,   0.322,   0.110)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.730,  -0.080,  -0.631)  ( -0.730,  -0.080,  -0.631)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( -0.046,  -0.324,   0.524)  (  0.075,  -0.108,   0.034)  ( 0.55,  6.97, 25.68)
    bond    ( -2.835,   3.345,   0.762)  ( -2.831,   3.350,   0.763)  ( 0.13,  0.16,  0.02)
    angle   ( -1.494,  -1.139,  -0.542)  ( -1.493,  -1.138,  -0.541)  ( 0.03,  0.02,  0.01)
    strbnd  (  7.239,  -8.454,  -1.930)  (  7.239,  -8.454,  -1.930)  ( 0.00,  0.00,  0.00)
    torsion (  0.143,   0.217,  -0.423)  (  0.143,   0.217,  -0.423)  ( 0.00,  0.00,  0.00)
    oop     ( -0.410,  -0.742,   1.739)  ( -0.294,  -0.532,   1.248)  ( 4.76, 15.57, 28.22)
    vdw     ( -4.309,  -6.669,  -2.520)  ( -4.309,  -6.669,  -2.520)  ( 0.00,  0.00,  0.00)
    electro (  1.620,  13.118,   3.437)  (  1.620,  13.118,   3.437)  ( 0.00,  0.00,  0.00)
 7       (  0.163,   0.254,  -0.307)  (  0.073,   0.072,   0.055)  ( 1.47,  4.64, 11.10)
    bond    ( 17.866,  -2.904,   4.744)  ( 17.871,  -2.899,   4.745)  ( 0.03,  0.18,  0.03)
    angle   ( -8.512,  -0.397,  -1.184)  ( -8.510,  -0.396,  -1.183)  ( 0.02,  0.07,  0.06)
    strbnd  (  0.437,  -1.121,  -0.832)  (  0.437,  -1.122,  -0.833)  ( 0.02,  0.06,  0.02)
    torsion ( -1.343,  -1.618,   4.839)  ( -1.343,  -1.618,   4.840)  ( 0.00,  0.00,  0.01)
    oop     (  0.386,   0.773,  -1.451)  (  0.289,   0.584,  -1.092)  ( 3.73, 14.58, 24.78)
    vdw     (  1.892,   2.121,   0.955)  (  1.893,   2.121,   0.955)  ( 0.01,  0.00,  0.00)
    electro (-10.563,   3.402,  -7.378)  (-10.563,   3.402,  -7.378)  ( 0.00,  0.00,  0.00)
 8       ( -0.072,  -0.167,   0.304)  (  0.002,   0.002,  -0.018)  ( 0.53,  2.83,  9.79)
    bond    ( -1.088,   0.983,   0.272)  ( -1.086,   0.985,   0.272)  ( 0.24,  0.21,  0.00)
    angle   ( -1.860,  -1.398,  -2.356)  ( -1.859,  -1.398,  -2.356)  ( 0.02,  0.02,  0.01)
    strbnd  ( -0.431,   2.009,   1.109)  ( -0.431,   2.009,   1.109)  ( 0.00,  0.00,  0.00)
    torsion (  0.178,   0.549,  -1.277)  (  0.178,   0.549,  -1.277)  ( 0.00,  0.00,  0.01)
    oop     ( -0.244,  -0.585,   1.144)  ( -0.174,  -0.418,   0.822)  ( 1.72,  9.75, 28.16)
    vdw     (  1.404,   2.236,   1.130)  (  1.404,   2.236,   1.130)  ( 0.00,  0.00,  0.00)
    electro (  1.969,  -3.962,   0.282)  (  1.969,  -3.962,   0.282)  ( 0.00,  0.00,  0.00)
 9       ( -0.704,  -0.671,  -0.056)  (  0.388,   0.364,   0.157)  (76.83, 69.39,  1.19)
    bond    ( -7.812,  -8.638,  -5.588)  ( -7.808,  -8.633,  -5.586)  ( 0.05,  0.05,  0.04)
    angle   ( 12.778,  11.374,  19.741)  ( 12.780,  11.376,  19.743)  ( 0.02,  0.02,  0.01)
    strbnd  (  4.362,   3.842,  -7.340)  (  4.361,   3.842,  -7.341)  ( 0.02,  0.02,  0.01)
    torsion ( -1.339,  -2.456,  -4.051)  ( -1.339,  -2.456,  -4.051)  ( 0.00,  0.00,  0.00)
    oop     ( -4.513,  -5.190,  -1.298)  ( -3.426,  -4.161,  -1.089)  (24.07, 19.82, 16.13)
    vdw     (  0.230,   3.142,   1.240)  (  0.230,   3.143,   1.240)  ( 0.00,  0.00,  0.00)
    electro ( -4.410,  -2.746,  -2.761)  ( -4.410,  -2.746,  -2.761)  ( 0.00,  0.00,  0.00)
10       ( -0.145,   0.204,   0.151)  ( -0.062,   0.014,  -0.015)  ( 1.21,  3.88,  2.49)
    bond    ( -0.630,   1.775,  12.572)  ( -0.627,   1.778,  12.577)  ( 0.18,  0.16,  0.04)
    angle   (  6.045,   0.014, -16.923)  (  6.048,   0.016, -16.921)  ( 0.04,  0.00,  0.01)
    strbnd  ( -7.393,  -1.780,  -1.355)  ( -7.394,  -1.782,  -1.356)  ( 0.01,  0.08,  0.05)
    torsion ( -2.978,   1.047,  -0.463)  ( -2.978,   1.047,  -0.463)  ( 0.00,  0.00,  0.00)
    oop     (  1.166,   3.054,   2.028)  (  1.244,   2.860,   1.857)  ( 6.76,  6.34,  8.45)
    vdw     (  2.417,   3.304,   0.233)  (  2.417,   3.304,   0.233)  ( 0.00,  0.00,  0.00)
    electro (  1.227,  -7.208,   4.059)  (  1.227,  -7.208,   4.059)  ( 0.00,  0.00,  0.00)
11       ( -0.193,  -2.395,  -0.387)  (  0.263,  -0.098,   0.062)  ( 8.80, 95.90, 17.41)
    bond    ( 10.742,   6.592,  -1.930)  ( 10.747,   6.594,  -1.926)  ( 0.05,  0.02,  0.18)
    angle   ( -4.937, -17.076,   7.817)  ( -4.936, -17.075,   7.819)  ( 0.04,  0.01,  0.03)
    strbnd  ( -1.830,  -0.656,   3.895)  ( -1.830,  -0.657,   3.894)  ( 0.03,  0.03,  0.01)
    torsion (  5.970,  14.380,  -7.419)  (  5.971,  14.380,  -7.419)  ( 0.00,  0.00,  0.00)
    oop     ( -6.219, -17.227,  -5.679)  ( -5.770, -14.934,  -5.234)  ( 7.22, 13.31,  7.83)
    vdw     ( -1.251,   1.961,   1.619)  ( -1.251,   1.961,   1.619)  ( 0.01,  0.00,  0.00)
    electro ( -2.668,   9.632,   1.310)  ( -2.668,   9.632,   1.309)  ( 0.00,  0.00,  0.00)
12       ( -0.015,  -0.043,  -0.016)  ( -0.014,  -0.042,  -0.013)  ( 0.00,  0.01,  0.00)
    bond    ( -0.064,  -0.227,  -0.383)  ( -0.063,  -0.226,  -0.380)  ( 0.00,  0.02,  0.10)
    angle   ( -5.122,  -0.874,   1.372)  ( -5.121,  -0.873,   1.372)  ( 0.01,  0.03,  0.01)
    strbnd  (  0.712,   0.432,   0.989)  (  0.712,   0.432,   0.989)  ( 0.00,  0.00,  0.00)
    torsion (  0.289,  -0.711,   0.374)  (  0.289,  -0.711,   0.374)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.169,   1.337,  -2.368)  (  4.169,   1.337,  -2.368)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (  0.009,  -0.036,  -0.036)  (  0.011,  -0.034,  -0.035)  ( 0.00,  0.01,  0.00)
    bond    (  7.080, -17.260,   8.482)  (  7.081, -17.259,   8.482)  ( 0.02,  0.01,  0.00)
    angle   ( -5.148,   2.623,  -1.308)  ( -5.148,   2.624,  -1.307)  ( 0.00,  0.03,  0.05)
    strbnd  ( -0.387,   6.300,  -1.373)  ( -0.387,   6.299,  -1.373)  ( 0.00,  0.01,  0.00)
    torsion (  0.837,   0.450,   0.871)  (  0.837,   0.450,   0.871)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.152,   6.289,  -6.678)  ( -2.152,   6.289,  -6.677)  ( 0.01,  0.00,  0.00)
    electro ( -0.220,   1.563,  -0.030)  ( -0.220,   1.563,  -0.030)  ( 0.00,  0.00,  0.00)
14       (  3.917,   5.394,   1.410)  ( -0.776,  -0.387,  -0.163)  (119.80, 107.17, 111.56)
    bond    (  1.728,   7.650, -26.617)  (  1.731,   7.651, -26.606)  ( 0.18,  0.02,  0.04)
    angle   (-12.444,  -3.256,  -6.802)  (-12.443,  -3.255,  -6.800)  ( 0.01,  0.03,  0.03)
    strbnd  ( -0.283,  -8.072,  23.375)  ( -0.284,  -8.072,  23.374)  ( 0.01,  0.00,  0.01)
    torsion ( -1.208,  -7.791,   2.702)  ( -1.208,  -7.791,   2.702)  ( 0.01,  0.00,  0.00)
    oop     ( 16.911,  22.685,   7.558)  ( 12.214,  16.902,   5.972)  (27.78, 25.49, 20.98)
    vdw     ( -7.544,  -1.421,   3.983)  ( -7.544,  -1.421,   3.983)  ( 0.00,  0.00,  0.00)
    electro (  6.757,  -4.401,  -2.789)  (  6.757,  -4.401,  -2.789)  ( 0.00,  0.00,  0.00)
15       (  0.005,   0.033,  -0.033)  (  0.006,   0.036,  -0.032)  ( 0.00,  0.01,  0.00)
    bond    ( -0.124,  -3.231,  -0.971)  ( -0.124,  -3.228,  -0.971)  ( 0.00,  0.10,  0.03)
    angle   (  4.975,   0.074,  -0.882)  (  4.976,   0.074,  -0.882)  ( 0.01,  0.00,  0.04)
    strbnd  ( -1.156,   1.633,  -0.157)  ( -1.156,   1.633,  -0.157)  ( 0.00,  0.00,  0.00)
    torsion ( -0.003,  -0.118,   0.391)  ( -0.003,  -0.118,   0.391)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.688,   1.674,   1.586)  ( -3.688,   1.674,   1.586)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( -2.750,  -3.359,  -1.104)  (  0.283,   0.160,  -0.005)  (110.29, 104.77, 99.58)
    bond    ( -4.283,  -2.663,  20.496)  ( -4.282,  -2.663,  20.505)  ( 0.01,  0.00,  0.05)
    angle   ( -0.168,   2.881,   0.339)  ( -0.168,   2.882,   0.339)  ( 0.01,  0.01,  0.00)
    strbnd  (  4.201,   1.886, -19.314)  (  4.201,   1.886, -19.314)  ( 0.00,  0.01,  0.00)
    torsion (  1.537,   3.049,   0.717)  (  1.537,   3.049,   0.717)  ( 0.00,  0.00,  0.00)
    oop     ( -7.000,  -8.683,  -2.589)  ( -3.968,  -5.164,  -1.499)  (43.32, 40.52, 42.10)
    vdw     ( -3.415,  -0.431,   2.105)  ( -3.415,  -0.431,   2.105)  ( 0.00,  0.00,  0.00)
    electro (  6.378,   0.602,  -2.858)  (  6.378,   0.602,  -2.858)  ( 0.00,  0.00,  0.00)
17       (  0.022,  -0.029,  -0.074)  (  0.027,  -0.025,  -0.069)  ( 0.01,  0.01,  0.03)
    bond    ( -7.091,   2.130,  -1.977)  ( -7.088,   2.132,  -1.974)  ( 0.05,  0.14,  0.17)
    angle   (  4.462,   8.345,  -1.889)  (  4.464,   8.347,  -1.887)  ( 0.04,  0.02,  0.09)
    strbnd  (  3.433,  -7.634,   3.029)  (  3.432,  -7.635,   3.028)  ( 0.02,  0.01,  0.02)
    torsion ( -1.295,  -0.201,  -0.359)  ( -1.295,  -0.201,  -0.359)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.436,   1.064,  -0.784)  (  0.436,   1.064,  -0.784)  ( 0.00,  0.00,  0.00)
    electro (  0.078,  -3.732,   1.907)  (  0.078,  -3.732,   1.907)  ( 0.00,  0.00,  0.00)
18       ( -0.527,   0.717,   0.247)  ( -0.126,  -0.025,  -0.108)  (21.09, 53.16,  8.76)
    bond    (  2.690,  -5.259,  -9.175)  (  2.694,  -5.255,  -9.171)  ( 0.14,  0.07,  0.05)
    angle   (  0.459,   8.749,   5.203)  (  0.461,   8.751,   5.206)  ( 0.09,  0.02,  0.04)
    strbnd  (  3.654,  -2.284,  -2.072)  (  3.653,  -2.285,  -2.073)  ( 0.03,  0.02,  0.02)
    torsion (  2.026,  -5.810,   3.568)  (  2.026,  -5.810,   3.568)  ( 0.00,  0.00,  0.00)
    oop     ( -2.189,   4.693,   2.103)  ( -1.793,   3.946,   1.742)  (18.08, 15.91, 17.17)
    vdw     (  0.057,  -1.642,   0.671)  (  0.057,  -1.642,   0.671)  ( 0.00,  0.00,  0.00)
    electro ( -7.224,   2.269,  -0.051)  ( -7.224,   2.269,  -0.051)  ( 0.00,  0.00,  0.00)
19       (  0.014,  -0.054,   0.035)  (  0.020,  -0.048,   0.040)  ( 0.01,  0.03,  0.02)
    bond    ( -4.572,   7.582,   9.251)  ( -4.568,   7.586,   9.256)  ( 0.10,  0.06,  0.05)
    angle   (  4.311, -10.172,  -3.123)  (  4.312, -10.170,  -3.121)  ( 0.04,  0.02,  0.06)
    strbnd  ( -2.161,   2.017,   1.879)  ( -2.161,   2.016,   1.878)  ( 0.02,  0.03,  0.04)
    torsion ( -0.707,  -0.056,  -0.329)  ( -0.707,  -0.056,  -0.328)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.144,   0.575,  -7.644)  (  3.144,   0.575,  -7.644)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (  0.055,   0.023,  -0.083)  (  0.061,   0.028,  -0.077)  ( 0.03,  0.01,  0.05)
    bond    ( -7.858,  -5.077,  -5.109)  ( -7.854,  -5.072,  -5.105)  ( 0.05,  0.09,  0.09)
    angle   (  6.358,   2.036,   6.266)  (  6.360,   2.038,   6.268)  ( 0.03,  0.09,  0.03)
    strbnd  ( -2.171,  -0.422,  -1.231)  ( -2.172,  -0.423,  -1.232)  ( 0.04,  0.02,  0.05)
    torsion (  0.971,  -0.883,  -0.568)  (  0.971,  -0.883,  -0.568)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.756,   4.369,   0.559)  (  2.756,   4.369,   0.559)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (  1.073,   0.070,  -0.862)  (  0.005,  -0.124,   0.016)  (99.54,  1.37, 75.68)
    bond    ( -7.303,  18.452,  -4.755)  ( -7.301,  18.461,  -4.751)  ( 0.03,  0.05,  0.10)
    angle   ( 11.493, -17.158,   1.980)  ( 11.494, -17.156,   1.981)  ( 0.01,  0.01,  0.07)
    strbnd  ( -4.739,   3.053,  -5.420)  ( -4.739,   3.052,  -5.421)  ( 0.01,  0.04,  0.02)
    torsion ( -1.507,   0.152,   2.650)  ( -1.507,   0.152,   2.650)  ( 0.01,  0.00,  0.00)
    oop     (  5.247,   1.013,  -4.389)  (  4.175,   0.809,  -3.516)  (20.42, 20.19, 19.89)
    vdw     ( -2.898,  -4.553,   6.605)  ( -2.898,  -4.553,   6.605)  ( 0.00,  0.00,  0.00)
    electro (  0.780,  -0.889,   2.467)  (  0.780,  -0.889,   2.467)  ( 0.00,  0.00,  0.00)
22       (  0.011,   0.068,   0.026)  (  0.012,   0.070,   0.029)  ( 0.00,  0.01,  0.01)
    bond    (  0.328,  -2.247,  -3.859)  (  0.328,  -2.246,  -3.857)  ( 0.00,  0.04,  0.06)
    angle   ( -0.121,   1.446,  -0.853)  ( -0.120,   1.446,  -0.853)  ( 0.01,  0.03,  0.01)
    strbnd  (  0.002,   0.481,   0.353)  (  0.002,   0.481,   0.353)  ( 0.00,  0.00,  0.00)
    torsion ( -2.329,  -0.221,  -0.069)  ( -2.329,  -0.221,  -0.069)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.131,   0.609,   4.454)  (  2.131,   0.609,   4.454)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -0.191,  -0.011,   0.189)  (  0.005,   0.033,   0.024)  ( 3.74,  0.05,  3.12)
    bond    (  2.346,  -0.713,   2.597)  (  2.348,  -0.708,   2.600)  ( 0.09,  0.35,  0.10)
    angle   ( -9.647,   2.693,  -9.181)  ( -9.647,   2.694,  -9.181)  ( 0.00,  0.05,  0.00)
    strbnd  (  2.977,   2.363,   3.838)  (  2.977,   2.363,   3.837)  ( 0.00,  0.00,  0.00)
    torsion (  0.013,   0.016,  -0.011)  (  0.013,   0.016,  -0.011)  ( 0.00,  0.00,  0.00)
    oop     ( -1.579,  -0.309,   1.374)  ( -1.386,  -0.272,   1.206)  (12.25,  1.15, 12.24)
    vdw     (  1.642,  -3.834,   1.605)  (  1.642,  -3.834,   1.605)  ( 0.00,  0.00,  0.00)
    electro (  4.057,  -0.227,  -0.032)  (  4.057,  -0.227,  -0.032)  ( 0.00,  0.00,  0.00)
24       (  0.004,   0.003,  -0.053)  (  0.005,   0.004,  -0.052)  ( 0.00,  0.00,  0.01)
    bond    ( -1.196,   1.182,  -0.827)  ( -1.194,   1.183,  -0.827)  ( 0.12,  0.11,  0.05)
    angle   ( -1.332,  -1.852,  -0.728)  ( -1.331,  -1.852,  -0.727)  ( 0.02,  0.02,  0.03)
    strbnd  (  0.241,  -1.027,   0.189)  (  0.241,  -1.026,   0.189)  ( 0.00,  0.00,  0.00)
    torsion ( -0.038,   0.002,   0.057)  ( -0.038,   0.002,   0.057)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.329,   1.697,   1.256)  (  2.329,   1.697,   1.256)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( -0.012,  -0.040,  -0.043)  ( -0.010,  -0.039,  -0.041)  ( 0.00,  0.01,  0.01)
    bond    ( -1.200,  -1.265,   1.435)  ( -1.199,  -1.264,   1.436)  ( 0.08,  0.08,  0.10)
    angle   ( -2.311,  -0.524,  -2.391)  ( -2.311,  -0.524,  -2.391)  ( 0.01,  0.02,  0.01)
    strbnd  ( -0.046,   0.131,  -0.817)  ( -0.046,   0.131,  -0.817)  ( 0.00,  0.00,  0.00)
    torsion (  0.070,  -0.086,  -0.017)  (  0.070,  -0.086,  -0.017)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.476,   1.704,   1.748)  (  3.476,   1.704,   1.748)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (  0.017,   0.031,  -0.062)  (  0.018,   0.032,  -0.060)  ( 0.00,  0.00,  0.01)
    bond    (  0.799,  -1.340,  -1.580)  (  0.799,  -1.338,  -1.578)  ( 0.04,  0.09,  0.11)
    angle   ( -3.338,  -0.613,  -1.171)  ( -3.337,  -0.613,  -1.171)  ( 0.01,  0.02,  0.02)
    strbnd  ( -0.745,   0.134,   0.227)  ( -0.745,   0.134,   0.227)  ( 0.00,  0.00,  0.00)
    torsion (  0.007,  -0.067,   0.060)  (  0.007,  -0.067,   0.060)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.293,   1.916,   2.401)  (  3.293,   1.916,   2.401)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( -0.029,  -0.013,  -0.016)  ( -0.027,  -0.011,  -0.015)  ( 0.01,  0.00,  0.00)
    bond    ( -1.391,   1.340,  -0.747)  ( -1.389,   1.342,  -0.747)  ( 0.11,  0.11,  0.03)
    angle   ( -1.015,   0.530,   2.839)  ( -1.015,   0.530,   2.840)  ( 0.02,  0.01,  0.02)
    strbnd  (  0.553,  -0.368,   1.021)  (  0.553,  -0.368,   1.021)  ( 0.00,  0.00,  0.00)
    torsion ( -0.250,  -0.232,   0.047)  ( -0.250,  -0.232,   0.047)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.074,  -1.282,  -3.176)  (  2.074,  -1.282,  -3.176)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       ( -0.034,  -0.055,  -0.010)  ( -0.032,  -0.053,  -0.008)  ( 0.01,  0.01,  0.00)
    bond    (  1.317,   0.998,   0.899)  (  1.318,   0.999,   0.900)  ( 0.13,  0.10,  0.07)
    angle   ( -2.910,   1.945,   2.102)  ( -2.910,   1.946,   2.102)  ( 0.01,  0.02,  0.02)
    strbnd  ( -0.799,   0.069,   0.229)  ( -0.799,   0.069,   0.229)  ( 0.00,  0.00,  0.00)
    torsion ( -0.012,   0.069,  -0.059)  ( -0.012,   0.069,  -0.059)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.371,  -3.136,  -3.182)  (  2.371,  -3.135,  -3.182)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( -0.014,  -0.055,  -0.036)  ( -0.012,  -0.054,  -0.034)  ( 0.00,  0.01,  0.01)
    bond    ( -1.198,  -1.403,   1.700)  ( -1.197,  -1.402,   1.701)  ( 0.06,  0.08,  0.09)
    angle   ( -1.824,   2.897,   1.105)  ( -1.823,   2.897,   1.105)  ( 0.02,  0.01,  0.02)
    strbnd  (  0.202,   1.021,  -0.133)  (  0.202,   1.021,  -0.133)  ( 0.00,  0.00,  0.00)
    torsion (  0.274,  -0.031,   0.167)  (  0.274,  -0.031,   0.167)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.531,  -2.539,  -2.875)  (  2.532,  -2.539,  -2.875)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -0.010,   0.057,   0.047)  ( -0.010,   0.062,   0.047)  ( 0.00,  0.03,  0.00)
    bond    ( -0.177,   0.738,  -0.096)  ( -0.177,   0.743,  -0.096)  ( 0.01,  0.36,  0.00)
    angle   (  8.417,   3.317,  10.163)  (  8.417,   3.317,  10.163)  ( 0.00,  0.00,  0.00)
    strbnd  (  0.382,  -1.272,   0.256)  (  0.382,  -1.272,   0.256)  ( 0.00,  0.00,  0.00)
    torsion (  0.882,   0.111,  -0.766)  (  0.882,   0.111,  -0.766)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.106,   0.075,   0.091)  (  0.106,   0.075,   0.091)  ( 0.00,  0.00,  0.00)
    electro ( -9.620,  -2.911,  -9.600)  ( -9.620,  -2.911,  -9.600)  ( 0.00,  0.00,  0.00)
31       ( -0.560,   0.014,   0.551)  (  0.019,   0.135,   0.089)  (32.41,  0.17, 25.44)
    bond    ( -0.691,  -2.922,  -1.578)  ( -0.691,  -2.915,  -1.576)  ( 0.03,  0.24,  0.13)
    angle   (-11.279,   8.740, -11.218)  (-11.279,   8.740, -11.218)  ( 0.00,  0.00,  0.00)
    strbnd  ( -0.400,   0.562,  -0.346)  ( -0.400,   0.562,  -0.346)  ( 0.00,  0.01,  0.00)
    torsion ( -0.438,  -0.113,   0.402)  ( -0.438,  -0.113,   0.402)  ( 0.00,  0.00,  0.00)
    oop     ( -2.089,  -0.433,   1.715)  ( -1.511,  -0.319,   1.251)  (27.68,  4.93, 27.05)
    vdw     (  1.193,  -3.724,   0.966)  (  1.193,  -3.724,   0.966)  ( 0.00,  0.00,  0.00)
    electro ( 13.145,  -2.096,  10.610)  ( 13.145,  -2.096,  10.610)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 16 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 17 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/phenyl-pyr.gpr
 # Expected        39.99337, found 39.993375&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/phenyl-pyr.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( -0.009,   0.002,  -0.005)  ( -0.001,   0.005,   0.001)  ( 0.01,  0.00,  0.00)
    bond    (  9.838,  -1.834,   0.007)  (  9.844,  -1.832,   0.011)  ( 0.07,  0.10,  0.00)
    angle   (  6.646,  -1.255,  -0.018)  (  6.648,  -1.254,  -0.017)  ( 0.03,  0.05,  0.00)
    strbnd  ( -3.095,   0.579,   0.001)  ( -3.095,   0.579,   0.001)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,   0.001,  -0.002)  (  0.001,   0.002,  -0.002)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.001,  -0.001)  (  0.000,   0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (-12.705,   2.379,   0.009)  (-12.705,   2.379,   0.009)  ( 0.00,  0.00,  0.00)
    electro ( -0.694,   0.130,   0.001)  ( -0.694,   0.130,   0.001)  ( 0.00,  0.00,  0.00)
 2       ( -0.094,  -0.071,  -0.108)  ( -0.084,  -0.055,  -0.110)  ( 0.09,  0.12,  0.02)
    bond    ( 15.243,  -7.110,  -6.312)  ( 15.248,  -7.108,  -6.308)  ( 0.04,  0.03,  0.07)
    angle   ( -4.881,  -0.262,  -1.754)  ( -4.879,  -0.261,  -1.753)  ( 0.04,  0.02,  0.09)
    strbnd  ( -1.609,   1.725,   2.154)  ( -1.609,   1.725,   2.154)  ( 0.01,  0.00,  0.01)
    torsion (  0.015,   0.078,  -0.054)  (  0.015,   0.079,  -0.054)  ( 0.00,  0.01,  0.00)
    oop     ( -0.015,  -0.078,   0.052)  ( -0.012,  -0.066,   0.044)  ( 0.00,  0.10,  0.04)
    vdw     ( -8.822,   6.095,   6.582)  ( -8.822,   6.095,   6.582)  ( 0.00,  0.00,  0.00)
    electro ( -0.025,  -0.518,  -0.776)  ( -0.025,  -0.518,  -0.776)  ( 0.00,  0.00,  0.00)
 3       (  0.182,  -0.012,  -0.057)  (  0.183,  -0.038,  -0.032)  ( 0.02,  0.03,  0.14)
    bond    (  0.609,  -8.879, -13.408)  (  0.614,  -8.877, -13.405)  ( 0.30,  0.02,  0.03)
    angle   ( -7.772,   3.135,   2.969)  ( -7.770,   3.136,   2.970)  ( 0.02,  0.03,  0.05)
    strbnd  (  2.453,  -0.620,  -0.234)  (  2.453,  -0.620,  -0.235)  ( 0.01,  0.01,  0.01)
    torsion ( -0.243,   0.162,   0.098)  ( -0.243,   0.163,   0.098)  ( 0.00,  0.01,  0.00)
    oop     (  0.034,   0.181,  -0.121)  (  0.028,   0.152,  -0.101)  ( 0.02,  0.54,  0.24)
    vdw     (  4.751,   6.373,  11.116)  (  4.751,   6.373,  11.116)  ( 0.00,  0.00,  0.00)
    electro (  0.350,  -0.364,  -0.476)  (  0.350,  -0.364,  -0.476)  ( 0.00,  0.00,  0.00)
 4       ( -0.195,   0.032,   0.015)  ( -0.188,   0.037,   0.019)  ( 0.14,  0.02,  0.01)
    bond    ( -7.919,   1.496,   0.029)  ( -7.915,   1.498,   0.032)  ( 0.06,  0.11,  0.01)
    angle   (  7.321,  -1.377,  -0.013)  (  7.323,  -1.376,  -0.012)  ( 0.03,  0.07,  0.00)
    strbnd  ( -7.154,   1.339,   0.000)  ( -7.155,   1.339,   0.000)  ( 0.00,  0.00,  0.00)
    torsion ( -0.002,  -0.005,   0.001)  ( -0.002,  -0.004,   0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.001,  -0.007,   0.004)  ( -0.001,  -0.005,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     (  7.561,  -1.415,  -0.006)  (  7.562,  -1.415,  -0.006)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (  0.098,  -0.057,  -0.028)  (  0.109,  -0.026,  -0.041)  ( 0.11,  0.18,  0.04)
    bond    (  3.740,   8.034,  13.340)  (  3.745,   8.036,  13.343)  ( 0.13,  0.02,  0.03)
    angle   ( -8.410,  -0.116,  -2.962)  ( -8.408,  -0.115,  -2.960)  ( 0.02,  0.01,  0.05)
    strbnd  (  2.516,  -0.308,   0.233)  (  2.515,  -0.309,   0.233)  ( 0.01,  0.00,  0.01)
    torsion ( -0.284,  -0.056,  -0.104)  ( -0.284,  -0.055,  -0.103)  ( 0.00,  0.00,  0.00)
    oop     ( -0.031,  -0.165,   0.109)  ( -0.025,  -0.137,   0.091)  ( 0.02,  0.46,  0.20)
    vdw     (  2.108,  -7.659, -11.120)  (  2.108,  -7.659, -11.120)  ( 0.00,  0.00,  0.00)
    electro (  0.459,   0.213,   0.476)  (  0.459,   0.213,   0.476)  ( 0.00,  0.00,  0.00)
 6       ( -0.017,   0.039,   0.055)  ( -0.012,   0.030,   0.069)  ( 0.01,  0.03,  0.08)
    bond    ( 16.822,   1.066,   6.232)  ( 16.827,   1.068,   6.236)  ( 0.03,  0.19,  0.07)
    angle   ( -4.438,   2.007,   1.762)  ( -4.436,   2.007,   1.763)  ( 0.05,  0.03,  0.09)
    strbnd  ( -2.127,  -1.024,  -2.150)  ( -2.127,  -1.024,  -2.150)  ( 0.01,  0.00,  0.01)
    torsion ( -0.016,  -0.084,   0.056)  ( -0.016,  -0.083,   0.056)  ( 0.00,  0.01,  0.00)
    oop     (  0.013,   0.071,  -0.048)  (  0.011,   0.059,  -0.039)  ( 0.00,  0.09,  0.04)
    vdw     (-10.436,  -2.488,  -6.572)  (-10.436,  -2.488,  -6.572)  ( 0.00,  0.00,  0.00)
    electro (  0.165,   0.492,   0.776)  (  0.165,   0.492,   0.776)  ( 0.00,  0.00,  0.00)
 7       (  0.083,   0.029,  -0.027)  (  0.090,   0.034,  -0.024)  ( 0.06,  0.02,  0.01)
    bond    ( -5.715,   1.120,  -0.030)  ( -5.710,   1.124,  -0.028)  ( 0.08,  0.35,  0.00)
    angle   ( -3.925,   0.733,   0.006)  ( -3.923,   0.734,   0.007)  ( 0.05,  0.10,  0.00)
    strbnd  ( 10.212,  -1.917,  -0.002)  ( 10.212,  -1.917,  -0.002)  ( 0.00,  0.01,  0.00)
    torsion ( -0.000,  -0.001,   0.000)  ( -0.000,  -0.001,   0.001)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.489,   0.094,  -0.002)  ( -0.488,   0.094,  -0.002)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -0.096,   0.024,  -0.020)  ( -0.089,   0.030,  -0.017)  ( 0.07,  0.01,  0.01)
    bond    ( -3.483, -12.638,   7.907)  ( -3.478, -12.633,   7.908)  ( 0.16,  0.03,  0.02)
    angle   (  3.798,   0.832,  -0.921)  (  3.800,   0.834,  -0.921)  ( 0.04,  0.11,  0.04)
    strbnd  (  1.060,  -1.300,   0.656)  (  1.060,  -1.300,   0.656)  ( 0.02,  0.01,  0.00)
    torsion (  0.019,   0.099,   0.166)  (  0.019,   0.099,   0.167)  ( 0.00,  0.00,  0.02)
    oop     ( -0.000,  -0.001,  -0.002)  ( -0.000,  -0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.505,  14.542,  -8.739)  ( -1.505,  14.542,  -8.739)  ( 0.01,  0.00,  0.00)
    electro (  0.016,  -1.510,   0.914)  (  0.016,  -1.510,   0.914)  ( 0.00,  0.00,  0.00)
 9       ( -0.010,  -0.087,   0.031)  ( -0.003,  -0.081,   0.035)  ( 0.01,  0.05,  0.01)
    bond    ( -2.492,  -7.482,   4.725)  ( -2.486,  -7.478,   4.727)  ( 0.23,  0.05,  0.03)
    angle   ( -4.105,  -3.933,   2.798)  ( -4.103,  -3.931,   2.798)  ( 0.04,  0.03,  0.02)
    strbnd  ( -4.222,   0.031,   0.453)  ( -4.222,   0.031,   0.453)  ( 0.01,  0.00,  0.00)
    torsion ( -0.000,  -0.003,  -0.005)  ( -0.000,  -0.003,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.002,  -0.003)  ( -0.000,  -0.001,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.835,  10.954,  -7.728)  ( 10.835,  10.954,  -7.728)  ( 0.00,  0.00,  0.00)
    electro ( -0.025,   0.347,  -0.209)  ( -0.025,   0.347,  -0.209)  ( 0.00,  0.00,  0.00)
10       ( -0.018,  -0.003,   0.005)  ( -0.014,   0.002,   0.008)  ( 0.01,  0.00,  0.00)
    bond    (-13.181,   2.472,   0.003)  (-13.178,   2.476,   0.004)  ( 0.02,  0.16,  0.00)
    angle   (  8.282,  -1.555,  -0.003)  (  8.284,  -1.555,  -0.003)  ( 0.02,  0.02,  0.00)
    strbnd  (  0.147,  -0.037,   0.005)  (  0.147,  -0.037,   0.006)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,   0.002,   0.003)  (  0.000,   0.002,   0.003)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.001,   0.001)  (  0.000,   0.001,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  8.264,  -1.546,  -0.006)  (  8.265,  -1.546,  -0.006)  ( 0.00,  0.00,  0.00)
    electro ( -3.532,   0.661,   0.003)  ( -3.532,   0.661,   0.003)  ( 0.00,  0.00,  0.00)
11       ( -0.084,   0.070,  -0.048)  ( -0.077,   0.076,  -0.045)  ( 0.06,  0.04,  0.02)
    bond    (  0.276,   7.851,  -4.706)  (  0.282,   7.855,  -4.705)  ( 0.16,  0.05,  0.03)
    angle   ( -2.425,   5.161,  -2.800)  ( -2.424,   5.163,  -2.800)  ( 0.07,  0.03,  0.02)
    strbnd  ( -3.937,   1.510,  -0.456)  ( -3.938,   1.510,  -0.456)  ( 0.01,  0.01,  0.00)
    torsion ( -0.001,  -0.004,  -0.007)  ( -0.001,  -0.004,  -0.006)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.002,  -0.003)  ( -0.000,  -0.001,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     (  6.153, -14.132,   7.716)  (  6.153, -14.132,   7.716)  ( 0.00,  0.00,  0.00)
    electro ( -0.149,  -0.315,   0.209)  ( -0.149,  -0.315,   0.209)  ( 0.00,  0.00,  0.00)
12       (  0.047,  -0.083,   0.059)  (  0.054,  -0.077,   0.061)  ( 0.03,  0.04,  0.02)
    bond    (  1.440,  12.965,  -7.881)  (  1.446,  12.969,  -7.880)  ( 0.38,  0.03,  0.02)
    angle   (  3.262,  -2.172,   0.925)  (  3.264,  -2.171,   0.925)  ( 0.05,  0.06,  0.04)
    strbnd  (  1.447,   0.834,  -0.660)  (  1.447,   0.834,  -0.660)  ( 0.01,  0.01,  0.00)
    torsion ( -0.018,  -0.096,  -0.161)  ( -0.018,  -0.095,  -0.160)  ( 0.00,  0.00,  0.01)
    oop     (  0.000,   0.002,   0.003)  (  0.000,   0.002,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.645, -13.018,   8.747)  ( -6.645, -13.018,   8.747)  ( 0.00,  0.00,  0.00)
    electro (  0.560,   1.403,  -0.914)  (  0.560,   1.402,  -0.914)  ( 0.00,  0.00,  0.00)
13       (  0.014,   0.029,  -0.012)  (  0.016,   0.031,  -0.010)  ( 0.00,  0.01,  0.00)
    bond    (  0.532,   0.585,  -0.410)  (  0.533,   0.587,  -0.409)  ( 0.07,  0.10,  0.03)
    angle   ( -1.375,   0.959,  -0.417)  ( -1.375,   0.959,  -0.417)  ( 0.03,  0.02,  0.00)
    strbnd  ( -0.291,   0.302,  -0.147)  ( -0.291,   0.302,  -0.147)  ( 0.00,  0.00,  0.00)
    torsion ( -0.002,  -0.013,  -0.021)  ( -0.002,  -0.012,  -0.021)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.001,  -0.001)  ( -0.000,  -0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  0.782,  -2.146,   1.210)  (  0.782,  -2.146,   1.210)  ( 0.00,  0.00,  0.00)
    electro (  0.369,   0.342,  -0.225)  (  0.369,   0.342,  -0.225)  ( 0.00,  0.00,  0.00)
14       (  0.014,  -0.025,   0.027)  (  0.015,  -0.022,   0.028)  ( 0.00,  0.01,  0.00)
    bond    ( -0.713,   1.410,  -0.761)  ( -0.713,   1.412,  -0.760)  ( 0.04,  0.17,  0.05)
    angle   ( -1.054,  -0.355,   0.329)  ( -1.053,  -0.355,   0.329)  ( 0.06,  0.00,  0.00)
    strbnd  (  0.385,   0.200,  -0.162)  (  0.385,   0.200,  -0.162)  ( 0.00,  0.00,  0.00)
    torsion (  0.001,   0.005,   0.009)  (  0.001,   0.006,   0.009)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.000,   0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.575,  -0.404,   0.175)  (  0.575,  -0.404,   0.175)  ( 0.00,  0.00,  0.00)
    electro (  0.821,  -0.881,   0.436)  (  0.821,  -0.881,   0.436)  ( 0.00,  0.00,  0.00)
15       ( -0.046,  -0.018,   0.011)  ( -0.039,  -0.003,   0.011)  ( 0.03,  0.03,  0.00)
    bond    ( -7.125,  -4.896,  -9.263)  ( -7.121,  -4.892,  -9.259)  ( 0.06,  0.09,  0.05)
    angle   (  6.393,   2.270,   5.666)  (  6.394,   2.272,   5.667)  ( 0.03,  0.07,  0.03)
    strbnd  (  0.273,  -0.725,  -1.181)  (  0.272,  -0.726,  -1.182)  ( 0.02,  0.04,  0.08)
    torsion (  1.289,  -0.354,  -0.774)  (  1.289,  -0.353,  -0.774)  ( 0.00,  0.00,  0.00)
    oop     ( -0.010,  -0.056,   0.038)  ( -0.009,  -0.048,   0.032)  ( 0.00,  0.05,  0.02)
    vdw     ( -0.361,   3.610,   5.432)  ( -0.361,   3.610,   5.432)  ( 0.00,  0.00,  0.00)
    electro ( -0.503,   0.134,   0.095)  ( -0.503,   0.134,   0.095)  ( 0.00,  0.00,  0.00)
16       (  0.036,  -0.004,   0.009)  (  0.041,  -0.003,   0.010)  ( 0.02,  0.00,  0.00)
    bond    ( -1.105,   0.206,   0.001)  ( -1.100,   0.206,   0.001)  ( 0.41,  0.00,  0.00)
    angle   (  0.001,   0.005,   0.007)  (  0.001,   0.005,   0.007)  ( 0.00,  0.00,  0.00)
    strbnd  (  3.048,  -0.570,  -0.001)  (  3.048,  -0.570,  -0.001)  ( 0.00,  0.00,  0.00)
    torsion ( -0.000,  -0.001,   0.001)  ( -0.000,  -0.001,   0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.001,   0.000)  ( -0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.498,   0.093,   0.000)  ( -0.498,   0.093,   0.001)  ( 0.00,  0.00,  0.00)
    electro ( -1.410,   0.264,   0.001)  ( -1.410,   0.264,   0.001)  ( 0.00,  0.00,  0.00)
17       ( -0.037,   0.047,   0.071)  ( -0.035,   0.047,   0.074)  ( 0.01,  0.00,  0.02)
    bond    ( -0.132,   0.174,   0.223)  ( -0.131,   0.175,   0.225)  ( 0.01,  0.03,  0.05)
    angle   (  1.479,   0.192,   0.711)  (  1.480,   0.192,   0.711)  ( 0.05,  0.00,  0.01)
    strbnd  (  1.315,  -1.062,  -1.217)  (  1.315,  -1.062,  -1.217)  ( 0.00,  0.00,  0.00)
    torsion ( -0.011,  -0.057,   0.038)  ( -0.011,  -0.057,   0.038)  ( 0.00,  0.00,  0.00)
    oop     (  0.001,   0.006,  -0.004)  (  0.001,   0.005,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.211,   0.450,  -0.614)  ( -4.210,   0.450,  -0.614)  ( 0.00,  0.00,  0.00)
    electro (  1.521,   0.344,   0.934)  (  1.521,   0.344,   0.934)  ( 0.00,  0.00,  0.00)
18       ( -0.041,   0.022,   0.048)  ( -0.037,   0.020,   0.059)  ( 0.02,  0.01,  0.05)
    bond    ( -4.885,   7.159,   9.319)  ( -4.880,   7.163,   9.323)  ( 0.09,  0.06,  0.05)
    angle   (  5.152,  -4.463,  -5.651)  (  5.154,  -4.462,  -5.649)  ( 0.04,  0.03,  0.03)
    strbnd  (  0.516,   0.583,   1.171)  (  0.515,   0.582,   1.170)  ( 0.03,  0.04,  0.08)
    torsion (  1.334,  -0.130,   0.768)  (  1.334,  -0.130,   0.768)  ( 0.00,  0.00,  0.00)
    oop     (  0.010,   0.051,  -0.034)  (  0.008,   0.043,  -0.029)  ( 0.00,  0.04,  0.02)
    vdw     ( -1.650,  -3.234,  -5.431)  ( -1.650,  -3.234,  -5.431)  ( 0.01,  0.00,  0.00)
    electro ( -0.518,   0.057,  -0.094)  ( -0.518,   0.057,  -0.094)  ( 0.00,  0.00,  0.00)
19       ( -0.026,  -0.013,  -0.044)  ( -0.024,  -0.011,  -0.042)  ( 0.01,  0.00,  0.01)
    bond    ( -0.161,  -0.100,  -0.195)  ( -0.159,  -0.099,  -0.193)  ( 0.03,  0.01,  0.05)
    angle   (  1.304,  -0.712,  -0.711)  (  1.305,  -0.712,  -0.711)  ( 0.04,  0.01,  0.01)
    strbnd  (  1.615,   0.513,   1.214)  (  1.615,   0.513,   1.214)  ( 0.00,  0.00,  0.00)
    torsion (  0.011,   0.057,  -0.038)  (  0.011,   0.058,  -0.038)  ( 0.00,  0.00,  0.00)
    oop     ( -0.001,  -0.006,   0.004)  ( -0.001,  -0.005,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.086,   1.106,   0.619)  ( -4.086,   1.106,   0.619)  ( 0.00,  0.00,  0.00)
    electro (  1.292,  -0.870,  -0.936)  (  1.292,  -0.870,  -0.936)  ( 0.00,  0.00,  0.00)
20       (  0.018,  -0.043,   0.008)  (  0.019,  -0.041,   0.009)  ( 0.00,  0.01,  0.00)
    bond    (  0.288,  -0.750,   0.412)  (  0.289,  -0.747,   0.413)  ( 0.01,  0.20,  0.03)
    angle   ( -1.609,  -0.393,   0.414)  ( -1.608,  -0.393,   0.414)  ( 0.04,  0.00,  0.00)
    strbnd  ( -0.388,  -0.178,   0.149)  ( -0.388,  -0.178,   0.149)  ( 0.00,  0.00,  0.00)
    torsion (  0.002,   0.011,   0.019)  (  0.002,   0.011,   0.019)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.001,   0.001)  (  0.000,   0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  1.503,   1.719,  -1.212)  (  1.503,   1.719,  -1.212)  ( 0.00,  0.00,  0.00)
    electro (  0.221,  -0.453,   0.225)  (  0.221,  -0.453,   0.225)  ( 0.00,  0.00,  0.00)
21       (  0.039,   0.039,  -0.040)  (  0.041,   0.040,  -0.039)  ( 0.01,  0.01,  0.00)
    bond    ( -1.156,  -1.042,   0.748)  ( -1.154,  -1.041,   0.749)  ( 0.15,  0.13,  0.05)
    angle   ( -0.862,   0.717,  -0.330)  ( -0.861,   0.717,  -0.330)  ( 0.04,  0.02,  0.00)
    strbnd  (  0.292,  -0.327,   0.162)  (  0.292,  -0.327,   0.162)  ( 0.00,  0.00,  0.00)
    torsion ( -0.001,  -0.004,  -0.007)  ( -0.001,  -0.004,  -0.007)  ( 0.00,  0.00,  0.00)
    oop     (  0.000,   0.001,   0.001)  (  0.000,   0.001,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  0.682,   0.169,  -0.176)  (  0.682,   0.169,  -0.176)  ( 0.00,  0.00,  0.00)
    electro (  1.083,   0.525,  -0.437)  (  1.083,   0.525,  -0.437)  ( 0.00,  0.00,  0.00)
22       ( -0.002,  -0.011,   0.010)  ( -0.001,  -0.009,   0.011)  ( 0.00,  0.00,  0.00)
    bond    ( -0.526,   0.784,  -0.542)  ( -0.525,   0.786,  -0.541)  ( 0.04,  0.14,  0.05)
    angle   (  1.195,  -1.233,  -2.949)  (  1.195,  -1.233,  -2.949)  ( 0.03,  0.02,  0.01)
    strbnd  ( -0.255,  -0.588,  -0.393)  ( -0.255,  -0.588,  -0.393)  ( 0.00,  0.00,  0.00)
    torsion ( -0.565,  -0.064,   0.455)  ( -0.565,  -0.064,   0.455)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.149,   1.091,   3.440)  (  0.149,   1.091,   3.440)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -0.002,  -0.011,   0.000)  ( -0.001,  -0.010,   0.001)  ( 0.00,  0.00,  0.00)
    bond    ( -0.710,  -0.703,   0.394)  ( -0.709,  -0.701,   0.395)  ( 0.11,  0.10,  0.02)
    angle   (  0.978,  -1.990,  -1.779)  (  0.979,  -1.990,  -1.778)  ( 0.03,  0.01,  0.03)
    strbnd  ( -0.228,  -0.099,  -0.703)  ( -0.228,  -0.099,  -0.703)  ( 0.00,  0.00,  0.00)
    torsion ( -0.442,   0.487,   0.072)  ( -0.442,   0.487,   0.072)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.399,   2.293,   2.016)  (  0.399,   2.293,   2.016)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (  0.016,   0.004,  -0.000)  (  0.017,   0.005,   0.001)  ( 0.00,  0.00,  0.00)
    bond    (  0.712,  -0.619,  -0.845)  (  0.713,  -0.618,  -0.844)  ( 0.08,  0.05,  0.13)
    angle   ( -4.410,  -0.925,  -3.048)  ( -4.410,  -0.925,  -3.048)  ( 0.01,  0.03,  0.01)
    strbnd  ( -0.899,   0.082,  -0.052)  ( -0.899,   0.082,  -0.052)  ( 0.00,  0.00,  0.00)
    torsion ( -0.011,  -0.086,   0.054)  ( -0.011,  -0.086,   0.054)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.624,   1.552,   3.891)  (  4.624,   1.552,   3.891)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  0.015,   0.029,  -0.030)  (  0.017,   0.030,  -0.029)  ( 0.00,  0.00,  0.00)
    bond    ( -0.752,  -0.529,   0.528)  ( -0.750,  -0.529,   0.529)  ( 0.13,  0.05,  0.04)
    angle   (  1.555,   0.717,   2.924)  (  1.555,   0.718,   2.924)  ( 0.02,  0.03,  0.01)
    strbnd  ( -0.027,   0.641,   0.396)  ( -0.027,   0.641,   0.396)  ( 0.00,  0.00,  0.00)
    torsion ( -0.505,   0.263,  -0.453)  ( -0.505,   0.263,  -0.453)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.257,  -1.063,  -3.425)  ( -0.257,  -1.063,  -3.425)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( -0.016,  -0.001,  -0.020)  ( -0.014,  -0.000,  -0.018)  ( 0.00,  0.00,  0.00)
    bond    (  0.867,   0.313,   0.819)  (  0.869,   0.313,   0.821)  ( 0.15,  0.01,  0.12)
    angle   ( -3.775,   2.481,   3.047)  ( -3.775,   2.482,   3.047)  ( 0.01,  0.02,  0.01)
    strbnd  ( -0.869,   0.249,   0.057)  ( -0.869,   0.249,   0.057)  ( 0.00,  0.00,  0.00)
    torsion (  0.019,   0.079,  -0.051)  (  0.019,   0.079,  -0.051)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.742,  -3.123,  -3.893)  (  3.742,  -3.123,  -3.893)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (  0.012,  -0.017,   0.007)  (  0.013,  -0.015,   0.008)  ( 0.00,  0.00,  0.00)
    bond    ( -0.401,   0.886,  -0.386)  ( -0.401,   0.889,  -0.385)  ( 0.02,  0.22,  0.02)
    angle   (  1.642,   1.513,   1.782)  (  1.642,   1.513,   1.783)  ( 0.02,  0.01,  0.03)
    strbnd  ( -0.174,   0.171,   0.708)  ( -0.174,   0.170,   0.708)  ( 0.00,  0.00,  0.00)
    torsion ( -0.590,  -0.296,  -0.070)  ( -0.590,  -0.296,  -0.070)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.465,  -2.291,  -2.028)  ( -0.465,  -2.291,  -2.028)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 17 # gradients do not validate&apos; passed</Info><Info file="ffmmff94.cpp" line="78">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffmmff94.cpp" line="80">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffmmff94.cpp" line="87">check &apos;not ok 18 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/viagra.gpr
 # Expected        29.95705, found 29.957050&apos; passed</Info>----------------------------------------------------------------------------------------
                                                                                        
  VALIDATE GRADIENTS : /Volumes/Home/ghutchis/Desktop/UFF/viagra.gpr
                                                                                        
                                                                                        
ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERROR (%)   
----------------------------------------------------------------------------------------
 1       ( 43.899,   3.945,  30.019)  ( 43.904,   3.947,  30.024)  ( 0.01,  0.05,  0.02)
    bond    ( 17.093,   4.746,  20.403)  ( 17.097,   4.747,  20.407)  ( 0.02,  0.02,  0.02)
    angle   ( 11.390,  -5.333,  -8.960)  ( 11.392,  -5.331,  -8.959)  ( 0.01,  0.03,  0.02)
    strbnd  (  1.689,   1.394,   0.898)  (  1.688,   1.394,   0.897)  ( 0.03,  0.04,  0.06)
    torsion ( -0.429,   0.155,  -1.060)  ( -0.429,   0.155,  -1.060)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.697,   3.940,   6.118)  (  2.697,   3.940,   6.118)  ( 0.00,  0.00,  0.00)
    electro ( 11.458,  -0.958,  12.621)  ( 11.458,  -0.958,  12.621)  ( 0.00,  0.00,  0.00)
 2       (-31.559,   7.800,  24.644)  (-31.554,   7.805,  24.649)  ( 0.02,  0.07,  0.02)
    bond    (-27.113,  -0.560,   3.022)  (-27.109,  -0.556,   3.026)  ( 0.02,  0.22,  0.12)
    angle   (-10.986,   1.327,   1.389)  (-10.984,   1.329,   1.391)  ( 0.02,  0.14,  0.17)
    strbnd  (  6.026,   1.292,   2.785)  (  6.025,   1.291,   2.784)  ( 0.02,  0.04,  0.03)
    torsion (  0.430,   1.470,   1.457)  (  0.430,   1.470,   1.457)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.607,  -0.904,   6.610)  ( -5.607,  -0.904,   6.611)  ( 0.00,  0.00,  0.00)
    electro (  5.691,   5.174,   9.381)  (  5.691,   5.174,   9.381)  ( 0.00,  0.00,  0.00)
 3       (-13.702, -13.974,  11.724)  (-13.695, -13.969,  11.729)  ( 0.04,  0.04,  0.04)
    bond    ( -2.739,  -3.315,  12.969)  ( -2.735,  -3.311,  12.974)  ( 0.14,  0.12,  0.03)
    angle   (  0.437, -11.359,  -0.705)  (  0.439, -11.357,  -0.703)  ( 0.09,  0.02,  0.14)
    strbnd  (  1.387,   2.155,  -8.533)  (  1.387,   2.154,  -8.535)  ( 0.02,  0.03,  0.02)
    torsion ( -2.416,   1.078,   0.854)  ( -2.416,   1.078,   0.855)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.812,  -1.530,   6.506)  ( -6.811,  -1.530,   6.506)  ( 0.00,  0.00,  0.00)
    electro ( -3.560,  -1.002,   0.633)  ( -3.560,  -1.002,   0.633)  ( 0.00,  0.00,  0.00)
 4       (-10.528,   5.316, -11.875)  (-10.523,   5.319, -11.869)  ( 0.05,  0.05,  0.05)
    bond    (  0.949,  -2.282,   0.268)  (  0.953,  -2.280,   0.273)  ( 0.43,  0.06,  0.13)
    angle   (  0.591,  21.684,   6.844)  (  0.593,  21.686,   6.845)  ( 0.09,  0.01,  0.02)
    strbnd  (  1.406,  -5.851,  -0.013)  (  1.406,  -5.852,  -0.014)  ( 0.04,  0.01,  0.00)
    torsion (  0.184,  -1.989,  -0.339)  (  0.185,  -1.989,  -0.339)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.466,  -3.296,  -7.186)  ( -5.466,  -3.296,  -7.186)  ( 0.00,  0.00,  0.00)
    electro ( -8.194,  -2.950, -11.449)  ( -8.194,  -2.950, -11.449)  ( 0.00,  0.00,  0.00)
 5       ( 15.851,  -6.879, -14.375)  ( 15.856,  -6.874, -14.369)  ( 0.03,  0.08,  0.04)
    bond    ( 13.334,   0.629,  -1.309)  ( 13.339,   0.633,  -1.305)  ( 0.04,  0.25,  0.29)
    angle   (  2.816, -10.985,  -2.204)  (  2.818, -10.983,  -2.202)  ( 0.07,  0.02,  0.10)
    strbnd  ( -8.882,  -0.451,   0.327)  ( -8.883,  -0.452,   0.326)  ( 0.02,  0.02,  0.01)
    torsion (  0.798,   1.843,  -1.911)  (  0.798,   1.843,  -1.911)  ( 0.00,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.390,   1.988,  -5.716)  (  7.390,   1.988,  -5.716)  ( 0.00,  0.00,  0.00)
    electro (  0.395,   0.098,  -3.561)  (  0.395,   0.098,  -3.561)  ( 0.00,  0.00,  0.00)
 6       ( 22.973,  20.466, -25.914)  ( 22.979,  20.471, -25.909)  ( 0.03,  0.03,  0.02)
    bond    (  5.775,   7.666, -25.091)  (  5.778,   7.670, -25.086)  ( 0.07,  0.05,  0.02)
    angle   (  1.263,   4.370, -10.670)  (  1.265,   4.372, -10.668)  ( 0.18,  0.05,  0.02)
    strbnd  (  1.829,   0.313,   6.376)  (  1.828,   0.312,   6.375)  ( 0.03,  0.02,  0.02)
    torsion (  2.115,   0.497,   0.920)  (  2.115,   0.498,   0.920)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.074,   1.800,  -5.252)  (  7.074,   1.800,  -5.252)  ( 0.00,  0.00,  0.00)
    electro (  4.918,   5.820,   7.803)  (  4.918,   5.820,   7.803)  ( 0.00,  0.00,  0.00)
 7       ( -5.255,  -8.167,  -8.246)  ( -5.249,  -8.161,  -8.240)  ( 0.11,  0.07,  0.07)
    bond    ( -5.766,  -6.148,  -8.390)  ( -5.762,  -6.144,  -8.385)  ( 0.07,  0.07,  0.05)
    angle   ( -0.655,  -5.211,  -2.282)  ( -0.653,  -5.209,  -2.280)  ( 0.12,  0.03,  0.08)
    strbnd  (  5.025,   4.822,   7.145)  (  5.024,   4.821,   7.144)  ( 0.01,  0.02,  0.01)
    torsion (  0.524,  -0.894,   0.352)  (  0.524,  -0.894,   0.352)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.384,  -0.621,  -5.256)  ( -4.384,  -0.621,  -5.256)  ( 0.00,  0.00,  0.00)
    electro (  0.001,  -0.114,   0.185)  (  0.001,  -0.114,   0.185)  ( 0.00,  0.00,  0.00)
 8       (-26.508, -35.564, -37.359)  (-26.504, -35.565, -37.309)  ( 0.02,  0.00,  0.13)
    bond    ( 11.247, -12.113,  -9.942)  ( 11.250, -12.104,  -9.934)  ( 0.03,  0.07,  0.07)
    angle   (-53.395, -30.633, -38.876)  (-53.394, -30.631, -38.875)  ( 0.00,  0.00,  0.00)
    strbnd  ( 24.536,   3.587,   7.723)  ( 24.535,   3.586,   7.722)  ( 0.00,  0.03,  0.01)
    torsion ( -0.238,  -2.452,   1.757)  ( -0.238,  -2.452,   1.757)  ( 0.00,  0.00,  0.01)
    oop     ( -0.005,   0.056,  -0.231)  ( -0.004,   0.046,  -0.190)  ( 0.00,  0.06,  0.96)
    vdw     (  1.478,   1.254,   4.534)  (  1.478,   1.254,   4.535)  ( 0.01,  0.00,  0.00)
    electro (-10.129,   4.737,  -2.324)  (-10.129,   4.737,  -2.324)  ( 0.00,  0.00,  0.00)
 9       ( 25.137,  29.574, -14.528)  ( 25.138,  29.576, -14.522)  ( 0.00,  0.00,  0.04)
    bond    (  1.590,   1.713,  -4.695)  (  1.591,   1.713,  -4.689)  ( 0.04,  0.05,  0.13)
    angle   ( 17.587,  22.963,  14.357)  ( 17.587,  22.964,  14.357)  ( 0.00,  0.00,  0.00)
    strbnd  (  7.120,   5.560, -18.978)  (  7.120,   5.560, -18.978)  ( 0.00,  0.00,  0.00)
    torsion (  0.336,   0.392,   0.257)  (  0.336,   0.392,   0.257)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.496,   0.765,   2.340)  (  1.496,   0.765,   2.340)  ( 0.00,  0.00,  0.00)
    electro ( -2.991,  -1.819,  -7.809)  ( -2.991,  -1.819,  -7.809)  ( 0.00,  0.00,  0.00)
10       ( 19.065, -23.672,  27.621)  ( 19.065, -23.664,  27.621)  ( 0.00,  0.03,  0.00)
    bond    (  0.343,  -3.469,   0.538)  (  0.343,  -3.462,   0.538)  ( 0.00,  0.21,  0.01)
    angle   ( 20.582,   6.387,  27.967)  ( 20.583,   6.387,  27.968)  ( 0.00,  0.00,  0.00)
    strbnd  (  3.104, -21.850,   2.270)  (  3.104, -21.850,   2.270)  ( 0.00,  0.00,  0.00)
    torsion ( -0.536,  -0.207,  -0.991)  ( -0.536,  -0.207,  -0.991)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.016,   2.708,   2.250)  ( -2.016,   2.708,   2.250)  ( 0.00,  0.00,  0.00)
    electro ( -2.411,  -7.240,  -4.414)  ( -2.411,  -7.240,  -4.414)  ( 0.00,  0.00,  0.00)
11       (-20.642,   5.851,   8.517)  (-20.640,   5.893,   8.371)  ( 0.01,  0.72,  1.71)
    bond    ( -6.709,   1.922,   1.059)  ( -6.705,   1.927,   1.060)  ( 0.06,  0.26,  0.04)
    angle   ( 28.364,  -4.494,  -0.487)  ( 28.365,  -4.492,  -0.486)  ( 0.01,  0.04,  0.01)
    strbnd  (-32.913,   5.592,   1.480)  (-32.913,   5.592,   1.480)  ( 0.00,  0.00,  0.01)
    torsion (  0.270,   0.159,   2.839)  (  0.270,   0.159,   2.840)  ( 0.00,  0.00,  0.03)
    oop     (  0.009,  -0.160,   0.679)  (  0.006,  -0.125,   0.532)  ( 0.00,  0.57, 10.02)
    vdw     ( -9.578,   2.904,   3.010)  ( -9.577,   2.904,   3.010)  ( 0.00,  0.00,  0.00)
    electro ( -0.085,  -0.071,  -0.064)  ( -0.085,  -0.071,  -0.064)  ( 0.00,  0.00,  0.00)
12       (-21.687,  -0.556,  -1.608)  (-21.679,  -0.568,  -1.522)  ( 0.04,  0.69,  5.35)
    bond    (  1.922,   0.917,   0.032)  (  1.927,   0.922,   0.032)  ( 0.28,  0.47,  0.00)
    angle   ( -9.984,   2.922,   1.064)  ( -9.983,   2.923,   1.065)  ( 0.02,  0.05,  0.01)
    strbnd  (-10.267,   7.335,   1.838)  (-10.267,   7.335,   1.838)  ( 0.00,  0.00,  0.00)
    torsion ( -0.023,   0.363,  -1.658)  ( -0.023,   0.364,  -1.657)  ( 0.00,  0.00,  0.08)
    oop     ( -0.004,   0.086,  -0.378)  ( -0.003,   0.067,  -0.293)  ( 0.00,  0.16,  3.18)
    vdw     ( -6.885, -10.523,  -1.573)  ( -6.885, -10.523,  -1.573)  ( 0.00,  0.00,  0.00)
    electro (  3.554,  -1.655,  -0.933)  (  3.554,  -1.655,  -0.933)  ( 0.00,  0.00,  0.00)
13       ( 11.071, -18.550,  -9.223)  ( 11.080, -18.558,  -9.162)  ( 0.07,  0.04,  0.66)
    bond    (  3.557,   7.206,   1.481)  (  3.562,   7.211,   1.482)  ( 0.15,  0.07,  0.03)
    angle   (  3.498, -21.802,  -5.738)  (  3.500, -21.801,  -5.738)  ( 0.04,  0.01,  0.00)
    strbnd  ( 11.124,   5.598,   1.224)  ( 11.124,   5.598,   1.224)  ( 0.00,  0.00,  0.00)
    torsion ( -0.010,   0.214,  -0.783)  ( -0.010,   0.214,  -0.782)  ( 0.00,  0.00,  0.10)
    oop     ( -0.007,   0.075,  -0.292)  ( -0.005,   0.060,  -0.233)  ( 0.00,  0.11,  1.73)
    vdw     ( -8.942,  -9.234,  -4.974)  ( -8.942,  -9.234,  -4.974)  ( 0.00,  0.00,  0.00)
    electro (  1.850,  -0.606,  -0.141)  (  1.850,  -0.606,  -0.141)  ( 0.00,  0.00,  0.00)
14       (-13.619,  -2.061,   4.754)  (-13.614,  -2.035,   4.683)  ( 0.04,  1.23,  1.49)
    bond    (-26.978,  13.126,   4.300)  (-26.972,  13.131,   4.300)  ( 0.02,  0.03,  0.01)
    angle   (-18.118,  -9.493,   4.254)  (-18.116,  -9.491,   4.254)  ( 0.01,  0.02,  0.00)
    strbnd  ( 29.827,  -3.579,  -1.396)  ( 29.826,  -3.579,  -1.395)  ( 0.00,  0.00,  0.01)
    torsion ( -0.134,  -1.037,   2.744)  ( -0.134,  -1.037,   2.746)  ( 0.00,  0.01,  0.04)
    oop     (  0.011,  -0.106,   0.410)  (  0.009,  -0.087,   0.338)  ( 0.00,  0.20,  2.98)
    vdw     (  1.703,  -1.419,  -5.302)  (  1.703,  -1.419,  -5.302)  ( 0.01,  0.01,  0.00)
    electro (  0.070,   0.448,  -0.257)  (  0.070,   0.448,  -0.257)  ( 0.00,  0.00,  0.00)
15       ( 12.511, -13.814,  -4.788)  ( 12.473, -13.811,  -4.624)  ( 0.30,  0.02,  3.43)
    bond    ( -5.136, -10.558,  -3.032)  ( -5.131, -10.553,  -3.032)  ( 0.09,  0.04,  0.02)
    angle   (  2.758, -11.175,   3.017)  (  2.760, -11.174,   3.017)  ( 0.07,  0.02,  0.00)
    strbnd  (  9.858,  -2.806,  -1.156)  (  9.859,  -2.806,  -1.156)  ( 0.00,  0.00,  0.01)
    torsion ( -0.006,   0.855,  -3.398)  ( -0.006,   0.855,  -3.397)  ( 0.00,  0.01,  0.04)
    oop     (  0.274,   0.043,  -1.066)  (  0.229,   0.040,  -0.903)  ( 1.22,  0.02, 15.26)
    vdw     (  6.486,   9.336,   1.077)  (  6.486,   9.336,   1.077)  ( 0.00,  0.00,  0.00)
    electro ( -1.725,   0.491,  -0.231)  ( -1.725,   0.491,  -0.231)  ( 0.00,  0.00,  0.00)
16       (-17.826,  18.834,   7.218)  (-17.819,  18.851,   7.183)  ( 0.04,  0.09,  0.48)
    bond    (  8.237,  -4.438,  -0.410)  (  8.242,  -4.433,  -0.410)  ( 0.06,  0.11,  0.02)
    angle   (-15.113,  19.214,   5.231)  (-15.111,  19.215,   5.231)  ( 0.01,  0.01,  0.00)
    strbnd  ( -4.665,  -2.331,  -0.554)  ( -4.666,  -2.331,  -0.554)  ( 0.00,  0.01,  0.00)
    torsion (  0.022,   0.175,  -0.501)  (  0.022,   0.175,  -0.500)  ( 0.00,  0.00,  0.06)
    oop     ( -0.002,  -0.093,   0.333)  ( -0.002,  -0.083,   0.296)  ( 0.00,  0.09,  1.23)
    vdw     ( -8.157,   8.167,   3.510)  ( -8.157,   8.167,   3.510)  ( 0.00,  0.00,  0.00)
    electro (  1.852,  -1.860,  -0.390)  (  1.852,  -1.860,  -0.390)  ( 0.00,  0.00,  0.00)
17       ( -6.630,  21.607,   7.959)  ( -6.625,  21.606,   7.983)  ( 0.08,  0.01,  0.30)
    bond    (  2.115,   1.161,  -0.091)  (  2.119,   1.164,  -0.091)  ( 0.20,  0.31,  0.00)
    angle   ( 25.721,  28.686,   2.043)  ( 25.721,  28.687,   2.043)  ( 0.00,  0.00,  0.01)
    strbnd  (-34.795,  -0.918,   2.926)  (-34.795,  -0.918,   2.926)  ( 0.00,  0.00,  0.01)
    torsion (  0.088,  -0.609,   5.097)  (  0.088,  -0.609,   5.098)  ( 0.00,  0.00,  0.01)
    oop     ( -0.003,   0.029,  -0.113)  ( -0.002,   0.023,  -0.090)  ( 0.00,  0.02,  0.26)
    vdw     (  0.333,  -8.191,  -5.814)  (  0.333,  -8.190,  -5.814)  ( 0.00,  0.00,  0.00)
    electro ( -0.089,   1.449,   3.911)  ( -0.089,   1.449,   3.911)  ( 0.00,  0.00,  0.00)
18       (  5.737, -10.611,  -8.116)  (  5.743, -10.605,  -8.110)  ( 0.10,  0.05,  0.07)
    bond    (  8.725, -11.934,  -3.140)  (  8.729, -11.929,  -3.136)  ( 0.04,  0.04,  0.13)
    angle   ( -9.764,  -7.159,  -6.067)  ( -9.762,  -7.157,  -6.065)  ( 0.02,  0.03,  0.03)
    strbnd  ( -5.015,  10.337,   3.735)  ( -5.015,  10.336,   3.735)  ( 0.00,  0.02,  0.02)
    torsion ( -0.197,   1.065,  -2.228)  ( -0.197,   1.065,  -2.228)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.854,  -1.808,   0.220)  ( 10.855,  -1.808,   0.220)  ( 0.00,  0.00,  0.00)
    electro (  1.133,  -1.112,  -0.636)  (  1.133,  -1.112,  -0.636)  ( 0.00,  0.00,  0.00)
19       (  3.263, -11.126,   7.782)  (  3.268, -11.121,   7.787)  ( 0.17,  0.05,  0.06)
    bond    (  1.121,  -2.081,   3.281)  (  1.125,  -2.077,   3.285)  ( 0.37,  0.19,  0.12)
    angle   ( -4.420,  -2.772,   7.469)  ( -4.418,  -2.771,   7.471)  ( 0.04,  0.06,  0.02)
    strbnd  (  0.275,   1.768,  -3.446)  (  0.274,   1.768,  -3.447)  ( 0.01,  0.03,  0.03)
    torsion (  2.173,  -4.215,  -2.094)  (  2.173,  -4.215,  -2.094)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.113,  -3.826,   2.573)  (  4.113,  -3.826,   2.573)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( -7.102,  36.625,  -5.344)  ( -6.902,  36.607,  -5.849)  ( 2.81,  0.05,  9.44)
    bond    (-25.048,  -5.303,  -9.231)  (-25.043,  -5.295,  -9.230)  ( 0.02,  0.16,  0.01)
    angle   ( 27.154,  45.020,   3.962)  ( 27.157,  45.022,   3.962)  ( 0.01,  0.01,  0.00)
    strbnd  ( -8.325,   2.343,  -3.287)  ( -8.326,   2.342,  -3.287)  ( 0.01,  0.03,  0.00)
    torsion ( -0.784,   0.421,   0.853)  ( -0.784,   0.421,   0.855)  ( 0.01,  0.00,  0.10)
    oop     ( -1.005,   0.148,   2.652)  ( -0.813,   0.120,   2.146)  (19.17,  0.42, 19.09)
    vdw     ( -7.528,  -5.686,  -2.010)  ( -7.528,  -5.686,  -2.010)  ( 0.00,  0.00,  0.00)
    electro (  8.435,  -0.317,   1.716)  (  8.435,  -0.317,   1.716)  ( 0.00,  0.00,  0.00)
21       (-24.021,  26.605, -11.463)  (-24.063,  26.618, -11.339)  ( 0.17,  0.05,  1.09)
    bond    (  1.411,  -0.192,   0.529)  (  1.413,  -0.184,   0.530)  ( 0.16,  0.16,  0.02)
    angle   (-47.944,  21.471, -19.314)  (-47.942,  21.471, -19.314)  ( 0.00,  0.00,  0.00)
    strbnd  ( 12.752,   3.510,   4.513)  ( 12.751,   3.510,   4.513)  ( 0.00,  0.00,  0.00)
    torsion ( -0.598,   0.098,   1.696)  ( -0.597,   0.098,   1.697)  ( 0.01,  0.00,  0.05)
    oop     (  0.246,  -0.028,  -0.654)  (  0.200,  -0.023,  -0.531)  ( 1.13,  0.01,  8.08)
    vdw     (  4.516,   7.068,  -1.941)  (  4.516,   7.068,  -1.941)  ( 0.00,  0.00,  0.00)
    electro (  5.596,  -5.323,   3.707)  (  5.596,  -5.323,   3.707)  ( 0.00,  0.00,  0.00)
22       ( 26.638,  -7.797,  11.806)  ( 26.619,  -7.786,  11.878)  ( 0.07,  0.14,  0.61)
    bond    (  5.877,  -7.278,   2.737)  (  5.883,  -7.273,   2.738)  ( 0.10,  0.07,  0.03)
    angle   ( 44.453,  -9.873,  17.527)  ( 44.455,  -9.872,  17.528)  ( 0.00,  0.01,  0.00)
    strbnd  (-22.680,  -3.722,  -8.477)  (-22.681,  -3.722,  -8.477)  ( 0.00,  0.01,  0.00)
    torsion (  0.130,  -0.036,  -0.336)  (  0.130,  -0.036,  -0.335)  ( 0.00,  0.00,  0.04)
    oop     (  0.109,  -0.020,  -0.288)  (  0.082,  -0.015,  -0.218)  ( 0.29,  0.01,  2.01)
    vdw     ( -2.055,  15.026,   0.263)  ( -2.055,  15.027,   0.263)  ( 0.00,  0.00,  0.00)
    electro (  0.804,  -1.894,   0.380)  (  0.804,  -1.894,   0.380)  ( 0.00,  0.00,  0.00)
23       (-27.737, -36.179,  -8.271)  (-27.748, -36.169,  -8.220)  ( 0.04,  0.03,  0.61)
    bond    ( -0.604, -30.983,   1.773)  ( -0.599, -30.977,   1.774)  ( 0.32,  0.02,  0.05)
    angle   (-36.463, -12.477, -12.641)  (-36.460, -12.475, -12.640)  ( 0.01,  0.01,  0.00)
    strbnd  (  7.549,   3.290,   2.655)  (  7.548,   3.290,   2.655)  ( 0.01,  0.03,  0.01)
    torsion (  0.142,  -0.020,  -0.374)  (  0.142,  -0.020,  -0.373)  ( 0.00,  0.00,  0.04)
    oop     (  0.061,  -0.009,  -0.157)  (  0.042,  -0.006,  -0.109)  ( 0.11,  0.00,  0.76)
    vdw     (  4.759,   7.546,   1.424)  (  4.759,   7.546,   1.424)  ( 0.00,  0.00,  0.00)
    electro ( -3.180,  -3.526,  -0.952)  ( -3.180,  -3.526,  -0.952)  ( 0.00,  0.00,  0.00)
24       (-10.821,  46.293,  -6.973)  (-10.749,  46.291,  -7.126)  ( 0.67,  0.01,  2.19)
    bond    ( -7.128,  36.476,  -5.032)  ( -7.118,  36.481,  -5.030)  ( 0.14,  0.02,  0.03)
    angle   (  3.045,   5.260,   0.441)  (  3.047,   5.262,   0.441)  ( 0.07,  0.05,  0.02)
    strbnd  (  3.284,   4.936,   0.917)  (  3.283,   4.934,   0.917)  ( 0.03,  0.02,  0.03)
    torsion ( -0.021,  -0.004,   0.079)  ( -0.021,  -0.004,   0.080)  ( 0.00,  0.00,  0.01)
    oop     ( -0.326,   0.056,   0.831)  ( -0.266,   0.046,   0.675)  ( 1.99,  0.05, 12.91)
    vdw     (  3.476,  -4.869,   1.621)  (  3.476,  -4.869,   1.621)  ( 0.00,  0.00,  0.00)
    electro (-13.151,   4.440,  -5.830)  (-13.151,   4.440,  -5.830)  ( 0.00,  0.00,  0.00)
25       (  3.429, -52.805,   6.754)  (  3.313, -52.774,   7.075)  ( 3.38,  0.06,  4.75)
    bond    (  8.283,   2.133,   2.726)  (  8.290,   2.140,   2.727)  ( 0.08,  0.31,  0.03)
    angle   ( -6.422, -45.385,   1.001)  ( -6.420, -45.383,   1.001)  ( 0.02,  0.01,  0.03)
    strbnd  (-10.186,  -7.939,  -3.501)  (-10.187,  -7.938,  -3.501)  ( 0.00,  0.00,  0.00)
    torsion (  0.679,  -0.052,  -1.804)  (  0.679,  -0.052,  -1.802)  ( 0.01,  0.00,  0.06)
    oop     (  0.701,  -0.126,  -1.797)  (  0.577,  -0.105,  -1.478)  ( 8.66,  0.27, 17.75)
    vdw     (  8.959,  -7.735,   8.017)  (  8.959,  -7.735,   8.017)  ( 0.00,  0.01,  0.00)
    electro (  1.415,   6.298,   2.112)  (  1.415,   6.298,   2.112)  ( 0.00,  0.00,  0.00)
26       (-24.709, -18.953,  -4.041)  (-24.718, -18.943,  -3.995)  ( 0.04,  0.05,  1.14)
    bond    (-24.696,   9.518, -10.388)  (-24.690,   9.523, -10.387)  ( 0.03,  0.05,  0.01)
    angle   ( -7.991, -22.014,  -4.231)  ( -7.989, -22.012,  -4.230)  ( 0.02,  0.01,  0.01)
    strbnd  (  7.348,  -6.906,   2.805)  (  7.348,  -6.906,   2.805)  ( 0.01,  0.01,  0.00)
    torsion (  0.081,  -0.067,  -0.270)  (  0.081,  -0.067,  -0.270)  ( 0.00,  0.00,  0.02)
    oop     (  0.110,  -0.023,  -0.279)  (  0.093,  -0.020,  -0.235)  ( 0.19,  0.01,  1.22)
    vdw     (  0.760,  -0.386,   8.493)  (  0.760,  -0.386,   8.493)  ( 0.00,  0.00,  0.00)
    electro ( -0.321,   0.925,  -0.171)  ( -0.321,   0.925,  -0.171)  ( 0.00,  0.00,  0.00)
27       ( 43.004,  25.134,  14.751)  ( 43.022,  25.136,  14.720)  ( 0.04,  0.01,  0.21)
    bond    ( 18.803,  -4.833,   7.511)  ( 18.809,  -4.830,   7.512)  ( 0.03,  0.06,  0.01)
    angle   ( 18.124,  40.689,   3.688)  ( 18.124,  40.692,   3.688)  ( 0.00,  0.01,  0.00)
    strbnd  (  3.463, -10.759,   2.073)  (  3.463, -10.760,   2.073)  ( 0.01,  0.01,  0.00)
    torsion (  0.026,  -0.003,  -0.071)  (  0.026,  -0.003,  -0.071)  ( 0.00,  0.00,  0.00)
    oop     ( -0.076,   0.016,   0.200)  ( -0.064,   0.013,   0.167)  ( 0.09,  0.00,  0.64)
    vdw     (  0.932,  -1.439,   0.904)  (  0.932,  -1.439,   0.904)  ( 0.01,  0.00,  0.00)
    electro (  1.732,   1.461,   0.447)  (  1.732,   1.461,   0.447)  ( 0.00,  0.00,  0.00)
28       ( 11.900, -38.637,   7.162)  ( 11.903, -38.629,   7.174)  ( 0.03,  0.02,  0.18)
    bond    ( 10.457,  12.301,   2.949)  ( 10.462,  12.307,   2.950)  ( 0.05,  0.05,  0.03)
    angle   ( -9.168, -55.992,   0.592)  ( -9.166, -55.990,   0.592)  ( 0.03,  0.00,  0.03)
    strbnd  ( 10.254,   8.892,   3.121)  ( 10.253,   8.891,   3.121)  ( 0.01,  0.01,  0.00)
    torsion ( -0.078,   0.016,   0.208)  ( -0.078,   0.016,   0.209)  ( 0.00,  0.00,  0.01)
    oop     (  0.033,  -0.007,  -0.088)  (  0.029,  -0.006,  -0.077)  ( 0.01,  0.00,  0.10)
    vdw     (  0.152,   1.397,  -0.108)  (  0.152,   1.397,  -0.108)  ( 0.00,  0.00,  0.00)
    electro (  0.251,  -5.244,   0.487)  (  0.251,  -5.244,   0.487)  ( 0.00,  0.00,  0.00)
29       ( 12.421,   3.448,   4.810)  ( 12.407,   3.453,   4.866)  ( 0.11,  0.15,  1.17)
    bond    (  4.738,  -2.006,   1.986)  (  4.745,  -2.005,   1.987)  ( 0.15,  0.06,  0.06)
    angle   (  4.344,  11.246,   0.976)  (  4.344,  11.247,   0.976)  ( 0.00,  0.01,  0.00)
    strbnd  (  8.204,  -1.157,   3.293)  (  8.204,  -1.157,   3.293)  ( 0.00,  0.02,  0.00)
    torsion ( -0.055,   0.010,   0.143)  ( -0.055,   0.010,   0.143)  ( 0.00,  0.00,  0.00)
    oop     (  0.076,  -0.012,  -0.195)  (  0.055,  -0.009,  -0.140)  ( 0.16,  0.00,  1.07)
    vdw     ( -0.237,  -3.506,   0.148)  ( -0.237,  -3.506,   0.148)  ( 0.00,  0.00,  0.00)
    electro ( -4.648,  -1.127,  -1.541)  ( -4.648,  -1.127,  -1.540)  ( 0.00,  0.00,  0.00)
30       ( -0.899,  29.892,  -2.386)  ( -0.890,  29.897,  -2.393)  ( 0.82,  0.02,  0.27)
    bond    ( -4.277,   0.277,  -1.598)  ( -4.272,   0.282,  -1.594)  ( 0.12,  0.12,  0.27)
    angle   ( 12.189,  27.647,   2.441)  ( 12.190,  27.649,   2.443)  ( 0.02,  0.01,  0.06)
    strbnd  (-12.899,  -0.004,  -4.802)  (-12.901,  -0.005,  -4.803)  ( 0.02,  0.00,  0.01)
    torsion ( -0.029,  -0.010,   0.078)  ( -0.029,  -0.010,   0.078)  ( 0.00,  0.00,  0.00)
    oop     ( -0.021,   0.004,   0.055)  ( -0.016,   0.003,   0.043)  ( 0.01,  0.00,  0.07)
    vdw     (  2.572,   3.686,   0.693)  (  2.572,   3.686,   0.693)  ( 0.00,  0.00,  0.00)
    electro (  1.565,  -1.708,   0.747)  (  1.565,  -1.708,   0.747)  ( 0.00,  0.00,  0.00)
31       ( -2.520,  -1.395,   5.402)  ( -2.503,  -1.392,   5.378)  ( 0.66,  0.23,  0.44)
    bond    (  2.316,  -1.013,   0.462)  (  2.320,  -1.009,   0.466)  ( 0.17,  0.39,  0.18)
    angle   ( -1.033,  -3.283,   3.719)  ( -1.030,  -3.281,   3.721)  ( 0.20,  0.06,  0.05)
    strbnd  ( -1.912,   0.920,  -0.790)  ( -1.913,   0.919,  -0.791)  ( 0.04,  0.06,  0.08)
    torsion ( -0.089,   0.197,   0.525)  ( -0.089,   0.197,   0.525)  ( 0.00,  0.00,  0.01)
    oop     ( -0.059,   0.012,   0.150)  ( -0.048,   0.010,   0.121)  ( 0.07,  0.00,  0.43)
    vdw     ( -0.575,   2.525,   1.662)  ( -0.575,   2.525,   1.662)  ( 0.00,  0.00,  0.00)
    electro ( -1.168,  -0.754,  -0.327)  ( -1.168,  -0.754,  -0.327)  ( 0.00,  0.00,  0.00)
32       ( -0.533,   9.886,  -5.279)  ( -0.528,   9.891,  -5.275)  ( 0.30,  0.05,  0.09)
    bond    ( -0.397,   0.967,   0.156)  ( -0.393,   0.971,   0.160)  ( 0.16,  0.37,  0.06)
    angle   (  1.310,   8.321,  -3.491)  (  1.312,   8.323,  -3.489)  ( 0.14,  0.02,  0.06)
    strbnd  (  0.932,  -1.664,  -0.673)  (  0.932,  -1.665,  -0.674)  ( 0.03,  0.04,  0.07)
    torsion ( -1.283,   1.507,   0.186)  ( -1.282,   1.508,   0.186)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.095,   0.754,  -1.457)  ( -1.095,   0.754,  -1.457)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( -0.762,  -6.186,  -6.819)  ( -0.756,  -6.181,  -6.814)  ( 0.41,  0.08,  0.08)
    bond    ( -0.257,   0.740,  -0.064)  ( -0.253,   0.744,  -0.060)  ( 0.11,  0.30,  0.03)
    angle   ( -0.057,  -7.999,  -0.743)  ( -0.055,  -7.998,  -0.742)  ( 0.01,  0.02,  0.13)
    strbnd  ( -0.135,   0.372,   0.957)  ( -0.135,   0.371,   0.957)  ( 0.01,  0.03,  0.07)
    torsion (  0.594,   0.454,  -0.563)  (  0.594,   0.454,  -0.563)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.907,   0.248,  -6.406)  ( -0.907,   0.248,  -6.406)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (  3.946, -11.181,   1.414)  (  3.947, -11.179,   1.415)  ( 0.03,  0.02,  0.04)
    bond    (  5.169, -14.116,   0.695)  (  5.169, -14.113,   0.695)  ( 0.01,  0.02,  0.01)
    angle   (  3.342,   1.196,  -0.586)  (  3.343,   1.196,  -0.585)  ( 0.02,  0.01,  0.03)
    strbnd  ( -1.346,  -0.265,  -0.102)  ( -1.346,  -0.265,  -0.102)  ( 0.00,  0.00,  0.00)
    torsion (  0.449,   0.094,  -1.417)  (  0.449,   0.094,  -1.417)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.669,   1.909,   2.823)  ( -3.669,   1.909,   2.823)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (  3.486,   4.455, -12.372)  (  3.487,   4.455, -12.370)  ( 0.02,  0.02,  0.02)
    bond    (  3.564,   5.536, -13.771)  (  3.564,   5.537, -13.769)  ( 0.01,  0.01,  0.02)
    angle   (  4.272,   0.896,   1.466)  (  4.273,   0.896,   1.466)  ( 0.01,  0.04,  0.01)
    strbnd  ( -1.404,  -0.280,   0.081)  ( -1.404,  -0.280,   0.081)  ( 0.00,  0.00,  0.00)
    torsion ( -0.176,  -0.765,  -0.353)  ( -0.176,  -0.765,  -0.353)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.769,  -0.933,   0.205)  ( -2.769,  -0.933,   0.205)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( 12.939,  -0.809,   0.265)  ( 12.942,  -0.809,   0.266)  ( 0.02,  0.05,  0.02)
    bond    ( 14.948,  -0.872,  -2.186)  ( 14.951,  -0.871,  -2.186)  ( 0.02,  0.01,  0.01)
    angle   ( -0.194,  -0.295,  -1.209)  ( -0.194,  -0.294,  -1.209)  ( 0.00,  0.01,  0.05)
    strbnd  ( -0.620,   0.104,   0.833)  ( -0.620,   0.104,   0.833)  ( 0.00,  0.00,  0.00)
    torsion (  0.055,   0.235,   0.284)  (  0.055,   0.235,   0.284)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.251,   0.018,   2.544)  ( -1.251,   0.018,   2.544)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( -3.971,  10.634,   0.243)  ( -3.970,  10.637,   0.243)  ( 0.02,  0.03,  0.02)
    bond    ( -3.964,  14.301,  -1.740)  ( -3.964,  14.304,  -1.740)  ( 0.01,  0.02,  0.01)
    angle   (  0.591,  -0.040,  -1.679)  (  0.592,  -0.040,  -1.678)  ( 0.03,  0.00,  0.03)
    strbnd  (  0.204,  -0.463,   0.799)  (  0.204,  -0.463,   0.799)  ( 0.00,  0.00,  0.00)
    torsion (  1.285,   0.262,  -0.775)  (  1.285,   0.262,  -0.775)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.087,  -3.425,   3.638)  ( -2.087,  -3.425,   3.638)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       ( -0.866,  -4.191,  12.256)  ( -0.865,  -4.190,  12.258)  ( 0.07,  0.02,  0.02)
    bond    ( -3.389,  -5.369,  13.737)  ( -3.388,  -5.369,  13.739)  ( 0.01,  0.01,  0.02)
    angle   ( -1.029,  -0.520,  -0.457)  ( -1.029,  -0.520,  -0.457)  ( 0.05,  0.02,  0.00)
    strbnd  (  0.813,   0.452,  -0.424)  (  0.813,   0.452,  -0.424)  ( 0.00,  0.00,  0.00)
    torsion (  0.168,   0.305,   0.160)  (  0.168,   0.305,   0.160)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.572,   0.941,  -0.760)  (  2.572,   0.941,  -0.760)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       ( -2.366,  11.042,  -1.302)  ( -2.365,  11.045,  -1.302)  ( 0.04,  0.02,  0.05)
    bond    ( -5.175,  13.998,  -0.756)  ( -5.174,  14.001,  -0.756)  ( 0.01,  0.02,  0.01)
    angle   ( -1.747,  -0.629,   0.301)  ( -1.746,  -0.629,   0.301)  ( 0.03,  0.00,  0.01)
    strbnd  (  0.846,  -0.285,   0.215)  (  0.846,  -0.285,   0.215)  ( 0.00,  0.00,  0.00)
    torsion ( -0.933,  -0.284,   1.129)  ( -0.933,  -0.284,   1.129)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.642,  -1.759,  -2.191)  (  4.642,  -1.759,  -2.191)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       (-14.091,   0.186,   1.126)  (-14.088,   0.187,   1.127)  ( 0.02,  0.01,  0.07)
    bond    (-15.161,   0.766,   2.378)  (-15.158,   0.766,   2.378)  ( 0.02,  0.01,  0.01)
    angle   (  0.632,  -0.293,   4.123)  (  0.632,  -0.293,   4.124)  ( 0.00,  0.01,  0.01)
    strbnd  (  0.268,   0.146,  -1.361)  (  0.268,   0.146,  -1.361)  ( 0.00,  0.00,  0.00)
    torsion ( -0.102,  -0.786,  -0.394)  ( -0.102,  -0.786,  -0.394)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.273,   0.354,  -3.619)  (  0.273,   0.354,  -3.619)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (  4.249, -11.060,   1.591)  (  4.250, -11.058,   1.592)  ( 0.02,  0.03,  0.05)
    bond    (  4.150, -14.362,   1.795)  (  4.150, -14.360,   1.795)  ( 0.01,  0.02,  0.01)
    angle   ( -1.040,   0.213,   4.111)  ( -1.039,   0.213,   4.111)  ( 0.04,  0.00,  0.01)
    strbnd  (  0.104,   0.125,  -1.337)  (  0.104,   0.125,  -1.337)  ( 0.00,  0.00,  0.00)
    torsion ( -1.377,  -0.373,   0.198)  ( -1.377,  -0.373,   0.198)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.413,   3.337,  -3.175)  (  2.413,   3.337,  -3.175)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       ( -4.567,  10.654,  -2.216)  ( -4.567,  10.656,  -2.215)  ( 0.02,  0.03,  0.03)
    bond    ( -3.731,  13.029,  -0.572)  ( -3.730,  13.032,  -0.572)  ( 0.01,  0.02,  0.00)
    angle   (  1.346,   0.459,   1.669)  (  1.346,   0.459,   1.669)  ( 0.03,  0.00,  0.03)
    strbnd  ( -0.246,  -0.135,  -0.322)  ( -0.246,  -0.135,  -0.322)  ( 0.00,  0.00,  0.00)
    torsion ( -0.006,  -0.001,   0.005)  ( -0.006,  -0.001,   0.005)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.931,  -2.698,  -2.996)  ( -1.931,  -2.698,  -2.996)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       ( 11.621,  -1.350,  -2.700)  ( 11.624,  -1.350,  -2.700)  ( 0.03,  0.04,  0.02)
    bond    ( 13.434,  -0.728,  -1.655)  ( 13.437,  -0.728,  -1.655)  ( 0.02,  0.01,  0.01)
    angle   (  0.239,  -0.414,   2.123)  (  0.239,  -0.413,   2.123)  ( 0.00,  0.02,  0.02)
    strbnd  ( -0.632,  -0.208,  -0.263)  ( -0.633,  -0.208,  -0.263)  ( 0.00,  0.00,  0.00)
    torsion ( -0.014,   0.348,  -0.265)  ( -0.014,   0.348,  -0.265)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.406,  -0.348,  -2.640)  ( -1.406,  -0.348,  -2.640)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       ( -3.360,  -5.091,  10.354)  ( -3.359,  -5.090,  10.356)  ( 0.02,  0.02,  0.03)
    bond    ( -2.735,  -4.743,  12.407)  ( -2.734,  -4.742,  12.410)  ( 0.01,  0.01,  0.02)
    angle   (  2.115,   0.037,   0.480)  (  2.115,   0.037,   0.480)  ( 0.02,  0.00,  0.00)
    strbnd  ( -0.131,  -0.084,  -0.698)  ( -0.131,  -0.084,  -0.698)  ( 0.00,  0.00,  0.00)
    torsion ( -0.336,   0.257,   0.024)  ( -0.336,   0.257,   0.024)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.272,  -0.558,  -1.860)  ( -2.272,  -0.558,  -1.860)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       (  5.959,   7.788,   2.228)  (  5.961,   7.794,   2.213)  ( 0.03,  0.08,  0.71)
    bond    (  9.306,   9.280,   2.085)  (  9.308,   9.282,   2.085)  ( 0.02,  0.02,  0.01)
    angle   ( -0.825,   0.781,   0.202)  ( -0.825,   0.782,   0.202)  ( 0.03,  0.02,  0.00)
    strbnd  ( -0.536,  -0.577,  -0.147)  ( -0.536,  -0.577,  -0.147)  ( 0.00,  0.00,  0.00)
    torsion ( -0.003,   0.038,  -0.155)  ( -0.003,   0.038,  -0.155)  ( 0.00,  0.00,  0.00)
    oop     (  0.001,  -0.014,   0.060)  (  0.000,  -0.010,   0.043)  ( 0.00,  0.01,  0.10)
    vdw     (  0.598,  -1.926,  -0.157)  (  0.598,  -1.926,  -0.157)  ( 0.00,  0.00,  0.00)
    electro ( -2.582,   0.205,   0.341)  ( -2.582,   0.206,   0.341)  ( 0.00,  0.00,  0.00)
46       ( -0.855,   8.841,   2.077)  ( -0.855,   8.850,   2.056)  ( 0.05,  0.10,  1.05)
    bond    ( -2.236,  11.174,   2.917)  ( -2.236,  11.177,   2.918)  ( 0.01,  0.03,  0.01)
    angle   (  7.037,   1.340,   0.260)  (  7.038,   1.340,   0.260)  ( 0.01,  0.00,  0.00)
    strbnd  (  0.866,  -2.736,  -0.746)  (  0.866,  -2.736,  -0.746)  ( 0.00,  0.00,  0.00)
    torsion (  0.005,  -0.155,   0.595)  (  0.005,  -0.155,   0.596)  ( 0.00,  0.00,  0.02)
    oop     (  0.002,  -0.022,   0.087)  (  0.001,  -0.017,   0.065)  ( 0.00,  0.01,  0.20)
    vdw     ( -6.676,  -0.740,  -0.917)  ( -6.676,  -0.740,  -0.917)  ( 0.00,  0.00,  0.00)
    electro (  0.147,  -0.020,  -0.119)  (  0.147,  -0.020,  -0.119)  ( 0.00,  0.00,  0.00)
47       (  3.405,  -5.917,  -3.111)  (  3.407,  -5.928,  -3.062)  ( 0.04,  0.17,  1.57)
    bond    (  3.394, -11.784,  -3.276)  (  3.394, -11.781,  -3.275)  ( 0.01,  0.03,  0.01)
    angle   (  2.930,   0.813,   0.113)  (  2.931,   0.813,   0.113)  ( 0.02,  0.00,  0.00)
    strbnd  ( -0.210,   2.122,   0.663)  ( -0.210,   2.122,   0.663)  ( 0.00,  0.00,  0.00)
    torsion ( -0.017,   0.295,  -1.081)  ( -0.017,   0.295,  -1.080)  ( 0.00,  0.00,  0.03)
    oop     ( -0.001,   0.065,  -0.234)  ( -0.000,   0.052,  -0.186)  ( 0.00,  0.09,  1.13)
    vdw     ( -3.417,   0.165,   0.866)  ( -3.417,   0.165,   0.865)  ( 0.00,  0.00,  0.00)
    electro (  0.727,   2.406,  -0.162)  (  0.727,   2.406,  -0.162)  ( 0.00,  0.00,  0.00)
48       (-12.816,  -1.854,   2.520)  (-12.813,  -1.854,   2.521)  ( 0.02,  0.04,  0.03)
    bond    (-14.576,  -0.381,   3.434)  (-14.573,  -0.381,   3.434)  ( 0.02,  0.00,  0.01)
    angle   (  0.009,  -1.112,  -0.086)  (  0.009,  -1.111,  -0.085)  ( 0.00,  0.06,  0.00)
    strbnd  (  1.318,  -0.737,  -0.196)  (  1.318,  -0.737,  -0.196)  ( 0.00,  0.00,  0.00)
    torsion (  0.019,   0.024,   0.082)  (  0.019,   0.024,   0.082)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.413,   0.351,  -0.714)  (  0.413,   0.351,  -0.714)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (  5.085,   1.582,   9.404)  (  5.086,   1.583,   9.406)  ( 0.02,  0.07,  0.02)
    bond    (  5.282,   5.246,   8.963)  (  5.283,   5.247,   8.965)  ( 0.01,  0.01,  0.02)
    angle   ( -6.276,   0.410,   3.458)  ( -6.276,   0.410,   3.458)  ( 0.01,  0.02,  0.01)
    strbnd  (  0.301,  -0.757,   0.046)  (  0.301,  -0.757,   0.046)  ( 0.00,  0.00,  0.00)
    torsion ( -0.066,   0.065,   0.001)  ( -0.066,   0.065,   0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.844,  -3.382,  -3.063)  (  5.844,  -3.382,  -3.063)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       ( -4.133,  12.029,  -0.342)  ( -4.132,  12.031,  -0.341)  ( 0.02,  0.02,  0.02)
    bond    ( -5.002,  12.797,   0.970)  ( -5.002,  12.800,   0.970)  ( 0.01,  0.02,  0.01)
    angle   (  0.821,   0.446,  -1.651)  (  0.821,   0.446,  -1.650)  ( 0.03,  0.00,  0.03)
    strbnd  (  0.347,  -0.722,  -0.122)  (  0.347,  -0.722,  -0.122)  ( 0.00,  0.00,  0.00)
    torsion ( -0.174,  -0.064,  -0.056)  ( -0.174,  -0.064,  -0.056)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.125,  -0.429,   0.516)  ( -0.125,  -0.429,   0.516)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       ( 12.057,   2.405,  -2.800)  ( 12.060,   2.405,  -2.799)  ( 0.02,  0.02,  0.03)
    bond    ( 11.866,   0.949,  -3.585)  ( 11.869,   0.949,  -3.584)  ( 0.02,  0.01,  0.01)
    angle   ( -1.377,   2.670,  -3.852)  ( -1.377,   2.670,  -3.852)  ( 0.00,  0.02,  0.01)
    strbnd  ( -0.478,  -0.001,   0.072)  ( -0.478,  -0.001,   0.072)  ( 0.00,  0.00,  0.00)
    torsion (  0.190,   2.069,   1.178)  (  0.190,   2.069,   1.178)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.856,  -3.282,   3.388)  (  1.856,  -3.282,   3.388)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       ( -7.404,  -4.012,  -9.315)  ( -7.403,  -4.011,  -9.313)  ( 0.02,  0.03,  0.02)
    bond    ( -6.876,  -6.421, -10.083)  ( -6.875,  -6.420, -10.081)  ( 0.01,  0.01,  0.02)
    angle   (  0.750,   1.477,  -1.453)  (  0.750,   1.478,  -1.453)  ( 0.03,  0.03,  0.02)
    strbnd  (  0.385,   0.337,   0.420)  (  0.385,   0.337,   0.420)  ( 0.00,  0.00,  0.00)
    torsion ( -1.909,   1.279,   0.487)  ( -1.909,   1.279,   0.487)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.246,  -0.685,   1.314)  (  0.246,  -0.685,   1.314)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( 15.178,  -4.639,   1.836)  ( 15.200,  -4.639,   1.783)  ( 0.14,  0.00,  2.87)
    bond    (  1.222, -10.271,   1.446)  (  1.222, -10.266,   1.446)  ( 0.00,  0.05,  0.00)
    angle   (  5.790,   0.964,   1.949)  (  5.790,   0.964,   1.949)  ( 0.01,  0.00,  0.01)
    strbnd  (  0.388,  -1.593,   0.291)  (  0.388,  -1.593,   0.291)  ( 0.00,  0.00,  0.00)
    torsion (  0.654,  -0.156,  -1.664)  (  0.654,  -0.156,  -1.664)  ( 0.00,  0.00,  0.01)
    oop     ( -0.122,   0.029,   0.309)  ( -0.101,   0.024,   0.256)  ( 0.25,  0.01,  1.64)
    vdw     (  4.608,   1.041,   2.666)  (  4.609,   1.041,   2.666)  ( 0.00,  0.00,  0.00)
    electro (  2.638,   5.348,  -3.160)  (  2.638,   5.348,  -3.160)  ( 0.00,  0.00,  0.00)
54       ( -7.250, -11.027,  -1.781)  ( -7.249, -11.024,  -1.781)  ( 0.01,  0.03,  0.03)
    bond    ( -4.260, -12.234,  -0.605)  ( -4.260, -12.231,  -0.605)  ( 0.01,  0.02,  0.00)
    angle   ( -3.795,   1.395,  -1.482)  ( -3.795,   1.395,  -1.482)  ( 0.01,  0.01,  0.03)
    strbnd  ( -1.388,  -0.259,  -0.495)  ( -1.388,  -0.259,  -0.495)  ( 0.00,  0.00,  0.00)
    torsion (  0.002,  -0.000,  -0.006)  (  0.002,  -0.000,  -0.006)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.191,   0.071,   0.806)  (  2.191,   0.071,   0.806)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (-10.238,   6.128,   6.355)  (-10.237,   6.129,   6.357)  ( 0.01,  0.02,  0.02)
    bond    ( -7.660,   6.780,   8.104)  ( -7.659,   6.781,   8.105)  ( 0.01,  0.01,  0.01)
    angle   ( -3.786,  -2.269,  -1.680)  ( -3.786,  -2.268,  -1.680)  ( 0.01,  0.01,  0.02)
    strbnd  ( -1.833,   0.486,   0.087)  ( -1.833,   0.486,   0.087)  ( 0.00,  0.00,  0.00)
    torsion (  0.000,   0.001,  -0.001)  (  0.000,   0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.040,   1.129,  -0.155)  (  3.040,   1.129,  -0.155)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( -3.327,   4.630, -12.310)  ( -3.326,   4.631, -12.307)  ( 0.02,  0.02,  0.02)
    bond    ( -0.179,   5.185, -12.000)  ( -0.178,   5.185, -11.998)  ( 0.00,  0.01,  0.02)
    angle   ( -3.994,  -2.155,  -0.872)  ( -3.993,  -2.155,  -0.872)  ( 0.01,  0.02,  0.01)
    strbnd  ( -1.307,   0.375,  -1.326)  ( -1.307,   0.375,  -1.326)  ( 0.00,  0.00,  0.00)
    torsion ( -0.002,   0.012,   0.005)  ( -0.002,   0.012,   0.005)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.154,   1.213,   1.884)  (  2.154,   1.213,   1.884)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( -0.307,  -9.122,  -8.188)  ( -0.306,  -9.120,  -8.187)  ( 0.02,  0.02,  0.02)
    bond    (  0.825, -11.920,  -8.291)  (  0.825, -11.918,  -8.290)  ( 0.01,  0.02,  0.01)
    angle   (  0.266,   0.885,  -1.246)  (  0.266,   0.885,  -1.246)  ( 0.01,  0.02,  0.03)
    strbnd  (  0.564,   0.787,   0.734)  (  0.564,   0.787,   0.734)  ( 0.00,  0.00,  0.00)
    torsion (  0.170,  -0.005,   0.024)  (  0.170,  -0.005,   0.024)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.131,   1.130,   0.592)  ( -2.131,   1.130,   0.592)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       (  9.212,   6.945,  -1.363)  (  9.214,   6.946,  -1.362)  ( 0.03,  0.02,  0.05)
    bond    ( 12.173,   6.773,  -1.368)  ( 12.175,   6.774,  -1.368)  ( 0.02,  0.01,  0.01)
    angle   (  0.058,  -0.350,  -1.218)  (  0.058,  -0.349,  -1.217)  ( 0.00,  0.01,  0.04)
    strbnd  ( -0.521,  -1.011,   0.065)  ( -0.521,  -1.011,   0.065)  ( 0.00,  0.00,  0.00)
    torsion (  0.181,  -0.338,  -0.064)  (  0.181,  -0.338,  -0.064)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.678,   1.871,   1.221)  ( -2.678,   1.871,   1.222)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (-10.799,  -6.712,  -0.430)  (-10.797,  -6.711,  -0.429)  ( 0.02,  0.02,  0.03)
    bond    (-12.830,  -7.728,   1.306)  (-12.828,  -7.727,   1.306)  ( 0.02,  0.01,  0.01)
    angle   (  0.385,  -0.545,   0.558)  (  0.385,  -0.545,   0.558)  ( 0.01,  0.02,  0.03)
    strbnd  (  0.887,   0.269,   0.033)  (  0.887,   0.269,   0.033)  ( 0.00,  0.00,  0.00)
    torsion (  0.569,  -0.988,  -0.256)  (  0.569,  -0.988,  -0.256)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.191,   2.279,  -2.071)  (  0.191,   2.279,  -2.071)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (  9.776,  -8.215,   3.975)  (  9.778,  -8.214,   3.976)  ( 0.02,  0.02,  0.02)
    bond    ( 11.330,  -9.354,   4.398)  ( 11.332,  -9.353,   4.398)  ( 0.01,  0.01,  0.01)
    angle   ( -0.016,   0.054,   0.154)  ( -0.015,   0.054,   0.155)  ( 0.00,  0.00,  0.01)
    strbnd  ( -0.988,   0.483,  -0.237)  ( -0.988,   0.483,  -0.237)  ( 0.00,  0.00,  0.00)
    torsion ( -0.315,  -0.335,   0.099)  ( -0.315,  -0.335,   0.099)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.236,   0.937,  -0.438)  ( -0.236,   0.937,  -0.438)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       ( -1.361,  -1.860,  12.613)  ( -1.360,  -1.859,  12.616)  ( 0.04,  0.04,  0.02)
    bond    ( -1.242,  -3.974,  13.096)  ( -1.242,  -3.974,  13.099)  ( 0.01,  0.01,  0.02)
    angle   ( -0.493,   2.159,   0.609)  ( -0.492,   2.160,   0.609)  ( 0.02,  0.02,  0.00)
    strbnd  (  0.058,   0.509,  -0.577)  (  0.058,   0.509,  -0.577)  ( 0.00,  0.00,  0.00)
    torsion (  0.242,  -0.008,   0.020)  (  0.242,  -0.008,   0.020)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.075,  -0.546,  -0.535)  (  0.075,  -0.546,  -0.535)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (  9.949,   7.205,  -0.655)  (  9.951,   7.207,  -0.655)  ( 0.02,  0.02,  0.04)
    bond    ( 11.359,   7.334,  -1.037)  ( 11.361,   7.335,  -1.037)  ( 0.02,  0.01,  0.01)
    angle   ( -0.599,   1.148,   1.564)  ( -0.599,   1.148,   1.564)  ( 0.01,  0.03,  0.03)
    strbnd  ( -0.498,  -0.036,   0.239)  ( -0.498,  -0.036,   0.239)  ( 0.00,  0.00,  0.00)
    torsion (  0.089,  -0.116,   0.153)  (  0.089,  -0.116,   0.153)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.402,  -1.125,  -1.573)  ( -0.402,  -1.125,  -1.573)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( -9.227,   7.918,  -3.842)  ( -9.225,   7.920,  -3.841)  ( 0.02,  0.02,  0.02)
    bond    (-10.234,   7.920,  -2.677)  (-10.232,   7.921,  -2.677)  ( 0.02,  0.01,  0.01)
    angle   (  0.410,   1.448,   2.720)  (  0.410,   1.449,   2.720)  ( 0.01,  0.02,  0.02)
    strbnd  (  0.495,  -0.112,   0.334)  (  0.495,  -0.112,   0.334)  ( 0.00,  0.00,  0.00)
    torsion ( -0.316,  -0.287,   0.358)  ( -0.316,  -0.287,   0.358)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.419,  -1.051,  -4.577)  (  0.419,  -1.051,  -4.577)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffmmff94.cpp" line="91">check &apos;not ok 18 # gradients do not validate&apos; passed</Info><TestingTime>5620000</TestingTime></TestCase><TestCase name="mol_test"># Unit tests for OBMol 
<Info file="mol.cpp" line="56">check testMol1.NumAtoms() == 0 passed</Info><Info file="mol.cpp" line="59">check testMol1.NumAtoms() == 1 passed</Info><Info file="mol.cpp" line="63">check testMol1.NumBonds() == 1 passed</Info><Info file="mol.cpp" line="66">check testMol1.NumAtoms() == 0 passed</Info><Info file="mol.cpp" line="69">check &apos;Bail out! Cannot read input file!&apos; passed</Info><Info file="mol.cpp" line="75">check &apos;Bail out! Cannot read file format!&apos; passed</Info><Info file="mol.cpp" line="77">check &apos;Bail out! File format isn&apos;t loaded&apos; passed</Info><Info file="mol.cpp" line="80">check conv.Read(&amp;testMol3D) passed</Info><Info file="mol.cpp" line="109">check testMolH.NumAtoms() == 5 passed</Info><Info file="mol.cpp" line="117">check testMolH2.NumAtoms() == 5 passed</Info><TestingTime>0</TestingTime></TestCase><TestCase name="phmodel_test"><Info file="phmodel.cpp" line="52">check &apos;Aspartic acid pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="59">check &apos;Aspartic acid pH 3.9&apos; passed</Info><Info file="phmodel.cpp" line="66">check &apos;Aspartic acid pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="73">check &apos;Aspartic acid pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="83">check &apos;Glutamic acid pH 1.0&apos; passed</Info><Error file="phmodel.cpp" line="91">Glutamic acid pH 4.15</Error><Info file="phmodel.cpp" line="98">check &apos;Glutamic acid pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="105">check &apos;Glutamic acid pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="115">check &apos;Histidine pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="122">check &apos;Histidine pH 5.0&apos; passed</Info><Info file="phmodel.cpp" line="129">check &apos;Histidine pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="136">check &apos;Histidine pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="146">check &apos;Lysine pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="153">check &apos;Lysine pH 7.4&apos; passed</Info><Error file="phmodel.cpp" line="161">Lysine pH 9.0</Error><Info file="phmodel.cpp" line="168">check &apos;Lysine pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="178">check &apos;Tyrosine pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="185">check &apos;Tyrosine pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="192">check &apos;Tyrosine pH 10.05&apos; passed</Info><Info file="phmodel.cpp" line="199">check &apos;Tyrosine pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="209">check &apos;Arginine pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="216">check &apos;Arginine pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="223">check &apos;Arginine pH 11.0&apos; passed</Info><Info file="phmodel.cpp" line="230">check &apos;Arginine pH 13.0&apos; passed</Info><Info file="phmodel.cpp" line="240">check &apos;Gly-Gly pH 1.0&apos; passed</Info><Info file="phmodel.cpp" line="247">check &apos;Gly-Gly pH 7.4&apos; passed</Info><Info file="phmodel.cpp" line="254">check &apos;Gly-Gly pH 13.0&apos; passed</Info><TestingTime>70000</TestingTime></TestCase><TestCase name="uff_test"># Testing UFF Force Field...
<Info file="ffuff.cpp" line="48">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffuff.cpp" line="51">check &apos;Bail out! Cannot read file &apos; passed</Info><Info file="ffuff.cpp" line="60">check &apos;Bail out! SDF format is not loaded&apos; passed</Info><Info file="ffuff.cpp" line="64">check &apos;Bail out! Cannot load force field!&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 1 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCH3.gpr
 # Expected         8.86451, found 8.864513&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-12.906,  43.109,   3.846)  (-12.869,  43.145,   3.866)  ( 0.29,  0.08,  0.50)
    bond    ( 37.943,  -3.245,   6.435)  ( 37.972,  -3.223,   6.437)  ( 0.08,  0.67,  0.02)
    angle   (-40.588,  57.025,  -0.686)  (-40.580,  57.039,  -0.686)  ( 0.02,  0.02,  0.01)
    torsion ( -0.218,  -0.141,   1.197)  ( -0.218,  -0.141,   1.214)  ( 0.01,  0.00,  1.41)
    oop     (  0.006,   0.004,  -0.034)  (  0.006,   0.004,  -0.033)  ( 0.00,  0.00,  0.00)
    vdw     (-10.049, -10.534,  -3.066)  (-10.049, -10.534,  -3.066)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( 29.033, -83.812,  -4.219)  ( 29.072, -83.775,  -4.197)  ( 0.14,  0.04,  0.51)
    bond    (-28.913,   4.644,  -4.643)  (-28.884,   4.666,  -4.641)  ( 0.10,  0.47,  0.03)
    angle   ( 58.323, -88.727,   0.262)  ( 58.333, -88.712,   0.263)  ( 0.02,  0.02,  0.05)
    torsion ( -0.375,   0.273,   0.151)  ( -0.375,   0.273,   0.168)  ( 0.02,  0.01,  0.26)
    oop     ( -0.002,  -0.001,   0.012)  ( -0.002,  -0.001,   0.013)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 15.023, -10.909,   1.482)  ( 15.031, -10.898,   1.486)  ( 0.05,  0.10,  0.29)
    bond    (  1.549,   2.066,   0.518)  (  1.554,   2.075,   0.519)  ( 0.33,  0.44,  0.03)
    angle   ( 17.880, -13.804,   1.621)  ( 17.882, -13.803,   1.621)  ( 0.01,  0.01,  0.00)
    torsion ( -0.005,  -0.003,   0.024)  ( -0.005,  -0.003,   0.028)  ( 0.00,  0.00,  0.01)
    oop     ( -0.002,  -0.001,   0.011)  ( -0.002,  -0.001,   0.011)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.399,   0.834,  -0.693)  ( -4.398,   0.834,  -0.693)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 19.745,   7.854,   4.848)  ( 19.752,   7.867,   4.852)  ( 0.03,  0.17,  0.08)
    bond    (  1.900,  -4.018,  -0.119)  (  1.903,  -4.006,  -0.119)  ( 0.14,  0.30,  0.00)
    angle   ( 28.481,  13.333,   6.649)  ( 28.484,  13.334,   6.649)  ( 0.01,  0.01,  0.00)
    torsion ( -0.070,  -0.045,   0.383)  ( -0.069,  -0.045,   0.387)  ( 0.00,  0.00,  0.14)
    oop     ( -0.002,  -0.001,   0.011)  ( -0.002,  -0.001,   0.011)  ( 0.00,  0.00,  0.00)
    vdw     (-10.565,  -1.415,  -2.076)  (-10.565,  -1.415,  -2.076)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-19.501,  -0.607,  -5.647)  (-19.494,  -0.593,  -5.642)  ( 0.04,  0.82,  0.09)
    bond    ( -4.308,  10.193,   0.406)  ( -4.306,  10.205,   0.406)  ( 0.05,  0.12,  0.00)
    angle   (-18.419,  -7.603,  -4.183)  (-18.414,  -7.602,  -4.183)  ( 0.02,  0.01,  0.01)
    torsion (  0.351,   0.226,  -1.964)  (  0.352,   0.226,  -1.959)  ( 0.01,  0.00,  0.23)
    oop     (  0.000,   0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  2.874,  -3.423,   0.095)  (  2.874,  -3.423,   0.095)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-42.512,  25.716,  -4.132)  (-42.483,  25.746,  -4.103)  ( 0.07,  0.12,  0.70)
    bond    (-38.070, -40.979, -11.346)  (-38.051, -40.960, -11.328)  ( 0.05,  0.05,  0.16)
    angle   (-13.647,  68.365,   5.561)  (-13.638,  68.374,   5.568)  ( 0.07,  0.01,  0.12)
    torsion (  1.664,  -1.499,   0.319)  (  1.665,  -1.498,   0.324)  ( 0.06,  0.05,  0.13)
    oop     (  0.000,   0.000,  -0.001)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  7.542,  -0.170,   1.335)  (  7.542,  -0.170,   1.335)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-29.543,  35.502,  -2.266)  (-29.538,  35.513,  -2.264)  ( 0.02,  0.03,  0.11)
    bond    (-18.655,  35.964,   1.178)  (-18.652,  35.975,   1.178)  ( 0.01,  0.03,  0.01)
    angle   (-23.727, -12.114,  -5.708)  (-23.725, -12.114,  -5.706)  ( 0.01,  0.00,  0.03)
    torsion (  0.239,   0.169,  -1.391)  (  0.239,   0.169,  -1.390)  ( 0.00,  0.00,  0.05)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 12.600,  11.482,   3.655)  ( 12.600,  11.483,   3.655)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 12.973, -12.267,  40.069)  ( 12.977, -12.264,  40.081)  ( 0.04,  0.02,  0.03)
    bond    ( 18.394,  -6.422,  37.146)  ( 18.396,  -6.422,  37.157)  ( 0.01,  0.00,  0.03)
    angle   ( -4.559,  -8.604,   0.769)  ( -4.558,  -8.602,   0.770)  ( 0.04,  0.03,  0.03)
    torsion ( -1.751,   1.197,   1.074)  ( -1.751,   1.198,   1.074)  ( 0.02,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.890,   1.562,   1.080)  (  0.890,   1.562,   1.080)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( 27.542,  -4.743, -34.086)  ( 27.551,  -4.741, -34.078)  ( 0.03,  0.05,  0.02)
    bond    ( 30.060,   1.691, -29.614)  ( 30.067,   1.691, -29.608)  ( 0.02,  0.01,  0.02)
    angle   ( -3.786,  -7.918,  -4.297)  ( -3.785,  -7.915,  -4.296)  ( 0.03,  0.03,  0.03)
    torsion (  0.162,  -0.180,   0.155)  (  0.163,  -0.179,   0.155)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.106,   1.664,  -0.330)  (  1.106,   1.664,  -0.330)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 1 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 2 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CCCN.gpr
 # Expected         4.20024, found 4.200241&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       ( -8.528,  19.590,  -5.287)  ( -8.492,  19.627,  -5.267)  ( 0.43,  0.19,  0.38)
    bond    ( 36.601,  -0.298,   9.660)  ( 36.629,  -0.276,   9.662)  ( 0.08,  0.65,  0.02)
    angle   (-45.212,  20.367, -11.287)  (-45.205,  20.382, -11.286)  ( 0.02,  0.07,  0.00)
    torsion (  0.899,   0.109,  -3.428)  (  0.900,   0.109,  -3.411)  ( 0.10,  0.00,  0.49)
    oop     ( -0.001,  -0.000,   0.001)  ( -0.000,  -0.000,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.816,  -0.587,  -0.234)  ( -0.816,  -0.587,  -0.234)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (167.840, -64.964, -669.371)  (169.555, -64.920, -648.741)  ( 1.02,  0.07,  3.08)
    bond    (-73.273, -40.784, -20.641)  (-73.245, -40.761, -20.639)  ( 0.04,  0.06,  0.01)
    angle   ( 65.841, -39.909,  16.052)  ( 65.851, -39.892,  16.055)  ( 0.02,  0.04,  0.01)
    torsion (175.271,  15.729, -664.778)  (176.947,  15.734, -644.154)  ( 0.96,  0.03,  3.10)
    oop     (  0.001,   0.000,  -0.004)  (  0.001,   0.000,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 15.968,  -8.738,   3.978)  ( 15.976,  -8.726,   3.982)  ( 0.05,  0.13,  0.11)
    bond    (  2.228,   3.391,   0.698)  (  2.233,   3.401,   0.698)  ( 0.20,  0.30,  0.03)
    angle   ( 17.725, -12.518,   4.279)  ( 17.728, -12.517,   4.280)  ( 0.02,  0.01,  0.00)
    torsion ( -0.011,  -0.001,   0.038)  ( -0.011,  -0.001,   0.041)  ( 0.00,  0.00,  0.01)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.974,   0.392,  -1.037)  ( -3.974,   0.392,  -1.037)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 20.598,   9.464,   5.684)  ( 20.604,   9.477,   5.688)  ( 0.03,  0.13,  0.07)
    bond    (  3.136,  -6.002,   0.637)  (  3.139,  -5.991,   0.637)  ( 0.10,  0.19,  0.01)
    angle   ( 28.809,  15.961,   8.118)  ( 28.812,  15.962,   8.118)  ( 0.01,  0.01,  0.00)
    torsion (  0.013,   0.002,  -0.055)  (  0.014,   0.002,  -0.052)  ( 0.00,  0.00,  0.02)
    oop     (  0.000,   0.000,  -0.000)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-11.361,  -0.496,  -3.015)  (-11.361,  -0.496,  -3.015)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-23.944, -15.019,  -2.481)  (-23.936, -15.006,  -2.475)  ( 0.03,  0.09,  0.23)
    bond    (  0.266,  -0.558,   0.053)  (  0.269,  -0.546,   0.054)  ( 0.08,  0.66,  0.00)
    angle   (-27.124, -14.105,  -7.610)  (-27.120, -14.103,  -7.610)  ( 0.01,  0.01,  0.00)
    torsion ( -1.066,  -0.129,   4.031)  ( -1.065,  -0.129,   4.036)  ( 0.03,  0.00,  0.13)
    oop     ( -0.000,  -0.000,   0.001)  ( -0.000,  -0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  3.981,  -0.227,   1.044)  (  3.981,  -0.227,   1.044)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-381.911,  55.034, 1339.104)  (-373.557,  55.101, 1441.210)  ( 2.19,  0.12,  7.62)
    bond    ( 44.275,  62.791,  13.700)  ( 44.295,  62.831,  13.702)  ( 0.04,  0.06,  0.01)
    angle   (-35.799,  26.870,  -8.471)  (-35.790,  26.875,  -8.462)  ( 0.02,  0.02,  0.11)
    torsion (-401.951, -35.014, 1330.809)  (-393.626, -34.991, 1432.904)  ( 2.07,  0.07,  7.67)
    oop     ( -0.000,  -0.000,   0.001)  ( -0.000,  -0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.565,   0.386,   3.065)  ( 11.565,   0.386,   3.065)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (197.318,   4.411, -825.348)  (199.850,   4.447, -794.397)  ( 1.28,  0.82,  3.75)
    bond    (-13.334, -18.685,  -4.116)  (-13.320, -18.657,  -4.115)  ( 0.11,  0.15,  0.04)
    angle   ( -4.278,   3.293,  -1.097)  ( -4.276,   3.294,  -1.094)  ( 0.04,  0.03,  0.25)
    torsion (214.325,  19.270, -820.312)  (216.841,  19.277, -789.365)  ( 1.17,  0.04,  3.77)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.604,   0.534,   0.177)  (  0.604,   0.534,   0.177)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 2 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 3 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/CH3CONH2.gpr
 # Expected        23.75778, found 23.757779&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       ( 35.663, 101.628, -171.999)  ( 35.692, 101.658, -171.967)  ( 0.08,  0.03,  0.02)
    bond    ( 80.618,   6.003, -10.147)  ( 80.638,   6.021, -10.129)  ( 0.02,  0.30,  0.18)
    angle   (-30.418,  85.328, -147.093)  (-30.409,  85.337, -147.081)  ( 0.03,  0.01,  0.01)
    torsion ( -0.314,   2.650,  -1.502)  ( -0.314,   2.652,  -1.500)  ( 0.00,  0.10,  0.13)
    oop     ( -0.000,   0.071,   0.042)  ( -0.000,   0.072,   0.042)  ( 0.00,  0.00,  0.00)
    vdw     (-14.222,   7.576, -13.299)  (-14.222,   7.576, -13.299)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-115.072, -174.485, 292.038)  (-115.010, -174.455, 292.092)  ( 0.05,  0.02,  0.02)
    bond    ( 24.274, -26.329,  45.326)  ( 24.304, -26.317,  45.362)  ( 0.12,  0.05,  0.08)
    angle   (-139.385, -144.083, 248.449)  (-139.353, -144.078, 248.463)  ( 0.02,  0.00,  0.01)
    torsion (  0.039,  -3.547,  -1.434)  (  0.039,  -3.539,  -1.431)  ( 0.00,  0.23,  0.20)
    oop     ( -0.000,  -0.525,  -0.303)  ( -0.000,  -0.521,  -0.302)  ( 0.00,  0.21,  0.04)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-34.976,  -1.242,  -0.270)  (-34.959,  -1.232,  -0.247)  ( 0.05,  0.81,  0.62)
    bond    (-14.354, -14.094,  24.209)  (-14.347, -14.088,  24.229)  ( 0.05,  0.05,  0.08)
    angle   (-23.749,   6.022, -10.558)  (-23.739,   6.022, -10.556)  ( 0.04,  0.01,  0.02)
    torsion (  0.001,  -1.001,  -0.581)  (  0.001,  -0.999,  -0.580)  ( 0.00,  0.22,  0.04)
    oop     ( -0.000,   0.093,   0.054)  ( -0.000,   0.094,   0.054)  ( 0.00,  0.01,  0.00)
    vdw     (  3.126,   7.739, -13.395)  (  3.126,   7.739, -13.395)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (150.302, 143.912, -222.681)  (150.358, 143.935, -222.637)  ( 0.04,  0.02,  0.02)
    bond    (-89.693,  75.277, -132.994)  (-89.659,  75.286, -132.965)  ( 0.04,  0.01,  0.02)
    angle   (228.098,  57.284, -98.546)  (228.119,  57.288, -98.535)  ( 0.01,  0.01,  0.01)
    torsion (  0.082,  11.261,   6.468)  (  0.082,  11.270,   6.471)  ( 0.00,  0.08,  0.05)
    oop     ( -0.002,   1.098,   0.628)  ( -0.002,   1.099,   0.628)  ( 0.00,  0.09,  0.02)
    vdw     ( 11.817,  -1.008,   1.764)  ( 11.817,  -1.008,   1.764)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-70.360, -43.343,  62.408)  (-70.350, -43.336,  62.424)  ( 0.01,  0.02,  0.03)
    bond    (-38.907, -40.200,  71.261)  (-38.903, -40.195,  71.275)  ( 0.01,  0.01,  0.02)
    angle   (-47.223,  11.418, -19.334)  (-47.218,  11.418, -19.334)  ( 0.01,  0.00,  0.00)
    torsion ( -0.075,  -6.078,  -3.468)  ( -0.075,  -6.075,  -3.467)  ( 0.00,  0.04,  0.02)
    oop     ( -0.001,  -0.383,  -0.216)  ( -0.001,  -0.383,  -0.216)  ( 0.00,  0.01,  0.00)
    vdw     ( 15.846,  -8.100,  14.165)  ( 15.846,  -8.100,  14.166)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 90.992, -19.439,  28.224)  ( 91.015, -19.435,  28.230)  ( 0.03,  0.02,  0.02)
    bond    ( 82.156,   3.085,  -4.208)  ( 82.179,   3.085,  -4.208)  ( 0.03,  0.01,  0.01)
    angle   (  1.598, -12.892,  21.747)  (  1.598, -12.890,  21.752)  ( 0.00,  0.01,  0.02)
    torsion (  0.017,  -2.241,  -1.310)  (  0.017,  -2.239,  -1.309)  ( 0.00,  0.08,  0.05)
    oop     (  0.003,  -0.360,  -0.206)  (  0.003,  -0.360,  -0.206)  ( 0.00,  0.01,  0.00)
    vdw     (  7.218,  -7.031,  12.201)  (  7.218,  -7.031,  12.201)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-15.532, -45.793,   3.728)  (-15.528, -45.780,   3.730)  ( 0.02,  0.03,  0.07)
    bond    (-12.697, -43.343,   0.901)  (-12.696, -43.331,   0.901)  ( 0.01,  0.03,  0.02)
    angle   (  3.750,  -1.018,   3.911)  (  3.753,  -1.018,   3.913)  ( 0.07,  0.02,  0.05)
    torsion (  0.147,  -0.013,   1.444)  (  0.147,  -0.013,   1.445)  ( 0.00,  0.00,  0.05)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.732,  -1.418,  -2.528)  ( -6.732,  -1.418,  -2.528)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-15.773,  19.736,  41.433)  (-15.769,  19.741,  41.444)  ( 0.02,  0.02,  0.03)
    bond    (-12.853,  20.568,  38.148)  (-12.852,  20.570,  38.158)  ( 0.01,  0.01,  0.03)
    angle   (  3.824,  -2.906,   2.854)  (  3.827,  -2.905,   2.855)  ( 0.06,  0.05,  0.02)
    torsion (  0.102,  -0.850,   0.492)  (  0.102,  -0.850,   0.492)  ( 0.00,  0.04,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.846,   2.925,  -0.061)  ( -6.846,   2.925,  -0.061)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-25.453,  18.899, -33.079)  (-25.448,  18.904, -33.069)  ( 0.02,  0.03,  0.03)
    bond    (-18.667,  18.966, -32.631)  (-18.664,  18.968, -32.623)  ( 0.01,  0.01,  0.03)
    angle   (  3.421,   0.825,  -1.479)  (  3.423,   0.827,  -1.478)  ( 0.06,  0.13,  0.06)
    torsion (  0.000,  -0.208,  -0.121)  (  0.000,  -0.208,  -0.121)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.207,  -0.683,   1.153)  (-10.207,  -0.683,   1.153)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 3 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 4 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/COOCH3.gpr
 # Expected        54.83019, found 54.830192&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-115.470, 264.254, -130.744)  (-115.434, 264.287, -130.714)  ( 0.03,  0.01,  0.02)
    bond    (-241.892, 155.872, -136.876)  (-241.868, 155.893, -136.855)  ( 0.01,  0.01,  0.02)
    angle   ( 79.984,  86.918,  -7.007)  ( 79.996,  86.929,  -6.998)  ( 0.01,  0.01,  0.13)
    torsion ( -4.351,   0.235,   7.936)  ( -4.351,   0.234,   7.936)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 50.789,  21.230,   5.204)  ( 50.790,  21.230,   5.204)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( 84.629, -153.897,  52.656)  ( 84.664, -153.868,  52.667)  ( 0.04,  0.02,  0.02)
    bond    (177.662, -154.078, 115.966)  (177.695, -154.065, 115.971)  ( 0.02,  0.01,  0.00)
    angle   (-98.539,   6.758, -45.974)  (-98.536,   6.774, -45.968)  ( 0.00,  0.23,  0.01)
    torsion (  5.287,  -6.260, -16.624)  (  5.287,  -6.260, -16.625)  ( 0.00,  0.00,  0.00)
    oop     (  0.219,  -0.317,  -0.712)  (  0.219,  -0.317,  -0.712)  ( 0.00,  0.00,  0.03)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 22.763, -52.124, -14.739)  ( 22.767, -52.111, -14.736)  ( 0.02,  0.03,  0.02)
    bond    ( -1.880, -40.652,  -7.746)  ( -1.881, -40.638,  -7.745)  ( 0.01,  0.03,  0.00)
    angle   (-29.021,   2.997,  -8.682)  (-29.019,   2.997,  -8.680)  ( 0.01,  0.00,  0.03)
    torsion (  2.863,   0.677,  -4.249)  (  2.863,   0.677,  -4.249)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 50.802, -15.147,   5.939)  ( 50.803, -15.147,   5.938)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 42.977,  11.993,  -5.310)  ( 42.988,  11.997,  -5.306)  ( 0.03,  0.03,  0.07)
    bond    ( 36.898,  15.124, -16.150)  ( 36.908,  15.126, -16.149)  ( 0.03,  0.01,  0.01)
    angle   (  5.846,  -5.938,   7.800)  (  5.847,  -5.936,   7.802)  ( 0.02,  0.04,  0.03)
    torsion (  0.162,   2.832,   3.024)  (  0.162,   2.831,   3.023)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.072,  -0.024,   0.017)  (  0.072,  -0.024,   0.017)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (  0.357,  -0.739,  47.238)  (  0.359,  -0.736,  47.252)  ( 0.10,  0.18,  0.03)
    bond    ( -0.494,   7.245,  42.986)  ( -0.494,   7.245,  42.999)  ( 0.01,  0.00,  0.03)
    angle   ( -1.719,  -6.755,   1.118)  ( -1.716,  -6.753,   1.118)  ( 0.17,  0.04,  0.01)
    torsion ( -1.143,  -1.515,   0.242)  ( -1.143,  -1.515,   0.242)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.713,   0.287,   2.892)  (  3.714,   0.287,   2.892)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (125.198, -128.081, 119.924)  (125.255, -128.034, 119.942)  ( 0.05,  0.04,  0.02)
    bond    ( 21.237, -20.013,  15.611)  ( 21.279, -19.990,  15.619)  ( 0.20,  0.12,  0.06)
    angle   (138.357, -126.892, 100.443)  (138.370, -126.871, 100.448)  ( 0.01,  0.02,  0.00)
    torsion ( -2.958,   4.240,  10.109)  ( -2.958,   4.240,  10.110)  ( 0.00,  0.00,  0.01)
    oop     ( -0.747,   1.091,   2.439)  ( -0.746,   1.092,   2.444)  ( 0.04,  0.09,  0.20)
    vdw     (-30.691,  13.494,  -8.679)  (-30.690,  13.494,  -8.679)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 46.019,  57.677, -10.154)  ( 46.044,  57.688, -10.147)  ( 0.05,  0.02,  0.07)
    bond    (  9.695,  -4.494,   4.946)  (  9.718,  -4.489,   4.951)  ( 0.24,  0.11,  0.12)
    angle   ( 36.654,  61.842, -15.869)  ( 36.656,  61.849, -15.868)  ( 0.01,  0.01,  0.00)
    torsion ( -0.506,   0.733,   1.657)  ( -0.506,   0.733,   1.657)  ( 0.00,  0.00,  0.02)
    oop     (  0.263,  -0.386,  -0.867)  (  0.263,  -0.386,  -0.866)  ( 0.00,  0.00,  0.06)
    vdw     ( -0.086,  -0.018,  -0.021)  ( -0.086,  -0.018,  -0.021)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-206.653,   0.765, -58.961)  (-206.644,   0.778, -58.957)  ( 0.00,  0.99,  0.01)
    bond    ( -1.356,  40.905, -18.794)  ( -1.356,  40.918, -18.791)  ( 0.02,  0.03,  0.01)
    angle   (-131.604, -18.990, -31.854)  (-131.597, -18.990, -31.853)  ( 0.01,  0.00,  0.00)
    torsion (  0.647,  -0.940,  -2.094)  (  0.647,  -0.940,  -2.094)  ( 0.00,  0.01,  0.01)
    oop     (  0.265,  -0.389,  -0.867)  (  0.265,  -0.389,  -0.867)  ( 0.00,  0.01,  0.05)
    vdw     (-74.605, -19.821,  -5.352)  (-74.603, -19.821,  -5.352)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 4 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 5 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/NCH3-3.gpr
 # Expected       107.85113, found 107.851130&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       ( 80.143, -114.647, 199.160)  ( 75.704, -108.275, 188.218)  ( 5.54,  5.56,  5.49)
    bond    (101.517, -143.650, 249.265)  (101.546, -143.623, 249.282)  ( 0.03,  0.02,  0.01)
    angle   (-31.951,  44.007, -76.054)  (-31.942,  44.016, -76.044)  ( 0.03,  0.02,  0.01)
    torsion ( -0.022,  -0.007,  -0.017)  ( -0.021,  -0.007,  -0.016)  ( 0.00,  0.00,  0.00)
    oop     ( 10.599, -14.997,  25.967)  (  6.121,  -8.662,  14.996)  (42.24, 42.24, 42.25)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-197.773,  -4.119,   6.965)  (-197.735,  -6.464,  11.109)  ( 0.02, 56.93, 59.50)
    bond    (-220.390,  -0.005,   0.000)  (-220.363,   0.015,   0.020)  ( 0.01,  0.01,  0.00)
    angle   ( -0.048, -16.539,  28.573)  ( -0.038, -16.528,  28.582)  ( 0.05,  0.06,  0.03)
    torsion ( -0.000,   0.010,  -0.003)  (  0.000,   0.009,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,   5.624,  -9.738)  (  0.000,   3.249,  -5.624)  ( 0.00, 42.24, 42.25)
    vdw     ( 22.666,   6.790, -11.866)  ( 22.666,   6.791, -11.866)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 35.293, 182.911,   6.929)  ( 37.565, 182.156,  11.073)  ( 6.44,  0.41, 59.81)
    bond    ( 73.413, 207.701,  -0.104)  ( 73.434, 207.728,  -0.084)  ( 0.03,  0.01,  0.21)
    angle   ( 16.035,  -5.824,  28.595)  ( 16.046,  -5.814,  28.604)  ( 0.07,  0.18,  0.03)
    torsion (  0.009,  -0.004,   0.023)  (  0.010,  -0.003,   0.023)  ( 0.00,  0.00,  0.00)
    oop     ( -5.302,   1.878,  -9.738)  ( -3.062,   1.085,  -5.624)  (42.24, 42.24, 42.25)
    vdw     (-48.863, -20.839, -11.847)  (-48.862, -20.839, -11.847)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 34.424, -97.432, -155.442)  ( 36.695, -100.566, -152.665)  ( 6.60,  3.22,  1.79)
    bond    ( 73.430, -103.943, -180.098)  ( 73.451, -103.921, -180.073)  ( 0.03,  0.02,  0.01)
    angle   ( 15.679, -21.735,  18.959)  ( 15.689, -21.725,  18.968)  ( 0.07,  0.05,  0.05)
    torsion ( -0.002,   0.009,  -0.006)  ( -0.001,   0.009,  -0.006)  ( 0.00,  0.00,  0.00)
    oop     ( -5.297,   7.495,  -6.490)  ( -3.059,   4.328,  -3.748)  (42.25, 42.25, 42.25)
    vdw     (-49.386,  20.743,  12.193)  (-49.385,  20.743,  12.193)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 31.645,  91.504,   0.055)  ( 31.651,  91.517,   0.057)  ( 0.02,  0.01,  0.01)
    bond    (-28.294,  79.889,  -0.000)  (-28.292,  79.901,   0.000)  ( 0.01,  0.02,  0.00)
    angle   ( -0.314,  -0.110,  -0.028)  ( -0.311,  -0.110,  -0.027)  ( 0.09,  0.00,  0.01)
    torsion ( -0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 60.252,  11.726,   0.085)  ( 60.254,  11.726,   0.085)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-28.215, -39.952,  69.373)  (-28.210, -39.948,  69.383)  ( 0.02,  0.01,  0.01)
    bond    (-28.241, -39.967,  69.197)  (-28.239, -39.964,  69.207)  ( 0.01,  0.01,  0.01)
    angle   (  0.126,   0.061,   0.088)  (  0.128,   0.063,   0.089)  ( 0.04,  0.01,  0.01)
    torsion ( -0.000,   0.004,   0.002)  (  0.000,   0.004,   0.002)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.100,  -0.050,   0.086)  ( -0.100,  -0.050,   0.086)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 32.884, -45.902, -79.596)  ( 32.891, -45.897, -79.586)  ( 0.02,  0.01,  0.01)
    bond    (-28.228, -39.956, -69.236)  (-28.226, -39.952, -69.227)  ( 0.01,  0.01,  0.01)
    angle   (  0.218,   0.068,  -0.131)  (  0.221,   0.070,  -0.130)  ( 0.06,  0.01,  0.01)
    torsion ( -0.000,  -0.006,   0.004)  (  0.000,  -0.006,   0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 60.894,  -6.008, -10.233)  ( 60.896,  -6.008, -10.233)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 81.326,  -9.597,  -5.835)  ( 81.340,  -9.593,  -5.832)  ( 0.02,  0.04,  0.04)
    bond    ( 84.815,  -0.000,  -0.000)  ( 84.828,   0.000,   0.000)  ( 0.02,  0.00,  0.00)
    angle   ( -0.000,   0.386,  -0.042)  (  0.000,   0.389,  -0.040)  ( 0.00,  0.13,  0.01)
    torsion ( -0.000,  -0.000,  -0.002)  (  0.000,   0.000,  -0.001)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.488,  -9.982,  -5.791)  ( -3.488,  -9.982,  -5.791)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-38.410,  31.443,  64.240)  (-38.406,  31.449,  64.250)  ( 0.01,  0.02,  0.02)
    bond    (-28.241,  39.961,  69.197)  (-28.239,  39.964,  69.207)  ( 0.01,  0.01,  0.01)
    angle   (  0.069,  -0.111,   0.091)  (  0.071,  -0.109,   0.092)  ( 0.01,  0.03,  0.01)
    torsion (  0.000,  -0.000,   0.000)  (  0.000,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.238,  -8.406,  -5.048)  (-10.238,  -8.406,  -5.048)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-37.055,  19.013, -66.654)  (-37.051,  19.019, -66.644)  ( 0.01,  0.03,  0.02)
    bond    (-28.186,  39.882, -69.132)  (-28.184,  39.885, -69.123)  ( 0.01,  0.01,  0.01)
    angle   (  0.059,  -0.198,  -0.139)  (  0.061,  -0.196,  -0.138)  ( 0.01,  0.05,  0.01)
    torsion (  0.007,  -0.002,  -0.004)  (  0.007,  -0.002,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.936, -20.668,   2.621)  ( -8.936, -20.668,   2.621)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 81.329,   9.804,   5.428)  ( 81.343,   9.807,   5.431)  ( 0.02,  0.03,  0.06)
    bond    ( 84.815,  -0.023,  -0.045)  ( 84.829,  -0.022,  -0.045)  ( 0.02,  0.00,  0.00)
    angle   ( -0.000,  -0.198,  -0.281)  ( -0.000,  -0.196,  -0.278)  ( 0.00,  0.04,  0.08)
    torsion ( -0.000,   0.008,  -0.005)  ( -0.000,   0.008,  -0.005)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.486,  10.017,   5.759)  ( -3.486,  10.017,   5.759)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-37.253,  48.140, -49.891)  (-37.249,  48.146, -49.880)  ( 0.01,  0.01,  0.02)
    bond    (-28.274,  39.959, -69.218)  (-28.273,  39.962, -69.209)  ( 0.01,  0.01,  0.01)
    angle   (  0.044,   0.148,   0.067)  (  0.045,   0.150,   0.068)  ( 0.01,  0.03,  0.01)
    torsion ( -0.009,  -0.006,   0.000)  ( -0.009,  -0.006,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -9.013,   8.040,  19.260)  ( -9.013,   8.040,  19.261)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-38.543, -71.364,   5.083)  (-38.539, -71.351,   5.086)  ( 0.01,  0.02,  0.07)
    bond    (-28.276, -79.984,   0.044)  (-28.274, -79.972,   0.045)  ( 0.01,  0.02,  0.00)
    angle   (  0.028,  -0.011,   0.251)  (  0.030,  -0.010,   0.254)  ( 0.01,  0.00,  0.07)
    torsion (  0.014,  -0.005,   0.009)  (  0.014,  -0.005,   0.009)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.309,   8.636,   4.779)  (-10.308,   8.636,   4.779)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 5 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 6 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/PCH3-3.gpr
 # Expected       440.29501, found 440.295014&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-455.935, 644.261, -1116.002)  (-424.362, 599.622, -1038.677)  ( 6.92,  6.93,  6.93)
    bond    (-267.083, 377.923, -654.760)  (-267.073, 377.932, -654.759)  ( 0.00,  0.00,  0.00)
    angle   (-114.098, 160.650, -278.199)  (-114.093, 160.655, -278.193)  ( 0.00,  0.00,  0.00)
    torsion ( -0.050,  -0.016,  -0.038)  ( -0.049,  -0.016,  -0.038)  ( 0.00,  0.00,  0.00)
    oop     (-74.704, 105.704, -183.005)  (-43.146,  61.051, -105.687)  (42.24, 42.24, 42.25)
    vdw     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (909.381, -93.137, 161.140)  (909.406, -76.367, 132.168)  ( 0.00, 18.01, 17.98)
    bond    (886.759,  -0.001,   0.004)  (886.777,   0.015,   0.020)  ( 0.00,  0.00,  0.01)
    angle   ( -0.045, -60.301, 104.379)  ( -0.037, -60.294, 104.386)  ( 0.04,  0.01,  0.01)
    torsion ( -0.000,   0.022,  -0.008)  (  0.000,   0.022,  -0.009)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000, -39.647,  68.632)  ( -0.000, -22.901,  39.636)  ( 0.00, 42.24, 42.25)
    vdw     ( 22.666,   6.790, -11.866)  ( 22.666,   6.791, -11.866)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-250.622, -890.276, 161.139)  (-266.381, -884.660, 132.167)  ( 6.29,  0.63, 17.98)
    bond    (-296.159, -835.902,  -0.100)  (-296.142, -835.885,  -0.084)  ( 0.01,  0.00,  0.16)
    angle   ( 57.005, -20.291, 104.400)  ( 57.013, -20.283, 104.407)  ( 0.01,  0.04,  0.01)
    torsion (  0.022,  -0.008,   0.053)  (  0.023,  -0.008,   0.053)  ( 0.00,  0.00,  0.00)
    oop     ( 37.373, -13.235,  68.633)  ( 21.588,  -7.645,  39.637)  (42.24, 42.24, 42.25)
    vdw     (-48.863, -20.839, -11.847)  (-48.862, -20.839, -11.847)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-250.777, 305.902, 851.331)  (-266.522, 328.243, 832.033)  ( 6.28,  7.30,  2.27)
    bond    (-295.509, 418.119, 723.951)  (-295.493, 418.136, 723.968)  ( 0.01,  0.00,  0.00)
    angle   ( 56.792, -80.158,  69.464)  ( 56.800, -80.151,  69.472)  ( 0.01,  0.01,  0.01)
    torsion ( -0.004,   0.020,  -0.014)  ( -0.003,   0.021,  -0.013)  ( 0.00,  0.00,  0.00)
    oop     ( 37.330, -52.822,  45.737)  ( 21.559, -30.505,  26.414)  (42.25, 42.25, 42.25)
    vdw     (-49.386,  20.743,  12.193)  (-49.385,  20.743,  12.193)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 31.740,  91.538,   0.053)  ( 31.746,  91.551,   0.055)  ( 0.02,  0.01,  0.01)
    bond    (-28.294,  79.889,  -0.000)  (-28.292,  79.901,   0.000)  ( 0.01,  0.02,  0.00)
    angle   ( -0.218,  -0.077,  -0.028)  ( -0.216,  -0.077,  -0.027)  ( 0.05,  0.00,  0.01)
    torsion ( -0.000,  -0.000,  -0.003)  (  0.000,   0.000,  -0.004)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 60.252,  11.726,   0.085)  ( 60.254,  11.726,   0.085)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-28.244, -39.942,  69.367)  (-28.241, -39.937,  69.377)  ( 0.01,  0.01,  0.01)
    bond    (-28.241, -39.967,  69.197)  (-28.239, -39.964,  69.207)  ( 0.01,  0.01,  0.01)
    angle   (  0.096,   0.067,   0.079)  (  0.098,   0.068,   0.080)  ( 0.02,  0.01,  0.01)
    torsion ( -0.000,   0.009,   0.005)  (  0.000,   0.009,   0.005)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.100,  -0.050,   0.086)  ( -0.100,  -0.050,   0.086)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 32.819, -45.898, -79.571)  ( 32.825, -45.894, -79.561)  ( 0.02,  0.01,  0.01)
    bond    (-28.228, -39.956, -69.236)  (-28.226, -39.952, -69.227)  ( 0.01,  0.01,  0.01)
    angle   (  0.153,   0.080,  -0.111)  (  0.155,   0.081,  -0.110)  ( 0.03,  0.01,  0.01)
    torsion ( -0.000,  -0.015,   0.009)  (  0.000,  -0.015,   0.009)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 60.894,  -6.008, -10.233)  ( 60.896,  -6.008, -10.233)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 81.326,  -9.705,  -5.837)  ( 81.340,  -9.702,  -5.834)  ( 0.02,  0.03,  0.04)
    bond    ( 84.815,  -0.000,  -0.000)  ( 84.828,   0.000,   0.000)  ( 0.02,  0.00,  0.00)
    angle   ( -0.000,   0.278,  -0.042)  (  0.000,   0.280,  -0.040)  ( 0.00,  0.07,  0.01)
    torsion ( -0.000,  -0.000,  -0.004)  (  0.000,   0.000,  -0.003)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.488,  -9.982,  -5.791)  ( -3.488,  -9.982,  -5.791)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-38.402,  31.457,  64.236)  (-38.398,  31.462,  64.246)  ( 0.01,  0.02,  0.02)
    bond    (-28.241,  39.961,  69.197)  (-28.239,  39.964,  69.207)  ( 0.01,  0.01,  0.01)
    angle   (  0.077,  -0.097,   0.087)  (  0.079,  -0.096,   0.087)  ( 0.01,  0.02,  0.01)
    torsion (  0.000,  -0.000,   0.000)  (  0.001,  -0.000,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.238,  -8.406,  -5.048)  (-10.238,  -8.406,  -5.048)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-37.021,  19.055, -66.644)  (-37.017,  19.061, -66.634)  ( 0.01,  0.03,  0.02)
    bond    (-28.186,  39.882, -69.132)  (-28.184,  39.885, -69.123)  ( 0.01,  0.01,  0.01)
    angle   (  0.085,  -0.152,  -0.123)  (  0.087,  -0.150,  -0.122)  ( 0.01,  0.03,  0.01)
    torsion (  0.016,  -0.006,  -0.010)  (  0.016,  -0.006,  -0.010)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.936, -20.668,   2.621)  ( -8.936, -20.668,   2.621)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 81.329,   9.864,   5.507)  ( 81.343,   9.867,   5.510)  ( 0.02,  0.03,  0.05)
    bond    ( 84.815,  -0.023,  -0.045)  ( 84.829,  -0.022,  -0.045)  ( 0.02,  0.00,  0.00)
    angle   ( -0.000,  -0.149,  -0.196)  ( -0.000,  -0.147,  -0.193)  ( 0.00,  0.03,  0.04)
    torsion ( -0.000,   0.019,  -0.011)  ( -0.000,   0.019,  -0.011)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.486,  10.017,   5.759)  ( -3.486,  10.017,   5.759)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-37.252,  48.116, -49.906)  (-37.248,  48.121, -49.895)  ( 0.01,  0.01,  0.02)
    bond    (-28.274,  39.959, -69.218)  (-28.273,  39.962, -69.209)  ( 0.01,  0.01,  0.01)
    angle   (  0.056,   0.131,   0.052)  (  0.058,   0.133,   0.053)  ( 0.01,  0.02,  0.00)
    torsion ( -0.020,  -0.014,   0.000)  ( -0.020,  -0.014,   0.000)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -9.013,   8.040,  19.260)  ( -9.013,   8.040,  19.261)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-38.496, -71.380,   5.042)  (-38.492, -71.367,   5.045)  ( 0.01,  0.02,  0.05)
    bond    (-28.276, -79.984,   0.044)  (-28.274, -79.972,   0.045)  ( 0.01,  0.02,  0.00)
    angle   (  0.056,  -0.021,   0.199)  (  0.058,  -0.020,   0.201)  ( 0.01,  0.00,  0.04)
    torsion (  0.033,  -0.012,   0.020)  (  0.033,  -0.012,   0.020)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.309,   8.636,   4.779)  (-10.308,   8.636,   4.779)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 6 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 7 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/atorvastin.gpr
 # Expected      1188.73768, found 1188.737676&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-21.015,   0.732,   3.646)  (-20.970,   0.771,   3.670)  ( 0.22,  2.90,  0.68)
    bond    ( 37.054, -12.937,  -8.013)  ( 37.079, -12.911,  -8.009)  ( 0.07,  0.20,  0.05)
    angle   ( 11.559,  13.320,   3.224)  ( 11.578,  13.332,   3.225)  ( 0.16,  0.08,  0.05)
    torsion (  0.413,  -0.973,   2.161)  (  0.413,  -0.970,   2.180)  ( 0.01,  0.23,  0.87)
    oop     ( -0.012,   0.041,  -0.132)  ( -0.012,   0.042,  -0.131)  ( 0.00,  0.00,  0.01)
    vdw     (-70.030,   1.280,   6.405)  (-70.028,   1.279,   6.405)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (  6.968,  13.758,   9.308)  (  7.011,  13.800,   9.333)  ( 0.61,  0.31,  0.27)
    bond    ( 33.675, -25.493, -10.735)  ( 33.703, -25.470, -10.732)  ( 0.08,  0.09,  0.03)
    angle   (  7.250, -22.041,  -8.118)  (  7.264, -22.025,  -8.116)  ( 0.19,  0.07,  0.03)
    torsion ( -0.145,  -0.448,   2.063)  ( -0.145,  -0.446,   2.082)  ( 0.00,  0.09,  0.93)
    oop     (  0.056,  -0.262,   0.769)  (  0.056,  -0.262,   0.770)  ( 0.00,  0.00,  0.05)
    vdw     (-33.868,  62.001,  25.328)  (-33.867,  62.002,  25.328)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  6.948,  69.656,  27.639)  (  6.993,  69.698,  27.665)  ( 0.65,  0.06,  0.09)
    bond    (-19.349, -52.993, -17.882)  (-19.321, -52.969, -17.878)  ( 0.14,  0.04,  0.02)
    angle   ( 24.617,  58.394,  19.427)  ( 24.633,  58.410,  19.429)  ( 0.06,  0.03,  0.01)
    torsion (  0.402,  -8.286,  20.372)  (  0.402,  -8.283,  20.392)  ( 0.01,  0.03,  0.10)
    oop     ( -0.091,   0.393,  -1.144)  ( -0.091,   0.393,  -1.143)  ( 0.00,  0.00,  0.08)
    vdw     (  1.369,  72.147,   6.866)  (  1.370,  72.148,   6.866)  ( 0.11,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-35.731, -10.897, -14.192)  (-35.670, -10.966, -14.063)  ( 0.17,  0.64,  0.91)
    bond    (-50.594,  14.579,   8.252)  (-50.560,  14.605,   8.256)  ( 0.07,  0.18,  0.05)
    angle   (-39.181, -32.892,  25.570)  (-39.159, -32.872,  25.576)  ( 0.06,  0.06,  0.02)
    torsion ( -1.996,  13.629, -22.256)  ( -1.996,  13.632, -22.238)  ( 0.00,  0.02,  0.08)
    oop     ( -0.149,   3.849,  -3.856)  ( -0.146,   3.731,  -3.755)  ( 0.05,  3.06,  2.61)
    vdw     ( 56.189, -10.062, -21.902)  ( 56.191, -10.062, -21.902)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-36.239, -47.342,  34.573)  (-36.195, -47.297,  34.592)  ( 0.12,  0.10,  0.06)
    bond    (-40.420,  41.995,  21.806)  (-40.392,  42.018,  21.810)  ( 0.07,  0.06,  0.02)
    angle   (-19.814,  -9.858,  -1.794)  (-19.799,  -9.843,  -1.792)  ( 0.08,  0.16,  0.13)
    torsion (  4.465, -13.505,  34.153)  (  4.466, -13.502,  34.172)  ( 0.00,  0.02,  0.06)
    oop     (  0.262,  -1.152,   3.243)  (  0.261,  -1.149,   3.237)  ( 0.01,  0.20,  0.18)
    vdw     ( 19.269, -64.822, -22.834)  ( 19.270, -64.821, -22.833)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-16.159, -28.193, -12.679)  (-16.116, -28.151, -12.652)  ( 0.27,  0.15,  0.21)
    bond    ( 44.261,  36.517,   8.020)  ( 44.289,  36.540,   8.023)  ( 0.06,  0.06,  0.04)
    angle   (-17.310,  -1.486,   1.224)  (-17.296,  -1.471,   1.225)  ( 0.08,  1.03,  0.14)
    torsion ( -0.065,   2.436,  -2.077)  ( -0.065,   2.438,  -2.058)  ( 0.00,  0.09,  0.91)
    oop     ( -0.038,   0.156,  -0.397)  ( -0.038,   0.156,  -0.394)  ( 0.00,  0.01,  0.10)
    vdw     (-43.007, -65.816, -19.449)  (-43.007, -65.815, -19.449)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-33.234,   3.926, 352.787)  (-33.141,   4.337, 352.496)  ( 0.28, 10.49,  0.08)
    bond    ( 65.767, 140.323, 186.598)  ( 65.806, 140.339, 186.620)  ( 0.06,  0.01,  0.01)
    angle   (-48.653,  24.194,  56.510)  (-48.632,  24.207,  56.522)  ( 0.04,  0.05,  0.02)
    torsion (-46.293, -174.861, 111.475)  (-46.292, -174.854, 111.480)  ( 0.00,  0.00,  0.00)
    oop     ( -1.261,  -6.768,   7.409)  ( -1.228,  -6.392,   7.080)  ( 2.60,  5.55,  4.44)
    vdw     ( -2.796,  21.037,  -9.205)  ( -2.795,  21.038,  -9.205)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 36.687, -153.803, -361.741)  ( 36.734, -153.883, -361.602)  ( 0.13,  0.05,  0.04)
    bond    (-148.647, -41.584, -55.210)  (-148.617, -41.572, -55.173)  ( 0.02,  0.03,  0.07)
    angle   (185.398, -78.494, -88.500)  (185.429, -78.485, -88.486)  ( 0.02,  0.01,  0.02)
    torsion (-23.473,  13.213, -231.721)  (-23.472,  13.218, -231.720)  ( 0.00,  0.04,  0.00)
    oop     (  1.005, -10.683,   4.518)  (  0.988, -10.792,   4.605)  ( 1.64,  1.02,  1.93)
    vdw     ( 22.404, -36.254,   9.172)  ( 22.405, -36.253,   9.172)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-61.740,  20.471, -126.099)  (-61.724,  20.478, -126.072)  ( 0.03,  0.03,  0.02)
    bond    ( 30.421, -42.975, -81.162)  ( 30.425, -42.968, -81.138)  ( 0.01,  0.02,  0.03)
    angle   (-119.608, -25.889, -31.136)  (-119.597, -25.889, -31.136)  ( 0.01,  0.00,  0.00)
    torsion ( -6.259, 116.531, -64.058)  ( -6.259, 116.532, -64.058)  ( 0.00,  0.00,  0.00)
    oop     ( -0.265,   5.425,  -2.973)  ( -0.265,   5.422,  -2.971)  ( 0.00,  0.05,  0.07)
    vdw     ( 33.971, -32.620,  53.230)  ( 33.972, -32.619,  53.231)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 28.015,  38.643,  42.144)  ( 28.068,  38.684,  42.166)  ( 0.19,  0.10,  0.05)
    bond    (226.913, -56.230, -30.230)  (226.943, -56.204, -30.227)  ( 0.01,  0.05,  0.01)
    angle   (-257.468,  99.173, -99.625)  (-257.446,  99.188, -99.619)  ( 0.01,  0.02,  0.01)
    torsion ( 32.606, -18.848, 156.550)  ( 32.607, -18.846, 156.563)  ( 0.00,  0.01,  0.01)
    oop     (  0.229,   4.708,  -0.230)  (  0.229,   4.705,  -0.230)  ( 0.00,  0.06,  0.00)
    vdw     ( 25.735,   9.840,  15.679)  ( 25.736,   9.841,  15.679)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (250.141, -290.051, 116.824)  (250.194, -289.994, 116.856)  ( 0.02,  0.02,  0.03)
    bond    ( 93.426, -53.532,   4.505)  ( 93.459, -53.503,   4.510)  ( 0.04,  0.05,  0.10)
    angle   (143.902, -174.258, 218.090)  (143.921, -174.234, 218.094)  ( 0.01,  0.01,  0.00)
    torsion ( 13.029, -48.793, -96.910)  ( 13.029, -48.791, -96.893)  ( 0.00,  0.00,  0.02)
    oop     ( -0.069,  -0.913,  -3.501)  ( -0.069,  -0.911,  -3.495)  ( 0.00,  0.15,  0.18)
    vdw     ( -0.146, -12.555,  -5.360)  ( -0.146, -12.555,  -5.360)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-84.001, -72.776,  19.860)  (-83.935, -72.717,  19.887)  ( 0.08,  0.08,  0.14)
    bond    (-186.226, -17.199,  -4.867)  (-186.184, -17.162,  -4.865)  ( 0.02,  0.21,  0.05)
    angle   (110.321, -57.796, -26.379)  (110.344, -57.775, -26.375)  ( 0.02,  0.04,  0.01)
    torsion ( -3.809,   9.448,  48.069)  ( -3.809,   9.448,  48.091)  ( 0.00,  0.01,  0.04)
    oop     ( -0.012,   0.289,   1.060)  ( -0.012,   0.289,   1.059)  ( 0.00,  0.01,  0.10)
    vdw     ( -4.274,  -7.518,   1.976)  ( -4.274,  -7.518,   1.977)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 29.845, 279.092, -92.847)  ( 29.899, 279.146, -92.821)  ( 0.18,  0.02,  0.03)
    bond    (  4.828, 149.615, -23.114)  (  4.856, 149.648, -23.113)  ( 0.59,  0.02,  0.01)
    angle   ( 85.095,  70.062, -61.998)  ( 85.119,  70.081, -61.996)  ( 0.03,  0.03,  0.00)
    torsion ( -0.800,  11.926, -13.399)  ( -0.800,  11.927, -13.378)  ( 0.02,  0.01,  0.16)
    oop     (  0.110,  -0.159,  -1.678)  (  0.110,  -0.159,  -1.676)  ( 0.00,  0.00,  0.10)
    vdw     (-59.388,  47.647,   7.343)  (-59.386,  47.650,   7.343)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (114.579, 177.584, 146.921)  (114.623, 177.636, 146.942)  ( 0.04,  0.03,  0.01)
    bond    (-154.829, 111.469,  -0.872)  (-154.804, 111.501,  -0.871)  ( 0.02,  0.03,  0.09)
    angle   (264.768,  66.667, 115.766)  (264.787,  66.686, 115.767)  ( 0.01,  0.03,  0.00)
    torsion ( -1.838,  -9.032,  27.518)  ( -1.838,  -9.032,  27.541)  ( 0.02,  0.00,  0.08)
    oop     ( -0.039,   0.000,   3.201)  ( -0.039,   0.000,   3.197)  ( 0.00,  0.00,  0.12)
    vdw     (  6.518,   8.480,   1.307)  (  6.518,   8.480,   1.307)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-115.626, -129.188,  24.940)  (-115.578, -129.140,  24.974)  ( 0.04,  0.04,  0.14)
    bond    ( 53.724, -43.269, -13.811)  ( 53.752, -43.241, -13.809)  ( 0.05,  0.06,  0.01)
    angle   (-160.021, -137.979,  -6.035)  (-160.003, -137.960,  -6.035)  ( 0.01,  0.01,  0.00)
    torsion (-12.547,  -1.115,  45.037)  (-12.546,  -1.115,  45.061)  ( 0.00,  0.01,  0.05)
    oop     ( -0.413,   0.024,  -4.236)  ( -0.412,   0.024,  -4.226)  ( 0.04,  0.00,  0.23)
    vdw     (  3.631,  53.150,   3.984)  (  3.631,  53.151,   3.984)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-95.354,  13.968,  35.501)  (-95.310,  14.012,  35.521)  ( 0.05,  0.31,  0.06)
    bond    ( 50.547, -70.937, -15.049)  ( 50.574, -70.910, -15.048)  ( 0.05,  0.04,  0.01)
    angle   (-92.094,  55.769,  11.666)  (-92.078,  55.784,  11.666)  ( 0.02,  0.03,  0.00)
    torsion (  3.371,  -2.144,  22.650)  (  3.371,  -2.143,  22.671)  ( 0.02,  0.02,  0.09)
    oop     (  0.179,  -0.069,   1.564)  (  0.179,  -0.069,   1.562)  ( 0.00,  0.00,  0.12)
    vdw     (-57.357,  31.349,  14.670)  (-57.356,  31.350,  14.670)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-36.034,  -6.492,  25.109)  (-35.989,  -6.450,  25.132)  ( 0.12,  0.65,  0.09)
    bond    ( 38.128,  64.277,   2.987)  ( 38.153,  64.305,   2.988)  ( 0.07,  0.04,  0.04)
    angle   (  6.244, -33.702,  -6.073)  (  6.261, -33.689,  -6.073)  ( 0.28,  0.04,  0.00)
    torsion (  3.666,  -2.511,  22.904)  (  3.666,  -2.510,  22.925)  ( 0.01,  0.01,  0.09)
    oop     ( -0.014,   0.010,  -0.082)  ( -0.014,   0.010,  -0.081)  ( 0.00,  0.00,  0.01)
    vdw     (-84.058, -34.566,   5.374)  (-84.056, -34.565,   5.374)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (  0.027,  -8.948,   4.610)  (  0.068,  -8.903,   4.633)  ( 0.11,  0.50,  0.50)
    bond    (-23.301,  24.678,   5.043)  (-23.273,  24.703,   5.044)  ( 0.12,  0.10,  0.02)
    angle   ( 30.364,  23.964,  -0.147)  ( 30.376,  23.983,  -0.147)  ( 0.04,  0.08,  0.00)
    torsion (  0.087,  -0.016,   3.427)  (  0.087,  -0.016,   3.448)  ( 0.00,  0.00,  0.62)
    oop     (  0.058,  -0.061,   0.636)  (  0.058,  -0.061,   0.637)  ( 0.00,  0.00,  0.05)
    vdw     ( -7.180, -57.513,  -4.349)  ( -7.180, -57.512,  -4.349)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( -4.499,  24.510,   7.566)  ( -4.455,  24.553,   7.589)  ( 0.98,  0.17,  0.30)
    bond    (  3.716,  51.056,   3.270)  (  3.743,  51.083,   3.271)  ( 0.71,  0.05,  0.02)
    angle   (-69.824,  19.369,   9.127)  (-69.807,  19.384,   9.127)  ( 0.02,  0.08,  0.00)
    torsion (  1.337,  -0.581,   6.526)  (  1.337,  -0.581,   6.547)  ( 0.01,  0.01,  0.32)
    oop     ( -0.057,   0.060,  -0.698)  ( -0.057,   0.060,  -0.697)  ( 0.00,  0.00,  0.06)
    vdw     ( 60.329, -45.394, -10.659)  ( 60.330, -45.393, -10.659)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (121.674,  -0.233,  -2.384)  (121.719,  -0.189,  -2.363)  ( 0.04,  1.03,  0.88)
    bond    (-102.276,  22.499,  12.095)  (-102.251,  22.527,  12.096)  ( 0.02,  0.13,  0.01)
    angle   (150.840,  -0.242, -18.248)  (150.858,  -0.229, -18.248)  ( 0.01,  0.33,  0.00)
    torsion (  3.315,   2.200,  13.926)  (  3.315,   2.200,  13.947)  ( 0.01,  0.01,  0.15)
    oop     (  0.081,   0.015,   0.475)  (  0.081,   0.015,   0.474)  ( 0.00,  0.00,  0.08)
    vdw     ( 69.714, -24.704, -10.632)  ( 69.716, -24.702, -10.632)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-59.128,  20.520,  97.785)  (-59.092,  20.556,  97.815)  ( 0.06,  0.18,  0.03)
    bond    ( 55.099, -110.431, 101.265)  ( 55.118, -110.408, 101.284)  ( 0.03,  0.02,  0.02)
    angle   (-93.600,  87.032, -127.005)  (-93.585,  87.044, -126.996)  ( 0.02,  0.01,  0.01)
    torsion (-18.856,  33.146, 127.144)  (-18.854,  33.148, 127.149)  ( 0.01,  0.01,  0.00)
    oop     ( -0.022,   0.319,   1.038)  ( -0.022,   0.319,   1.036)  ( 0.00,  0.02,  0.17)
    vdw     ( -1.750,  10.454,  -4.658)  ( -1.749,  10.454,  -4.658)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 13.089, -26.040,  19.276)  ( 13.117, -26.012,  19.304)  ( 0.22,  0.11,  0.15)
    bond    ( 78.061, -32.255, -59.087)  ( 78.080, -32.237, -59.068)  ( 0.02,  0.05,  0.03)
    angle   (-69.023, -16.641,  56.905)  (-69.015, -16.632,  56.914)  ( 0.01,  0.05,  0.02)
    torsion ( 16.636,   5.460,  15.588)  ( 16.636,   5.461,  15.588)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-12.585,  17.395,   5.870)  (-12.584,  17.396,   5.870)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 30.279, -21.928,   6.499)  ( 30.309, -21.900,   6.527)  ( 0.10,  0.13,  0.44)
    bond    (-69.515, -53.766,  16.940)  (-69.496, -53.748,  16.959)  ( 0.03,  0.03,  0.11)
    angle   (101.364,   2.074,  -2.429)  (101.374,   2.083,  -2.420)  ( 0.01,  0.41,  0.34)
    torsion (  7.290,  -4.506,  14.180)  (  7.291,  -4.505,  14.182)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.860,  34.269, -22.193)  ( -8.858,  34.270, -22.193)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-62.993,  75.700, -61.378)  (-62.952,  75.739, -61.344)  ( 0.06,  0.05,  0.06)
    bond    ( -1.423, -127.289,  25.653)  ( -1.396, -127.270,  25.672)  ( 1.85,  0.02,  0.07)
    angle   (-77.383, 233.940, -62.904)  (-77.370, 233.957, -62.895)  ( 0.02,  0.01,  0.01)
    torsion ( -1.153,  -2.884, -31.550)  ( -1.153,  -2.883, -31.544)  ( 0.07,  0.07,  0.02)
    oop     ( -0.002,   0.011,   0.067)  ( -0.002,   0.011,   0.067)  ( 0.00,  0.00,  0.00)
    vdw     ( 16.968, -28.077,   7.357)  ( 16.969, -28.076,   7.357)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( -8.421,  10.711, -14.021)  ( -8.387,  10.744, -13.990)  ( 0.40,  0.31,  0.22)
    bond    (-21.693, 101.511, -10.537)  (-21.673, 101.529, -10.518)  ( 0.09,  0.02,  0.17)
    angle   (-40.395, -151.200,   4.675)  (-40.384, -151.188,   4.685)  ( 0.03,  0.01,  0.22)
    torsion ( -2.346,  -4.745,  -0.756)  ( -2.345,  -4.743,  -0.754)  ( 0.03,  0.03,  0.21)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 56.013,  65.145,  -7.403)  ( 56.015,  65.146,  -7.403)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-63.941,  59.729, 152.090)  (-63.907,  59.767, 152.130)  ( 0.05,  0.06,  0.03)
    bond    ( 23.914, -31.082, 126.884)  ( 23.934, -31.059, 126.909)  ( 0.08,  0.07,  0.02)
    angle   (-77.913, 105.610,  -9.343)  (-77.899, 105.625,  -9.329)  ( 0.02,  0.01,  0.15)
    torsion ( -4.548,  -7.157,  32.760)  ( -4.547,  -7.156,  32.761)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.395,  -7.642,   1.790)  ( -5.394,  -7.642,   1.790)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( -2.890,  30.403,  32.390)  ( -2.857,  30.434,  32.421)  ( 1.14,  0.10,  0.10)
    bond    ( -2.543, 116.577,  10.472)  ( -2.523, 116.596,  10.490)  ( 0.81,  0.02,  0.17)
    angle   (-14.350, -75.155, -16.313)  (-14.339, -75.143, -16.302)  ( 0.08,  0.02,  0.07)
    torsion (  3.122, -17.800,  28.898)  (  3.123, -17.799,  28.899)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.881,   6.781,   9.333)  ( 10.882,   6.781,   9.333)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-23.110, -88.986, 248.990)  (-23.072, -88.952, 249.031)  ( 0.16,  0.04,  0.02)
    bond    ( 27.243, -89.704, 157.951)  ( 27.263, -89.683, 157.978)  ( 0.08,  0.02,  0.02)
    angle   (-59.892,   2.431,  65.358)  (-59.877,   2.444,  65.371)  ( 0.03,  0.56,  0.02)
    torsion ( 16.304,   4.570,  25.812)  ( 16.305,   4.570,  25.813)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.765,  -6.283,  -0.131)  ( -6.764,  -6.283,  -0.131)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (120.052, 138.234,   1.640)  (120.082, 138.267,   1.677)  ( 0.02,  0.02,  2.30)
    bond    ( 53.237, 119.656,  38.714)  ( 53.256, 119.676,  38.733)  ( 0.04,  0.02,  0.05)
    angle   ( 32.088,  62.868, -15.157)  ( 32.100,  62.878, -15.141)  ( 0.03,  0.02,  0.10)
    torsion ( 11.309, -24.297,  36.020)  ( 11.309, -24.296,  36.020)  ( 0.00,  0.00,  0.00)
    oop     (  2.504,  -3.437,  -1.712)  (  2.502,  -3.434,  -1.711)  ( 0.07,  0.08,  0.07)
    vdw     ( 20.914, -16.557, -56.225)  ( 20.915, -16.557, -56.224)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-719.368, -373.052, -594.720)  (-719.323, -373.035, -594.667)  ( 0.01,  0.00,  0.01)
    bond    (-277.869,  75.610, -564.058)  (-277.851,  75.624, -564.017)  ( 0.01,  0.02,  0.01)
    angle   (-490.849, -445.201,  15.737)  (-490.832, -445.190,  15.750)  ( 0.00,  0.00,  0.08)
    torsion (  7.598,  -8.679,  14.394)  (  7.598,  -8.679,  14.394)  ( 0.00,  0.01,  0.00)
    oop     ( -9.905,  13.111,   6.630)  ( -9.897,  13.104,   6.626)  ( 0.09,  0.05,  0.06)
    vdw     ( 51.658,  -7.894, -67.422)  ( 51.659,  -7.894, -67.421)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (302.669,   4.310, 346.416)  (302.675,   4.325, 346.443)  ( 0.00,  0.37,  0.01)
    bond    (-25.278, -142.548, 236.213)  (-25.277, -142.539, 236.238)  ( 0.01,  0.01,  0.01)
    angle   (292.005, 160.643, 128.172)  (292.012, 160.645, 128.172)  ( 0.00,  0.00,  0.00)
    torsion ( 16.660, -22.922, -12.048)  ( 16.659, -22.923, -12.048)  ( 0.00,  0.00,  0.00)
    oop     (  3.710,  -4.857,  -2.534)  (  3.708,  -4.853,  -2.532)  ( 0.06,  0.08,  0.08)
    vdw     ( 15.572,  13.995,  -3.387)  ( 15.573,  13.995,  -3.387)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (752.304, 300.533, -47.998)  (752.320, 300.538, -47.974)  ( 0.00,  0.00,  0.05)
    bond    (224.614,   7.051, 333.105)  (224.621,   7.049, 333.121)  ( 0.00,  0.02,  0.01)
    angle   (223.058, 251.697, -155.736)  (223.062, 251.701, -155.735)  ( 0.00,  0.00,  0.00)
    torsion (-17.793,  24.359,  11.482)  (-17.793,  24.359,  11.482)  ( 0.00,  0.00,  0.00)
    oop     (  3.689,  -4.821,  -2.386)  (  3.687,  -4.817,  -2.384)  ( 0.06,  0.08,  0.07)
    vdw     (318.736,  22.247, -234.463)  (318.744,  22.246, -234.459)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 68.984, -142.013, -11.258)  ( 68.989, -141.981, -11.233)  ( 0.01,  0.02,  0.22)
    bond    ( -6.359, -151.413, -79.773)  ( -6.359, -151.384, -79.756)  ( 0.00,  0.02,  0.02)
    angle   ( 72.722, -18.965,  64.024)  ( 72.726, -18.962,  64.032)  ( 0.01,  0.01,  0.01)
    torsion ( -8.427,   9.675,  -6.479)  ( -8.427,   9.676,  -6.479)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.049,  18.689,  10.970)  ( 11.050,  18.690,  10.970)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (-57.917,  58.587, -138.313)  (-57.885,  58.592, -138.287)  ( 0.05,  0.01,  0.02)
    bond    (-63.307,   3.061, -175.086)  (-63.282,   3.062, -175.065)  ( 0.04,  0.04,  0.01)
    angle   ( 10.839,   1.020,   6.741)  ( 10.844,   1.024,   6.747)  ( 0.05,  0.32,  0.08)
    torsion ( -3.889,  38.685,   2.208)  ( -3.889,  38.685,   2.208)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.559,  15.821,  27.823)  ( -1.558,  15.821,  27.823)  ( 0.05,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( 12.828,  -2.529,  -9.612)  ( 12.843,  -2.523,  -9.607)  ( 0.12,  0.22,  0.06)
    bond    ( 16.396,  -0.223,  -1.751)  ( 16.411,  -0.223,  -1.751)  ( 0.09,  0.00,  0.01)
    angle   ( -0.234,  -4.688,  -1.596)  ( -0.234,  -4.684,  -1.596)  ( 0.00,  0.10,  0.03)
    torsion ( -0.658,   2.290,  -6.462)  ( -0.658,   2.290,  -6.457)  ( 0.00,  0.03,  0.07)
    oop     ( -0.010,   0.033,  -0.096)  ( -0.010,   0.033,  -0.096)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.666,   0.060,   0.293)  ( -2.666,   0.060,   0.293)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (  0.331, -17.731,   4.111)  (  0.339, -17.719,   4.118)  ( 0.25,  0.07,  0.15)
    bond    (  7.488, -13.781,  -5.274)  (  7.491, -13.770,  -5.272)  ( 0.04,  0.08,  0.03)
    angle   ( -6.120,  -3.109,  -0.572)  ( -6.116,  -3.108,  -0.572)  ( 0.07,  0.03,  0.00)
    torsion (  0.762,  -3.146,   9.292)  (  0.762,  -3.145,   9.297)  ( 0.00,  0.02,  0.05)
    oop     ( -0.016,   0.071,  -0.208)  ( -0.016,   0.071,  -0.208)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.782,   2.233,   0.873)  ( -1.782,   2.233,   0.873)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( -8.605, -18.951,   1.355)  ( -8.596, -18.939,   1.360)  ( 0.10,  0.06,  0.43)
    bond    ( -8.186, -13.103,  -3.777)  ( -8.182, -13.093,  -3.776)  ( 0.05,  0.08,  0.02)
    angle   ( 21.033, -11.539,  -5.573)  ( 21.037, -11.538,  -5.573)  ( 0.02,  0.01,  0.01)
    torsion (  1.541,  -5.826,  16.856)  (  1.541,  -5.826,  16.860)  ( 0.00,  0.01,  0.03)
    oop     (  0.033,  -0.137,   0.403)  (  0.033,  -0.137,   0.403)  ( 0.00,  0.00,  0.00)
    vdw     (-23.026,  11.655,  -6.553)  (-23.025,  11.655,  -6.553)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (  5.402,  18.002, -14.657)  (  5.410,  18.014, -14.648)  ( 0.14,  0.06,  0.06)
    bond    ( -5.820,  11.039,   4.124)  ( -5.817,  11.050,   4.125)  ( 0.05,  0.10,  0.04)
    angle   ( 16.467,   8.135,   1.435)  ( 16.471,   8.136,   1.435)  ( 0.03,  0.01,  0.00)
    torsion ( -1.134,   5.864, -17.312)  ( -1.134,   5.864, -17.307)  ( 0.00,  0.01,  0.03)
    oop     ( -0.098,   0.449,  -1.342)  ( -0.098,   0.448,  -1.339)  ( 0.00,  0.04,  0.20)
    vdw     ( -4.012,  -7.485,  -1.562)  ( -4.012,  -7.485,  -1.562)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (  8.436,  16.281, -20.697)  (  8.444,  16.293, -20.691)  ( 0.10,  0.07,  0.03)
    bond    (  8.737,  13.297,   3.406)  (  8.741,  13.307,   3.407)  ( 0.05,  0.08,  0.02)
    angle   (  3.771,  -2.180,  -1.175)  (  3.775,  -2.179,  -1.175)  ( 0.10,  0.06,  0.03)
    torsion ( -2.476,   7.286, -22.114)  ( -2.476,   7.286, -22.110)  ( 0.00,  0.01,  0.02)
    oop     ( -0.031,   0.090,  -0.274)  ( -0.031,   0.090,  -0.274)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.565,  -2.212,  -0.540)  ( -1.565,  -2.212,  -0.540)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       ( 22.400,  16.112, -155.872)  ( 22.392,  15.985, -155.718)  ( 0.04,  0.79,  0.10)
    bond    ( 33.459, -55.246, -49.387)  ( 33.463, -55.235, -49.378)  ( 0.01,  0.02,  0.02)
    angle   (-36.578,  -2.544, -21.940)  (-36.571,  -2.543, -21.939)  ( 0.02,  0.02,  0.01)
    torsion ( 34.711,  62.839, -46.773)  ( 34.711,  62.841, -46.772)  ( 0.00,  0.00,  0.00)
    oop     (  0.596,   4.195,  -4.289)  (  0.576,   4.056,  -4.147)  ( 1.16,  3.32,  3.33)
    vdw     ( -9.787,   6.866, -33.483)  ( -9.786,   6.867, -33.482)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (-71.037, -79.309, -56.369)  (-71.024, -79.297, -56.363)  ( 0.02,  0.02,  0.01)
    bond    ( 10.154,  -5.855,   1.667)  ( 10.165,  -5.852,   1.667)  ( 0.11,  0.06,  0.01)
    angle   (-44.077, -74.633,   6.796)  (-44.076, -74.629,   6.796)  ( 0.00,  0.01,  0.00)
    torsion (  7.173, -12.413, -87.325)  (  7.173, -12.413, -87.319)  ( 0.00,  0.00,  0.01)
    oop     ( -0.035,   0.067,   0.450)  ( -0.035,   0.067,   0.450)  ( 0.00,  0.00,  0.00)
    vdw     (-44.252,  13.526,  22.043)  (-44.251,  13.530,  22.043)  ( 0.00,  0.03,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       ( 17.961,   9.670, -50.426)  ( 17.972,   9.679, -50.420)  ( 0.07,  0.10,  0.01)
    bond    (  0.960,  -0.653,  -0.220)  (  0.970,  -0.649,  -0.219)  ( 0.96,  0.29,  0.01)
    angle   ( 25.243,  37.565,   0.489)  ( 25.245,  37.569,   0.489)  ( 0.01,  0.01,  0.00)
    torsion (-10.675,   8.352, -71.968)  (-10.675,   8.352, -71.964)  ( 0.00,  0.00,  0.01)
    oop     ( -0.024,   0.019,  -0.163)  ( -0.024,   0.019,  -0.163)  ( 0.00,  0.00,  0.00)
    vdw     (  2.457, -35.613,  21.436)  (  2.457, -35.612,  21.436)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       ( 11.929,   6.707,  17.865)  ( 11.942,   6.714,  17.871)  ( 0.11,  0.10,  0.03)
    bond    ( 14.478,   6.220,  -0.840)  ( 14.490,   6.223,  -0.840)  ( 0.09,  0.04,  0.01)
    angle   ( -1.676,   3.974,   0.570)  ( -1.676,   3.979,   0.570)  ( 0.05,  0.11,  0.01)
    torsion (  1.897,  -1.940,  18.353)  (  1.897,  -1.940,  18.358)  ( 0.00,  0.00,  0.03)
    oop     ( -0.007,   0.007,  -0.068)  ( -0.007,   0.007,  -0.068)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.763,  -1.555,  -0.150)  ( -2.763,  -1.555,  -0.150)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       ( -6.454,  11.497,  10.615)  ( -6.449,  11.512,  10.621)  ( 0.09,  0.13,  0.05)
    bond    (  1.748,  14.035,   1.261)  (  1.748,  14.050,   1.262)  ( 0.02,  0.10,  0.01)
    angle   ( -8.644,   0.988,   0.970)  ( -8.639,   0.988,   0.970)  ( 0.06,  0.01,  0.00)
    torsion (  0.817,  -0.896,   8.840)  (  0.817,  -0.896,   8.845)  ( 0.00,  0.01,  0.06)
    oop     ( -0.016,   0.017,  -0.169)  ( -0.016,   0.017,  -0.169)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.359,  -2.647,  -0.287)  ( -0.358,  -2.647,  -0.287)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       (-20.362,  -1.184, -12.363)  (-20.350,  -1.175, -12.358)  ( 0.06,  0.75,  0.04)
    bond    (-14.221,  10.344,   2.191)  (-14.211,  10.350,   2.191)  ( 0.07,  0.05,  0.01)
    angle   ( -6.681,  -9.137,  -0.174)  ( -6.679,  -9.134,  -0.174)  ( 0.03,  0.04,  0.00)
    torsion ( -1.335,   1.208, -14.366)  ( -1.335,   1.208, -14.361)  ( 0.00,  0.00,  0.04)
    oop     (  0.031,  -0.028,   0.331)  (  0.031,  -0.028,   0.331)  ( 0.00,  0.00,  0.00)
    vdw     (  1.844,  -3.571,  -0.344)  (  1.844,  -3.571,  -0.344)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       (-34.082, -38.546, -16.676)  (-34.068, -38.536, -16.671)  ( 0.04,  0.03,  0.03)
    bond    (-13.365,  -4.730,   1.249)  (-13.352,  -4.729,   1.249)  ( 0.10,  0.04,  0.01)
    angle   (-20.559,  59.883,   6.962)  (-20.558,  59.888,   6.962)  ( 0.00,  0.01,  0.00)
    torsion ( -0.655,   0.154,  -6.424)  ( -0.655,   0.154,  -6.419)  ( 0.00,  0.00,  0.08)
    oop     (  0.042,  -0.025,   0.355)  (  0.042,  -0.025,   0.355)  ( 0.00,  0.00,  0.00)
    vdw     (  0.455, -93.828, -18.818)  (  0.455, -93.825, -18.818)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       (-26.351,  24.960, -28.905)  (-26.345,  24.964, -28.893)  ( 0.02,  0.02,  0.04)
    bond    (-11.055,  -3.483, -22.909)  (-11.053,  -3.483, -22.898)  ( 0.02,  0.00,  0.05)
    angle   ( -6.926,   8.123,   2.105)  ( -6.924,   8.126,   2.106)  ( 0.04,  0.04,  0.03)
    torsion ( -7.520,  25.795,  -0.294)  ( -7.519,  25.796,  -0.294)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.850,  -5.475,  -7.806)  ( -0.850,  -5.475,  -7.806)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (-24.824, -25.059,   1.907)  (-24.813, -25.053,   1.910)  ( 0.05,  0.02,  0.13)
    bond    (-45.915, -22.615,  -5.946)  (-45.904, -22.612,  -5.946)  ( 0.02,  0.01,  0.00)
    angle   ( 15.233, -29.979,  -3.611)  ( 15.234, -29.977,  -3.608)  ( 0.00,  0.01,  0.06)
    torsion (  6.875, -19.736,  21.983)  (  6.875, -19.736,  21.983)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.017,  47.271, -10.519)  ( -1.016,  47.272, -10.519)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 36.271,  11.989,  38.996)  ( 36.274,  11.991,  39.009)  ( 0.01,  0.02,  0.03)
    bond    ( 11.190,  -1.507,  41.064)  ( 11.191,  -1.507,  41.077)  ( 0.01,  0.01,  0.03)
    angle   ( 16.933, -15.116,  -5.169)  ( 16.936, -15.114,  -5.168)  ( 0.01,  0.01,  0.00)
    torsion ( 12.306,  23.863,  -2.477)  ( 12.306,  23.864,  -2.477)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.159,   4.748,   5.578)  ( -4.159,   4.748,   5.579)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-30.049,  33.093, -18.463)  (-30.045,  33.106, -18.460)  ( 0.01,  0.04,  0.02)
    bond    ( -5.456,  33.426,  -8.494)  ( -5.455,  33.439,  -8.494)  ( 0.00,  0.04,  0.01)
    angle   ( 31.339,   1.976, -12.354)  ( 31.342,   1.976, -12.352)  ( 0.01,  0.01,  0.02)
    torsion (-18.145,  -7.077, -16.210)  (-18.144,  -7.077, -16.209)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-37.788,   4.768,  18.595)  (-37.787,   4.768,  18.595)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (-10.015,  12.715, -43.629)  (-10.007,  12.720, -43.621)  ( 0.08,  0.04,  0.02)
    bond    ( 31.678, -13.145, -36.411)  ( 31.683, -13.145, -36.404)  ( 0.02,  0.01,  0.02)
    angle   ( -1.838, -33.614,  10.537)  ( -1.836, -33.611,  10.538)  ( 0.07,  0.01,  0.01)
    torsion (  7.134,  -5.604,   8.233)  (  7.135,  -5.604,   8.233)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-46.990,  65.079, -25.988)  (-46.989,  65.080, -25.988)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (-12.417,  31.691, -26.146)  (-12.412,  31.702, -26.142)  ( 0.04,  0.03,  0.01)
    bond    (-13.699,  29.311, -10.293)  (-13.697,  29.322, -10.292)  ( 0.02,  0.04,  0.01)
    angle   (-25.812,  -9.459,   7.399)  (-25.810,  -9.459,   7.400)  ( 0.01,  0.01,  0.02)
    torsion (  0.561,  -1.856,  -6.034)  (  0.561,  -1.856,  -6.034)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 26.533,  13.695, -17.217)  ( 26.534,  13.695, -17.217)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (  4.847,  13.944,  39.054)  (  4.853,  13.947,  39.064)  ( 0.12,  0.02,  0.03)
    bond    ( 21.570,   8.503,  35.884)  ( 21.574,   8.504,  35.894)  ( 0.02,  0.00,  0.03)
    angle   ( -3.597, -26.186,   8.363)  ( -3.595, -26.184,   8.364)  ( 0.04,  0.01,  0.01)
    torsion ( -2.608,   2.873,   0.887)  ( -2.608,   2.873,   0.887)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.518,  28.753,  -6.080)  (-10.518,  28.754,  -6.080)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       ( 72.340,  -0.057, -14.961)  ( 72.346,  -0.050, -14.949)  ( 0.01,  0.04,  0.08)
    bond    (  1.977,  20.116, -45.686)  (  1.977,  20.119, -45.674)  ( 0.01,  0.01,  0.03)
    angle   ( 13.335,  29.954,  13.772)  ( 13.339,  29.956,  13.772)  ( 0.03,  0.01,  0.00)
    torsion (  2.619,   9.092,   4.119)  (  2.620,   9.093,   4.119)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 54.409, -59.219,  12.834)  ( 54.410, -59.218,  12.834)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       ( 42.287,  21.119,  39.745)  ( 42.292,  21.128,  39.754)  ( 0.01,  0.04,  0.02)
    bond    ( -2.040,  32.043,  31.725)  ( -2.040,  32.050,  31.732)  ( 0.01,  0.02,  0.02)
    angle   ( 34.132,  14.155, -12.104)  ( 34.136,  14.156, -12.103)  ( 0.01,  0.01,  0.01)
    torsion ( -0.882,  -8.652,   8.681)  ( -0.882,  -8.651,   8.681)  ( 0.02,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.077, -16.427,  11.443)  ( 11.078, -16.426,  11.443)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( 20.965, -16.540,  38.085)  ( 20.970, -16.534,  38.096)  ( 0.02,  0.04,  0.03)
    bond    ( -1.456, -14.668,  26.526)  ( -1.456, -14.665,  26.536)  ( 0.01,  0.02,  0.04)
    angle   ( -7.279,  -1.303,  -1.119)  ( -7.276,  -1.301,  -1.118)  ( 0.04,  0.13,  0.05)
    torsion ( 12.012,  -6.112,  -2.718)  ( 12.012,  -6.111,  -2.718)  ( 0.00,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.689,   5.542,  15.396)  ( 17.690,   5.543,  15.396)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( -9.597, -10.453, -51.689)  ( -9.593, -10.445, -51.680)  ( 0.05,  0.08,  0.02)
    bond    (  1.529, -22.811, -24.383)  (  1.529, -22.804, -24.376)  ( 0.01,  0.03,  0.03)
    angle   (  2.711,   3.622,  -3.220)  (  2.714,   3.623,  -3.219)  ( 0.12,  0.03,  0.03)
    torsion (-11.027,  11.386, -11.344)  (-11.027,  11.386, -11.344)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.810,  -2.650, -12.741)  ( -2.809,  -2.649, -12.741)  ( 0.04,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       (  7.953,  -8.678, -82.470)  (  7.957,  -8.670, -82.458)  ( 0.04,  0.10,  0.01)
    bond    (  0.583,  21.754, -28.028)  (  0.582,  21.759, -28.020)  ( 0.01,  0.02,  0.03)
    angle   ( -6.113,  -6.750,  -5.368)  ( -6.110,  -6.748,  -5.367)  ( 0.05,  0.03,  0.03)
    torsion ( 11.584,  -9.359,  -7.027)  ( 11.585,  -9.359,  -7.027)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.899, -14.323, -42.046)  (  1.899, -14.323, -42.045)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       ( 15.787, -54.589,  11.267)  ( 15.791, -54.581,  11.276)  ( 0.03,  0.01,  0.08)
    bond    ( -2.380, -21.430,  23.359)  ( -2.380, -21.424,  23.366)  ( 0.00,  0.03,  0.03)
    angle   ( -0.504,   6.676,   6.070)  ( -0.501,   6.677,   6.071)  ( 0.16,  0.02,  0.02)
    torsion ( 20.490, -19.643, -15.922)  ( 20.490, -19.642, -15.922)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.819, -20.193,  -2.239)  ( -1.818, -20.192,  -2.239)  ( 0.05,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (-21.216,  -1.249, -45.413)  (-21.211,  -1.244, -45.402)  ( 0.02,  0.41,  0.02)
    bond    ( -2.300, -15.456, -26.859)  ( -2.300, -15.452, -26.849)  ( 0.00,  0.02,  0.04)
    angle   ( 19.809,  -0.678,  -1.308)  ( 19.812,  -0.677,  -1.307)  ( 0.02,  0.11,  0.04)
    torsion (-15.240,  28.309, -14.988)  (-15.239,  28.309, -14.987)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-23.486, -13.424,  -2.259)  (-23.484, -13.424,  -2.259)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       (-36.031,  29.276, -84.256)  (-36.027,  29.288, -84.251)  ( 0.01,  0.04,  0.01)
    bond    ( -2.350,  35.403, -10.280)  ( -2.350,  35.416, -10.279)  ( 0.00,  0.04,  0.01)
    angle   ( -5.044,  -7.513, -24.736)  ( -5.041,  -7.513, -24.732)  ( 0.06,  0.00,  0.01)
    torsion (-15.969, -16.076, -51.740)  (-15.969, -16.077, -51.740)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-12.668,  17.462,   2.500)  (-12.667,  17.462,   2.500)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (-14.759, -63.089, -11.486)  (-14.755, -63.078, -11.482)  ( 0.03,  0.02,  0.04)
    bond    (  9.749, -31.825,  15.219)  (  9.750, -31.815,  15.221)  ( 0.01,  0.03,  0.01)
    angle   ( -8.368,   5.785,  17.449)  ( -8.365,   5.785,  17.451)  ( 0.03,  0.01,  0.01)
    torsion (-15.181, -21.195, -34.574)  (-15.181, -21.194, -34.575)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.960, -15.855,  -9.579)  ( -0.960, -15.854,  -9.579)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       (-27.932,  30.243, -47.722)  (-27.927,  30.247, -47.710)  ( 0.02,  0.01,  0.03)
    bond    (-13.150,  -6.799, -35.271)  (-13.148,  -6.799, -35.260)  ( 0.01,  0.00,  0.03)
    angle   (-17.350,  11.540,   4.243)  (-17.348,  11.542,   4.243)  ( 0.01,  0.02,  0.01)
    torsion ( -4.815,  38.873,  -5.700)  ( -4.815,  38.873,  -5.700)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.383, -13.370, -10.993)  (  7.384, -13.369, -10.993)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       ( 12.124,  97.022, -25.557)  ( 12.124,  97.044, -25.552)  ( 0.00,  0.02,  0.02)
    bond    (  8.251,  84.539, -22.501)  (  8.251,  84.561, -22.500)  ( 0.00,  0.03,  0.00)
    angle   (  2.080, -11.564, -42.703)  (  2.079, -11.564, -42.699)  ( 0.00,  0.00,  0.01)
    torsion (  0.474,  -0.037,   0.033)  (  0.474,  -0.037,   0.033)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.319,  24.085,  39.613)  (  1.319,  24.085,  39.614)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
65       (-284.601,  11.002, 334.246)  (-284.570,  11.001, 334.257)  ( 0.01,  0.00,  0.00)
    bond    (  9.512,   1.540,  -0.214)  (  9.534,   1.541,  -0.214)  ( 0.24,  0.04,  0.00)
    angle   ( -0.335,   0.694,  -9.928)  ( -0.335,   0.694,  -9.924)  ( 0.00,  0.00,  0.04)
    torsion ( -0.025,   0.154,   0.012)  ( -0.025,   0.154,   0.012)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-293.753,   8.613, 344.376)  (-293.745,   8.613, 344.383)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 7 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 8 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/bipyrrole.gpr
 # Expected       654.81365, found 654.813648&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (440.698, 267.390, 110.759)  (440.751, 267.428, 110.795)  ( 0.01,  0.01,  0.03)
    bond    ( -1.833,  -0.557,  -0.639)  ( -1.799,  -0.537,  -0.631)  ( 1.87,  1.12,  0.49)
    angle   (429.436, 223.964, 184.758)  (429.455, 223.979, 184.766)  ( 0.00,  0.01,  0.00)
    torsion ( 12.278,  42.204, -69.671)  ( 12.279,  42.210, -69.655)  ( 0.00,  0.01,  0.02)
    oop     (  0.666,   2.233,  -3.691)  (  0.665,   2.230,  -3.686)  ( 0.05,  0.10,  0.13)
    vdw     (  0.152,  -0.454,   0.002)  (  0.152,  -0.454,   0.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-348.171,  -0.738,  87.717)  (-348.126,  -0.698,  87.743)  ( 0.01,  3.01,  0.03)
    bond    (  2.768,   2.470,   2.169)  (  2.795,   2.489,   2.176)  ( 0.97,  0.79,  0.33)
    angle   (-328.981,  53.614,  -1.521)  (-328.964,  53.628,  -1.516)  ( 0.01,  0.03,  0.32)
    torsion (-18.738, -51.579,  86.865)  (-18.737, -51.574,  86.881)  ( 0.00,  0.01,  0.02)
    oop     ( -0.643,  -1.871,   3.129)  ( -0.642,  -1.869,   3.128)  ( 0.03,  0.09,  0.06)
    vdw     ( -2.578,  -3.373,  -2.925)  ( -2.577,  -3.373,  -2.925)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (100.968, 106.828, -67.634)  (101.010, 106.868, -67.604)  ( 0.04,  0.04,  0.05)
    bond    (  4.664,  -1.988,  -0.584)  (  4.689,  -1.967,  -0.575)  ( 0.53,  1.05,  0.52)
    angle   ( 77.381,  39.287,  43.889)  ( 77.398,  39.302,  43.897)  ( 0.02,  0.04,  0.02)
    torsion ( 23.917,  67.645, -110.408)  ( 23.918,  67.650, -110.396)  ( 0.00,  0.01,  0.01)
    oop     (  0.405,   1.150,  -1.877)  (  0.405,   1.150,  -1.875)  ( 0.01,  0.05,  0.09)
    vdw     ( -5.400,   0.733,   1.346)  ( -5.400,   0.733,   1.346)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-334.790,   5.134, -97.805)  (-334.732,   5.181, -97.772)  ( 0.02,  0.91,  0.03)
    bond    (  9.694,   0.197,   1.892)  (  9.728,   0.218,   1.902)  ( 0.34,  0.41,  0.51)
    angle   (-341.156, -13.554, -19.943)  (-341.132, -13.535, -19.937)  ( 0.01,  0.14,  0.03)
    torsion (  5.825,  17.750, -74.597)  (  5.826,  17.757, -74.582)  ( 0.01,  0.04,  0.02)
    oop     (  0.187,   0.512,  -1.976)  (  0.186,   0.511,  -1.973)  ( 0.00,  0.02,  0.16)
    vdw     ( -9.340,   0.229,  -3.180)  ( -9.339,   0.229,  -3.180)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-97.520, -548.013, -124.169)  (-97.466, -547.954, -124.138)  ( 0.06,  0.01,  0.03)
    bond    (  5.906,  -1.531,   0.403)  (  5.943,  -1.502,   0.415)  ( 0.63,  1.85,  0.49)
    angle   (-68.136, -453.940, -273.757)  (-68.121, -453.919, -273.749)  ( 0.02,  0.00,  0.00)
    torsion (-28.510, -93.641, 147.850)  (-28.509, -93.635, 147.866)  ( 0.00,  0.01,  0.01)
    oop     ( -0.683,  -2.271,   3.669)  ( -0.682,  -2.268,   3.665)  ( 0.07,  0.15,  0.12)
    vdw     ( -6.097,   3.370,  -2.335)  ( -6.097,   3.371,  -2.335)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (355.019,  25.545, 211.607)  (355.079,  25.594, 211.598)  ( 0.02,  0.19,  0.00)
    bond    (-10.131,  -0.808,   0.668)  (-10.097,  -0.779,   0.668)  ( 0.34,  2.32,  0.03)
    angle   (354.311,  -0.835,  63.755)  (354.334,  -0.813,  63.757)  ( 0.01,  1.86,  0.00)
    torsion (  0.764,  25.463, 141.630)  (  0.765,  25.465, 141.650)  ( 0.02,  0.01,  0.01)
    oop     ( -0.150,   0.547,   6.594)  ( -0.148,   0.543,   6.562)  ( 0.02,  0.20,  0.47)
    vdw     ( 10.225,   1.178,  -1.039)  ( 10.225,   1.178,  -1.039)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (108.440, 522.614, -258.006)  (108.493, 522.693, -257.894)  ( 0.05,  0.02,  0.04)
    bond    ( -5.496,   0.840,  -0.583)  ( -5.457,   0.878,  -0.582)  ( 0.70,  3.22,  0.04)
    angle   (104.545, 556.196, -61.741)  (104.560, 556.224, -61.740)  ( 0.01,  0.01,  0.00)
    torsion (  2.400, -30.742, -183.519)  (  2.401, -30.741, -183.498)  ( 0.01,  0.00,  0.01)
    oop     (  0.033,  -1.277,  -9.904)  (  0.032,  -1.265,  -9.816)  ( 0.00,  0.95,  0.89)
    vdw     (  6.957,  -2.403,  -2.258)  (  6.957,  -2.403,  -2.258)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-463.302, -266.995, 121.456)  (-463.249, -266.951, 121.457)  ( 0.01,  0.02,  0.00)
    bond    (  1.436,   0.669,  -0.084)  (  1.470,   0.696,  -0.084)  ( 2.43,  1.81,  0.00)
    angle   (-466.753, -275.083,  37.296)  (-466.734, -275.063,  37.299)  ( 0.00,  0.01,  0.01)
    torsion (  2.083,   6.673,  80.649)  (  2.083,   6.673,  80.671)  ( 0.00,  0.00,  0.03)
    oop     (  0.128,   0.337,   3.437)  (  0.127,   0.334,   3.414)  ( 0.01,  0.09,  0.68)
    vdw     ( -0.195,   0.410,   0.157)  ( -0.195,   0.410,   0.157)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (341.146, -56.121,  70.706)  (341.191, -56.077,  70.726)  ( 0.01,  0.08,  0.03)
    bond    ( -2.872,  -3.159,   0.473)  ( -2.844,  -3.133,   0.474)  ( 0.96,  0.82,  0.01)
    angle   (338.374, -63.740,   5.454)  (338.392, -63.723,   5.455)  ( 0.01,  0.03,  0.02)
    torsion (  2.401,   6.602,  63.163)  (  2.401,   6.602,  63.184)  ( 0.00,  0.00,  0.03)
    oop     (  0.090,   0.271,   2.597)  (  0.090,   0.271,   2.596)  ( 0.00,  0.01,  0.06)
    vdw     (  3.153,   3.905,  -0.983)  (  3.153,   3.905,  -0.983)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-107.103, -61.599, -128.254)  (-107.060, -61.550, -128.232)  ( 0.04,  0.08,  0.02)
    bond    ( -4.647,   1.930,  -0.560)  ( -4.622,   1.958,  -0.559)  ( 0.55,  1.48,  0.03)
    angle   (-101.269, -46.158,   7.046)  (-101.252, -46.138,   7.048)  ( 0.02,  0.04,  0.03)
    torsion ( -6.022, -15.499, -132.273)  ( -6.022, -15.498, -132.259)  ( 0.00,  0.00,  0.01)
    oop     ( -0.077,  -0.470,  -4.290)  ( -0.077,  -0.470,  -4.284)  ( 0.00,  0.03,  0.14)
    vdw     (  4.912,  -1.402,   1.822)  (  4.913,  -1.402,   1.822)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-150.997, -148.714,  -2.963)  (-150.971, -148.684,  -2.940)  ( 0.02,  0.02,  0.79)
    bond    (  0.883,   8.752,  -1.624)  (  0.901,   8.774,  -1.606)  ( 1.55,  0.24,  1.12)
    angle   (-164.427, -143.070,  -1.605)  (-164.417, -143.061,  -1.599)  ( 0.01,  0.01,  0.35)
    torsion ( 10.920,  -5.505,  -3.117)  ( 10.918,  -5.505,  -3.116)  ( 0.01,  0.01,  0.03)
    oop     (  0.013,   0.092,   0.954)  (  0.013,   0.092,   0.953)  ( 0.00,  0.00,  0.11)
    vdw     (  1.614,  -8.984,   2.429)  (  1.614,  -8.984,   2.429)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       ( 12.893, -23.106, -39.514)  ( 12.905, -23.099, -39.508)  ( 0.10,  0.03,  0.02)
    bond    ( -0.858,  -0.484,   0.045)  ( -0.847,  -0.480,   0.045)  ( 0.97,  0.18,  0.00)
    angle   ( 10.937, -18.907,   4.151)  ( 10.938, -18.903,   4.151)  ( 0.01,  0.02,  0.01)
    torsion ( -0.709,  -2.781, -43.150)  ( -0.709,  -2.781, -43.144)  ( 0.00,  0.00,  0.01)
    oop     ( -0.009,  -0.053,  -0.741)  ( -0.009,  -0.053,  -0.740)  ( 0.00,  0.00,  0.03)
    vdw     (  3.531,  -0.882,   0.180)  (  3.531,  -0.882,   0.180)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-39.415, -42.171,  -7.291)  (-39.405, -42.161,  -7.285)  ( 0.03,  0.02,  0.09)
    bond    ( -2.120,   1.944,  -0.158)  ( -2.112,   1.950,  -0.158)  ( 0.38,  0.35,  0.00)
    angle   (-39.829, -42.529,   7.446)  (-39.827, -42.527,   7.446)  ( 0.00,  0.01,  0.00)
    torsion ( -0.309,  -1.427, -13.490)  ( -0.309,  -1.427, -13.484)  ( 0.00,  0.01,  0.04)
    oop     ( -0.021,  -0.100,  -0.952)  ( -0.021,  -0.100,  -0.951)  ( 0.00,  0.00,  0.08)
    vdw     (  2.865,  -0.058,  -0.137)  (  2.865,  -0.058,  -0.137)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (165.755, 124.756,  92.190)  (165.783, 124.787,  92.218)  ( 0.02,  0.02,  0.03)
    bond    ( -0.427,  -7.502,  -4.745)  ( -0.410,  -7.481,  -4.726)  ( 0.73,  0.28,  0.40)
    angle   (170.551, 129.750,  83.170)  (170.562, 129.758,  83.176)  ( 0.01,  0.01,  0.01)
    torsion ( -1.753,  -4.467,   7.534)  ( -1.753,  -4.466,   7.537)  ( 0.01,  0.02,  0.03)
    oop     ( -0.107,  -0.320,   0.527)  ( -0.107,  -0.320,   0.527)  ( 0.00,  0.01,  0.01)
    vdw     ( -2.509,   7.296,   5.704)  ( -2.508,   7.296,   5.704)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-12.663,  12.667,  10.740)  (-12.651,  12.674,  10.746)  ( 0.10,  0.06,  0.06)
    bond    (  0.886,   0.415,   0.424)  (  0.896,   0.417,   0.427)  ( 0.92,  0.09,  0.10)
    angle   ( -8.951,  16.457,   2.708)  ( -8.949,  16.459,   2.708)  ( 0.02,  0.02,  0.01)
    torsion ( -1.208,  -4.254,   6.691)  ( -1.207,  -4.253,   6.695)  ( 0.01,  0.04,  0.07)
    oop     ( -0.196,  -0.624,   1.022)  ( -0.196,  -0.623,   1.021)  ( 0.00,  0.04,  0.10)
    vdw     ( -3.195,   0.674,  -0.104)  ( -3.195,   0.674,  -0.104)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 36.532,  35.271,  24.835)  ( 36.543,  35.279,  24.842)  ( 0.03,  0.02,  0.03)
    bond    (  2.020,  -1.650,  -0.589)  (  2.029,  -1.644,  -0.588)  ( 0.43,  0.34,  0.04)
    angle   ( 36.284,  33.855,  30.515)  ( 36.285,  33.857,  30.516)  ( 0.00,  0.01,  0.00)
    torsion (  0.868,   2.390,  -3.694)  (  0.868,   2.391,  -3.690)  ( 0.01,  0.06,  0.11)
    oop     (  0.170,   0.510,  -0.839)  (  0.170,   0.510,  -0.839)  ( 0.00,  0.02,  0.06)
    vdw     ( -2.810,   0.165,  -0.558)  ( -2.810,   0.166,  -0.558)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 98.894,  17.016,  -7.871)  ( 98.900,  17.033,  -7.859)  ( 0.01,  0.10,  0.15)
    bond    ( -0.553,   4.541,   2.614)  ( -0.553,   4.557,   2.619)  ( 0.01,  0.36,  0.21)
    angle   ( 97.460,  -0.197,  20.921)  ( 97.466,  -0.197,  20.921)  ( 0.01,  0.00,  0.00)
    torsion (  5.269,  15.175, -25.296)  (  5.270,  15.177, -25.292)  ( 0.00,  0.01,  0.02)
    oop     (  0.230,   0.713,  -1.192)  (  0.230,   0.712,  -1.190)  ( 0.01,  0.08,  0.16)
    vdw     ( -3.512,  -3.215,  -4.917)  ( -3.512,  -3.215,  -4.917)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-109.955,  15.289, 118.078)  (-109.948,  15.304, 118.048)  ( 0.01,  0.10,  0.02)
    bond    (  0.210,  -4.745,   0.834)  (  0.210,  -4.724,   0.834)  ( 0.00,  0.45,  0.06)
    angle   (-112.760,  -5.727,  -4.035)  (-112.754,  -5.727,  -4.036)  ( 0.00,  0.00,  0.00)
    torsion ( -1.467,  21.186, 120.314)  ( -1.467,  21.186, 120.320)  ( 0.01,  0.00,  0.00)
    oop     ( -0.035,   0.621,   3.525)  ( -0.034,   0.615,   3.489)  ( 0.00,  0.39,  1.00)
    vdw     (  4.097,   3.955,  -2.560)  (  4.097,   3.955,  -2.560)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-84.560, -41.338, -50.114)  (-84.552, -41.332, -50.109)  ( 0.01,  0.02,  0.01)
    bond    ( -0.306,   0.292,   0.237)  ( -0.301,   0.298,   0.240)  ( 0.16,  0.15,  0.08)
    angle   (-85.523, -59.980, -32.671)  (-85.521, -59.980, -32.670)  ( 0.00,  0.00,  0.00)
    torsion ( -1.338,  15.260, -20.588)  ( -1.338,  15.260, -20.588)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.607,   3.090,   2.908)  (  2.607,   3.090,   2.908)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-26.973, -56.612,  -2.148)  (-26.967, -56.608,  -2.140)  ( 0.02,  0.01,  0.37)
    bond    ( -1.957,   0.921,  -2.164)  ( -1.952,   0.923,  -2.157)  ( 0.29,  0.12,  0.32)
    angle   ( -7.198, -57.641, -18.148)  ( -7.197, -57.639, -18.148)  ( 0.01,  0.00,  0.00)
    torsion (-18.345,  -1.997,  15.745)  (-18.345,  -1.997,  15.745)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.527,   2.104,   2.420)  (  0.527,   2.104,   2.420)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( 11.314, -48.945, -41.506)  ( 11.320, -48.938, -41.500)  ( 0.05,  0.01,  0.02)
    bond    ( -1.164,  -1.398,   1.214)  ( -1.160,  -1.393,   1.218)  ( 0.34,  0.40,  0.36)
    angle   ( -6.180, -36.848, -48.004)  ( -6.178, -36.847, -48.002)  ( 0.02,  0.00,  0.00)
    torsion ( 19.921, -12.925,   4.198)  ( 19.921, -12.925,   4.198)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.263,   2.227,   1.086)  ( -1.263,   2.227,   1.086)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( -0.203,  83.938,  -3.860)  ( -0.192,  83.941,  -3.857)  ( 0.23,  0.00,  0.10)
    bond    (  2.839,   0.011,  -1.453)  (  2.850,   0.011,  -1.450)  ( 0.39,  0.00,  0.20)
    angle   ( -1.363,  88.129,  -2.032)  ( -1.363,  88.132,  -2.031)  ( 0.03,  0.00,  0.07)
    torsion ( -1.193,   0.324,  -2.342)  ( -1.193,   0.324,  -2.343)  ( 0.01,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.486,  -4.526,   1.966)  ( -0.486,  -4.526,   1.966)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 28.368,  27.667, -17.442)  ( 28.370,  27.672, -17.430)  ( 0.01,  0.02,  0.07)
    bond    (  0.383,   0.838,   1.790)  (  0.383,   0.841,   1.801)  ( 0.02,  0.20,  0.61)
    angle   ( 31.263,  26.404, -18.985)  ( 31.265,  26.406, -18.984)  ( 0.01,  0.01,  0.00)
    torsion ( -2.678,   1.270,  -0.022)  ( -2.679,   1.269,  -0.022)  ( 0.02,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.599,  -0.845,  -0.224)  ( -0.599,  -0.845,  -0.224)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 74.969,  49.590,   0.087)  ( 74.974,  49.597,   0.092)  ( 0.01,  0.02,  0.04)
    bond    (  0.256,  -0.376,   0.294)  (  0.259,  -0.370,   0.298)  ( 0.08,  0.24,  0.12)
    angle   ( 81.752,  50.326,  -8.730)  ( 81.754,  50.327,  -8.729)  ( 0.00,  0.00,  0.01)
    torsion ( -4.380,   2.836,   7.322)  ( -4.381,   2.836,   7.322)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.659,  -3.197,   1.201)  ( -2.659,  -3.197,   1.201)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 8 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 9 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/buckyball.gpr
 # Expected     11107.29605, found 11107.296046&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (297.804,  97.543, -27.324)  (297.860,  97.588, -27.300)  ( 0.02,  0.05,  0.09)
    bond    (270.148,  57.230, -74.029)  (270.176,  57.253, -74.018)  ( 0.01,  0.04,  0.01)
    angle   ( -0.988,   0.324,  -0.159)  ( -0.969,   0.343,  -0.147)  ( 1.82,  0.61,  0.19)
    torsion ( -0.291,   0.285,   0.476)  ( -0.286,   0.290,   0.487)  ( 0.15,  0.15,  0.51)
    oop     ( -0.005,   0.008,   0.016)  ( -0.001,   0.003,   0.006)  ( 0.00,  0.00,  0.02)
    vdw     ( 28.939,  39.697,  46.371)  ( 28.940,  39.698,  46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( -0.054, 281.414, -143.333)  ( -0.000, 281.471, -143.295)  ( 0.29,  0.02,  0.03)
    bond    ( -0.026, 223.722, -177.596)  (  0.000, 223.752, -177.591)  ( 0.07,  0.01,  0.00)
    angle   ( -0.021,   0.274,  -0.657)  ( -0.000,   0.293,  -0.649)  ( 0.04,  0.54,  0.55)
    torsion ( -0.005,  -0.107,  -0.352)  (  0.000,  -0.104,  -0.338)  ( 0.00,  0.03,  0.48)
    oop     ( -0.000,  -0.006,  -0.013)  ( -0.000,  -0.003,  -0.003)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.002,  57.531,  35.285)  ( -0.000,  57.532,  35.285)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( -0.054, -281.521, -143.333)  ( -0.000, -281.471, -143.295)  ( 0.29,  0.02,  0.03)
    bond    ( -0.026, -223.783, -177.596)  (  0.000, -223.752, -177.591)  ( 0.07,  0.01,  0.00)
    angle   ( -0.021,  -0.313,  -0.657)  ( -0.000,  -0.293,  -0.649)  ( 0.04,  0.61,  0.55)
    torsion ( -0.005,   0.101,  -0.352)  ( -0.000,   0.104,  -0.338)  ( 0.00,  0.03,  0.48)
    oop     ( -0.000,   0.006,  -0.013)  (  0.000,   0.003,  -0.003)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.002, -57.533,  35.285)  ( -0.000, -57.532,  35.285)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (297.804, -97.642, -27.324)  (297.860, -97.588, -27.300)  ( 0.02,  0.06,  0.09)
    bond    (270.148, -57.277, -74.029)  (270.176, -57.253, -74.018)  ( 0.01,  0.04,  0.01)
    angle   ( -0.988,  -0.362,  -0.159)  ( -0.969,  -0.343,  -0.147)  ( 1.82,  0.68,  0.19)
    torsion ( -0.291,  -0.295,   0.476)  ( -0.286,  -0.290,   0.487)  ( 0.15,  0.16,  0.51)
    oop     ( -0.005,  -0.008,   0.016)  ( -0.001,  -0.003,   0.006)  ( 0.00,  0.00,  0.02)
    vdw     ( 28.939, -39.700,  46.371)  ( 28.940, -39.698,  46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-156.798, 187.174, -202.160)  (-156.760, 187.225, -202.115)  ( 0.02,  0.03,  0.02)
    bond    (-92.784, 168.051, -212.764)  (-92.764, 168.078, -212.748)  ( 0.02,  0.02,  0.01)
    angle   ( -0.088,   0.981,   0.142)  ( -0.073,   1.001,   0.156)  ( 0.14,  1.96,  0.19)
    torsion (  0.267,   0.221,  -0.320)  (  0.273,   0.226,  -0.310)  ( 0.16,  0.11,  0.32)
    oop     (  0.007,   0.003,  -0.009)  (  0.003,   0.001,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     (-64.201,  17.918,  10.792)  (-64.200,  17.919,  10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-156.798, -187.281, -202.160)  (-156.760, -187.225, -202.115)  ( 0.02,  0.03,  0.02)
    bond    (-92.784, -168.105, -212.764)  (-92.764, -168.078, -212.748)  ( 0.02,  0.02,  0.01)
    angle   ( -0.088,  -1.021,   0.142)  ( -0.073,  -1.001,   0.156)  ( 0.14,  1.96,  0.19)
    torsion (  0.267,  -0.231,  -0.320)  (  0.273,  -0.226,  -0.310)  ( 0.16,  0.12,  0.32)
    oop     (  0.007,  -0.003,  -0.009)  (  0.003,  -0.001,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     (-64.201, -17.920,  10.792)  (-64.200, -17.919,  10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-297.908,  97.543, -27.324)  (-297.860,  97.588, -27.300)  ( 0.02,  0.05,  0.09)
    bond    (-270.205,  57.230, -74.029)  (-270.176,  57.253, -74.018)  ( 0.01,  0.04,  0.01)
    angle   (  0.951,   0.324,  -0.159)  (  0.969,   0.343,  -0.147)  ( 1.75,  0.61,  0.19)
    torsion (  0.281,   0.285,   0.476)  (  0.286,   0.290,   0.487)  ( 0.14,  0.15,  0.51)
    oop     (  0.005,   0.008,   0.016)  (  0.001,   0.003,   0.006)  ( 0.00,  0.00,  0.02)
    vdw     (-28.940,  39.697,  46.371)  (-28.940,  39.698,  46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-297.908, -97.642, -27.324)  (-297.860, -97.588, -27.300)  ( 0.02,  0.06,  0.09)
    bond    (-270.205, -57.277, -74.029)  (-270.176, -57.253, -74.018)  ( 0.01,  0.04,  0.01)
    angle   (  0.951,  -0.362,  -0.159)  (  0.969,  -0.343,  -0.147)  ( 1.75,  0.68,  0.19)
    torsion (  0.281,  -0.295,   0.476)  (  0.286,  -0.290,   0.487)  ( 0.14,  0.16,  0.51)
    oop     (  0.005,  -0.008,   0.016)  (  0.001,  -0.003,   0.006)  ( 0.00,  0.00,  0.02)
    vdw     (-28.940, -39.700,  46.371)  (-28.940, -39.698,  46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (187.174, 202.079, 156.714)  (187.225, 202.115, 156.760)  ( 0.03,  0.02,  0.03)
    bond    (168.051, 212.732,  92.745)  (168.078, 212.748,  92.764)  ( 0.02,  0.01,  0.02)
    angle   (  0.981,  -0.169,   0.057)  (  1.001,  -0.156,   0.073)  ( 1.96,  0.23,  0.09)
    torsion (  0.221,   0.300,  -0.279)  (  0.226,   0.310,  -0.273)  ( 0.11,  0.30,  0.17)
    oop     (  0.003,   0.008,  -0.008)  (  0.001,   0.004,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.918, -10.793,  64.199)  ( 17.919, -10.792,  64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 27.257, 297.804,  97.543)  ( 27.300, 297.860,  97.588)  ( 0.16,  0.02,  0.05)
    bond    ( 74.008, 270.148,  57.230)  ( 74.018, 270.176,  57.253)  ( 0.01,  0.01,  0.04)
    angle   (  0.136,  -0.988,   0.324)  (  0.147,  -0.969,   0.343)  ( 0.16,  1.82,  0.61)
    torsion ( -0.498,  -0.291,   0.285)  ( -0.487,  -0.286,   0.290)  ( 0.53,  0.15,  0.15)
    oop     ( -0.016,  -0.005,   0.008)  ( -0.006,  -0.001,   0.003)  ( 0.02,  0.00,  0.00)
    vdw     (-46.373,  28.939,  39.697)  (-46.372,  28.940,  39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 27.257, -297.908,  97.543)  ( 27.300, -297.860,  97.588)  ( 0.16,  0.02,  0.05)
    bond    ( 74.008, -270.205,  57.230)  ( 74.018, -270.176,  57.253)  ( 0.01,  0.01,  0.04)
    angle   (  0.136,   0.951,   0.324)  (  0.147,   0.969,   0.343)  ( 0.16,  1.75,  0.61)
    torsion ( -0.498,   0.281,   0.285)  ( -0.487,   0.286,   0.290)  ( 0.53,  0.14,  0.15)
    oop     ( -0.016,   0.005,   0.008)  ( -0.006,   0.001,   0.003)  ( 0.02,  0.00,  0.00)
    vdw     (-46.373, -28.940,  39.697)  (-46.372, -28.940,  39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (187.174, -202.160, 156.714)  (187.225, -202.115, 156.760)  ( 0.03,  0.02,  0.03)
    bond    (168.051, -212.764,  92.745)  (168.078, -212.748,  92.764)  ( 0.02,  0.01,  0.02)
    angle   (  0.981,   0.142,   0.057)  (  1.001,   0.156,   0.073)  ( 1.96,  0.19,  0.09)
    torsion (  0.221,  -0.320,  -0.279)  (  0.226,  -0.310,  -0.273)  ( 0.11,  0.32,  0.17)
    oop     (  0.003,  -0.009,  -0.008)  (  0.001,  -0.004,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.918,  10.792,  64.199)  ( 17.919,  10.792,  64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (202.079, -156.798, -187.281)  (202.115, -156.760, -187.225)  ( 0.02,  0.02,  0.03)
    bond    (212.732, -92.784, -168.105)  (212.748, -92.764, -168.078)  ( 0.01,  0.02,  0.02)
    angle   ( -0.169,  -0.088,  -1.021)  ( -0.156,  -0.073,  -1.001)  ( 0.23,  0.14,  1.96)
    torsion (  0.300,   0.267,  -0.231)  (  0.310,   0.273,  -0.226)  ( 0.30,  0.16,  0.12)
    oop     (  0.008,   0.007,  -0.003)  (  0.004,   0.003,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (-10.793, -64.201, -17.920)  (-10.792, -64.200, -17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-97.642,  27.257, -297.908)  (-97.588,  27.300, -297.860)  ( 0.06,  0.16,  0.02)
    bond    (-57.277,  74.008, -270.205)  (-57.253,  74.018, -270.176)  ( 0.04,  0.01,  0.01)
    angle   ( -0.362,   0.136,   0.951)  ( -0.343,   0.147,   0.969)  ( 0.68,  0.16,  1.75)
    torsion ( -0.295,  -0.498,   0.281)  ( -0.290,  -0.487,   0.286)  ( 0.16,  0.53,  0.14)
    oop     ( -0.008,  -0.016,   0.005)  ( -0.003,  -0.006,   0.001)  ( 0.00,  0.02,  0.00)
    vdw     (-39.700, -46.373, -28.940)  (-39.698, -46.372, -28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (202.079, -156.798, 187.174)  (202.115, -156.760, 187.225)  ( 0.02,  0.02,  0.03)
    bond    (212.732, -92.784, 168.051)  (212.748, -92.764, 168.078)  ( 0.01,  0.02,  0.02)
    angle   ( -0.169,  -0.088,   0.981)  ( -0.156,  -0.073,   1.001)  ( 0.23,  0.14,  1.96)
    torsion (  0.300,   0.267,   0.221)  (  0.310,   0.273,   0.226)  ( 0.30,  0.16,  0.11)
    oop     (  0.008,   0.007,   0.003)  (  0.004,   0.003,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (-10.793, -64.201,  17.918)  (-10.792, -64.200,  17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-281.521, 143.277,  -0.054)  (-281.471, 143.295,   0.000)  ( 0.02,  0.01,  0.29)
    bond    (-223.783, 177.585,  -0.026)  (-223.752, 177.591,   0.000)  ( 0.01,  0.00,  0.07)
    angle   ( -0.313,   0.640,  -0.021)  ( -0.293,   0.649,   0.000)  ( 0.61,  0.54,  0.04)
    torsion (  0.101,   0.325,  -0.005)  (  0.104,   0.338,   0.000)  ( 0.03,  0.44,  0.00)
    oop     (  0.006,   0.012,  -0.000)  (  0.003,   0.003,  -0.000)  ( 0.00,  0.01,  0.00)
    vdw     (-57.533, -35.285,  -0.002)  (-57.532, -35.285,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (156.714, -187.281, -202.160)  (156.760, -187.225, -202.115)  ( 0.03,  0.03,  0.02)
    bond    ( 92.745, -168.105, -212.764)  ( 92.764, -168.078, -212.748)  ( 0.02,  0.02,  0.01)
    angle   (  0.057,  -1.021,   0.142)  (  0.073,  -1.001,   0.156)  ( 0.09,  1.96,  0.19)
    torsion ( -0.279,  -0.231,  -0.320)  ( -0.273,  -0.226,  -0.310)  ( 0.17,  0.12,  0.32)
    oop     ( -0.008,  -0.003,  -0.009)  ( -0.003,  -0.001,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( 64.199, -17.920,  10.792)  ( 64.200, -17.919,  10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-187.281, 202.079, 156.714)  (-187.225, 202.115, 156.760)  ( 0.03,  0.02,  0.03)
    bond    (-168.105, 212.732,  92.745)  (-168.078, 212.748,  92.764)  ( 0.02,  0.01,  0.02)
    angle   ( -1.021,  -0.169,   0.057)  ( -1.001,  -0.156,   0.073)  ( 1.96,  0.23,  0.09)
    torsion ( -0.231,   0.300,  -0.279)  ( -0.226,   0.310,  -0.273)  ( 0.12,  0.30,  0.17)
    oop     ( -0.003,   0.008,  -0.008)  ( -0.001,   0.004,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     (-17.920, -10.793,  64.199)  (-17.919, -10.792,  64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-97.642,  27.257, 297.804)  (-97.588,  27.300, 297.860)  ( 0.06,  0.16,  0.02)
    bond    (-57.277,  74.008, 270.148)  (-57.253,  74.018, 270.176)  ( 0.04,  0.01,  0.01)
    angle   ( -0.362,   0.136,  -0.988)  ( -0.343,   0.147,  -0.969)  ( 0.68,  0.16,  1.82)
    torsion ( -0.295,  -0.498,  -0.291)  ( -0.290,  -0.487,  -0.286)  ( 0.16,  0.53,  0.15)
    oop     ( -0.008,  -0.016,  -0.005)  ( -0.003,  -0.006,  -0.001)  ( 0.00,  0.02,  0.00)
    vdw     (-39.700, -46.373,  28.939)  (-39.698, -46.372,  28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( 97.543,  27.257, -297.908)  ( 97.588,  27.300, -297.860)  ( 0.05,  0.16,  0.02)
    bond    ( 57.230,  74.008, -270.205)  ( 57.253,  74.018, -270.176)  ( 0.04,  0.01,  0.01)
    angle   (  0.324,   0.136,   0.951)  (  0.343,   0.147,   0.969)  ( 0.61,  0.16,  1.75)
    torsion (  0.285,  -0.498,   0.281)  (  0.290,  -0.487,   0.286)  ( 0.15,  0.53,  0.14)
    oop     (  0.008,  -0.016,   0.005)  (  0.003,  -0.006,   0.001)  ( 0.00,  0.02,  0.00)
    vdw     ( 39.697, -46.373, -28.940)  ( 39.698, -46.372, -28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (156.714, 187.174, -202.160)  (156.760, 187.225, -202.115)  ( 0.03,  0.03,  0.02)
    bond    ( 92.745, 168.051, -212.764)  ( 92.764, 168.078, -212.748)  ( 0.02,  0.02,  0.01)
    angle   (  0.057,   0.981,   0.142)  (  0.073,   1.001,   0.156)  ( 0.09,  1.96,  0.19)
    torsion ( -0.279,   0.221,  -0.320)  ( -0.273,   0.226,  -0.310)  ( 0.17,  0.11,  0.32)
    oop     ( -0.008,   0.003,  -0.009)  ( -0.003,   0.001,  -0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( 64.199,  17.918,  10.792)  ( 64.200,  17.919,  10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (143.277,  -0.054, 281.414)  (143.295,   0.000, 281.471)  ( 0.01,  0.29,  0.02)
    bond    (177.585,  -0.026, 223.722)  (177.591,   0.000, 223.752)  ( 0.00,  0.07,  0.01)
    angle   (  0.640,  -0.021,   0.274)  (  0.649,  -0.000,   0.293)  ( 0.54,  0.04,  0.54)
    torsion (  0.325,  -0.005,  -0.107)  (  0.338,   0.000,  -0.104)  ( 0.44,  0.00,  0.03)
    oop     (  0.012,  -0.000,  -0.006)  (  0.003,   0.000,  -0.003)  ( 0.01,  0.00,  0.00)
    vdw     (-35.285,  -0.002,  57.531)  (-35.285,   0.000,  57.532)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (202.079, 156.714, -187.281)  (202.115, 156.760, -187.225)  ( 0.02,  0.03,  0.03)
    bond    (212.732,  92.745, -168.105)  (212.748,  92.764, -168.078)  ( 0.01,  0.02,  0.02)
    angle   ( -0.169,   0.057,  -1.021)  ( -0.156,   0.073,  -1.001)  ( 0.23,  0.09,  1.96)
    torsion (  0.300,  -0.279,  -0.231)  (  0.310,  -0.273,  -0.226)  ( 0.30,  0.17,  0.12)
    oop     (  0.008,  -0.008,  -0.003)  (  0.004,  -0.003,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (-10.793,  64.199, -17.920)  (-10.792,  64.200, -17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-27.324, -297.908,  97.543)  (-27.300, -297.860,  97.588)  ( 0.09,  0.02,  0.05)
    bond    (-74.029, -270.205,  57.230)  (-74.018, -270.176,  57.253)  ( 0.01,  0.01,  0.04)
    angle   ( -0.159,   0.951,   0.324)  ( -0.147,   0.969,   0.343)  ( 0.19,  1.75,  0.61)
    torsion (  0.476,   0.281,   0.285)  (  0.487,   0.286,   0.290)  ( 0.51,  0.14,  0.15)
    oop     (  0.016,   0.005,   0.008)  (  0.006,   0.001,   0.003)  ( 0.02,  0.00,  0.00)
    vdw     ( 46.371, -28.940,  39.697)  ( 46.372, -28.940,  39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-97.642, -27.324, -297.908)  (-97.588, -27.300, -297.860)  ( 0.06,  0.09,  0.02)
    bond    (-57.277, -74.029, -270.205)  (-57.253, -74.018, -270.176)  ( 0.04,  0.01,  0.01)
    angle   ( -0.362,  -0.159,   0.951)  ( -0.343,  -0.147,   0.969)  ( 0.68,  0.19,  1.75)
    torsion ( -0.295,   0.476,   0.281)  ( -0.290,   0.487,   0.286)  ( 0.16,  0.51,  0.14)
    oop     ( -0.008,   0.016,   0.005)  ( -0.003,   0.006,   0.001)  ( 0.00,  0.02,  0.00)
    vdw     (-39.700,  46.371, -28.940)  (-39.698,  46.372, -28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-187.281, -202.160, 156.714)  (-187.225, -202.115, 156.760)  ( 0.03,  0.02,  0.03)
    bond    (-168.105, -212.764,  92.745)  (-168.078, -212.748,  92.764)  ( 0.02,  0.01,  0.02)
    angle   ( -1.021,   0.142,   0.057)  ( -1.001,   0.156,   0.073)  ( 1.96,  0.19,  0.09)
    torsion ( -0.231,  -0.320,  -0.279)  ( -0.226,  -0.310,  -0.273)  ( 0.12,  0.32,  0.17)
    oop     ( -0.003,  -0.009,  -0.008)  ( -0.001,  -0.004,  -0.003)  ( 0.00,  0.00,  0.00)
    vdw     (-17.920,  10.792,  64.199)  (-17.919,  10.792,  64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (202.079, 156.714, 187.174)  (202.115, 156.760, 187.225)  ( 0.02,  0.03,  0.03)
    bond    (212.732,  92.745, 168.051)  (212.748,  92.764, 168.078)  ( 0.01,  0.02,  0.02)
    angle   ( -0.169,   0.057,   0.981)  ( -0.156,   0.073,   1.001)  ( 0.23,  0.09,  1.96)
    torsion (  0.300,  -0.279,   0.221)  (  0.310,  -0.273,   0.226)  ( 0.30,  0.17,  0.11)
    oop     (  0.008,  -0.008,   0.003)  (  0.004,  -0.003,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (-10.793,  64.199,  17.918)  (-10.792,  64.200,  17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-281.521, -143.333,  -0.054)  (-281.471, -143.295,   0.000)  ( 0.02,  0.03,  0.29)
    bond    (-223.783, -177.596,  -0.026)  (-223.752, -177.591,   0.000)  ( 0.01,  0.00,  0.07)
    angle   ( -0.313,  -0.657,  -0.021)  ( -0.293,  -0.649,   0.000)  ( 0.61,  0.55,  0.04)
    torsion (  0.101,  -0.352,  -0.005)  (  0.104,  -0.338,   0.000)  ( 0.03,  0.48,  0.00)
    oop     (  0.006,  -0.013,  -0.000)  (  0.003,  -0.003,  -0.000)  ( 0.00,  0.01,  0.00)
    vdw     (-57.533,  35.285,  -0.002)  (-57.532,  35.285,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 97.543, -27.324, -297.908)  ( 97.588, -27.300, -297.860)  ( 0.05,  0.09,  0.02)
    bond    ( 57.230, -74.029, -270.205)  ( 57.253, -74.018, -270.176)  ( 0.04,  0.01,  0.01)
    angle   (  0.324,  -0.159,   0.951)  (  0.343,  -0.147,   0.969)  ( 0.61,  0.19,  1.75)
    torsion (  0.285,   0.476,   0.281)  (  0.290,   0.487,   0.286)  ( 0.15,  0.51,  0.14)
    oop     (  0.008,   0.016,   0.005)  (  0.003,   0.006,   0.001)  ( 0.00,  0.02,  0.00)
    vdw     ( 39.697,  46.371, -28.940)  ( 39.698,  46.372, -28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (281.414, 143.277,  -0.054)  (281.471, 143.295,   0.000)  ( 0.02,  0.01,  0.29)
    bond    (223.722, 177.585,  -0.026)  (223.752, 177.591,   0.000)  ( 0.01,  0.00,  0.07)
    angle   (  0.274,   0.640,  -0.021)  (  0.293,   0.649,   0.000)  ( 0.54,  0.54,  0.04)
    torsion ( -0.107,   0.325,  -0.005)  ( -0.104,   0.338,   0.000)  ( 0.03,  0.44,  0.00)
    oop     ( -0.006,   0.012,  -0.000)  ( -0.003,   0.003,   0.000)  ( 0.00,  0.01,  0.00)
    vdw     ( 57.531, -35.285,  -0.002)  ( 57.532, -35.285,  -0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (143.277,  -0.054, -281.521)  (143.295,  -0.000, -281.471)  ( 0.01,  0.29,  0.02)
    bond    (177.585,  -0.026, -223.783)  (177.591,   0.000, -223.752)  ( 0.00,  0.07,  0.01)
    angle   (  0.640,  -0.021,  -0.313)  (  0.649,   0.000,  -0.293)  ( 0.54,  0.04,  0.61)
    torsion (  0.325,  -0.005,   0.101)  (  0.338,  -0.000,   0.104)  ( 0.44,  0.00,  0.03)
    oop     (  0.012,  -0.000,   0.006)  (  0.003,   0.000,   0.003)  ( 0.01,  0.00,  0.00)
    vdw     (-35.285,  -0.002, -57.533)  (-35.285,  -0.000, -57.532)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-27.324, 297.804,  97.543)  (-27.300, 297.860,  97.588)  ( 0.09,  0.02,  0.05)
    bond    (-74.029, 270.148,  57.230)  (-74.018, 270.176,  57.253)  ( 0.01,  0.01,  0.04)
    angle   ( -0.159,  -0.988,   0.324)  ( -0.147,  -0.969,   0.343)  ( 0.19,  1.82,  0.61)
    torsion (  0.476,  -0.291,   0.285)  (  0.487,  -0.286,   0.290)  ( 0.51,  0.15,  0.15)
    oop     (  0.016,  -0.005,   0.008)  (  0.006,  -0.001,   0.003)  ( 0.02,  0.00,  0.00)
    vdw     ( 46.371,  28.939,  39.697)  ( 46.372,  28.940,  39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (-97.642, -27.324, 297.804)  (-97.588, -27.300, 297.860)  ( 0.06,  0.09,  0.02)
    bond    (-57.277, -74.029, 270.148)  (-57.253, -74.018, 270.176)  ( 0.04,  0.01,  0.01)
    angle   ( -0.362,  -0.159,  -0.988)  ( -0.343,  -0.147,  -0.969)  ( 0.68,  0.19,  1.82)
    torsion ( -0.295,   0.476,  -0.291)  ( -0.290,   0.487,  -0.286)  ( 0.16,  0.51,  0.15)
    oop     ( -0.008,   0.016,  -0.005)  ( -0.003,   0.006,  -0.001)  ( 0.00,  0.02,  0.00)
    vdw     (-39.700,  46.371,  28.939)  (-39.698,  46.372,  28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (281.414, -143.333,  -0.054)  (281.471, -143.295,   0.000)  ( 0.02,  0.03,  0.29)
    bond    (223.722, -177.596,  -0.026)  (223.752, -177.591,   0.000)  ( 0.01,  0.00,  0.07)
    angle   (  0.274,  -0.657,  -0.021)  (  0.293,  -0.649,   0.000)  ( 0.54,  0.55,  0.04)
    torsion ( -0.107,  -0.352,  -0.005)  ( -0.104,  -0.338,   0.000)  ( 0.03,  0.48,  0.00)
    oop     ( -0.006,  -0.013,  -0.000)  ( -0.003,  -0.003,   0.000)  ( 0.00,  0.01,  0.00)
    vdw     ( 57.531,  35.285,  -0.002)  ( 57.532,  35.285,   0.000)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-202.160, 156.714, -187.281)  (-202.115, 156.760, -187.225)  ( 0.02,  0.03,  0.03)
    bond    (-212.764,  92.745, -168.105)  (-212.748,  92.764, -168.078)  ( 0.01,  0.02,  0.02)
    angle   (  0.142,   0.057,  -1.021)  (  0.156,   0.073,  -1.001)  ( 0.19,  0.09,  1.96)
    torsion ( -0.320,  -0.279,  -0.231)  ( -0.310,  -0.273,  -0.226)  ( 0.32,  0.17,  0.12)
    oop     ( -0.009,  -0.008,  -0.003)  ( -0.004,  -0.003,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.792,  64.199, -17.920)  ( 10.792,  64.200, -17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (-202.160, 156.714, 187.174)  (-202.115, 156.760, 187.225)  ( 0.02,  0.03,  0.03)
    bond    (-212.764,  92.745, 168.051)  (-212.748,  92.764, 168.078)  ( 0.01,  0.02,  0.02)
    angle   (  0.142,   0.057,   0.981)  (  0.156,   0.073,   1.001)  ( 0.19,  0.09,  1.96)
    torsion ( -0.320,  -0.279,   0.221)  ( -0.310,  -0.273,   0.226)  ( 0.32,  0.17,  0.11)
    oop     ( -0.009,  -0.008,   0.003)  ( -0.004,  -0.003,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.792,  64.199,  17.918)  ( 10.792,  64.200,  17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (-143.333,  -0.054, 281.414)  (-143.295,   0.000, 281.471)  ( 0.03,  0.29,  0.02)
    bond    (-177.596,  -0.026, 223.722)  (-177.591,   0.000, 223.752)  ( 0.00,  0.07,  0.01)
    angle   ( -0.657,  -0.021,   0.274)  ( -0.649,   0.000,   0.293)  ( 0.55,  0.04,  0.54)
    torsion ( -0.352,  -0.005,  -0.107)  ( -0.338,   0.000,  -0.104)  ( 0.48,  0.00,  0.03)
    oop     ( -0.013,  -0.000,  -0.006)  ( -0.003,  -0.000,  -0.003)  ( 0.01,  0.00,  0.00)
    vdw     ( 35.285,  -0.002,  57.531)  ( 35.285,   0.000,  57.532)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (-202.160, -156.798, -187.281)  (-202.115, -156.760, -187.225)  ( 0.02,  0.02,  0.03)
    bond    (-212.764, -92.784, -168.105)  (-212.748, -92.764, -168.078)  ( 0.01,  0.02,  0.02)
    angle   (  0.142,  -0.088,  -1.021)  (  0.156,  -0.073,  -1.001)  ( 0.19,  0.14,  1.96)
    torsion ( -0.320,   0.267,  -0.231)  ( -0.310,   0.273,  -0.226)  ( 0.32,  0.16,  0.12)
    oop     ( -0.009,   0.007,  -0.003)  ( -0.004,   0.003,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.792, -64.201, -17.920)  ( 10.792, -64.200, -17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-202.160, -156.798, 187.174)  (-202.115, -156.760, 187.225)  ( 0.02,  0.02,  0.03)
    bond    (-212.764, -92.784, 168.051)  (-212.748, -92.764, 168.078)  ( 0.01,  0.02,  0.02)
    angle   (  0.142,  -0.088,   0.981)  (  0.156,  -0.073,   1.001)  ( 0.19,  0.14,  1.96)
    torsion ( -0.320,   0.267,   0.221)  ( -0.310,   0.273,   0.226)  ( 0.32,  0.16,  0.11)
    oop     ( -0.009,   0.007,   0.003)  ( -0.004,   0.003,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.792, -64.201,  17.918)  ( 10.792, -64.200,  17.919)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       ( 97.543, -27.324, 297.804)  ( 97.588, -27.300, 297.860)  ( 0.05,  0.09,  0.02)
    bond    ( 57.230, -74.029, 270.148)  ( 57.253, -74.018, 270.176)  ( 0.04,  0.01,  0.01)
    angle   (  0.324,  -0.159,  -0.988)  (  0.343,  -0.147,  -0.969)  ( 0.61,  0.19,  1.82)
    torsion (  0.285,   0.476,  -0.291)  (  0.290,   0.487,  -0.286)  ( 0.15,  0.51,  0.15)
    oop     (  0.008,   0.016,  -0.005)  (  0.003,   0.006,  -0.001)  ( 0.00,  0.02,  0.00)
    vdw     ( 39.697,  46.371,  28.939)  ( 39.698,  46.372,  28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (-187.281, -202.160, -156.798)  (-187.225, -202.115, -156.760)  ( 0.03,  0.02,  0.02)
    bond    (-168.105, -212.764, -92.784)  (-168.078, -212.748, -92.764)  ( 0.02,  0.01,  0.02)
    angle   ( -1.021,   0.142,  -0.088)  ( -1.001,   0.156,  -0.073)  ( 1.96,  0.19,  0.14)
    torsion ( -0.231,  -0.320,   0.267)  ( -0.226,  -0.310,   0.273)  ( 0.12,  0.32,  0.16)
    oop     ( -0.003,  -0.009,   0.007)  ( -0.001,  -0.004,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     (-17.920,  10.792, -64.201)  (-17.919,  10.792, -64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (-297.908,  97.543,  27.257)  (-297.860,  97.588,  27.300)  ( 0.02,  0.05,  0.16)
    bond    (-270.205,  57.230,  74.008)  (-270.176,  57.253,  74.018)  ( 0.01,  0.04,  0.01)
    angle   (  0.951,   0.324,   0.136)  (  0.969,   0.343,   0.147)  ( 1.75,  0.61,  0.16)
    torsion (  0.281,   0.285,  -0.498)  (  0.286,   0.290,  -0.487)  ( 0.14,  0.15,  0.53)
    oop     (  0.005,   0.008,  -0.016)  (  0.001,   0.003,  -0.006)  ( 0.00,  0.00,  0.02)
    vdw     (-28.940,  39.697, -46.373)  (-28.940,  39.698, -46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (187.174, -202.160, -156.798)  (187.225, -202.115, -156.760)  ( 0.03,  0.02,  0.02)
    bond    (168.051, -212.764, -92.784)  (168.078, -212.748, -92.764)  ( 0.02,  0.01,  0.02)
    angle   (  0.981,   0.142,  -0.088)  (  1.001,   0.156,  -0.073)  ( 1.96,  0.19,  0.14)
    torsion (  0.221,  -0.320,   0.267)  (  0.226,  -0.310,   0.273)  ( 0.11,  0.32,  0.16)
    oop     (  0.003,  -0.009,   0.007)  (  0.001,  -0.004,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.918,  10.792, -64.201)  ( 17.919,  10.792, -64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       ( 27.257, 297.804, -97.642)  ( 27.300, 297.860, -97.588)  ( 0.16,  0.02,  0.06)
    bond    ( 74.008, 270.148, -57.277)  ( 74.018, 270.176, -57.253)  ( 0.01,  0.01,  0.04)
    angle   (  0.136,  -0.988,  -0.362)  (  0.147,  -0.969,  -0.343)  ( 0.16,  1.82,  0.68)
    torsion ( -0.498,  -0.291,  -0.295)  ( -0.487,  -0.286,  -0.290)  ( 0.53,  0.15,  0.16)
    oop     ( -0.016,  -0.005,  -0.008)  ( -0.006,  -0.001,  -0.003)  ( 0.02,  0.00,  0.00)
    vdw     (-46.373,  28.939, -39.700)  (-46.372,  28.940, -39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       (-27.324, 297.804, -97.642)  (-27.300, 297.860, -97.588)  ( 0.09,  0.02,  0.06)
    bond    (-74.029, 270.148, -57.277)  (-74.018, 270.176, -57.253)  ( 0.01,  0.01,  0.04)
    angle   ( -0.159,  -0.988,  -0.362)  ( -0.147,  -0.969,  -0.343)  ( 0.19,  1.82,  0.68)
    torsion (  0.476,  -0.291,  -0.295)  (  0.487,  -0.286,  -0.290)  ( 0.51,  0.15,  0.16)
    oop     (  0.016,  -0.005,  -0.008)  (  0.006,  -0.001,  -0.003)  ( 0.02,  0.00,  0.00)
    vdw     ( 46.371,  28.939, -39.700)  ( 46.372,  28.940, -39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       ( 27.257, -297.908, -97.642)  ( 27.300, -297.860, -97.588)  ( 0.16,  0.02,  0.06)
    bond    ( 74.008, -270.205, -57.277)  ( 74.018, -270.176, -57.253)  ( 0.01,  0.01,  0.04)
    angle   (  0.136,   0.951,  -0.362)  (  0.147,   0.969,  -0.343)  ( 0.16,  1.75,  0.68)
    torsion ( -0.498,   0.281,  -0.295)  ( -0.487,   0.286,  -0.290)  ( 0.53,  0.14,  0.16)
    oop     ( -0.016,   0.005,  -0.008)  ( -0.006,   0.001,  -0.003)  ( 0.02,  0.00,  0.00)
    vdw     (-46.373, -28.940, -39.700)  (-46.372, -28.940, -39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       (-156.798, -187.281, 202.079)  (-156.760, -187.225, 202.115)  ( 0.02,  0.03,  0.02)
    bond    (-92.784, -168.105, 212.732)  (-92.764, -168.078, 212.748)  ( 0.02,  0.02,  0.01)
    angle   ( -0.088,  -1.021,  -0.169)  ( -0.073,  -1.001,  -0.156)  ( 0.14,  1.96,  0.23)
    torsion (  0.267,  -0.231,   0.300)  (  0.273,  -0.226,   0.310)  ( 0.16,  0.12,  0.30)
    oop     (  0.007,  -0.003,   0.008)  (  0.003,  -0.001,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     (-64.201, -17.920, -10.793)  (-64.200, -17.919, -10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (-143.333,  -0.054, -281.521)  (-143.295,   0.000, -281.471)  ( 0.03,  0.29,  0.02)
    bond    (-177.596,  -0.026, -223.783)  (-177.591,   0.000, -223.752)  ( 0.00,  0.07,  0.01)
    angle   ( -0.657,  -0.021,  -0.313)  ( -0.649,   0.000,  -0.293)  ( 0.55,  0.04,  0.61)
    torsion ( -0.352,  -0.005,   0.101)  ( -0.338,   0.000,   0.104)  ( 0.48,  0.00,  0.03)
    oop     ( -0.013,  -0.000,   0.006)  ( -0.003,   0.000,   0.003)  ( 0.01,  0.00,  0.00)
    vdw     ( 35.285,  -0.002, -57.533)  ( 35.285,   0.000, -57.532)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 97.543,  27.257, 297.804)  ( 97.588,  27.300, 297.860)  ( 0.05,  0.16,  0.02)
    bond    ( 57.230,  74.008, 270.148)  ( 57.253,  74.018, 270.176)  ( 0.04,  0.01,  0.01)
    angle   (  0.324,   0.136,  -0.988)  (  0.343,   0.147,  -0.969)  ( 0.61,  0.16,  1.82)
    torsion (  0.285,  -0.498,  -0.291)  (  0.290,  -0.487,  -0.286)  ( 0.15,  0.53,  0.15)
    oop     (  0.008,  -0.016,  -0.005)  (  0.003,  -0.006,  -0.001)  ( 0.00,  0.02,  0.00)
    vdw     ( 39.697, -46.373,  28.939)  ( 39.698, -46.372,  28.940)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-187.281, 202.079, -156.798)  (-187.225, 202.115, -156.760)  ( 0.03,  0.02,  0.02)
    bond    (-168.105, 212.732, -92.784)  (-168.078, 212.748, -92.764)  ( 0.02,  0.01,  0.02)
    angle   ( -1.021,  -0.169,  -0.088)  ( -1.001,  -0.156,  -0.073)  ( 1.96,  0.23,  0.14)
    torsion ( -0.231,   0.300,   0.267)  ( -0.226,   0.310,   0.273)  ( 0.12,  0.30,  0.16)
    oop     ( -0.003,   0.008,   0.007)  ( -0.001,   0.004,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     (-17.920, -10.793, -64.201)  (-17.919, -10.792, -64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (-27.324, -297.908, -97.642)  (-27.300, -297.860, -97.588)  ( 0.09,  0.02,  0.06)
    bond    (-74.029, -270.205, -57.277)  (-74.018, -270.176, -57.253)  ( 0.01,  0.01,  0.04)
    angle   ( -0.159,   0.951,  -0.362)  ( -0.147,   0.969,  -0.343)  ( 0.19,  1.75,  0.68)
    torsion (  0.476,   0.281,  -0.295)  (  0.487,   0.286,  -0.290)  ( 0.51,  0.14,  0.16)
    oop     (  0.016,   0.005,  -0.008)  (  0.006,   0.001,  -0.003)  ( 0.02,  0.00,  0.00)
    vdw     ( 46.371, -28.940, -39.700)  ( 46.372, -28.940, -39.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (156.714, -187.281, 202.079)  (156.760, -187.225, 202.115)  ( 0.03,  0.03,  0.02)
    bond    ( 92.745, -168.105, 212.732)  ( 92.764, -168.078, 212.748)  ( 0.02,  0.02,  0.01)
    angle   (  0.057,  -1.021,  -0.169)  (  0.073,  -1.001,  -0.156)  ( 0.09,  1.96,  0.23)
    torsion ( -0.279,  -0.231,   0.300)  ( -0.273,  -0.226,   0.310)  ( 0.17,  0.12,  0.30)
    oop     ( -0.008,  -0.003,   0.008)  ( -0.003,  -0.001,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( 64.199, -17.920, -10.793)  ( 64.200, -17.919, -10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (297.804,  97.543,  27.257)  (297.860,  97.588,  27.300)  ( 0.02,  0.05,  0.16)
    bond    (270.148,  57.230,  74.008)  (270.176,  57.253,  74.018)  ( 0.01,  0.04,  0.01)
    angle   ( -0.988,   0.324,   0.136)  ( -0.969,   0.343,   0.147)  ( 1.82,  0.61,  0.16)
    torsion ( -0.291,   0.285,  -0.498)  ( -0.286,   0.290,  -0.487)  ( 0.15,  0.15,  0.53)
    oop     ( -0.005,   0.008,  -0.016)  ( -0.001,   0.003,  -0.006)  ( 0.00,  0.00,  0.02)
    vdw     ( 28.939,  39.697, -46.373)  ( 28.940,  39.698, -46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       ( -0.054, 281.414, 143.277)  ( -0.000, 281.471, 143.295)  ( 0.29,  0.02,  0.01)
    bond    ( -0.026, 223.722, 177.585)  (  0.000, 223.752, 177.591)  ( 0.07,  0.01,  0.00)
    angle   ( -0.021,   0.274,   0.640)  (  0.000,   0.293,   0.649)  ( 0.04,  0.54,  0.54)
    torsion ( -0.005,  -0.107,   0.325)  (  0.000,  -0.104,   0.338)  ( 0.00,  0.03,  0.44)
    oop     ( -0.000,  -0.006,   0.012)  (  0.000,  -0.003,   0.003)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.002,  57.531, -35.285)  ( -0.000,  57.532, -35.285)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (156.714, 187.174, 202.079)  (156.760, 187.225, 202.115)  ( 0.03,  0.03,  0.02)
    bond    ( 92.745, 168.051, 212.732)  ( 92.764, 168.078, 212.748)  ( 0.02,  0.02,  0.01)
    angle   (  0.057,   0.981,  -0.169)  (  0.073,   1.001,  -0.156)  ( 0.09,  1.96,  0.23)
    torsion ( -0.279,   0.221,   0.300)  ( -0.273,   0.226,   0.310)  ( 0.17,  0.11,  0.30)
    oop     ( -0.008,   0.003,   0.008)  ( -0.003,   0.001,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     ( 64.199,  17.918, -10.793)  ( 64.200,  17.919, -10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       (-156.798, 187.174, 202.079)  (-156.760, 187.225, 202.115)  ( 0.02,  0.03,  0.02)
    bond    (-92.784, 168.051, 212.732)  (-92.764, 168.078, 212.748)  ( 0.02,  0.02,  0.01)
    angle   ( -0.088,   0.981,  -0.169)  ( -0.073,   1.001,  -0.156)  ( 0.14,  1.96,  0.23)
    torsion (  0.267,   0.221,   0.300)  (  0.273,   0.226,   0.310)  ( 0.16,  0.11,  0.30)
    oop     (  0.007,   0.003,   0.008)  (  0.003,   0.001,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     (-64.201,  17.918, -10.793)  (-64.200,  17.919, -10.792)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       (187.174, 202.079, -156.798)  (187.225, 202.115, -156.760)  ( 0.03,  0.02,  0.02)
    bond    (168.051, 212.732, -92.784)  (168.078, 212.748, -92.764)  ( 0.02,  0.01,  0.02)
    angle   (  0.981,  -0.169,  -0.088)  (  1.001,  -0.156,  -0.073)  ( 1.96,  0.23,  0.14)
    torsion (  0.221,   0.300,   0.267)  (  0.226,   0.310,   0.273)  ( 0.11,  0.30,  0.16)
    oop     (  0.003,   0.008,   0.007)  (  0.001,   0.004,   0.003)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.918, -10.793, -64.201)  ( 17.919, -10.792, -64.200)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       (-297.908, -97.642,  27.257)  (-297.860, -97.588,  27.300)  ( 0.02,  0.06,  0.16)
    bond    (-270.205, -57.277,  74.008)  (-270.176, -57.253,  74.018)  ( 0.01,  0.04,  0.01)
    angle   (  0.951,  -0.362,   0.136)  (  0.969,  -0.343,   0.147)  ( 1.75,  0.68,  0.16)
    torsion (  0.281,  -0.295,  -0.498)  (  0.286,  -0.290,  -0.487)  ( 0.14,  0.16,  0.53)
    oop     (  0.005,  -0.008,  -0.016)  (  0.001,  -0.003,  -0.006)  ( 0.00,  0.00,  0.02)
    vdw     (-28.940, -39.700, -46.373)  (-28.940, -39.698, -46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (297.804, -97.642,  27.257)  (297.860, -97.588,  27.300)  ( 0.02,  0.06,  0.16)
    bond    (270.148, -57.277,  74.008)  (270.176, -57.253,  74.018)  ( 0.01,  0.04,  0.01)
    angle   ( -0.988,  -0.362,   0.136)  ( -0.969,  -0.343,   0.147)  ( 1.82,  0.68,  0.16)
    torsion ( -0.291,  -0.295,  -0.498)  ( -0.286,  -0.290,  -0.487)  ( 0.15,  0.16,  0.53)
    oop     ( -0.005,  -0.008,  -0.016)  ( -0.001,  -0.003,  -0.006)  ( 0.00,  0.00,  0.02)
    vdw     ( 28.939, -39.700, -46.373)  ( 28.940, -39.698, -46.372)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( -0.054, -281.521, 143.277)  (  0.000, -281.471, 143.295)  ( 0.29,  0.02,  0.01)
    bond    ( -0.026, -223.783, 177.585)  (  0.000, -223.752, 177.591)  ( 0.07,  0.01,  0.00)
    angle   ( -0.021,  -0.313,   0.640)  (  0.000,  -0.293,   0.649)  ( 0.04,  0.61,  0.54)
    torsion ( -0.005,   0.101,   0.325)  ( -0.000,   0.104,   0.338)  ( 0.00,  0.03,  0.44)
    oop     ( -0.000,   0.006,   0.012)  (  0.000,   0.003,   0.003)  ( 0.00,  0.00,  0.01)
    vdw     ( -0.002, -57.533, -35.285)  (  0.000, -57.532, -35.285)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 9 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 10 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/caffeine.gpr
 # Expected       421.55114, found 421.551140&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (208.888, -108.928,  -3.531)  (208.946, -108.857,  -3.497)  ( 0.03,  0.06,  0.96)
    bond    (  9.662,  34.813,  -0.219)  (  9.689,  34.853,  -0.218)  ( 0.28,  0.11,  0.01)
    angle   (253.679, -42.563,   4.132)  (253.709, -42.535,   4.132)  ( 0.01,  0.07,  0.00)
    torsion (  0.100,   0.118,  -8.823)  (  0.100,   0.118,  -8.791)  ( 0.00,  0.00,  0.36)
    oop     ( -0.001,  -0.003,   0.894)  ( -0.001,  -0.003,   0.895)  ( 0.00,  0.00,  0.11)
    vdw     (-54.552, -101.293,   0.486)  (-54.551, -101.291,   0.485)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-432.824,  -8.911,  24.143)  (-432.761,  -8.834,  24.170)  ( 0.01,  0.86,  0.11)
    bond    (-22.671, -12.760,  -0.575)  (-22.641, -12.714,  -0.575)  ( 0.13,  0.36,  0.02)
    angle   (-416.559,  62.837,   8.483)  (-416.526,  62.866,   8.482)  ( 0.01,  0.05,  0.01)
    torsion (  0.072,  -0.068,  18.770)  (  0.072,  -0.068,  18.797)  ( 0.00,  0.00,  0.14)
    oop     ( -0.004,   0.005,  -0.395)  ( -0.004,   0.005,  -0.395)  ( 0.00,  0.00,  0.03)
    vdw     (  6.338, -58.925,  -2.140)  (  6.339, -58.923,  -2.140)  ( 0.02,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (184.148, -216.684,  -6.239)  (184.217, -216.623,  -6.217)  ( 0.04,  0.03,  0.37)
    bond    ( 83.338, -37.167,  -0.934)  ( 83.375, -37.127,  -0.933)  ( 0.04,  0.11,  0.03)
    angle   ( 54.759, -180.728,  -1.831)  ( 54.790, -180.708,  -1.830)  ( 0.06,  0.01,  0.08)
    torsion (  0.111,   0.566,  -3.763)  (  0.111,   0.566,  -3.744)  ( 0.00,  0.00,  0.52)
    oop     (  0.003,   0.002,   0.314)  (  0.003,   0.002,   0.315)  ( 0.00,  0.00,  0.04)
    vdw     ( 45.937,   0.643,  -0.025)  ( 45.938,   0.643,  -0.025)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (163.377, 170.179,  -5.474)  (163.459, 170.264,  -5.450)  ( 0.05,  0.05,  0.44)
    bond    (-39.328, -45.304,   0.742)  (-39.285, -45.259,   0.742)  ( 0.11,  0.10,  0.03)
    angle   (140.634, 127.995,  -1.921)  (140.671, 128.033,  -1.921)  ( 0.03,  0.03,  0.01)
    torsion ( -0.239,   0.068,   2.388)  ( -0.239,   0.068,   2.407)  ( 0.00,  0.00,  0.80)
    oop     ( -0.011,  -0.015,  -1.688)  ( -0.011,  -0.015,  -1.682)  ( 0.00,  0.00,  0.33)
    vdw     ( 62.322,  87.435,  -4.995)  ( 62.324,  87.438,  -4.995)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( 75.457,  91.079,  -5.887)  ( 75.481,  91.109,  -5.883)  ( 0.03,  0.03,  0.07)
    bond    ( 34.251,  59.094,  -0.793)  ( 34.260,  59.119,  -0.793)  ( 0.02,  0.04,  0.02)
    angle   (-15.236,   8.821,   0.225)  (-15.224,   8.825,   0.226)  ( 0.08,  0.05,  0.00)
    torsion (  0.029,   0.039,   4.126)  (  0.029,   0.039,   4.129)  ( 0.00,  0.00,  0.09)
    oop     (  0.005,   0.007,   0.781)  (  0.005,   0.007,   0.782)  ( 0.00,  0.00,  0.05)
    vdw     ( 56.408,  23.118, -10.227)  ( 56.411,  23.119, -10.227)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-216.566, 172.080,  -7.904)  (-216.503, 172.148,  -7.884)  ( 0.03,  0.04,  0.25)
    bond    (-39.410,  95.923,  -0.988)  (-39.370,  95.959,  -0.988)  ( 0.10,  0.04,  0.02)
    angle   (-143.833,  21.143,   3.759)  (-143.811,  21.174,   3.761)  ( 0.02,  0.15,  0.06)
    torsion ( -0.591,  -0.333, -11.745)  ( -0.591,  -0.333, -11.729)  ( 0.00,  0.00,  0.13)
    oop     (  0.000,   0.002,   1.006)  (  0.000,   0.002,   1.008)  ( 0.00,  0.00,  0.18)
    vdw     (-32.732,  55.345,   0.063)  (-32.732,  55.346,   0.063)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (119.243, -239.335, -27.891)  (119.321, -239.268, -27.864)  ( 0.07,  0.03,  0.09)
    bond    (103.129, -71.073,   0.420)  (103.176, -71.040,   0.419)  ( 0.05,  0.05,  0.01)
    angle   ( 51.191, -160.748,  -2.509)  ( 51.221, -160.716,  -2.511)  ( 0.06,  0.02,  0.04)
    torsion (  0.228,  -0.269, -19.945)  (  0.228,  -0.269, -19.923)  ( 0.00,  0.00,  0.11)
    oop     (  0.013,   0.003,  -3.052)  (  0.013,   0.003,  -3.046)  ( 0.00,  0.00,  0.19)
    vdw     (-35.317,  -7.247,  -2.804)  (-35.316,  -7.246,  -2.804)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-107.226,  -8.777,  -1.593)  (-107.192,  -8.762,  -1.589)  ( 0.03,  0.17,  0.26)
    bond    (-79.086,   1.050,  -0.525)  (-79.052,   1.050,  -0.525)  ( 0.04,  0.03,  0.02)
    angle   (  0.331,  24.732,  -0.372)  (  0.331,  24.745,  -0.372)  ( 0.00,  0.05,  0.01)
    torsion ( -0.008,   0.006,   1.224)  ( -0.008,   0.006,   1.228)  ( 0.00,  0.00,  0.33)
    oop     ( -0.009,  -0.002,   1.346)  ( -0.009,  -0.002,   1.347)  ( 0.00,  0.00,  0.05)
    vdw     (-28.454, -34.564,  -3.267)  (-28.453, -34.562,  -3.267)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-198.312,  26.650, -12.013)  (-198.244,  26.708, -11.985)  ( 0.03,  0.22,  0.24)
    bond    (-38.220, -32.802,  -1.579)  (-38.178, -32.765,  -1.579)  ( 0.11,  0.11,  0.04)
    angle   (-164.815,  66.560,   0.937)  (-164.789,  66.581,   0.940)  ( 0.02,  0.03,  0.24)
    torsion (  0.161,   0.048, -10.926)  (  0.161,   0.048, -10.901)  ( 0.00,  0.00,  0.23)
    oop     (  0.004,   0.008,  -0.407)  (  0.004,   0.008,  -0.406)  ( 0.00,  0.00,  0.03)
    vdw     (  4.559,  -7.165,  -0.038)  (  4.559,  -7.165,  -0.038)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (193.502,  22.214,   5.028)  (193.548,  22.256,   5.040)  ( 0.02,  0.19,  0.23)
    bond    (-55.806,   6.948,   0.149)  (-55.784,   6.982,   0.149)  ( 0.04,  0.49,  0.01)
    angle   (268.625,  35.949,  -4.097)  (268.649,  35.957,  -4.095)  ( 0.01,  0.02,  0.06)
    torsion (  0.150,  -0.110,   9.934)  (  0.150,  -0.110,   9.943)  ( 0.00,  0.00,  0.09)
    oop     (  0.003,  -0.006,   0.421)  (  0.003,  -0.006,   0.422)  ( 0.00,  0.00,  0.00)
    vdw     (-19.470, -20.567,  -1.378)  (-19.470, -20.567,  -1.379)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-15.058,  68.418,  -0.555)  (-15.002,  68.482,  -0.534)  ( 0.37,  0.09,  1.14)
    bond    (  5.458,  28.969,   0.248)  (  5.496,  29.002,   0.248)  ( 0.70,  0.11,  0.01)
    angle   (-35.798,  36.124,   0.329)  (-35.781,  36.155,   0.331)  ( 0.05,  0.09,  0.06)
    torsion ( -0.008,   0.046,  -1.233)  ( -0.008,   0.046,  -1.216)  ( 0.00,  0.00,  1.42)
    oop     ( -0.001,   0.004,  -0.208)  ( -0.001,   0.004,  -0.207)  ( 0.00,  0.00,  0.02)
    vdw     ( 15.292,   3.276,   0.310)  ( 15.292,   3.276,   0.310)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (122.061,  21.750,  13.667)  (122.098,  21.783,  13.699)  ( 0.03,  0.16,  0.23)
    bond    (132.390,  45.819,   4.435)  (132.415,  45.839,   4.454)  ( 0.02,  0.04,  0.41)
    angle   ( -1.786,  -3.228,  -0.340)  ( -1.774,  -3.216,  -0.332)  ( 0.63,  0.39,  0.27)
    torsion ( -0.309,   0.397,   9.614)  ( -0.309,   0.399,   9.619)  ( 0.01,  0.06,  0.06)
    oop     ( -0.003,  -0.005,   0.279)  ( -0.003,  -0.005,   0.279)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.231, -21.233,  -0.321)  ( -8.231, -21.233,  -0.321)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-99.660, -30.476,   1.911)  (-99.622, -30.443,   1.940)  ( 0.04,  0.11,  1.54)
    bond    (-143.684,  -2.026,   1.231)  (-143.658,  -2.008,   1.249)  ( 0.02,  0.90,  1.49)
    angle   (  5.308,   1.161,  -2.490)  (  5.319,   1.175,  -2.482)  ( 0.21,  1.18,  0.34)
    torsion (  0.033,  -0.108,   2.900)  (  0.033,  -0.108,   2.903)  ( 0.00,  0.00,  0.10)
    oop     (  0.003,   0.000,   0.231)  (  0.003,   0.000,   0.231)  ( 0.00,  0.00,  0.00)
    vdw     ( 38.681, -29.504,   0.040)  ( 38.682, -29.503,   0.039)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       ( 40.506, -73.071,   1.757)  ( 40.541, -73.034,   1.785)  ( 0.08,  0.05,  1.60)
    bond    ( 71.123, -130.243,   0.491)  ( 71.143, -130.219,   0.509)  ( 0.03,  0.02,  0.90)
    angle   (  1.833,   9.472,  -4.165)  (  1.847,   9.484,  -4.157)  ( 0.72,  0.13,  0.20)
    torsion (  0.265,   0.210,   5.207)  (  0.264,   0.209,   5.209)  ( 0.02,  0.00,  0.03)
    oop     ( -0.001,   0.003,   0.268)  ( -0.001,   0.003,   0.268)  ( 0.00,  0.00,  0.00)
    vdw     (-32.714,  47.488,  -0.043)  (-32.712,  47.489,  -0.043)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (  3.699,  23.933,   2.559)  (  3.706,  23.948,   2.563)  ( 0.18,  0.06,  0.16)
    bond    ( -0.122,  26.490,   0.583)  ( -0.122,  26.505,   0.584)  ( 0.00,  0.06,  0.01)
    angle   ( -1.806,   0.004,  -0.541)  ( -1.799,   0.004,  -0.542)  ( 0.35,  0.00,  0.02)
    torsion (  0.009,  -0.051,   2.319)  (  0.009,  -0.051,   2.323)  ( 0.00,  0.00,  0.18)
    oop     (  0.000,  -0.004,   0.190)  (  0.000,  -0.004,   0.191)  ( 0.00,  0.00,  0.00)
    vdw     (  5.617,  -2.505,   0.007)  (  5.617,  -2.505,   0.007)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-13.080, -57.349,   0.651)  (-13.076, -57.336,   0.654)  ( 0.03,  0.02,  0.15)
    bond    ( -0.882, -53.411,  -2.255)  ( -0.883, -53.397,  -2.256)  ( 0.02,  0.03,  0.01)
    angle   (  3.661,  -0.048,  -0.297)  (  3.665,  -0.048,  -0.295)  ( 0.10,  0.00,  0.06)
    torsion ( -0.013,  -0.150,   3.548)  ( -0.013,  -0.150,   3.549)  ( 0.00,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-15.846,  -3.741,  -0.345)  (-15.846,  -3.741,  -0.345)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-29.756,  13.521,  42.736)  (-29.751,  13.525,  42.746)  ( 0.02,  0.03,  0.02)
    bond    (-23.962,  15.581,  42.293)  (-23.959,  15.583,  42.302)  ( 0.01,  0.01,  0.02)
    angle   ( -0.549,  -0.439,  -0.149)  ( -0.546,  -0.437,  -0.148)  ( 0.15,  0.09,  0.01)
    torsion ( -0.955,   2.888,  -1.605)  ( -0.955,   2.888,  -1.605)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.291,  -4.509,   2.197)  ( -4.291,  -4.509,   2.197)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-28.875,  10.796, -48.338)  (-28.869,  10.801, -48.328)  ( 0.02,  0.04,  0.02)
    bond    (-24.956,  20.128, -43.024)  (-24.953,  20.130, -43.016)  ( 0.01,  0.01,  0.02)
    angle   (  0.065,  -0.394,  -0.224)  (  0.068,  -0.392,  -0.223)  ( 0.02,  0.08,  0.02)
    torsion (  1.119,  -3.172,  -2.133)  (  1.119,  -3.171,  -2.133)  ( 0.00,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.103,  -5.766,  -2.956)  ( -5.103,  -5.766,  -2.956)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 23.277,  35.268, -45.044)  ( 23.282,  35.271, -45.032)  ( 0.02,  0.01,  0.03)
    bond    ( 17.270,  13.747, -49.394)  ( 17.271,  13.748, -49.382)  ( 0.01,  0.00,  0.02)
    angle   (  0.666,  -0.015,   0.230)  (  0.669,  -0.013,   0.230)  ( 0.21,  0.00,  0.01)
    torsion ( -0.153,  23.491,   6.486)  ( -0.153,  23.491,   6.486)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.494,  -1.954,  -2.366)  (  5.494,  -1.954,  -2.366)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( 49.618, -47.597,  -7.155)  ( 49.624, -47.585,  -7.152)  ( 0.01,  0.03,  0.03)
    bond    ( 19.007, -49.046,  12.655)  ( 19.008, -49.035,  12.656)  ( 0.01,  0.02,  0.00)
    angle   ( -4.950,  -1.878,   0.155)  ( -4.947,  -1.877,   0.156)  ( 0.06,  0.03,  0.03)
    torsion ( -0.199,  -6.185, -23.664)  ( -0.199,  -6.185, -23.664)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 35.760,   9.512,   3.699)  ( 35.761,   9.512,   3.699)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( 39.152,  10.656,  60.557)  ( 39.157,  10.663,  60.564)  ( 0.01,  0.07,  0.01)
    bond    ( 18.322,  36.440,  36.440)  ( 18.324,  36.446,  36.446)  ( 0.01,  0.02,  0.02)
    angle   ( -1.065,   0.541,  -0.010)  ( -1.062,   0.543,  -0.009)  ( 0.30,  0.06,  0.00)
    torsion (  0.352, -17.349,  17.172)  (  0.352, -17.349,  17.172)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 21.543,  -8.977,   6.954)  ( 21.543,  -8.977,   6.954)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-35.376,  34.456,  58.123)  (-35.367,  34.460,  58.129)  ( 0.03,  0.01,  0.01)
    bond    (-43.660,  -2.568,  33.124)  (-43.652,  -2.568,  33.129)  ( 0.02,  0.01,  0.01)
    angle   (  0.088,  -2.087,  -0.046)  (  0.089,  -2.084,  -0.044)  ( 0.01,  0.16,  0.01)
    torsion ( 11.893,   6.719,  16.191)  ( 11.893,   6.719,  16.191)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.697,  32.392,   8.854)  ( -3.697,  32.393,   8.854)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-10.413,  82.091,   8.075)  (-10.404,  82.100,   8.077)  ( 0.08,  0.01,  0.03)
    bond    ( 33.600,  40.238,  17.334)  ( 33.605,  40.245,  17.335)  ( 0.01,  0.02,  0.01)
    angle   (  5.759,  -4.912,   0.230)  (  5.761,  -4.910,   0.232)  ( 0.04,  0.03,  0.04)
    torsion (  6.440,   3.280, -20.101)  (  6.440,   3.280, -20.101)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-56.212,  43.484,  10.612)  (-56.211,  43.485,  10.612)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-36.591,   7.221, -47.965)  (-36.588,   7.224, -47.952)  ( 0.01,  0.05,  0.03)
    bond    (-16.227,  10.670, -49.969)  (-16.226,  10.670, -49.957)  ( 0.01,  0.00,  0.02)
    angle   ( -0.530,   1.393,   0.469)  ( -0.528,   1.396,   0.470)  ( 0.11,  0.22,  0.02)
    torsion (-18.485, -10.083,   3.851)  (-18.486, -10.083,   3.851)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.349,   5.242,  -2.315)  ( -1.349,   5.242,  -2.315)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 10 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 11 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/cholesterol.gpr
 # Expected       824.23117, found 824.231174&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-153.159, -69.518,  57.095)  (-153.118, -69.482,  57.131)  ( 0.03,  0.05,  0.06)
    bond    (-118.434, -27.963, 117.758)  (-118.409, -27.941, 117.778)  ( 0.02,  0.08,  0.02)
    angle   ( -6.891, -14.604, -46.292)  ( -6.877, -14.591, -46.278)  ( 0.21,  0.09,  0.03)
    torsion (-10.090,  -9.856, -13.607)  (-10.088,  -9.856, -13.605)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-17.745, -17.094,  -0.764)  (-17.744, -17.094,  -0.764)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       ( -6.095,  12.724,  18.548)  ( -6.061,  12.756,  18.579)  ( 0.55,  0.25,  0.17)
    bond    ( 93.283, -23.271, -11.981)  ( 93.302, -23.251, -11.964)  ( 0.02,  0.09,  0.15)
    angle   (-27.287,  11.492,  52.607)  (-27.275,  11.502,  52.617)  ( 0.04,  0.09,  0.02)
    torsion (-32.898,  14.666,   8.358)  (-32.896,  14.667,   8.361)  ( 0.00,  0.01,  0.03)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-39.193,   9.837, -30.436)  (-39.192,   9.837, -30.436)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       ( 22.203,   6.980, -19.897)  ( 22.235,   7.013, -19.865)  ( 0.15,  0.47,  0.16)
    bond    ( 34.130, -72.157, 129.290)  ( 34.151, -72.139, 129.309)  ( 0.06,  0.03,  0.01)
    angle   ( -1.128,  38.843, -88.576)  ( -1.117,  38.854, -88.566)  ( 0.98,  0.03,  0.01)
    torsion (  9.461,  19.306, -33.473)  (  9.462,  19.309, -33.471)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-20.260,  20.988, -27.137)  (-20.259,  20.989, -27.136)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 24.111, -57.103,  19.339)  ( 24.144, -57.070,  19.371)  ( 0.14,  0.06,  0.16)
    bond    ( 48.823,  84.861, -70.006)  ( 48.843,  84.880, -69.987)  ( 0.04,  0.02,  0.03)
    angle   ( -0.976, -81.484,  84.577)  ( -0.964, -81.471,  84.586)  ( 1.19,  0.02,  0.01)
    torsion (-12.453, -18.900,  -6.728)  (-12.453, -18.900,  -6.726)  ( 0.00,  0.00,  0.03)
    oop     ( -0.003,  -0.171,  -0.864)  ( -0.003,  -0.171,  -0.862)  ( 0.00,  0.00,  0.11)
    vdw     (-11.280, -41.409,  12.360)  (-11.279, -41.408,  12.360)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-87.105,  99.460, -48.467)  (-87.060,  99.502, -48.453)  ( 0.05,  0.04,  0.03)
    bond    (-49.325,  74.332,  -9.055)  (-49.296,  74.356,  -9.054)  ( 0.06,  0.03,  0.02)
    angle   (-50.357,  78.891, -80.308)  (-50.343,  78.908, -80.303)  ( 0.03,  0.02,  0.01)
    torsion (  9.057,  -4.154,  31.762)  (  9.058,  -4.154,  31.771)  ( 0.00,  0.02,  0.03)
    oop     ( -0.002,   0.412,   2.075)  ( -0.002,   0.411,   2.072)  ( 0.00,  0.03,  0.15)
    vdw     (  3.522, -50.020,   7.060)  (  3.523, -50.020,   7.060)  ( 0.04,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 51.636, -103.129,  29.240)  ( 51.678, -103.088,  29.259)  ( 0.08,  0.04,  0.06)
    bond    ( -0.246,  24.304,  -2.518)  ( -0.216,  24.326,  -2.517)  ( 0.72,  0.09,  0.05)
    angle   ( 35.421, -69.579,  24.981)  ( 35.433, -69.562,  24.982)  ( 0.03,  0.02,  0.01)
    torsion ( -2.010,  -7.625, -12.160)  ( -2.010,  -7.624, -12.145)  ( 0.01,  0.01,  0.13)
    oop     ( -0.087,   0.129,   1.010)  ( -0.087,   0.129,   1.011)  ( 0.00,  0.00,  0.10)
    vdw     ( 18.558, -50.358,  17.928)  ( 18.559, -50.356,  17.928)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-18.579,  48.095, -27.205)  (-18.546,  48.129, -27.174)  ( 0.18,  0.07,  0.11)
    bond    (-86.066,  82.942,   2.549)  (-86.047,  82.962,   2.567)  ( 0.02,  0.02,  0.71)
    angle   ( 53.351,   8.112, -23.624)  ( 53.363,   8.125, -23.616)  ( 0.02,  0.15,  0.03)
    torsion (  4.651, -11.128, -21.212)  (  4.652, -11.128, -21.208)  ( 0.02,  0.01,  0.02)
    oop     (  0.039,  -0.090,  -0.588)  (  0.039,  -0.090,  -0.587)  ( 0.00,  0.00,  0.03)
    vdw     (  9.445, -31.740,  15.670)  (  9.446, -31.740,  15.671)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-48.396, -15.231,  15.022)  (-48.360, -15.194,  15.056)  ( 0.07,  0.24,  0.22)
    bond    ( -4.083, -21.222, -134.545)  ( -4.063, -21.202, -134.526)  ( 0.49,  0.09,  0.01)
    angle   (-62.993,  36.036, 140.798)  (-62.979,  36.049, 140.810)  ( 0.02,  0.04,  0.01)
    torsion (-11.505,  -5.383,   9.994)  (-11.504,  -5.381,   9.996)  ( 0.01,  0.04,  0.03)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 30.185, -24.662,  -1.225)  ( 30.186, -24.661,  -1.224)  ( 0.00,  0.00,  0.02)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( 18.463,  48.748,  30.339)  ( 18.501,  48.783,  30.372)  ( 0.21,  0.07,  0.11)
    bond    (-47.975,  73.579,  64.884)  (-47.954,  73.599,  64.903)  ( 0.05,  0.03,  0.03)
    angle   ( 39.188,  19.493, -36.725)  ( 39.203,  19.506, -36.712)  ( 0.04,  0.07,  0.03)
    torsion ( -6.307, -21.411, -22.443)  ( -6.305, -21.409, -22.440)  ( 0.03,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 33.556, -22.914,  24.622)  ( 33.557, -22.913,  24.623)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 16.904,   2.310, -51.766)  ( 16.933,   2.343, -51.737)  ( 0.17,  1.40,  0.06)
    bond    ( 17.964, 117.602, -67.197)  ( 17.982, 117.622, -67.178)  ( 0.10,  0.02,  0.03)
    angle   (-39.030, -73.072,  49.903)  (-39.019, -73.061,  49.914)  ( 0.03,  0.02,  0.02)
    torsion (  5.566, -24.566, -27.007)  (  5.566, -24.565, -27.008)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 32.404, -17.654,  -7.466)  ( 32.405, -17.653,  -7.466)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-25.565,   0.105, -21.585)  (-25.533,   0.134, -21.556)  ( 0.12,  0.30,  0.13)
    bond    (-151.842, -12.958, -56.391)  (-151.822, -12.939, -56.372)  ( 0.01,  0.14,  0.03)
    angle   (116.724,  36.718,  31.919)  (116.736,  36.728,  31.929)  ( 0.01,  0.03,  0.03)
    torsion ( -1.948,   4.264,   6.229)  ( -1.949,   4.263,   6.228)  ( 0.03,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.501, -27.918,  -3.341)  ( 11.501, -27.917,  -3.341)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-35.372,  14.560,  72.584)  (-35.339,  14.597,  72.615)  ( 0.09,  0.26,  0.04)
    bond    (-90.912, 117.802, 125.753)  (-90.893, 117.824, 125.773)  ( 0.02,  0.02,  0.02)
    angle   ( 30.331, -130.226, -76.353)  ( 30.343, -130.213, -76.342)  ( 0.04,  0.01,  0.01)
    torsion ( 10.256,  30.515,   9.567)  ( 10.257,  30.516,   9.568)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 14.953,  -3.531,  13.616)  ( 14.954,  -3.530,  13.617)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (  5.077,  28.011, -44.146)  (  5.110,  28.045, -44.114)  ( 0.66,  0.12,  0.07)
    bond    (132.862, -184.020, -37.633)  (132.882, -184.000, -37.613)  ( 0.02,  0.01,  0.05)
    angle   (-129.394, 185.190,  17.275)  (-129.382, 185.202,  17.286)  ( 0.01,  0.01,  0.06)
    torsion ( -3.930,  23.835, -14.652)  ( -3.929,  23.837, -14.651)  ( 0.02,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.539,   3.005,  -9.136)  (  5.539,   3.005,  -9.136)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-13.321,  -0.351,  -5.096)  (-13.289,  -0.318,  -5.066)  ( 0.24,  1.14,  0.59)
    bond    (-159.132, 160.549, -91.198)  (-159.112, 160.569, -91.179)  ( 0.01,  0.01,  0.02)
    angle   (133.739, -177.866,  62.769)  (133.749, -177.855,  62.777)  ( 0.01,  0.01,  0.01)
    torsion (  6.365,   0.090,  14.498)  (  6.366,   0.091,  14.500)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.708,  16.876,   8.835)  (  5.708,  16.877,   8.835)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (-19.645, -13.425,  -0.488)  (-19.613, -13.393,  -0.459)  ( 0.16,  0.24,  1.44)
    bond    ( 76.533, -190.531,  43.415)  ( 76.553, -190.512,  43.434)  ( 0.03,  0.01,  0.04)
    angle   (-99.914, 189.974, -63.286)  (-99.903, 189.986, -63.278)  ( 0.01,  0.01,  0.01)
    torsion ( -9.947,   8.312,  -0.300)  ( -9.946,   8.313,  -0.297)  ( 0.01,  0.01,  0.06)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 13.682, -21.181,  19.682)  ( 13.683, -21.180,  19.683)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-10.614,   4.479,  49.173)  (-10.582,   4.511,  49.202)  ( 0.30,  0.70,  0.06)
    bond    (-75.225, 151.138, -61.792)  (-75.205, 151.157, -61.773)  ( 0.03,  0.01,  0.03)
    angle   ( 60.206, -140.492,  66.787)  ( 60.217, -140.481,  66.796)  ( 0.02,  0.01,  0.01)
    torsion (  7.495,  -5.083,  45.088)  (  7.495,  -5.082,  45.090)  ( 0.00,  0.02,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.090,  -1.084,  -0.911)  ( -3.090,  -1.084,  -0.911)  ( 0.01,  0.04,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 24.984,  -0.281,   2.619)  ( 25.016,  -0.246,   2.650)  ( 0.13,  0.99,  1.17)
    bond    (-18.136, -82.738, 108.231)  (-18.117, -82.716, 108.249)  ( 0.11,  0.03,  0.02)
    angle   ( 17.377,  66.992, -89.727)  ( 17.390,  67.004, -89.716)  ( 0.07,  0.02,  0.01)
    torsion ( 17.104,  12.259, -16.637)  ( 17.105,  12.260, -16.635)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  8.639,   3.206,   0.752)  (  8.639,   3.206,   0.752)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (  0.347, -11.605,  30.135)  (  0.377, -11.577,  30.163)  ( 1.02,  0.24,  0.09)
    bond    ( 59.323, -67.341, -22.835)  ( 59.341, -67.322, -22.816)  ( 0.03,  0.03,  0.08)
    angle   (-71.107,  24.623,  33.145)  (-71.097,  24.631,  33.153)  ( 0.01,  0.03,  0.03)
    torsion ( 17.309,   4.534,  25.099)  ( 17.310,   4.534,  25.101)  ( 0.00,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.178,  26.580,  -5.275)  ( -5.177,  26.580,  -5.275)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-14.118, -16.819, -33.037)  (-14.089, -16.790, -33.009)  ( 0.21,  0.17,  0.08)
    bond    (-106.875,  -6.292, -41.131)  (-106.856,  -6.274, -41.113)  ( 0.02,  0.29,  0.04)
    angle   ( 54.847,  -7.818,  39.167)  ( 54.856,  -7.808,  39.175)  ( 0.02,  0.12,  0.02)
    torsion ( 10.529,  -5.637, -24.337)  ( 10.530,  -5.635, -24.336)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 27.381,   2.927,  -6.735)  ( 27.381,   2.928,  -6.735)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-21.408,   6.888,  23.158)  (-21.380,   6.918,  23.187)  ( 0.13,  0.44,  0.12)
    bond    ( 23.687, -49.666, 112.171)  ( 23.705, -49.648, 112.191)  ( 0.08,  0.04,  0.02)
    angle   (  5.053,  33.609, -61.176)  (  5.061,  33.618, -61.167)  ( 0.18,  0.03,  0.01)
    torsion (-21.776,  -6.463,   0.221)  (-21.775,  -6.461,   0.222)  ( 0.01,  0.02,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-28.372,  29.408, -28.058)  (-28.371,  29.410, -28.058)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( 27.358, -67.877, -20.106)  ( 27.398, -67.842, -20.069)  ( 0.14,  0.05,  0.19)
    bond    (135.254, -12.790, -16.925)  (135.277, -12.771, -16.904)  ( 0.02,  0.15,  0.12)
    angle   (-105.576, -49.599, -21.055)  (-105.561, -49.586, -21.040)  ( 0.01,  0.03,  0.07)
    torsion (-15.523, -14.689,  20.072)  (-15.522, -14.687,  20.073)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 13.203,   9.200,  -2.198)  ( 13.203,   9.201,  -2.198)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (  5.700,  -4.066,   9.728)  (  5.730,  -4.037,   9.757)  ( 0.52,  0.72,  0.30)
    bond    ( 36.092, -60.119, -133.482)  ( 36.109, -60.101, -133.463)  ( 0.05,  0.03,  0.01)
    angle   (-20.370,  22.669,  95.775)  (-20.361,  22.678,  95.784)  ( 0.05,  0.04,  0.01)
    torsion (  4.464, -11.648,   6.174)  (  4.466, -11.646,   6.175)  ( 0.03,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-14.485,  45.031,  41.261)  (-14.484,  45.032,  41.261)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -3.447,  34.134, -24.129)  ( -3.415,  34.166, -24.097)  ( 0.93,  0.10,  0.13)
    bond    (-59.491, -98.316, 109.543)  (-59.471, -98.297, 109.562)  ( 0.03,  0.02,  0.02)
    angle   ( 76.375,  49.181, -99.945)  ( 76.386,  49.192, -99.934)  ( 0.01,  0.02,  0.01)
    torsion ( -2.005,  47.425,  -9.989)  ( -2.004,  47.427,  -9.987)  ( 0.04,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-18.327,  35.843, -23.738)  (-18.326,  35.844, -23.737)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-17.979,  26.240,  22.353)  (-17.946,  26.273,  22.383)  ( 0.18,  0.12,  0.14)
    bond    (149.796, -96.925, -10.303)  (149.815, -96.904, -10.285)  ( 0.01,  0.02,  0.18)
    angle   (-112.135,  79.524,  69.170)  (-112.123,  79.534,  69.179)  ( 0.01,  0.01,  0.01)
    torsion (-28.846,  17.622,   6.086)  (-28.845,  17.623,   6.089)  ( 0.00,  0.01,  0.04)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-26.793,  26.019, -42.600)  (-26.792,  26.020, -42.599)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  0.312, -40.265, -18.049)  (  0.348, -40.227, -18.016)  ( 1.12,  0.09,  0.19)
    bond    (-129.458,  -4.452, 152.042)  (-129.438,  -4.431, 152.061)  ( 0.02,  0.47,  0.01)
    angle   (123.900, -64.663, -98.855)  (123.914, -64.650, -98.844)  ( 0.01,  0.02,  0.01)
    torsion ( 15.740, -13.912, -52.855)  ( 15.741, -13.910, -52.852)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -9.870,  42.763, -18.381)  ( -9.869,  42.764, -18.381)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( 68.661,   4.787,  35.913)  ( 68.701,   4.826,  35.951)  ( 0.06,  0.80,  0.11)
    bond    (116.744,   8.696, -58.261)  (116.765,   8.717, -58.240)  ( 0.02,  0.24,  0.04)
    angle   (-30.033, -19.820,  70.521)  (-30.016, -19.806,  70.533)  ( 0.06,  0.07,  0.02)
    torsion ( -9.082,  -1.376,  27.007)  ( -9.081,  -1.373,  27.010)  ( 0.01,  0.19,  0.01)
    oop     (  0.010,  -0.147,  -0.875)  (  0.009,  -0.147,  -0.874)  ( 0.00,  0.00,  0.12)
    vdw     ( -8.978,  17.434,  -2.478)  ( -8.977,  17.435,  -2.478)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( -4.188,  -2.686, -14.814)  ( -4.159,  -2.656, -14.785)  ( 0.70,  1.10,  0.20)
    bond    ( 38.557, -66.637, -124.644)  ( 38.575, -66.619, -124.625)  ( 0.05,  0.03,  0.02)
    angle   (-16.181,  66.913,  70.945)  (-16.172,  66.922,  70.954)  ( 0.06,  0.01,  0.01)
    torsion (-18.479, -14.465,   0.974)  (-18.478, -14.463,   0.974)  ( 0.01,  0.01,  0.04)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.085,  11.503,  37.911)  ( -8.084,  11.504,  37.911)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (142.851,  62.563,  22.769)  (142.876,  62.574,  22.796)  ( 0.02,  0.02,  0.12)
    bond    (187.677,  96.952,   6.946)  (187.700,  96.958,   6.963)  ( 0.01,  0.01,  0.25)
    angle   (-28.771,   0.657,  48.506)  (-28.769,   0.660,  48.515)  ( 0.01,  0.20,  0.02)
    torsion ( -0.245, -22.328, -25.408)  ( -0.245, -22.328, -25.407)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-15.811, -12.717,  -7.275)  (-15.810, -12.717,  -7.275)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 44.645,  -7.622, -27.150)  ( 44.650,  -7.616, -27.138)  ( 0.01,  0.08,  0.04)
    bond    (  3.150,  -7.872, -16.573)  (  3.150,  -7.869, -16.562)  ( 0.01,  0.03,  0.07)
    angle   ( -2.023,  -9.240,   4.004)  ( -2.020,  -9.237,   4.005)  ( 0.15,  0.03,  0.02)
    torsion ( 36.936,   6.164,   4.096)  ( 36.937,   6.164,   4.096)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.582,   3.325, -18.678)  (  6.583,   3.326, -18.677)  ( 0.01,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-15.768,  19.929,  24.588)  (-15.763,  19.934,  24.601)  ( 0.03,  0.03,  0.05)
    bond    ( -7.259,  10.575,  35.044)  ( -7.259,  10.576,  35.056)  ( 0.00,  0.01,  0.03)
    angle   ( -6.365,   7.164,  -3.480)  ( -6.362,   7.166,  -3.479)  ( 0.05,  0.04,  0.01)
    torsion (-23.887,  13.197,  -8.927)  (-23.886,  13.198,  -8.927)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 21.742, -11.007,   1.952)  ( 21.743, -11.006,   1.952)  ( 0.01,  0.01,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       ( 28.507,   6.810, -42.319)  ( 28.512,   6.815, -42.306)  ( 0.02,  0.08,  0.03)
    bond    (  3.220,  -5.723, -17.457)  (  3.220,  -5.722, -17.445)  ( 0.01,  0.02,  0.07)
    angle   ( -2.691,  10.409,  -3.911)  ( -2.688,  10.411,  -3.911)  ( 0.12,  0.03,  0.01)
    torsion ( 22.776,  30.753,  -5.883)  ( 22.777,  30.754,  -5.883)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.202, -28.629, -15.067)  (  5.203, -28.628, -15.067)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( 94.120,  21.860, -55.076)  ( 94.126,  21.866, -55.064)  ( 0.01,  0.02,  0.02)
    bond    (  6.823, -15.057, -30.941)  (  6.824, -15.054, -30.931)  ( 0.01,  0.02,  0.03)
    angle   ( 14.517,  10.765,  -2.038)  ( 14.521,  10.768,  -2.037)  ( 0.02,  0.03,  0.03)
    torsion ( 41.437,  24.281,  -2.676)  ( 41.437,  24.281,  -2.676)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 31.343,   1.871, -19.420)  ( 31.344,   1.872, -19.420)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (-26.163,   6.359, -27.935)  (-26.155,   6.363, -27.926)  ( 0.03,  0.06,  0.03)
    bond    (-20.780,   4.981, -23.834)  (-20.774,   4.982, -23.826)  ( 0.03,  0.00,  0.03)
    angle   ( 16.743,  -7.284, -16.123)  ( 16.744,  -7.281, -16.122)  ( 0.01,  0.04,  0.01)
    torsion (-14.457,   3.681,  13.374)  (-14.456,   3.681,  13.374)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.669,   4.981,  -1.353)  ( -7.669,   4.982,  -1.352)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 20.567,   9.422,  50.837)  ( 20.572,   9.427,  50.848)  ( 0.03,  0.05,  0.02)
    bond    (-15.107,  13.559,  27.613)  (-15.105,  13.561,  27.622)  ( 0.02,  0.02,  0.03)
    angle   ( 26.950,  -4.999,  17.190)  ( 26.952,  -4.996,  17.191)  ( 0.01,  0.05,  0.01)
    torsion ( 30.926,  -5.029,  19.380)  ( 30.927,  -5.029,  19.381)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-22.202,   5.891, -13.347)  (-22.202,   5.891, -13.346)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( 16.040, -38.225, -25.490)  ( 16.045, -38.221, -25.478)  ( 0.03,  0.01,  0.05)
    bond    (  9.915,  -9.714, -27.660)  (  9.916,  -9.713, -27.649)  ( 0.01,  0.01,  0.04)
    angle   ( 11.787,  -6.751,   6.599)  ( 11.790,  -6.749,   6.599)  ( 0.02,  0.03,  0.01)
    torsion (  0.506, -26.055,   9.335)  (  0.506, -26.055,   9.335)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.167,   4.296, -13.763)  ( -6.166,   4.297, -13.763)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( -0.742,  41.043, -11.214)  ( -0.738,  41.056, -11.210)  ( 0.31,  0.03,  0.03)
    bond    ( -6.965,  35.011,  -3.353)  ( -6.964,  35.024,  -3.353)  ( 0.01,  0.04,  0.00)
    angle   ( 10.149,   3.425,  14.692)  ( 10.152,   3.425,  14.694)  ( 0.03,  0.01,  0.02)
    torsion (  7.604,   0.364, -11.995)  (  7.604,   0.364, -11.994)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-11.531,   2.243, -10.558)  (-11.530,   2.243, -10.558)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( -8.627,  61.965,  30.176)  ( -8.622,  61.967,  30.189)  ( 0.05,  0.00,  0.04)
    bond    (-10.934,   3.951,  30.250)  (-10.933,   3.951,  30.262)  ( 0.01,  0.00,  0.04)
    angle   ( -6.619,  18.573,  -4.816)  ( -6.616,  18.575,  -4.816)  ( 0.04,  0.01,  0.01)
    torsion ( -0.136,  45.168,  -5.947)  ( -0.136,  45.168,  -5.947)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  9.062,  -5.728,  10.689)  (  9.063,  -5.727,  10.689)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (  3.090, -39.725,  28.798)  (  3.095, -39.711,  28.801)  ( 0.15,  0.03,  0.01)
    bond    (  5.472, -27.716,  -2.162)  (  5.472, -27.702,  -2.162)  ( 0.01,  0.05,  0.00)
    angle   ( 27.362,   6.434, -13.177)  ( 27.365,   6.434, -13.175)  ( 0.01,  0.00,  0.02)
    torsion (-11.974,  -5.473,  39.824)  (-11.973,  -5.473,  39.824)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-17.770, -12.970,   4.314)  (-17.769, -12.970,   4.314)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (-22.368,   9.126, -24.437)  (-22.362,   9.141, -24.432)  ( 0.03,  0.16,  0.02)
    bond    ( -1.097,  20.505,  -3.627)  ( -1.097,  20.519,  -3.627)  ( 0.01,  0.07,  0.01)
    angle   (-39.672,  -2.615,  -2.795)  (-39.667,  -2.615,  -2.795)  ( 0.01,  0.00,  0.00)
    torsion (  2.012,  -3.156, -18.466)  (  2.012,  -3.156, -18.462)  ( 0.00,  0.00,  0.02)
    oop     (  0.044,  -0.132,  -0.759)  (  0.044,  -0.132,  -0.759)  ( 0.00,  0.00,  0.04)
    vdw     ( 16.346,  -5.476,   1.211)  ( 16.347,  -5.476,   1.211)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       ( 36.359,   5.841,  29.850)  ( 36.365,   5.845,  29.860)  ( 0.02,  0.07,  0.03)
    bond    ( 18.767, -10.397,  28.481)  ( 18.771, -10.396,  28.490)  ( 0.02,  0.01,  0.03)
    angle   ( -1.649,   6.213,   3.353)  ( -1.647,   6.216,   3.353)  ( 0.11,  0.05,  0.02)
    torsion ( 16.501,  18.716,  -4.044)  ( 16.502,  18.716,  -4.043)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.739,  -8.691,   2.060)  (  2.739,  -8.691,   2.060)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       ( -3.143, -21.901, -46.469)  ( -3.137, -21.896, -46.459)  ( 0.18,  0.02,  0.02)
    bond    ( 18.481, -11.472, -29.819)  ( 18.484, -11.471, -29.810)  ( 0.02,  0.01,  0.03)
    angle   (  2.834,  20.808,  -6.250)  (  2.836,  20.810,  -6.249)  ( 0.07,  0.01,  0.01)
    torsion (-22.485, -13.659,  -8.686)  (-22.484, -13.659,  -8.686)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.973, -17.577,  -1.714)  ( -1.973, -17.577,  -1.714)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (-17.356,  35.856,  43.564)  (-17.353,  35.859,  43.578)  ( 0.02,  0.01,  0.03)
    bond    ( -7.195,  -1.910,  37.298)  ( -7.195,  -1.910,  37.312)  ( 0.00,  0.01,  0.04)
    angle   (-14.907,  17.912,  -1.957)  (-14.904,  17.915,  -1.957)  ( 0.02,  0.01,  0.00)
    torsion ( -1.188,  41.884,   1.915)  ( -1.188,  41.884,   1.915)  ( 0.03,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.934, -22.031,   6.308)  (  5.934, -22.030,   6.308)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (  4.260, -53.078,   8.903)  (  4.265, -53.066,   8.905)  ( 0.11,  0.02,  0.03)
    bond    ( 15.124, -34.548, -10.635)  ( 15.126, -34.538, -10.634)  ( 0.01,  0.03,  0.01)
    angle   (  2.162,   8.583, -24.803)  (  2.164,   8.584, -24.800)  ( 0.11,  0.01,  0.01)
    torsion (-14.616, -17.750,  36.861)  (-14.616, -17.750,  36.861)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.589,  -9.362,   7.479)  (  1.590,  -9.362,   7.479)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       (-17.898,  11.788,  56.425)  (-17.894,  11.793,  56.436)  ( 0.02,  0.04,  0.02)
    bond    ( 14.507,  17.400,  38.285)  ( 14.508,  17.402,  38.296)  ( 0.01,  0.01,  0.03)
    angle   (-17.565,  21.427,  -3.085)  (-17.563,  21.430,  -3.084)  ( 0.01,  0.01,  0.02)
    torsion (-21.422, -19.062,  16.778)  (-21.422, -19.062,  16.778)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.582,  -7.977,   4.447)  (  6.582,  -7.977,   4.447)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       ( 50.341,  12.895, -16.635)  ( 50.351,  12.899, -16.630)  ( 0.02,  0.03,  0.03)
    bond    ( 28.379, -12.263, -17.863)  ( 28.388, -12.261, -17.859)  ( 0.03,  0.01,  0.02)
    angle   ( -7.313,  -4.091,  -8.818)  ( -7.312,  -4.089,  -8.816)  ( 0.01,  0.06,  0.02)
    torsion ( 15.446,  29.140,   4.546)  ( 15.446,  29.140,   4.545)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 13.829,   0.108,   5.500)  ( 13.830,   0.108,   5.500)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       ( 17.394, -75.208, -16.067)  ( 17.398, -75.201, -16.054)  ( 0.02,  0.01,  0.08)
    bond    (  2.525,  -6.603, -19.217)  (  2.525,  -6.602, -19.205)  ( 0.00,  0.02,  0.06)
    angle   ( -4.400,  10.818,  -4.298)  ( -4.397,  10.821,  -4.298)  ( 0.07,  0.03,  0.01)
    torsion (  6.819, -47.163,  17.109)  (  6.819, -47.162,  17.108)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 12.449, -32.261,  -9.660)  ( 12.450, -32.259,  -9.660)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       ( -1.994,  17.528,  26.924)  ( -1.986,  17.535,  26.931)  ( 0.40,  0.04,  0.03)
    bond    (-24.673,  23.429,  25.665)  (-24.669,  23.434,  25.670)  ( 0.02,  0.02,  0.02)
    angle   (-11.336, -13.616,   1.534)  (-11.334, -13.614,   1.536)  ( 0.02,  0.02,  0.12)
    torsion (  5.673, -11.971,  16.379)  (  5.673, -11.971,  16.379)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 28.343,  19.686, -16.655)  ( 28.344,  19.686, -16.654)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (  4.013, -12.096, -70.338)  (  4.021, -12.088, -70.332)  ( 0.18,  0.06,  0.01)
    bond    ( 23.281, -24.777, -18.786)  ( 23.286, -24.772, -18.783)  ( 0.02,  0.02,  0.02)
    angle   ( -3.141,   3.826,  -8.941)  ( -3.139,   3.827,  -8.939)  ( 0.06,  0.04,  0.02)
    torsion (-16.522,  17.754, -43.899)  (-16.523,  17.754, -43.899)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.395,  -8.898,   1.288)  (  0.396,  -8.898,   1.288)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       ( 32.291, -33.133,  25.084)  ( 32.294, -33.129,  25.097)  ( 0.01,  0.01,  0.05)
    bond    (  1.999,  -6.832,  29.850)  (  1.998,  -6.831,  29.863)  ( 0.00,  0.01,  0.04)
    angle   ( -7.081,  -5.531,  -0.791)  ( -7.078,  -5.528,  -0.791)  ( 0.04,  0.05,  0.01)
    torsion ( 29.488, -23.263,  -7.295)  ( 29.488, -23.262,  -7.295)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.885,   2.492,   3.320)  (  7.886,   2.493,   3.320)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       (-42.520,  36.604,   2.054)  (-42.515,  36.612,   2.063)  ( 0.01,  0.02,  0.41)
    bond    (-12.892,  19.154,  24.179)  (-12.890,  19.158,  24.186)  ( 0.01,  0.02,  0.03)
    angle   (  2.038,  -1.328,   2.137)  (  2.041,  -1.326,   2.138)  ( 0.12,  0.14,  0.05)
    torsion (-23.627,  17.730, -26.636)  (-23.626,  17.730, -26.636)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.039,   1.048,   2.375)  ( -8.039,   1.049,   2.375)  ( 0.00,  0.04,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       ( 53.576,  -9.256, -46.652)  ( 53.582,  -9.251, -46.641)  ( 0.01,  0.05,  0.02)
    bond    (-15.220,  19.983, -45.230)  (-15.219,  19.985, -45.219)  ( 0.01,  0.01,  0.02)
    angle   (-20.081, -19.456,  -1.841)  (-20.078, -19.454,  -1.840)  ( 0.01,  0.01,  0.03)
    torsion ( 29.317, -32.429, -24.199)  ( 29.317, -32.428, -24.198)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 59.560,  22.646,  24.617)  ( 59.562,  22.646,  24.618)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (-29.920,  -0.160,  60.808)  (-29.916,  -0.156,  60.820)  ( 0.01,  0.06,  0.02)
    bond    ( 12.586,  -9.382,  34.918)  ( 12.587,  -9.382,  34.929)  ( 0.01,  0.01,  0.03)
    angle   ( -6.403,  16.046,   6.617)  ( -6.401,  16.049,   6.617)  ( 0.04,  0.01,  0.01)
    torsion (-29.059,   7.019,  12.357)  (-29.059,   7.019,  12.357)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.043, -13.843,   6.917)  ( -7.043, -13.842,   6.917)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       ( 34.104, -28.718,  -6.748)  ( 34.109, -28.710,  -6.741)  ( 0.01,  0.03,  0.10)
    bond    ( 10.870, -19.294, -17.724)  ( 10.872, -19.288, -17.719)  ( 0.02,  0.03,  0.03)
    angle   (-10.946,  -8.255,   2.269)  (-10.943,  -8.254,   2.270)  ( 0.02,  0.02,  0.06)
    torsion ( 26.667,   8.579,   7.023)  ( 26.667,   8.580,   7.023)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.513,  -9.748,   1.685)  (  7.513,  -9.748,   1.685)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       (-47.844,  -8.941, -44.501)  (-47.841,  -8.936, -44.487)  ( 0.01,  0.05,  0.03)
    bond    (  2.526,  -0.643, -28.750)  (  2.526,  -0.643, -28.736)  ( 0.00,  0.01,  0.05)
    angle   ( -0.260,  -2.629,   0.036)  ( -0.257,  -2.626,   0.036)  ( 0.08,  0.13,  0.00)
    torsion (-50.211,  -9.373,  -4.203)  (-50.210,  -9.372,  -4.203)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.100,   3.705, -11.584)  (  0.101,   3.705, -11.584)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (-38.345,  -4.720, -31.949)  (-38.332,  -4.716, -31.946)  ( 0.03,  0.07,  0.01)
    bond    (-46.113,  -4.032, -13.586)  (-46.100,  -4.032, -13.585)  ( 0.03,  0.00,  0.01)
    angle   (  3.403, -31.729,  -2.134)  (  3.403, -31.727,  -2.132)  ( 0.00,  0.01,  0.09)
    torsion (  3.705,   6.365, -14.463)  (  3.705,   6.365, -14.463)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.660,  24.677,  -1.765)  (  0.660,  24.678,  -1.765)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       (-20.346, -18.794,  51.868)  (-20.344, -18.791,  51.881)  ( 0.01,  0.02,  0.03)
    bond    (  1.302,   8.678,  40.215)  (  1.302,   8.678,  40.229)  ( 0.01,  0.01,  0.03)
    angle   (  8.755, -23.842,   4.859)  (  8.757, -23.839,   4.860)  ( 0.02,  0.01,  0.00)
    torsion (-17.002, -12.013,   3.142)  (-17.002, -12.013,   3.142)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-13.401,   8.383,   3.651)  (-13.401,   8.383,   3.651)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( 26.084,  30.102,  -4.160)  ( 26.089,  30.112,  -4.155)  ( 0.02,  0.03,  0.12)
    bond    ( 11.126,  23.554, -14.467)  ( 11.128,  23.563, -14.464)  ( 0.02,  0.04,  0.02)
    angle   ( 12.097,  -8.382,  -4.347)  ( 12.099,  -8.381,  -4.345)  ( 0.02,  0.01,  0.04)
    torsion ( 11.289,   3.498,  14.382)  ( 11.289,   3.498,  14.382)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.427,  11.433,   0.272)  ( -8.427,  11.433,   0.272)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       ( 18.526, -39.778, -26.407)  ( 18.532, -39.768, -26.404)  ( 0.04,  0.02,  0.01)
    bond    ( 25.086, -34.130,  -7.983)  ( 25.091, -34.121,  -7.983)  ( 0.02,  0.03,  0.00)
    angle   (-19.874, -12.232, -10.180)  (-19.872, -12.231, -10.178)  ( 0.01,  0.01,  0.02)
    torsion (  3.136,   4.478,  -9.283)  (  3.136,   4.478,  -9.283)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.178,   2.107,   1.039)  ( 10.178,   2.107,   1.039)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       (  7.860,  34.837, -16.983)  (  7.865,  34.847, -16.979)  ( 0.06,  0.03,  0.03)
    bond    ( 14.463,  26.266, -13.205)  ( 14.466,  26.275, -13.203)  ( 0.02,  0.03,  0.02)
    angle   (-16.360,   2.330, -13.285)  (-16.358,   2.331, -13.284)  ( 0.01,  0.03,  0.01)
    torsion ( -3.902,   6.026,   7.716)  ( -3.902,   6.026,   7.716)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 13.658,   0.216,   1.791)  ( 13.659,   0.216,   1.791)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       ( -7.873, -15.167,  43.304)  ( -7.870, -15.165,  43.317)  ( 0.04,  0.02,  0.03)
    bond    ( -0.868,   5.060,  34.888)  ( -0.869,   5.060,  34.902)  ( 0.01,  0.00,  0.04)
    angle   (-21.919,  -6.059,   0.333)  (-21.916,  -6.058,   0.333)  ( 0.01,  0.03,  0.00)
    torsion (  0.908, -12.282,   1.803)  (  0.908, -12.281,   1.803)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 14.006,  -1.886,   6.280)  ( 14.007,  -1.886,   6.280)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       (-51.852,   6.210,  -4.821)  (-51.840,   6.213,  -4.817)  ( 0.02,  0.05,  0.09)
    bond    (-42.778, -10.304, -17.569)  (-42.767, -10.304, -17.567)  ( 0.03,  0.00,  0.01)
    angle   ( -4.490, -19.573,  22.407)  ( -4.490, -19.571,  22.409)  ( 0.01,  0.01,  0.01)
    torsion ( -7.164,  17.092,   7.415)  ( -7.164,  17.092,   7.415)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.580,  18.995, -17.074)  (  2.580,  18.996, -17.074)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (-21.892,  33.416, -10.976)  (-21.888,  33.430, -10.974)  ( 0.02,  0.04,  0.03)
    bond    (  3.985,  46.253,  -1.556)  (  3.985,  46.266,  -1.556)  ( 0.00,  0.03,  0.01)
    angle   ( 12.794,  -0.143,  28.500)  ( 12.796,  -0.143,  28.503)  ( 0.01,  0.00,  0.01)
    torsion ( 21.003,  -1.921,  -3.329)  ( 21.003,  -1.921,  -3.329)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-59.674, -10.772, -34.592)  (-59.672, -10.772, -34.591)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( 16.439, -30.124, -29.186)  ( 16.447, -30.119, -29.179)  ( 0.05,  0.01,  0.02)
    bond    ( 23.941, -13.747, -21.268)  ( 23.948, -13.745, -21.263)  ( 0.03,  0.01,  0.02)
    angle   (  6.002,  -6.237,  10.790)  (  6.003,  -6.236,  10.792)  ( 0.02,  0.03,  0.01)
    torsion (-12.366, -15.028,  -4.213)  (-12.366, -15.027,  -4.213)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.138,   4.889, -14.495)  ( -1.138,   4.889, -14.495)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
64       (-21.940, -23.277,  25.893)  (-21.927, -23.274,  25.897)  ( 0.06,  0.01,  0.02)
    bond    (-40.965,  -6.579,   9.892)  (-40.953,  -6.579,   9.892)  ( 0.03,  0.00,  0.01)
    angle   ( -5.284, -19.130, -34.597)  ( -5.283, -19.128, -34.595)  ( 0.00,  0.01,  0.01)
    torsion (  4.240, -15.032,   7.554)  (  4.240, -15.031,   7.554)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 20.069,  17.464,  43.044)  ( 20.070,  17.464,  43.045)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
65       ( 40.796,   3.405,  24.426)  ( 40.802,   3.410,  24.435)  ( 0.01,  0.14,  0.04)
    bond    ( 23.063, -17.194,  32.166)  ( 23.067, -17.192,  32.174)  ( 0.02,  0.01,  0.02)
    angle   ( 21.984, -17.670, -25.204)  ( 21.985, -17.668, -25.203)  ( 0.01,  0.01,  0.00)
    torsion ( 12.123,  12.492,  -2.017)  ( 12.123,  12.492,  -2.017)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-16.374,  25.776,  19.481)  (-16.373,  25.777,  19.481)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
66       (-26.156,  36.368,  -2.959)  (-26.152,  36.382,  -2.956)  ( 0.01,  0.04,  0.10)
    bond    (  6.331,  45.473,   1.240)  (  6.331,  45.487,   1.240)  ( 0.00,  0.03,  0.02)
    angle   ( 14.724,  -1.330, -26.398)  ( 14.725,  -1.330, -26.396)  ( 0.01,  0.00,  0.01)
    torsion (-14.786,   2.193,  -4.961)  (-14.786,   2.193,  -4.961)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-32.424,  -9.969,  27.160)  (-32.423,  -9.968,  27.160)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
67       (  4.627,  42.740, -15.860)  (  4.630,  42.754, -15.857)  ( 0.08,  0.03,  0.02)
    bond    ( -3.755,  36.643,  -1.571)  ( -3.755,  36.657,  -1.571)  ( 0.00,  0.04,  0.01)
    angle   (  5.640,   1.335,  17.663)  (  5.643,   1.335,  17.666)  ( 0.05,  0.00,  0.01)
    torsion (  4.474,  -0.552, -23.574)  (  4.474,  -0.552, -23.573)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.731,   5.314,  -8.379)  ( -1.731,   5.314,  -8.379)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
68       ( 18.271, -40.934, -25.955)  ( 18.276, -40.930, -25.943)  ( 0.03,  0.01,  0.05)
    bond    (  9.516,  -9.512, -29.381)  (  9.517,  -9.511, -29.370)  ( 0.01,  0.01,  0.04)
    angle   ( 10.585,  -9.008,   6.347)  ( 10.587,  -9.006,   6.347)  ( 0.03,  0.02,  0.01)
    torsion (  3.658, -33.517,  12.039)  (  3.658, -33.516,  12.039)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.487,  11.103, -14.960)  ( -5.487,  11.103, -14.960)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
69       ( 24.025,  11.369,  41.970)  ( 24.030,  11.375,  41.980)  ( 0.02,  0.05,  0.02)
    bond    (-19.615,  22.847,  35.171)  (-19.613,  22.851,  35.179)  ( 0.01,  0.01,  0.02)
    angle   (  7.009, -17.161,  15.053)  (  7.011, -17.158,  15.054)  ( 0.03,  0.01,  0.01)
    torsion ( 38.219, -14.554,  30.761)  ( 38.219, -14.554,  30.762)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.588,  20.236, -39.015)  ( -1.586,  20.237, -39.014)  ( 0.07,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
70       (-41.184,  23.203, -11.733)  (-41.177,  23.207, -11.723)  ( 0.02,  0.02,  0.08)
    bond    (-18.980,   5.841, -25.923)  (-18.975,   5.841, -25.914)  ( 0.02,  0.01,  0.03)
    angle   (  2.120, -11.595,  -4.168)  (  2.122, -11.592,  -4.167)  ( 0.08,  0.02,  0.02)
    torsion (-23.335,  16.633,  20.836)  (-23.334,  16.633,  20.836)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.990,  12.324,  -2.478)  ( -0.989,  12.325,  -2.478)  ( 0.05,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
71       (-22.415, -18.947,  15.756)  (-22.403, -18.943,  15.760)  ( 0.05,  0.02,  0.03)
    bond    (-32.343, -13.094,  11.917)  (-32.332, -13.092,  11.919)  ( 0.03,  0.01,  0.01)
    angle   ( -3.583, -20.393, -32.120)  ( -3.583, -20.391, -32.118)  ( 0.01,  0.01,  0.01)
    torsion (  2.069,  -3.141,   2.162)  (  2.069,  -3.141,   2.162)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.442,  17.681,  33.797)  ( 11.443,  17.681,  33.797)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
72       ( 27.793,  -2.630,  24.374)  ( 27.802,  -2.627,  24.383)  ( 0.03,  0.11,  0.04)
    bond    ( 26.477,  -7.603,  29.522)  ( 26.483,  -7.603,  29.530)  ( 0.02,  0.00,  0.02)
    angle   ( 23.169,  -8.238, -22.902)  ( 23.171,  -8.236, -22.900)  ( 0.01,  0.02,  0.00)
    torsion (  3.479,   5.766,  -1.636)  (  3.479,   5.767,  -1.636)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-25.332,   7.445,  19.389)  (-25.331,   7.445,  19.390)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
73       (-18.070,  34.733,  -3.409)  (-18.067,  34.747,  -3.406)  ( 0.02,  0.04,  0.09)
    bond    ( -4.935,  45.959,  -3.462)  ( -4.935,  45.973,  -3.463)  ( 0.00,  0.03,  0.00)
    angle   ( 14.917,  -0.514, -28.085)  ( 14.918,  -0.514, -28.083)  ( 0.01,  0.00,  0.01)
    torsion ( -3.445,  -0.437,  -0.896)  ( -3.445,  -0.437,  -0.896)  ( 0.02,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-24.606, -10.275,  29.035)  (-24.605, -10.275,  29.036)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
74       (-50.142, -29.926, -80.632)  (-50.133, -29.923, -80.617)  ( 0.02,  0.01,  0.02)
    bond    (-44.679, -30.815, -66.485)  (-44.673, -30.812, -66.471)  ( 0.01,  0.01,  0.02)
    angle   ( 31.429,  12.864, -27.088)  ( 31.430,  12.864, -27.086)  ( 0.01,  0.00,  0.01)
    torsion (  0.186,  -0.363,   0.043)  (  0.186,  -0.363,   0.043)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-37.078, -11.611,  12.897)  (-37.076, -11.611,  12.897)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 11 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 12 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ciprofloxacin.gpr
 # Expected      1856.51461, found 1856.514611&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (528.311, -572.942, 250.667)  (528.361, -572.894, 250.693)  ( 0.01,  0.01,  0.01)
    bond    (282.282, -338.460, 183.324)  (282.308, -338.434, 183.329)  ( 0.01,  0.01,  0.00)
    angle   (280.722, -207.970,  75.536)  (280.744, -207.951,  75.538)  ( 0.01,  0.01,  0.00)
    torsion (  6.514,  -3.017,  -7.176)  (  6.516,  -3.014,  -7.160)  ( 0.02,  0.07,  0.23)
    oop     (  0.299,  -0.686,  -0.777)  (  0.299,  -0.686,  -0.776)  ( 0.00,  0.01,  0.13)
    vdw     (-41.507, -22.810,  -0.239)  (-41.506, -22.810,  -0.239)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-72.496, 554.343, -121.527)  (-72.435, 554.383, -121.531)  ( 0.08,  0.01,  0.00)
    bond    (181.430, 258.233, -39.725)  (181.458, 258.263, -39.721)  ( 0.02,  0.01,  0.01)
    angle   (-211.223, 244.121, -134.313)  (-211.202, 244.136, -134.309)  ( 0.01,  0.01,  0.00)
    torsion (-15.467,  17.518,  74.486)  (-15.466,  17.520,  74.506)  ( 0.01,  0.01,  0.03)
    oop     ( -0.647,   0.819,   2.707)  ( -0.640,   0.810,   2.675)  ( 0.49,  0.78,  1.15)
    vdw     (-26.588,  33.653, -24.682)  (-26.586,  33.653, -24.682)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-66.485, 527.165, -11.308)  (-66.427, 527.232, -11.295)  ( 0.09,  0.01,  0.12)
    bond    ( 24.585,  49.198,   0.771)  ( 24.613,  49.244,   0.772)  ( 0.12,  0.09,  0.05)
    angle   (-67.748, 469.871, -27.768)  (-67.719, 469.891, -27.767)  ( 0.04,  0.00,  0.00)
    torsion ( -9.725,  14.444,  21.224)  ( -9.725,  14.444,  21.230)  ( 0.00,  0.00,  0.03)
    oop     (  0.353,  -0.045,  -3.367)  (  0.353,  -0.045,  -3.362)  ( 0.00,  0.00,  0.16)
    vdw     (-13.950,  -6.302,  -2.168)  (-13.949,  -6.301,  -2.168)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 78.358, 351.726, -119.279)  ( 78.412, 351.789, -119.246)  ( 0.07,  0.02,  0.03)
    bond    ( 20.962, 334.056, -140.328)  ( 20.991, 334.095, -140.317)  ( 0.14,  0.01,  0.01)
    angle   ( 62.700,  30.687,  -9.682)  ( 62.725,  30.707,  -9.679)  ( 0.04,  0.06,  0.04)
    torsion ( -1.442,  10.041,  17.530)  ( -1.441,  10.045,  17.545)  ( 0.04,  0.04,  0.09)
    oop     ( -0.714,   1.530,   3.590)  ( -0.714,   1.531,   3.594)  ( 0.01,  0.05,  0.11)
    vdw     ( -3.149, -24.589,   9.611)  ( -3.149, -24.588,   9.611)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-77.835,  -8.658, -117.058)  (-77.822,  -8.628, -117.048)  ( 0.02,  0.34,  0.01)
    bond    (  1.526,  54.724, -23.955)  (  1.527,  54.752, -23.950)  ( 0.02,  0.05,  0.02)
    angle   (-71.422,  -3.353, -12.217)  (-71.411,  -3.352, -12.217)  ( 0.02,  0.00,  0.00)
    torsion ( 17.384, -39.452, -89.086)  ( 17.384, -39.451, -89.083)  ( 0.00,  0.00,  0.00)
    oop     (  0.236,  -0.536,  -1.211)  (  0.236,  -0.536,  -1.210)  ( 0.00,  0.01,  0.05)
    vdw     (-25.559, -20.041,   9.411)  (-25.558, -20.041,   9.411)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-334.022, -252.239,  67.839)  (-333.967, -252.189,  67.873)  ( 0.02,  0.02,  0.05)
    bond    (-298.909, -143.325,   5.907)  (-298.880, -143.297,   5.912)  ( 0.01,  0.02,  0.09)
    angle   (-40.697, -55.685,  15.674)  (-40.673, -55.666,  15.678)  ( 0.06,  0.03,  0.02)
    torsion ( -4.860,  10.627,  20.995)  ( -4.860,  10.630,  21.019)  ( 0.01,  0.02,  0.12)
    oop     (  0.233,  -0.526,  -1.282)  (  0.233,  -0.526,  -1.281)  ( 0.00,  0.01,  0.08)
    vdw     ( 10.211, -63.330,  26.545)  ( 10.214, -63.330,  26.545)  ( 0.03,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-218.694,  77.815,   4.517)  (-218.627,  77.860,   4.519)  ( 0.03,  0.06,  0.05)
    bond    (-276.789, 151.802, -85.378)  (-276.753, 151.831, -85.372)  ( 0.01,  0.02,  0.01)
    angle   ( 81.485, -134.677,  56.414)  ( 81.509, -134.654,  56.417)  ( 0.03,  0.02,  0.00)
    torsion ( -8.959,   9.460,  46.715)  ( -8.959,   9.463,  46.741)  ( 0.00,  0.03,  0.06)
    oop     ( -0.441,   0.992,   3.150)  ( -0.437,   0.982,   3.118)  ( 0.20,  0.99,  1.02)
    vdw     (-13.990,  50.238, -16.384)  (-13.988,  50.238, -16.384)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( 13.151,  76.978,  11.134)  ( 13.194,  77.023,  11.161)  ( 0.33,  0.06,  0.24)
    bond    (-13.555,  39.305, -14.952)  (-13.526,  39.328, -14.949)  ( 0.21,  0.06,  0.02)
    angle   (  3.906,  89.549, -29.408)  (  3.919,  89.568, -29.405)  ( 0.34,  0.02,  0.01)
    torsion ( -4.379,  10.462,  32.449)  ( -4.379,  10.465,  32.470)  ( 0.01,  0.02,  0.06)
    oop     (  0.027,  -0.075,  -0.222)  (  0.027,  -0.074,  -0.221)  ( 0.00,  0.00,  0.02)
    vdw     ( 27.152, -62.265,  23.266)  ( 27.153, -62.263,  23.266)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (208.363, -279.713, 119.142)  (208.404, -279.623, 119.269)  ( 0.02,  0.03,  0.11)
    bond    (187.582, -203.883,  60.781)  (187.623, -203.848,  60.788)  ( 0.02,  0.02,  0.01)
    angle   (-23.176, -50.645, 263.513)  (-23.159, -50.623, 263.520)  ( 0.07,  0.04,  0.00)
    torsion ( 45.057, -48.667, -185.202)  ( 45.058, -48.665, -185.184)  ( 0.00,  0.00,  0.01)
    oop     (  1.431,  -2.502,  -7.557)  (  1.413,  -2.470,  -7.462)  ( 1.24,  1.25,  1.26)
    vdw     ( -2.531,  25.983, -12.393)  ( -2.531,  25.984, -12.393)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       ( 14.352, 127.498, -34.742)  ( 14.396, 127.546, -34.714)  ( 0.31,  0.04,  0.08)
    bond    ( 14.795, -92.389,  33.934)  ( 14.825, -92.367,  33.938)  ( 0.20,  0.02,  0.01)
    angle   ( -3.745, 174.780, -60.111)  ( -3.732, 174.800, -60.108)  ( 0.34,  0.01,  0.00)
    torsion ( -2.797,   6.187,  23.576)  ( -2.796,   6.190,  23.595)  ( 0.01,  0.05,  0.08)
    oop     (  0.141,  -0.424,  -1.088)  (  0.141,  -0.423,  -1.087)  ( 0.00,  0.01,  0.11)
    vdw     (  5.957,  39.344, -31.053)  (  5.958,  39.346, -31.053)  ( 0.02,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-310.142, -34.524, -135.031)  (-309.449, -35.122, -132.565)  ( 0.22,  1.73,  1.83)
    bond    (-109.904, -40.910,  -2.486)  (-109.872, -40.882,  -2.482)  ( 0.03,  0.07,  0.17)
    angle   (-241.344,  -1.505, -125.637)  (-241.321,  -1.483, -125.633)  ( 0.01,  1.49,  0.00)
    torsion (  9.228, -10.620,  14.738)  (  9.228, -10.617,  14.754)  ( 0.01,  0.02,  0.11)
    oop     ( -2.539,   2.424, -11.214)  ( -1.903,   1.772,  -8.772)  (25.04, 26.91, 21.77)
    vdw     ( 34.418,  16.088, -10.432)  ( 34.419,  16.089, -10.432)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-15.331,  -5.213,  33.105)  (-15.324,  -5.199,  33.111)  ( 0.05,  0.27,  0.02)
    bond    ( -0.711, -13.338,   5.041)  ( -0.711, -13.325,   5.043)  ( 0.01,  0.10,  0.04)
    angle   (-18.426,   0.231,  -1.986)  (-18.420,   0.231,  -1.986)  ( 0.03,  0.00,  0.01)
    torsion ( -5.404,  15.649,  40.584)  ( -5.404,  15.650,  40.588)  ( 0.00,  0.00,  0.01)
    oop     ( -0.079,   0.232,   0.602)  ( -0.079,   0.232,   0.602)  ( 0.00,  0.00,  0.01)
    vdw     (  9.289,  -7.986, -11.136)  (  9.290,  -7.986, -11.136)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 96.845, -65.483,  34.859)  ( 96.896, -65.439,  34.882)  ( 0.05,  0.07,  0.07)
    bond    (-74.778, 101.329, -42.944)  (-74.750, 101.356, -42.940)  ( 0.04,  0.03,  0.01)
    angle   (153.247, -113.172,  56.084)  (153.268, -113.157,  56.086)  ( 0.01,  0.01,  0.00)
    torsion ( -0.391,  -1.784,  -5.935)  ( -0.390,  -1.782,  -5.918)  ( 0.01,  0.11,  0.29)
    oop     ( -0.156,   0.401,   1.216)  ( -0.156,   0.401,   1.216)  ( 0.00,  0.00,  0.03)
    vdw     ( 18.922, -52.258,  26.438)  ( 18.925, -52.258,  26.438)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       ( -0.877,   9.092,  -4.807)  ( -0.871,   9.106,  -4.801)  ( 0.54,  0.15,  0.13)
    bond    (  0.210,  14.965,  -4.957)  (  0.211,  14.979,  -4.956)  ( 0.00,  0.09,  0.03)
    angle   (-18.540,  -0.468,  -2.203)  (-18.535,  -0.468,  -2.203)  ( 0.03,  0.00,  0.00)
    torsion (  0.130,  -0.332,  -1.002)  (  0.130,  -0.332,  -0.997)  ( 0.00,  0.02,  0.45)
    oop     ( -0.007,   0.018,   0.053)  ( -0.007,   0.018,   0.053)  ( 0.00,  0.00,  0.00)
    vdw     ( 17.329,  -5.091,   3.301)  ( 17.330,  -5.090,   3.301)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( 25.914, -41.899,  16.496)  ( 25.929, -41.889,  16.501)  ( 0.06,  0.02,  0.03)
    bond    ( 38.909, -24.186,  13.345)  ( 38.921, -24.181,  13.346)  ( 0.03,  0.02,  0.01)
    angle   ( 35.857,  50.851, -12.435)  ( 35.859,  50.855, -12.435)  ( 0.01,  0.01,  0.00)
    torsion (  1.051,  -2.570,  -7.725)  (  1.051,  -2.570,  -7.722)  ( 0.01,  0.01,  0.04)
    oop     (  0.031,  -0.077,  -0.230)  (  0.031,  -0.077,  -0.230)  ( 0.00,  0.00,  0.00)
    vdw     (-49.934, -65.917,  23.541)  (-49.933, -65.916,  23.542)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (313.906,   6.327, 351.447)  (313.616,   9.040, 344.857)  ( 0.09, 42.87,  1.88)
    bond    (180.951,  70.243, 137.128)  (180.987,  70.270, 137.138)  ( 0.02,  0.04,  0.01)
    angle   (118.056, -41.651, 286.973)  (118.074, -41.630, 286.986)  ( 0.02,  0.05,  0.00)
    torsion ( 18.286,  -3.713, -101.874)  ( 18.286,  -3.712, -101.868)  ( 0.00,  0.03,  0.01)
    oop     (  1.318, -11.030,  27.670)  (  0.973,  -8.367,  21.050)  (26.20, 24.14, 23.92)
    vdw     ( -4.704,  -7.522,   1.551)  ( -4.704,  -7.521,   1.551)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 90.937, -104.635, -269.298)  ( 90.960, -104.603, -269.292)  ( 0.03,  0.03,  0.00)
    bond    (-11.281, -124.452,  87.022)  (-11.271, -124.418,  87.044)  ( 0.08,  0.03,  0.02)
    angle   (166.965,   8.982, -348.582)  (166.974,   8.991, -348.569)  ( 0.01,  0.10,  0.00)
    torsion (-43.213, -25.781,   2.923)  (-43.215, -25.781,   2.925)  ( 0.01,  0.00,  0.06)
    oop     ( -0.470,   0.957,   2.442)  ( -0.464,   0.945,   2.412)  ( 0.27,  1.12,  1.23)
    vdw     (-21.064,  35.661, -13.103)  (-21.063,  35.661, -13.103)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-61.017, -90.240,  28.892)  (-61.004, -90.231,  28.898)  ( 0.02,  0.01,  0.02)
    bond    ( 13.563,  -8.815,   6.597)  ( 13.572,  -8.811,   6.599)  ( 0.07,  0.04,  0.03)
    angle   (-64.005, -88.602,  13.332)  (-64.002, -88.598,  13.332)  ( 0.00,  0.00,  0.00)
    torsion ( -4.924,   6.352,  18.603)  ( -4.924,   6.352,  18.606)  ( 0.01,  0.01,  0.02)
    oop     ( -0.021,   0.027,   0.078)  ( -0.021,   0.027,   0.078)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.630,   0.799,  -9.718)  ( -5.629,   0.800,  -9.718)  ( 0.02,  0.10,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 50.807, -23.197, -194.811)  ( 50.941, -24.560, -192.917)  ( 0.26,  5.88,  0.97)
    bond    ( 97.077, -132.695, -184.757)  ( 97.096, -132.670, -184.735)  ( 0.02,  0.02,  0.01)
    angle   (  0.246,  50.444, -28.590)  (  0.263,  50.457, -28.578)  ( 0.42,  0.03,  0.04)
    torsion (-24.977,  16.521,  -6.853)  (-24.976,  16.522,  -6.851)  ( 0.01,  0.01,  0.03)
    oop     ( -0.353,   5.757,  -7.625)  ( -0.259,   4.353,  -5.767)  ( 3.35, 24.38, 24.38)
    vdw     (-21.185,  36.777,  33.015)  (-21.184,  36.777,  33.015)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-57.037, 142.917, -88.446)  (-57.381, 142.352, -86.091)  ( 0.60,  0.40,  2.66)
    bond    (-111.773, 201.469, -32.121)  (-111.748, 201.491, -32.102)  ( 0.02,  0.01,  0.06)
    angle   ( -8.934, -50.435, -69.553)  ( -8.921, -50.419, -69.540)  ( 0.15,  0.03,  0.02)
    torsion ( -0.714,  -9.763,  60.169)  ( -0.713,  -9.761,  60.171)  ( 0.06,  0.02,  0.00)
    oop     (  1.667,   2.637,  -9.518)  (  1.282,   2.030,  -7.198)  (23.11, 23.01, 24.38)
    vdw     ( 62.718,  -0.991, -37.423)  ( 62.719,  -0.989, -37.423)  ( 0.00,  0.21,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-33.037,  23.861,  -3.281)  (-33.026,  23.868,  -3.277)  ( 0.03,  0.03,  0.11)
    bond    (-31.077,  20.848,  -2.732)  (-31.067,  20.852,  -2.732)  ( 0.03,  0.02,  0.00)
    angle   (-15.299, -25.688, -22.087)  (-15.298, -25.685, -22.084)  ( 0.01,  0.01,  0.01)
    torsion (  2.488,   4.108,   3.058)  (  2.488,   4.108,   3.058)  ( 0.00,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.851,  24.593,  18.480)  ( 10.851,  24.594,  18.480)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 10.282, -18.925,  36.633)  ( 10.286, -18.920,  36.646)  ( 0.03,  0.03,  0.04)
    bond    (  2.555,  -9.282,  29.641)  (  2.555,  -9.281,  29.653)  ( 0.00,  0.01,  0.04)
    angle   (  9.283,  -5.961,  -2.665)  (  9.285,  -5.958,  -2.665)  ( 0.03,  0.06,  0.01)
    torsion (  3.442, -10.375,  -3.544)  (  3.442, -10.375,  -3.544)  ( 0.02,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.997,   6.693,  13.201)  ( -4.997,   6.693,  13.201)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 19.207,   5.067,   5.196)  ( 19.586,   5.758,   0.207)  ( 1.97, 13.63, 96.01)
    bond    ( 17.215, -149.752,  27.789)  ( 17.241, -149.732,  27.807)  ( 0.15,  0.01,  0.07)
    angle   (  6.980,  91.973, -52.067)  (  6.993,  91.987, -52.056)  ( 0.18,  0.02,  0.02)
    torsion (  1.418,   9.176,   1.378)  (  1.419,   9.178,   1.380)  ( 0.04,  0.01,  0.12)
    oop     ( -0.780,  -1.502,  11.549)  ( -0.441,  -0.849,   6.529)  (26.47, 43.51, 43.47)
    vdw     ( -5.626,  55.172,  16.547)  ( -5.626,  55.173,  16.548)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (  1.610, -29.255, -33.368)  (  1.614, -29.246, -33.360)  ( 0.28,  0.03,  0.02)
    bond    ( -0.887, -26.615, -23.717)  ( -0.888, -26.607, -23.711)  ( 0.01,  0.03,  0.03)
    angle   (-17.708,  -0.085,   0.755)  (-17.704,  -0.084,   0.757)  ( 0.02,  0.01,  0.10)
    torsion (  5.322,  -1.135,   1.073)  (  5.323,  -1.134,   1.074)  ( 0.01,  0.03,  0.04)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 14.883,  -1.420, -11.480)  ( 14.883,  -1.420, -11.480)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 11.625,  18.056,  18.657)  ( 10.525,  21.085,  14.773)  ( 9.46, 16.78, 20.82)
    bond    (-94.231,  40.802, 117.863)  (-94.212,  40.826, 117.885)  ( 0.02,  0.06,  0.02)
    angle   ( 48.969,  12.498, -84.403)  ( 48.983,  12.510, -84.391)  ( 0.03,  0.10,  0.01)
    torsion (  8.637,  -1.660,  -3.054)  (  8.638,  -1.660,  -3.052)  ( 0.01,  0.05,  0.05)
    oop     (  2.615,  -6.878,   9.013)  (  1.481,  -3.887,   5.093)  (43.36, 43.49, 43.49)
    vdw     ( 45.634, -26.705, -20.762)  ( 45.635, -26.705, -20.762)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( 14.295,   5.071,  43.642)  ( 14.300,   5.077,  43.654)  ( 0.03,  0.11,  0.03)
    bond    (  5.791, -12.703,  30.382)  (  5.791, -12.701,  30.394)  ( 0.00,  0.01,  0.04)
    angle   (-15.871,   3.889,   4.649)  (-15.867,   3.891,   4.649)  ( 0.02,  0.05,  0.01)
    torsion ( -7.294,   3.616,   2.901)  ( -7.294,   3.617,   2.901)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 31.670,  10.269,   5.710)  ( 31.670,  10.270,   5.710)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-225.437, -176.595,  49.169)  (-220.915, -180.803,  64.428)  ( 2.01,  2.38, 31.03)
    bond    (-177.616, -107.417, -25.193)  (-177.588, -107.390, -25.182)  ( 0.02,  0.03,  0.04)
    angle   (-44.300, -80.767, 102.134)  (-44.291, -80.759, 102.143)  ( 0.02,  0.01,  0.01)
    torsion ( -6.273,  -6.860,   7.241)  ( -6.273,  -6.860,   7.242)  ( 0.01,  0.01,  0.02)
    oop     (-10.324,   9.769, -35.043)  ( -5.840,   5.524, -19.805)  (43.44, 43.46, 43.48)
    vdw     ( 13.077,   8.681,   0.030)  ( 13.077,   8.682,   0.030)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-14.311,   7.287, -45.364)  (-14.307,   7.292, -45.352)  ( 0.03,  0.07,  0.03)
    bond    ( -5.154,  13.357, -29.996)  ( -5.153,  13.359, -29.984)  ( 0.00,  0.02,  0.04)
    angle   ( -2.576,  -8.355,  -3.280)  ( -2.572,  -8.353,  -3.279)  ( 0.15,  0.02,  0.02)
    torsion (  3.759, -15.013,  -7.335)  (  3.759, -15.012,  -7.334)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.341,  17.298,  -4.754)  (-10.340,  17.298,  -4.754)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( -5.117,  36.964,  25.387)  ( -5.113,  36.973,  25.395)  ( 0.08,  0.02,  0.03)
    bond    (  2.097,  29.406,  25.397)  (  2.096,  29.414,  25.403)  ( 0.01,  0.03,  0.02)
    angle   ( -4.355,  -3.926,   4.902)  ( -4.351,  -3.925,   4.904)  ( 0.09,  0.03,  0.03)
    torsion ( -3.188,   5.779,  -6.429)  ( -3.188,   5.779,  -6.429)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.330,   5.705,   1.517)  (  0.330,   5.705,   1.517)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( 35.226, -27.620,  -3.542)  ( 35.238, -27.613,  -3.539)  ( 0.03,  0.02,  0.09)
    bond    ( 33.176, -19.737,   2.161)  ( 33.186, -19.733,   2.160)  ( 0.03,  0.02,  0.01)
    angle   ( -3.662,  -5.729,   3.931)  ( -3.661,  -5.726,   3.934)  ( 0.02,  0.05,  0.07)
    torsion (  0.494,   0.030,  -7.310)  (  0.494,   0.030,  -7.309)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  5.219,  -2.184,  -2.324)  (  5.219,  -2.184,  -2.324)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-17.568,  11.352, -42.982)  (-17.565,  11.357, -42.968)  ( 0.02,  0.05,  0.03)
    bond    ( -3.438,   9.943, -31.450)  ( -3.438,   9.945, -31.438)  ( 0.00,  0.01,  0.04)
    angle   (-10.225,   1.890,   1.717)  (-10.222,   1.894,   1.717)  ( 0.02,  0.18,  0.02)
    torsion (-10.875,   9.024,   4.044)  (-10.875,   9.025,   4.044)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.970,  -9.506, -17.292)  (  6.970,  -9.506, -17.291)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( 95.839,  75.666, -28.648)  ( 92.162,  76.278, -34.942)  ( 3.84,  0.81, 21.97)
    bond    ( 79.454,  68.430, -40.021)  ( 79.465,  68.438, -40.019)  ( 0.01,  0.01,  0.01)
    angle   (-12.695,   3.065, -19.962)  (-12.694,   3.067, -19.960)  ( 0.01,  0.08,  0.01)
    torsion (  5.630,  -0.653,  10.064)  (  5.630,  -0.653,  10.064)  ( 0.00,  0.01,  0.00)
    oop     (  8.489,  -1.389,  14.481)  (  4.799,  -0.788,   8.183)  (43.46, 43.28, 43.49)
    vdw     ( 14.961,   6.212,   6.789)  ( 14.961,   6.213,   6.789)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (213.702, -114.729,  79.069)  (213.716, -114.694,  79.070)  ( 0.01,  0.03,  0.00)
    bond    ( -2.952, -17.848,   0.346)  ( -2.951, -17.815,   0.346)  ( 0.03,  0.18,  0.00)
    angle   (158.311, -25.849,  19.354)  (158.322, -25.849,  19.353)  ( 0.01,  0.00,  0.00)
    torsion ( -5.870,   1.961,  50.922)  ( -5.870,   1.961,  50.924)  ( 0.00,  0.00,  0.00)
    oop     ( -0.172,   0.057,   1.440)  ( -0.172,   0.057,   1.441)  ( 0.00,  0.00,  0.05)
    vdw     ( 64.385, -73.050,   7.007)  ( 64.387, -73.048,   7.006)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (-126.397, -551.686,  -3.930)  (-126.358, -551.653,  -3.924)  ( 0.03,  0.01,  0.15)
    bond    (-43.893, -58.475,  -1.380)  (-43.862, -58.455,  -1.379)  ( 0.07,  0.03,  0.06)
    angle   (-29.894, -455.917,  21.808)  (-29.887, -455.904,  21.810)  ( 0.02,  0.00,  0.01)
    torsion (  3.958,  -1.494, -32.890)  (  3.958,  -1.494, -32.888)  ( 0.00,  0.00,  0.01)
    oop     ( -0.137,   0.049,   1.124)  ( -0.137,   0.049,   1.124)  ( 0.00,  0.00,  0.04)
    vdw     (-56.431, -35.849,   7.408)  (-56.430, -35.849,   7.408)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-185.296, 327.745, -41.793)  (-185.275, 327.758, -41.791)  ( 0.01,  0.00,  0.00)
    bond    ( 58.595,  46.521,   3.695)  ( 58.611,  46.531,   3.696)  ( 0.03,  0.02,  0.01)
    angle   (-166.151, 211.711, -30.637)  (-166.147, 211.712, -30.637)  ( 0.00,  0.00,  0.00)
    torsion (  0.371,  -0.199,  -3.388)  (  0.371,  -0.199,  -3.387)  ( 0.00,  0.00,  0.03)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-78.112,  69.712, -11.463)  (-78.110,  69.713, -11.464)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (-181.882, -26.397,  58.504)  (-181.849, -26.381,  58.527)  ( 0.02,  0.06,  0.04)
    bond    ( 15.389, -25.488, -12.365)  ( 15.417, -25.476, -12.350)  ( 0.18,  0.05,  0.12)
    angle   (-170.067, -37.509,  64.265)  (-170.061, -37.503,  64.275)  ( 0.00,  0.01,  0.01)
    torsion (-31.171,  14.161,   5.951)  (-31.172,  14.159,   5.949)  ( 0.00,  0.02,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.967,  22.439,   0.652)  (  3.967,  22.440,   0.652)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (129.928,  15.701, 151.664)  (129.948,  15.722, 151.695)  ( 0.02,  0.13,  0.02)
    bond    (  1.917, -24.367, -14.029)  (  1.935, -24.350, -14.008)  ( 0.91,  0.07,  0.15)
    angle   (103.406,   3.975, 146.082)  (103.410,   3.981, 146.093)  ( 0.00,  0.15,  0.01)
    torsion ( 35.985,  22.581,  18.000)  ( 35.983,  22.579,  17.999)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-11.380,  13.512,   1.610)  (-11.380,  13.513,   1.610)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       ( 60.736,  47.490, -91.160)  ( 60.740,  47.495, -91.152)  ( 0.01,  0.01,  0.01)
    bond    (-24.635,  43.305, -50.958)  (-24.634,  43.309, -50.951)  ( 0.01,  0.01,  0.01)
    angle   ( 68.450,   3.819, -29.850)  ( 68.453,   3.819, -29.849)  ( 0.00,  0.01,  0.00)
    torsion ( 21.159,  -0.459, -10.620)  ( 21.158,  -0.459, -10.620)  ( 0.00,  0.02,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.238,   0.825,   0.267)  ( -4.238,   0.825,   0.267)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       ( 17.857, -68.927,  99.322)  ( 17.864, -68.925,  99.329)  ( 0.04,  0.00,  0.01)
    bond    (-48.674, -18.329,  48.688)  (-48.668, -18.329,  48.694)  ( 0.01,  0.00,  0.01)
    angle   ( 52.028, -46.521,  34.490)  ( 52.030, -46.519,  34.492)  ( 0.00,  0.00,  0.00)
    torsion ( 18.791,  -9.332,  15.268)  ( 18.791,  -9.332,  15.268)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.289,   5.255,   0.875)  ( -4.289,   5.255,   0.875)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       ( -1.384,  37.943, -112.220)  ( -1.380,  37.950, -112.215)  ( 0.31,  0.02,  0.00)
    bond    ( 38.547,  52.842, -29.733)  ( 38.551,  52.849, -29.730)  ( 0.01,  0.01,  0.01)
    angle   (-34.379, -11.353, -64.761)  (-34.378, -11.353, -64.758)  ( 0.00,  0.00,  0.00)
    torsion ( -8.694,  -5.083, -20.310)  ( -8.695,  -5.083, -20.310)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.143,   1.536,   2.584)  (  3.143,   1.537,   2.584)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       (-52.442, -82.287,  72.524)  (-52.440, -82.285,  72.537)  ( 0.00,  0.00,  0.02)
    bond    ( 13.120, -10.545,  68.597)  ( 13.120, -10.545,  68.610)  ( 0.00,  0.00,  0.02)
    angle   (-48.860, -56.631,   0.639)  (-48.858, -56.629,   0.639)  ( 0.00,  0.00,  0.00)
    torsion (-20.091, -17.796,   1.107)  (-20.091, -17.796,   1.107)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.390,   2.685,   2.181)  (  3.390,   2.685,   2.181)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       ( 24.447,  87.948, -56.015)  ( 24.448,  87.953, -56.003)  ( 0.00,  0.01,  0.02)
    bond    ( 17.871,   1.513, -55.564)  ( 17.872,   1.513, -55.552)  ( 0.01,  0.02,  0.02)
    angle   ( -5.720,  59.745,  -0.213)  ( -5.719,  59.750,  -0.213)  ( 0.01,  0.01,  0.00)
    torsion ( 11.599,  28.029,   4.495)  ( 11.598,  28.029,   4.494)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.697,  -1.338,  -4.732)  (  0.697,  -1.338,  -4.732)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 12 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 13 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/clopidogrel.gpr
 # Expected       557.87624, found 557.876241&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-349.389, -223.576, -45.570)  (-349.348, -223.542, -45.554)  ( 0.01,  0.02,  0.03)
    bond    ( 10.278, -33.838,  -0.603)  ( 10.305, -33.816,  -0.603)  ( 0.26,  0.06,  0.04)
    angle   (-360.329, -189.305, -48.709)  (-360.315, -189.293, -48.708)  ( 0.00,  0.01,  0.00)
    torsion ( -0.359,  -0.205,   3.663)  ( -0.358,  -0.205,   3.677)  ( 0.01,  0.00,  0.39)
    oop     ( -0.004,  -0.003,   0.036)  ( -0.004,  -0.003,   0.037)  ( 0.00,  0.00,  0.00)
    vdw     (  1.024,  -0.225,   0.043)  (  1.024,  -0.225,   0.043)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (156.769, -15.552,  23.191)  (156.808, -15.505,  23.213)  ( 0.03,  0.30,  0.10)
    bond    (164.318, -90.976,  13.729)  (164.344, -90.949,  13.730)  ( 0.02,  0.03,  0.01)
    angle   (  0.684,  78.478,   3.992)  (  0.696,  78.497,   3.993)  ( 0.84,  0.03,  0.02)
    torsion ( -0.759,  -0.446,   6.049)  ( -0.759,  -0.446,   6.069)  ( 0.02,  0.00,  0.32)
    oop     (  0.070,   0.034,  -0.590)  (  0.070,   0.034,  -0.589)  ( 0.00,  0.00,  0.05)
    vdw     ( -7.543,  -2.641,   0.012)  ( -7.543,  -2.641,   0.012)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-211.932,  42.854,  20.869)  (-211.882,  42.899,  20.885)  ( 0.02,  0.10,  0.08)
    bond    (-125.927, 114.595,  -7.662)  (-125.899, 114.622,  -7.661)  ( 0.02,  0.02,  0.02)
    angle   (-26.801, -112.967, -13.062)  (-26.780, -112.950, -13.059)  ( 0.08,  0.02,  0.02)
    torsion ( -4.310,  -1.339,  47.040)  ( -4.310,  -1.339,  47.053)  ( 0.00,  0.00,  0.03)
    oop     ( -0.106,  -0.070,   1.089)  ( -0.106,  -0.070,   1.089)  ( 0.00,  0.00,  0.00)
    vdw     (-54.788,  42.635,  -6.536)  (-54.787,  42.636,  -6.536)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( 95.973, -383.951, -24.772)  ( 96.017, -383.911, -24.755)  ( 0.05,  0.01,  0.07)
    bond    ( 25.927, -12.270,   1.359)  ( 25.949, -12.244,   1.360)  ( 0.09,  0.22,  0.03)
    angle   (110.176, -356.498,  12.037)  (110.196, -356.484,  12.039)  ( 0.02,  0.00,  0.02)
    torsion (  0.139,  -0.196, -37.773)  (  0.139,  -0.196, -37.760)  ( 0.00,  0.00,  0.03)
    oop     (  0.200,   0.174,  -2.187)  (  0.200,   0.174,  -2.184)  ( 0.00,  0.00,  0.12)
    vdw     (-40.469, -15.160,   1.792)  (-40.468, -15.160,   1.792)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-38.201, -65.722, -61.770)  (-36.382, -66.246, -57.693)  ( 4.76,  0.80,  6.60)
    bond    ( 74.777, -164.063, -84.429)  ( 74.801, -164.041, -84.409)  ( 0.03,  0.01,  0.02)
    angle   (-58.145,  80.607,  42.358)  (-58.132,  80.623,  42.368)  ( 0.02,  0.02,  0.02)
    torsion (  3.568,  -6.797, -17.456)  (  3.568,  -6.798, -17.454)  ( 0.00,  0.01,  0.01)
    oop     ( -4.447,   1.389, -10.142)  ( -2.666,   0.826,  -6.097)  (40.04, 40.51, 39.89)
    vdw     (-53.954,  23.142,   7.899)  (-53.953,  23.143,   7.899)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (249.604, 490.502,  25.647)  (249.625, 490.524,  25.654)  ( 0.01,  0.00,  0.03)
    bond    (-21.543,  30.190,  -0.859)  (-21.529,  30.205,  -0.859)  ( 0.07,  0.05,  0.02)
    angle   (271.987, 454.937,  51.025)  (271.993, 454.945,  51.028)  ( 0.00,  0.00,  0.01)
    torsion (  2.672,   2.007, -24.878)  (  2.672,   2.007, -24.874)  ( 0.00,  0.00,  0.01)
    oop     ( -0.069,  -0.054,   0.642)  ( -0.069,  -0.054,   0.641)  ( 0.00,  0.00,  0.03)
    vdw     ( -3.444,   3.422,  -0.282)  ( -3.444,   3.422,  -0.282)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 56.254,  31.644,  -1.097)  ( 54.319,  30.617, -13.711)  ( 3.44,  3.25, 1149.37)
    bond    ( 77.926,  42.082, 172.758)  ( 77.956,  42.113, 172.767)  ( 0.04,  0.07,  0.01)
    angle   (-62.633, -11.797, -194.133)  (-62.622, -11.786, -194.121)  ( 0.02,  0.10,  0.01)
    torsion (  8.066,  -4.164, -21.071)  (  8.067,  -4.164, -21.071)  ( 0.00,  0.00,  0.00)
    oop     (  5.072,   2.613,  31.589)  (  3.095,   1.543,  18.953)  (38.98, 40.95, 40.00)
    vdw     ( 27.823,   2.910,   9.761)  ( 27.824,   2.911,   9.761)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -3.644,  32.218, -24.451)  ( -3.639,  32.229, -24.446)  ( 0.13,  0.04,  0.02)
    bond    (  0.865,  37.377, -18.440)  (  0.865,  37.389, -18.437)  ( 0.02,  0.03,  0.01)
    angle   ( 27.224,  -8.620, -16.205)  ( 27.227,  -8.620, -16.203)  ( 0.01,  0.01,  0.01)
    torsion (  2.389,  -0.908,  -1.729)  (  2.389,  -0.908,  -1.730)  ( 0.00,  0.01,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-34.121,   4.368,  11.923)  (-34.120,   4.368,  11.924)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       ( -2.739,  12.913,  41.152)  ( -2.735,  12.915,  41.165)  ( 0.15,  0.02,  0.03)
    bond    (  4.780,   4.268,  30.232)  (  4.780,   4.268,  30.245)  ( 0.00,  0.00,  0.04)
    angle   ( 15.743, -16.725,  -0.129)  ( 15.747, -16.722,  -0.129)  ( 0.02,  0.02,  0.00)
    torsion ( -5.400,   9.053,  -0.424)  ( -5.400,   9.053,  -0.424)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-17.862,  16.316,  11.473)  (-17.862,  16.317,  11.473)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (  2.078, -16.271, -27.728)  (  2.984, -14.435, -23.603)  (43.61, 11.29, 14.88)
    bond    (-102.642, 129.702, -111.077)  (-102.623, 129.728, -111.057)  ( 0.02,  0.02,  0.02)
    angle   ( 73.360, -69.177,  96.222)  ( 73.374, -69.164,  96.233)  ( 0.02,  0.02,  0.01)
    torsion (  8.695,  -4.828, -10.298)  (  8.695,  -4.827, -10.297)  ( 0.01,  0.01,  0.01)
    oop     ( -2.278,  -4.478, -10.233)  ( -1.407,  -2.682,  -6.140)  (38.22, 40.10, 40.00)
    vdw     ( 24.943, -67.490,   7.658)  ( 24.944, -67.489,   7.658)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( 63.508,  98.510,  20.887)  ( 63.540,  98.545,  20.917)  ( 0.05,  0.03,  0.14)
    bond    ( 79.413,  99.565,  30.684)  ( 79.432,  99.585,  30.703)  ( 0.02,  0.02,  0.06)
    angle   ( -9.455,  30.220, -39.658)  ( -9.443,  30.233, -39.650)  ( 0.13,  0.04,  0.02)
    torsion ( -3.372,  -4.783,  32.081)  ( -3.372,  -4.782,  32.085)  ( 0.02,  0.02,  0.01)
    oop     ( -0.063,  -0.069,   0.766)  ( -0.063,  -0.069,   0.765)  ( 0.00,  0.00,  0.05)
    vdw     ( -3.016, -26.423,  -2.986)  ( -3.016, -26.422,  -2.986)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       ( 36.879, -28.697,   4.589)  ( 36.888, -28.689,   4.592)  ( 0.03,  0.03,  0.08)
    bond    ( 28.298, -24.654, -12.032)  ( 28.305, -24.649, -12.031)  ( 0.02,  0.02,  0.01)
    angle   ( 21.522,  32.251, -15.443)  ( 21.524,  32.253, -15.441)  ( 0.01,  0.01,  0.02)
    torsion ( -2.195, -14.384,  24.305)  ( -2.195, -14.384,  24.306)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.747, -21.911,   7.758)  (-10.746, -21.910,   7.758)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-11.062,  26.382,  42.449)  (-11.059,  26.386,  42.463)  ( 0.03,  0.02,  0.03)
    bond    (  2.456,   2.184,  29.140)  (  2.456,   2.184,  29.154)  ( 0.00,  0.00,  0.05)
    angle   ( -9.100,  12.487,  -0.169)  ( -9.097,  12.491,  -0.169)  ( 0.03,  0.03,  0.00)
    torsion (-13.673,  31.478,  -1.206)  (-13.673,  31.478,  -1.206)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  9.254, -19.767,  14.685)  (  9.255, -19.767,  14.685)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-22.374,   3.284, -46.984)  (-22.370,   3.289, -46.972)  ( 0.02,  0.14,  0.03)
    bond    (  2.349, -14.286, -31.725)  (  2.349, -14.284, -31.714)  ( 0.00,  0.02,  0.04)
    angle   (  2.240,   3.757,  -1.528)  (  2.243,   3.759,  -1.527)  ( 0.13,  0.05,  0.03)
    torsion (-21.642,  16.962,  -9.243)  (-21.642,  16.962,  -9.243)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.320,  -3.149,  -4.488)  ( -5.320,  -3.149,  -4.488)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (  4.394, -34.112,  26.568)  (  4.397, -34.103,  26.575)  ( 0.08,  0.03,  0.03)
    bond    ( -6.848, -27.243,  24.405)  ( -6.848, -27.236,  24.411)  ( 0.00,  0.03,  0.02)
    angle   (-10.182,   9.645,   7.906)  (-10.179,   9.646,   7.907)  ( 0.03,  0.01,  0.02)
    torsion ( 24.181, -10.781,  -5.244)  ( 24.181, -10.780,  -5.244)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.757,  -5.734,  -0.499)  ( -2.757,  -5.734,  -0.499)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 13.959,  63.834,  11.389)  ( 13.974,  63.839,  11.393)  ( 0.10,  0.01,  0.04)
    bond    ( -1.222,   0.315,  -0.136)  ( -1.208,   0.316,  -0.136)  ( 1.13,  0.03,  0.00)
    angle   ( 16.308,  64.631,   5.533)  ( 16.308,  64.635,   5.533)  ( 0.00,  0.01,  0.00)
    torsion ( -0.765,  -0.332,   6.032)  ( -0.765,  -0.332,   6.036)  ( 0.01,  0.00,  0.07)
    oop     ( -0.007,  -0.003,   0.058)  ( -0.007,  -0.003,   0.058)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.355,  -0.778,  -0.098)  ( -0.354,  -0.778,  -0.098)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       ( 12.322,  -3.009,   6.548)  ( 12.327,  -2.994,   6.553)  ( 0.04,  0.50,  0.08)
    bond    (  0.414,  -4.930,  -0.217)  (  0.414,  -4.915,  -0.217)  ( 0.01,  0.30,  0.00)
    angle   ( 13.851,   1.111,   1.261)  ( 13.855,   1.111,   1.261)  ( 0.03,  0.00,  0.01)
    torsion ( -0.601,  -0.285,   5.301)  ( -0.601,  -0.285,   5.307)  ( 0.00,  0.00,  0.10)
    oop     ( -0.029,  -0.013,   0.242)  ( -0.029,  -0.013,   0.242)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.313,   1.108,  -0.039)  ( -1.312,   1.108,  -0.039)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       ( 58.963, 167.628, 105.376)  ( 58.334, 167.506, 109.911)  ( 1.07,  0.07,  4.30)
    bond    (-95.903,  15.782, -199.133)  (-95.875,  15.805, -199.113)  ( 0.03,  0.14,  0.01)
    angle   (146.380, 133.022, 332.355)  (146.395, 133.037, 332.372)  ( 0.01,  0.01,  0.01)
    torsion ( -3.589,  -2.850,  -0.620)  ( -3.588,  -2.848,  -0.620)  ( 0.01,  0.08,  0.03)
    oop     (  1.121,   0.814, -10.905)  (  0.447,   0.651,  -6.408)  (60.11, 13.23, 41.24)
    vdw     ( 10.954,  20.861, -16.321)  ( 10.955,  20.862, -16.320)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-23.077, -29.872, -73.031)  (-23.037, -29.838, -72.986)  ( 0.17,  0.11,  0.06)
    bond    (-19.638,  14.035,  -5.470)  (-19.621,  14.046,  -5.441)  ( 0.09,  0.08,  0.52)
    angle   ( 16.710, -84.727, -73.898)  ( 16.723, -84.718, -73.882)  ( 0.08,  0.01,  0.02)
    torsion (-13.317, -12.946,  -5.513)  (-13.310, -12.934,  -5.513)  ( 0.06,  0.09,  0.00)
    oop     ( -0.048,  -0.052,   0.010)  ( -0.048,  -0.052,   0.010)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.784,  53.819,  11.841)  ( -6.782,  53.820,  11.841)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-204.549, -533.081, -112.153)  (-204.521, -533.023, -112.106)  ( 0.01,  0.01,  0.04)
    bond    (-41.612, -139.052,   9.393)  (-41.596, -139.020,   9.422)  ( 0.04,  0.02,  0.31)
    angle   (-227.629, -409.825, -137.350)  (-227.622, -409.801, -137.334)  ( 0.00,  0.01,  0.01)
    torsion (  9.314,   0.875,   4.567)  (  9.313,   0.875,   4.567)  ( 0.01,  0.00,  0.00)
    oop     (  2.243,  -0.776,  -1.306)  (  2.246,  -0.775,  -1.304)  ( 0.15,  0.03,  0.09)
    vdw     ( 53.137,  15.698,  12.543)  ( 53.138,  15.699,  12.543)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       ( 23.138, -30.044,  44.333)  ( 23.143, -30.039,  44.347)  ( 0.02,  0.01,  0.03)
    bond    (  3.796,   4.971,  35.728)  (  3.796,   4.971,  35.742)  ( 0.00,  0.00,  0.04)
    angle   ( 24.258, -39.662,   2.939)  ( 24.262, -39.659,   2.939)  ( 0.02,  0.01,  0.00)
    torsion ( -1.992, -20.942,   3.124)  ( -1.993, -20.942,   3.124)  ( 0.03,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.923,  25.590,   2.541)  ( -2.922,  25.591,   2.542)  ( 0.04,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-60.710,  21.745, -41.542)  (-60.672,  21.777, -41.498)  ( 0.06,  0.15,  0.10)
    bond    ( 21.566, -14.742,  79.018)  ( 21.583, -14.732,  79.046)  ( 0.08,  0.07,  0.04)
    angle   (-39.121,  29.579, -57.897)  (-39.110,  29.585, -57.883)  ( 0.03,  0.02,  0.03)
    torsion ( -7.402,  -9.999,   0.215)  ( -7.394,  -9.985,   0.215)  ( 0.10,  0.14,  0.00)
    oop     (  0.114,   0.145,  -0.000)  (  0.114,   0.145,  -0.000)  ( 0.00,  0.01,  0.00)
    vdw     (-35.866,  16.762, -62.877)  (-35.865,  16.763, -62.877)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( -6.669,  -2.268, -13.317)  ( -6.634,  -2.238, -13.271)  ( 0.52,  1.30,  0.34)
    bond    (-22.601,  16.510,  33.915)  (-22.583,  16.521,  33.940)  ( 0.08,  0.07,  0.07)
    angle   ( 11.924,  -8.243,  27.237)  ( 11.933,  -8.238,  27.256)  ( 0.07,  0.06,  0.07)
    torsion ( -3.635,  -4.954,   0.185)  ( -3.627,  -4.941,   0.185)  ( 0.21,  0.28,  0.00)
    oop     ( -0.037,  -0.049,  -0.001)  ( -0.037,  -0.048,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  7.680,  -5.532, -74.653)  (  7.679,  -5.532, -74.651)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 10.608,  -4.893,  -3.028)  ( 10.644,  -4.862,  -2.986)  ( 0.34,  0.63,  1.39)
    bond    (-19.694,  14.338,  19.140)  (-19.678,  14.348,  19.169)  ( 0.08,  0.07,  0.15)
    angle   (-17.825,  13.740,   1.483)  (-17.814,  13.747,   1.497)  ( 0.06,  0.05,  0.91)
    torsion (  2.277,   2.841,   0.060)  (  2.285,   2.855,   0.060)  ( 0.34,  0.48,  0.00)
    oop     ( -0.215,  -0.283,  -0.004)  ( -0.214,  -0.282,  -0.004)  ( 0.01,  0.02,  0.00)
    vdw     ( 46.065, -35.530, -23.708)  ( 46.065, -35.529, -23.707)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 12.080,  -9.216,  -9.313)  ( 12.117,  -9.185,  -9.269)  ( 0.30,  0.33,  0.47)
    bond    (-43.220,  33.860,  -7.922)  (-43.203,  33.871,  -7.894)  ( 0.04,  0.03,  0.35)
    angle   (  6.418,  -3.075, -51.534)  (  6.428,  -3.069, -51.518)  ( 0.16,  0.20,  0.03)
    torsion ( -1.231,  -1.470,   0.029)  ( -1.223,  -1.457,   0.029)  ( 0.66,  0.90,  0.00)
    oop     (  0.244,   0.314,   0.008)  (  0.244,   0.314,   0.008)  ( 0.01,  0.01,  0.00)
    vdw     ( 49.870, -38.844,  50.106)  ( 49.870, -38.843,  50.106)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( 43.867, -18.100,  14.857)  ( 43.899, -18.073,  14.901)  ( 0.07,  0.15,  0.30)
    bond    ( -3.115,   5.491, -146.885)  ( -3.097,   5.502, -146.863)  ( 0.59,  0.21,  0.01)
    angle   ( 37.278, -29.061,  90.511)  ( 37.284, -29.057,  90.532)  ( 0.02,  0.01,  0.02)
    torsion (  6.340,   7.205,  -0.976)  (  6.347,   7.216,  -0.976)  ( 0.10,  0.15,  0.00)
    oop     ( -0.524,  -0.680,  -0.024)  ( -0.524,  -0.679,  -0.024)  ( 0.02,  0.04,  0.00)
    vdw     (  3.888,  -1.054,  72.231)  (  3.888,  -1.054,  72.233)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( 23.636,   7.764,  19.603)  ( 23.645,   7.772,  19.612)  ( 0.04,  0.10,  0.05)
    bond    ( 14.560, -10.532,  14.887)  ( 14.566, -10.528,  14.894)  ( 0.04,  0.03,  0.04)
    angle   (-11.746,   8.984,  17.834)  (-11.744,   8.985,  17.837)  ( 0.01,  0.01,  0.02)
    torsion ( 15.921,  21.527,  -0.353)  ( 15.923,  21.530,  -0.353)  ( 0.01,  0.02,  0.00)
    oop     (  0.008,   0.010,  -0.000)  (  0.008,   0.010,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.893, -12.226, -12.766)  (  4.893, -12.226, -12.766)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       ( -6.728,  12.875,  -6.482)  ( -6.719,  12.882,  -6.473)  ( 0.14,  0.06,  0.14)
    bond    (-11.891,   9.551, -11.628)  (-11.885,   9.555, -11.622)  ( 0.05,  0.04,  0.05)
    angle   ( -5.269,   3.955,   8.635)  ( -5.268,   3.955,   8.639)  ( 0.02,  0.02,  0.04)
    torsion (  3.575,   4.553,   0.087)  (  3.577,   4.556,   0.087)  ( 0.05,  0.07,  0.00)
    oop     (  0.025,   0.032,   0.001)  (  0.025,   0.032,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  6.832,  -5.216,  -3.577)  (  6.832,  -5.216,  -3.577)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (-14.967,  27.329,  75.454)  (-14.964,  27.331,  75.466)  ( 0.02,  0.01,  0.02)
    bond    ( -3.906,   1.114,  49.703)  ( -3.906,   1.113,  49.715)  ( 0.00,  0.01,  0.02)
    angle   (-46.379,  36.170,  -4.454)  (-46.377,  36.171,  -4.454)  ( 0.00,  0.00,  0.00)
    torsion ( 10.449,  13.670,   0.515)  ( 10.449,  13.671,   0.515)  ( 0.01,  0.01,  0.00)
    oop     (  0.184,   0.238,   0.009)  (  0.184,   0.238,   0.009)  ( 0.00,  0.00,  0.00)
    vdw     ( 24.685, -23.863,  29.680)  ( 24.686, -23.862,  29.681)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( -5.503,  -7.610,  15.072)  ( -5.497,  -7.605,  15.086)  ( 0.10,  0.07,  0.10)
    bond    ( -1.988,   1.341,  17.656)  ( -1.988,   1.342,  17.671)  ( 0.01,  0.01,  0.08)
    angle   (  1.428,  -1.086,   0.243)  (  1.432,  -1.084,   0.243)  ( 0.23,  0.17,  0.00)
    torsion ( -5.653,  -7.515,  -0.065)  ( -5.651,  -7.512,  -0.065)  ( 0.03,  0.04,  0.00)
    oop     (  0.049,   0.065,   0.001)  (  0.049,   0.065,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  0.661,  -0.415,  -2.763)  (  0.661,  -0.415,  -2.763)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-12.537,   6.061,   5.316)  (-12.527,   6.069,   5.322)  ( 0.08,  0.14,  0.13)
    bond    (-12.860,   9.733,   6.528)  (-12.852,   9.738,   6.530)  ( 0.06,  0.05,  0.03)
    angle   (  0.010,  -0.026,   0.056)  (  0.011,  -0.026,   0.060)  ( 0.00,  0.00,  0.03)
    torsion ( -1.782,  -2.314,  -0.057)  ( -1.780,  -2.311,  -0.057)  ( 0.10,  0.14,  0.00)
    oop     (  0.107,   0.140,   0.002)  (  0.107,   0.140,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     (  1.988,  -1.472,  -1.213)  (  1.988,  -1.472,  -1.212)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-22.998, -14.729,   8.966)  (-22.989, -14.706,   8.980)  ( 0.04,  0.15,  0.16)
    bond    (-28.227, -40.479, -24.358)  (-28.218, -40.461, -24.351)  ( 0.03,  0.05,  0.03)
    angle   ( -8.792,  25.070, -31.480)  ( -8.792,  25.074, -31.474)  ( 0.00,  0.02,  0.02)
    torsion (-17.297,   5.979,  10.109)  (-17.297,   5.979,  10.109)  ( 0.00,  0.00,  0.00)
    oop     ( -0.893,   0.309,   0.519)  ( -0.892,   0.310,   0.519)  ( 0.05,  0.00,  0.01)
    vdw     ( 32.211,  -5.608,  54.175)  ( 32.211,  -5.608,  54.176)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (228.970, 621.611,  31.645)  (228.985, 621.648,  31.675)  ( 0.01,  0.01,  0.09)
    bond    ( 58.236, 235.285, -11.641)  ( 58.243, 235.306, -11.617)  ( 0.01,  0.01,  0.20)
    angle   (155.144, 355.241,  65.650)  (155.150, 355.256,  65.654)  ( 0.00,  0.00,  0.01)
    torsion (  7.170,  -2.214,  -3.132)  (  7.171,  -2.214,  -3.132)  ( 0.02,  0.01,  0.02)
    oop     ( -0.723,   0.249,   0.417)  ( -0.722,   0.249,   0.418)  ( 0.03,  0.00,  0.00)
    vdw     (  9.142,  33.049, -19.649)  (  9.142,  33.050, -19.648)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (-107.685, -311.567, -33.747)  (-107.655, -311.530, -33.714)  ( 0.03,  0.01,  0.10)
    bond    ( -7.830, -283.974, 125.651)  ( -7.811, -283.947, 125.671)  ( 0.25,  0.01,  0.02)
    angle   (-74.868, -35.140, -103.522)  (-74.859, -35.129, -103.511)  ( 0.01,  0.03,  0.01)
    torsion (  2.136,  -2.699,  -6.132)  (  2.137,  -2.699,  -6.131)  ( 0.06,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-27.123,  10.246, -49.744)  (-27.122,  10.246, -49.743)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (-19.161,  10.651, -38.861)  (-19.156,  10.654, -38.850)  ( 0.03,  0.03,  0.03)
    bond    (-21.019,  -1.122, -37.942)  (-21.016,  -1.122, -37.932)  ( 0.01,  0.02,  0.03)
    angle   (  2.982,  11.917,  -2.006)  (  2.984,  11.920,  -2.006)  ( 0.05,  0.03,  0.03)
    torsion ( -1.170,   0.310,   0.639)  ( -1.170,   0.310,   0.639)  ( 0.02,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.047,  -0.454,   0.449)  (  0.047,  -0.454,   0.449)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (-17.007,  36.631,  28.902)  (-17.002,  36.639,  28.909)  ( 0.03,  0.02,  0.02)
    bond    (-19.545,  27.111,  25.058)  (-19.543,  27.117,  25.063)  ( 0.01,  0.02,  0.02)
    angle   (  7.937,  -3.471,   9.942)  (  7.938,  -3.469,   9.943)  ( 0.02,  0.06,  0.02)
    torsion (  3.176,   0.660,   1.763)  (  3.177,   0.660,   1.763)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.575,  12.331,  -7.860)  ( -8.574,  12.332,  -7.860)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       ( 47.130,  16.999,  -9.739)  ( 47.143,  17.004,  -9.736)  ( 0.03,  0.02,  0.03)
    bond    ( 40.819,  12.299,  -7.273)  ( 40.832,  12.300,  -7.273)  ( 0.03,  0.01,  0.00)
    angle   (  4.450,  -6.656,  13.733)  (  4.451,  -6.653,  13.735)  ( 0.01,  0.04,  0.01)
    torsion (  0.016,   0.138,   0.323)  (  0.016,   0.138,   0.323)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.844,  11.218, -16.522)  (  1.844,  11.218, -16.521)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 13 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 14 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/esomeprazole.gpr
 # Expected       997.16058, found 997.160576&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (164.196, -30.398, -17.115)  (164.240, -30.355, -17.077)  ( 0.03,  0.14,  0.23)
    bond    ( 22.087,  34.962,  11.952)  ( 22.113,  34.988,  11.955)  ( 0.12,  0.08,  0.02)
    angle   (213.339, -98.957,  28.535)  (213.359, -98.939,  28.538)  ( 0.01,  0.02,  0.01)
    torsion (  9.259,   8.251, -38.340)  (  9.260,   8.252, -38.324)  ( 0.01,  0.01,  0.04)
    oop     (  2.175,   1.906,  -9.509)  (  2.172,   1.903,  -9.493)  ( 0.16,  0.15,  0.17)
    vdw     (-82.665,  23.440,  -9.753)  (-82.663,  23.440,  -9.753)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-194.587, 179.873, 317.405)  (-194.526, 179.943, 317.390)  ( 0.03,  0.04,  0.00)
    bond    (  9.289,  69.441,  23.457)  (  9.318,  69.474,  23.461)  ( 0.31,  0.05,  0.02)
    angle   (-146.036, 134.410, 159.779)  (-146.017, 134.434, 159.785)  ( 0.01,  0.02,  0.00)
    torsion (-32.308, -13.312,  54.815)  (-32.307, -13.311,  54.830)  ( 0.00,  0.00,  0.03)
    oop     ( -6.535,  -5.596,  26.451)  ( -6.524,  -5.587,  26.410)  ( 0.18,  0.18,  0.16)
    vdw     (-18.997,  -5.070,  52.903)  (-18.996,  -5.067,  52.904)  ( 0.00,  0.04,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-89.992,  -0.019, -112.760)  (-89.950,   0.024, -112.724)  ( 0.05,  0.08,  0.03)
    bond    (-38.862, -10.395, -15.474)  (-38.837, -10.368, -15.471)  ( 0.07,  0.26,  0.02)
    angle   (-142.133, -57.831, -37.769)  (-142.114, -57.813, -37.765)  ( 0.01,  0.03,  0.01)
    torsion ( 21.720,  18.174, -85.176)  ( 21.721,  18.175, -85.164)  ( 0.00,  0.00,  0.01)
    oop     (  2.730,   2.131, -10.332)  (  2.726,   2.128, -10.314)  ( 0.16,  0.16,  0.17)
    vdw     ( 66.553,  47.901,  35.990)  ( 66.555,  47.902,  35.991)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (226.689, -321.169, -38.665)  (226.743, -321.119, -38.645)  ( 0.02,  0.02,  0.05)
    bond    (-32.139,   7.417,  -7.582)  (-32.111,   7.449,  -7.577)  ( 0.09,  0.43,  0.06)
    angle   (186.761, -284.422, -29.472)  (186.784, -284.405, -29.468)  ( 0.01,  0.01,  0.01)
    torsion ( -1.634,  -4.597,  -9.079)  ( -1.633,  -4.596,  -9.069)  ( 0.06,  0.02,  0.11)
    oop     ( -0.003,  -0.005,   0.035)  ( -0.003,  -0.005,   0.035)  ( 0.00,  0.00,  0.00)
    vdw     ( 73.704, -39.562,   7.433)  ( 73.706, -39.562,   7.433)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-95.654, 352.555, 120.022)  (-95.608, 352.591, 120.037)  ( 0.05,  0.01,  0.01)
    bond    ( 18.507,  66.722,  22.387)  ( 18.545,  66.737,  22.391)  ( 0.21,  0.02,  0.02)
    angle   (-81.591, 336.160,  59.086)  (-81.585, 336.180,  59.087)  ( 0.01,  0.01,  0.00)
    torsion (-14.088, -14.246,  55.093)  (-14.087, -14.246,  55.103)  ( 0.00,  0.01,  0.02)
    oop     ( -0.043,  -0.038,   0.154)  ( -0.043,  -0.038,   0.154)  ( 0.00,  0.00,  0.00)
    vdw     (-18.439, -36.043, -16.698)  (-18.438, -36.042, -16.698)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (-170.819, -333.877, -85.742)  (-170.766, -333.831, -85.721)  ( 0.03,  0.01,  0.03)
    bond    ( 24.508, -14.699,   2.276)  ( 24.539, -14.671,   2.278)  ( 0.13,  0.19,  0.12)
    angle   (-137.210, -250.606, -90.306)  (-137.191, -250.589, -90.304)  ( 0.01,  0.01,  0.00)
    torsion ( -6.352,  -6.639,  30.953)  ( -6.351,  -6.638,  30.969)  ( 0.01,  0.01,  0.05)
    oop     ( -0.117,  -0.124,   0.529)  ( -0.117,  -0.124,   0.530)  ( 0.00,  0.00,  0.03)
    vdw     (-51.647, -61.810, -29.194)  (-51.646, -61.809, -29.194)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (136.700, 239.372, 101.942)  (136.730, 239.402, 101.970)  ( 0.02,  0.01,  0.03)
    bond    (-59.287,  40.804, -39.722)  (-59.267,  40.822, -39.705)  ( 0.03,  0.04,  0.04)
    angle   (183.486, 195.371, 151.724)  (183.496, 195.382, 151.734)  ( 0.01,  0.01,  0.01)
    torsion ( 11.730,  31.489,  -2.761)  ( 11.730,  31.488,  -2.760)  ( 0.00,  0.00,  0.02)
    oop     ( -0.052,  -0.048,   0.202)  ( -0.052,  -0.048,   0.202)  ( 0.00,  0.00,  0.00)
    vdw     (  0.823, -28.243,  -7.502)  (  0.823, -28.242,  -7.502)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (241.516, -69.947, -497.475)  (241.530, -69.914, -497.432)  ( 0.01,  0.05,  0.01)
    bond    ( 95.715,  18.633, -250.426)  ( 95.719,  18.665, -250.410)  ( 0.00,  0.17,  0.01)
    angle   (139.887, -116.485, -231.729)  (139.900, -116.481, -231.720)  ( 0.01,  0.00,  0.00)
    torsion ( 13.941,   3.202,  -5.164)  ( 13.941,   3.202,  -5.161)  ( 0.00,  0.01,  0.05)
    oop     (  2.059,   1.964,  -8.438)  (  2.056,   1.961,  -8.423)  ( 0.18,  0.17,  0.18)
    vdw     (-10.087,  22.740,  -1.718)  (-10.086,  22.740,  -1.718)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-133.399,  32.120, 330.039)  (-133.370,  32.155, 330.075)  ( 0.02,  0.11,  0.01)
    bond    (-74.362, -193.521, 251.137)  (-74.343, -193.499, 251.163)  ( 0.03,  0.01,  0.01)
    angle   (-56.754, 197.156,  86.350)  (-56.745, 197.169,  86.360)  ( 0.02,  0.01,  0.01)
    torsion (  3.312,   2.617,   2.887)  (  3.313,   2.617,   2.887)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.595,  25.868, -10.335)  ( -5.595,  25.868, -10.335)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (  3.792, -23.643,   7.382)  (  3.822, -23.614,   7.407)  ( 0.77,  0.12,  0.35)
    bond    (-74.691, -54.906, -31.978)  (-74.672, -54.888, -31.960)  ( 0.03,  0.03,  0.06)
    angle   ( 60.223,  17.682,  20.604)  ( 60.233,  17.692,  20.611)  ( 0.02,  0.06,  0.03)
    torsion ( -0.752,  -2.541,   6.822)  ( -0.753,  -2.542,   6.822)  ( 0.05,  0.04,  0.01)
    oop     ( -0.164,  -0.141,   0.673)  ( -0.164,  -0.141,   0.673)  ( 0.00,  0.00,  0.03)
    vdw     ( 19.177,  16.264,  11.261)  ( 19.178,  16.265,  11.261)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (  9.356,  -9.008,  -0.103)  (  9.385,  -8.978,  -0.074)  ( 0.32,  0.34,  0.29)
    bond    ( 70.242, -27.806,  10.923)  ( 70.262, -27.788,  10.941)  ( 0.03,  0.06,  0.17)
    angle   (-40.117,  25.015,  -0.462)  (-40.108,  25.026,  -0.455)  ( 0.02,  0.04,  0.33)
    torsion (  0.776,   0.111,  -5.336)  (  0.776,   0.112,  -5.332)  ( 0.02,  0.01,  0.06)
    oop     ( -0.068,  -0.069,   0.306)  ( -0.068,  -0.069,   0.306)  ( 0.00,  0.00,  0.00)
    vdw     (-21.477,  -6.260,  -5.534)  (-21.476,  -6.259,  -5.534)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-424.316, -124.324, -35.867)  (-424.254, -124.267, -35.831)  ( 0.01,  0.05,  0.10)
    bond    (-95.159,  57.313, -18.541)  (-95.123,  57.343, -18.539)  ( 0.04,  0.05,  0.01)
    angle   (-294.006, -268.713,   4.868)  (-293.980, -268.688,   4.869)  ( 0.01,  0.01,  0.02)
    torsion (  0.484,  -0.657,  -4.524)  (  0.485,  -0.656,  -4.493)  ( 0.02,  0.05,  0.69)
    oop     (  0.065,  -0.091,  -0.610)  (  0.065,  -0.091,  -0.609)  ( 0.00,  0.00,  0.08)
    vdw     (-35.701,  87.823, -17.060)  (-35.701,  87.825, -17.060)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-76.844, -21.080,  -5.900)  (-76.802, -21.036,  -5.874)  ( 0.06,  0.21,  0.43)
    bond    (  4.431, -78.812,  12.662)  (  4.458, -78.785,  12.664)  ( 0.61,  0.03,  0.01)
    angle   (-112.044,  23.809, -15.191)  (-112.029,  23.826, -15.191)  ( 0.01,  0.07,  0.00)
    torsion (  0.144,  -0.241,  -1.412)  (  0.144,  -0.240,  -1.388)  ( 0.00,  0.01,  1.66)
    oop     ( -0.002,   0.003,   0.018)  ( -0.002,   0.003,   0.019)  ( 0.00,  0.00,  0.00)
    vdw     ( 30.628,  34.160,  -1.977)  ( 30.628,  34.161,  -1.977)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (124.547,  15.515,   9.655)  (124.592,  15.556,   9.679)  ( 0.04,  0.27,  0.24)
    bond    (-81.099, -19.893,  -5.762)  (-81.075, -19.864,  -5.760)  ( 0.03,  0.15,  0.03)
    angle   (112.560,  44.349,   5.352)  (112.578,  44.361,   5.352)  ( 0.02,  0.03,  0.01)
    torsion (  0.104,  -0.149,  -0.999)  (  0.104,  -0.149,  -0.979)  ( 0.00,  0.01,  2.05)
    oop     (  0.008,  -0.012,  -0.078)  (  0.008,  -0.012,  -0.077)  ( 0.00,  0.00,  0.01)
    vdw     ( 92.973,  -8.779,  11.142)  ( 92.976,  -8.779,  11.142)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( 23.073, -124.605,  19.719)  ( 23.115, -124.560,  19.743)  ( 0.18,  0.04,  0.12)
    bond    ( -7.132,  82.507, -13.213)  ( -7.103,  82.532, -13.212)  ( 0.40,  0.03,  0.01)
    angle   ( -5.746, -119.497,  17.411)  ( -5.733, -119.480,  17.411)  ( 0.22,  0.01,  0.00)
    torsion (  0.185,  -0.262,  -1.771)  (  0.185,  -0.261,  -1.751)  ( 0.00,  0.01,  1.16)
    oop     ( -0.005,   0.007,   0.047)  ( -0.005,   0.007,   0.048)  ( 0.00,  0.00,  0.00)
    vdw     ( 35.770, -87.361,  17.246)  ( 35.771, -87.359,  17.246)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (  2.604,  78.456, -15.276)  (  2.647,  78.500, -15.250)  ( 1.65,  0.06,  0.17)
    bond    ( 79.107,  23.236,   4.878)  ( 79.134,  23.262,   4.880)  ( 0.03,  0.11,  0.03)
    angle   (-53.516,  95.465, -17.502)  (-53.501,  95.481, -17.503)  ( 0.03,  0.02,  0.00)
    torsion (  0.515,  -0.989,  -6.237)  (  0.515,  -0.988,  -6.214)  ( 0.01,  0.05,  0.37)
    oop     ( -0.002,   0.001,   0.008)  ( -0.002,   0.001,   0.009)  ( 0.00,  0.00,  0.00)
    vdw     (-23.500, -39.257,   3.578)  (-23.499, -39.256,   3.578)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-25.286, 428.600, -58.874)  (-25.225, 428.658, -58.839)  ( 0.24,  0.01,  0.06)
    bond    (-133.796,  87.788, -25.421)  (-133.762,  87.821, -25.419)  ( 0.03,  0.04,  0.01)
    angle   (203.147, 330.425, -29.723)  (203.172, 330.450, -29.722)  ( 0.01,  0.01,  0.00)
    torsion ( -0.502,   1.007,   6.804)  ( -0.502,   1.008,   6.835)  ( 0.01,  0.08,  0.45)
    oop     ( -0.047,   0.075,   0.508)  ( -0.047,   0.075,   0.508)  ( 0.00,  0.00,  0.04)
    vdw     (-94.088,   9.305, -11.042)  (-94.085,   9.305, -11.042)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (272.564,   2.226,  84.535)  (272.619,   2.297,  84.561)  ( 0.02,  3.19,  0.03)
    bond    ( 32.722, -204.290,  33.509)  ( 32.759, -204.250,  33.510)  ( 0.11,  0.02,  0.00)
    angle   (219.345, 243.832, -17.055)  (219.362, 243.862, -17.053)  ( 0.01,  0.01,  0.01)
    torsion ( -6.322,   9.158,  63.724)  ( -6.322,   9.158,  63.748)  ( 0.00,  0.01,  0.04)
    oop     ( -0.214,   0.297,   2.136)  ( -0.214,   0.297,   2.135)  ( 0.00,  0.01,  0.05)
    vdw     ( 27.033, -46.771,   2.221)  ( 27.034, -46.770,   2.221)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (1159.740, 318.877, 116.775)  (1159.794, 318.938, 116.801)  ( 0.00,  0.02,  0.02)
    bond    (111.633,   0.358,   7.479)  (111.661,   0.396,   7.479)  ( 0.03,  1.35,  0.00)
    angle   (1031.285, 315.260,  90.568)  (1031.310, 315.283,  90.572)  ( 0.00,  0.01,  0.00)
    torsion ( -2.668,   4.156,  31.704)  ( -2.668,   4.157,  31.725)  ( 0.00,  0.01,  0.06)
    oop     ( -0.043,   0.089,   0.586)  ( -0.043,   0.089,   0.587)  ( 0.00,  0.00,  0.06)
    vdw     ( 19.534,  -0.986, -13.562)  ( 19.534,  -0.986, -13.562)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (-385.126, -435.663, -28.955)  (-385.063, -435.606, -28.925)  ( 0.02,  0.01,  0.10)
    bond    (288.985, -106.431,  44.829)  (289.023, -106.393,  44.829)  ( 0.01,  0.04,  0.00)
    angle   (-682.260, -317.745,   0.006)  (-682.236, -317.727,   0.006)  ( 0.00,  0.01,  0.00)
    torsion (  6.396, -10.399, -70.429)  (  6.397, -10.398, -70.401)  ( 0.00,  0.01,  0.04)
    oop     (  0.140,  -0.223,  -1.521)  (  0.140,  -0.223,  -1.520)  ( 0.00,  0.00,  0.08)
    vdw     (  1.612,  -0.864,  -1.840)  (  1.612,  -0.864,  -1.840)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-842.703, -351.576, -465.122)  (-842.676, -351.551, -465.107)  ( 0.00,  0.01,  0.00)
    bond    (-161.101,   6.643, -48.436)  (-161.085,   6.666, -48.428)  ( 0.01,  0.34,  0.02)
    angle   (-630.046, -354.640, -384.272)  (-630.037, -354.637, -384.268)  ( 0.00,  0.00,  0.00)
    torsion (  4.100,  -2.442, -23.606)  (  4.100,  -2.442, -23.603)  ( 0.00,  0.00,  0.01)
    oop     (  0.022,  -0.047,  -0.324)  (  0.022,  -0.047,  -0.324)  ( 0.00,  0.00,  0.00)
    vdw     (-55.679,  -1.091,  -8.484)  (-55.677,  -1.091,  -8.484)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-107.405, 237.353, 258.139)  (-107.389, 237.372, 258.140)  ( 0.02,  0.01,  0.00)
    bond    ( 86.180, 110.253,  19.659)  ( 86.189, 110.267,  19.659)  ( 0.01,  0.01,  0.00)
    angle   ( 53.440, -85.249, 243.859)  ( 53.442, -85.248, 243.861)  ( 0.00,  0.00,  0.00)
    torsion ( -1.509,   0.859,   1.795)  ( -1.509,   0.859,   1.795)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-245.516, 211.490,  -7.174)  (-245.510, 211.494,  -7.175)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-39.343,  66.222,   2.603)  (-39.332,  66.232,   2.608)  ( 0.03,  0.02,  0.20)
    bond    ( 13.208,  12.111,   5.841)  ( 13.216,  12.117,   5.843)  ( 0.06,  0.05,  0.03)
    angle   (-60.314,  65.127,   1.351)  (-60.311,  65.130,   1.351)  ( 0.01,  0.00,  0.01)
    torsion (  0.664,   0.643,  -2.841)  (  0.664,   0.644,  -2.838)  ( 0.01,  0.01,  0.12)
    oop     (  0.018,   0.019,  -0.080)  (  0.018,   0.019,  -0.080)  ( 0.00,  0.00,  0.00)
    vdw     (  7.080, -11.678,  -1.667)  (  7.080, -11.678,  -1.667)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( -8.065, -44.056,   4.880)  ( -8.061, -44.042,   4.882)  ( 0.05,  0.03,  0.04)
    bond    ( -6.253, -34.723,   4.129)  ( -6.253, -34.710,   4.129)  ( 0.00,  0.04,  0.00)
    angle   ( -4.451,   0.214,  -4.937)  ( -4.448,   0.214,  -4.934)  ( 0.07,  0.00,  0.05)
    torsion (  0.281,  -1.964, -16.082)  (  0.280,  -1.964, -16.083)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.359,  -7.583,  21.770)  (  2.360,  -7.583,  21.771)  ( 0.05,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (  7.278, -16.197,  48.574)  (  7.284, -16.193,  48.584)  ( 0.07,  0.03,  0.02)
    bond    ( 22.381,  13.458,  37.096)  ( 22.384,  13.459,  37.105)  ( 0.01,  0.01,  0.02)
    angle   (-15.513,  31.047,  -1.906)  (-15.511,  31.049,  -1.905)  ( 0.01,  0.01,  0.04)
    torsion ( -6.680, -21.602,  11.866)  ( -6.681, -21.603,  11.866)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.091, -39.099,   1.518)  (  7.091, -39.098,   1.518)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       ( 22.106, -16.837, -49.646)  ( 22.109, -16.829, -49.635)  ( 0.01,  0.04,  0.02)
    bond    (  8.565, -18.256, -28.608)  (  8.566, -18.252, -28.599)  ( 0.01,  0.02,  0.03)
    angle   ( -4.921, -42.111,  25.400)  ( -4.919, -42.108,  25.401)  ( 0.03,  0.01,  0.00)
    torsion (  9.100,  -0.002,   2.727)  (  9.100,  -0.002,   2.727)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  9.362,  43.532, -49.165)  (  9.362,  43.533, -49.164)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-32.971,  20.780, -22.865)  (-32.961,  20.786, -22.862)  ( 0.03,  0.03,  0.02)
    bond    (-33.689,  24.661,  -9.207)  (-33.681,  24.666,  -9.207)  ( 0.03,  0.02,  0.00)
    angle   (  4.332,   3.083,  -7.590)  (  4.333,   3.084,  -7.587)  ( 0.03,  0.05,  0.04)
    torsion ( -3.400,  -6.881,  -5.998)  ( -3.400,  -6.881,  -5.998)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.214,  -0.083,  -0.070)  ( -0.214,  -0.083,  -0.070)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       ( 29.391,  32.362,   5.584)  ( 29.400,  32.369,   5.588)  ( 0.03,  0.02,  0.07)
    bond    ( 32.279,  25.004,  10.637)  ( 32.287,  25.009,  10.638)  ( 0.02,  0.02,  0.01)
    angle   (  2.194,  -0.127,  -6.372)  (  2.195,  -0.125,  -6.369)  ( 0.04,  0.02,  0.05)
    torsion ( -4.847,   5.257,   2.351)  ( -4.847,   5.257,   2.351)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.236,   2.228,  -1.031)  ( -0.236,   2.228,  -1.031)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 24.103,  -8.782,  24.176)  ( 24.111,  -8.776,  24.181)  ( 0.03,  0.07,  0.02)
    bond    ( 31.491, -22.473,  25.990)  ( 31.497, -22.470,  25.994)  ( 0.02,  0.01,  0.02)
    angle   ( -9.745, -30.651, -14.688)  ( -9.744, -30.649, -14.687)  ( 0.01,  0.01,  0.01)
    torsion ( -0.676,   0.286,   1.067)  ( -0.676,   0.286,   1.066)  ( 0.01,  0.00,  0.05)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.034,  44.057,  11.808)  (  3.034,  44.058,  11.808)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       ( 15.748,  15.483, -36.923)  ( 15.753,  15.486, -36.913)  ( 0.03,  0.02,  0.03)
    bond    ( 19.159,  16.724, -32.895)  ( 19.161,  16.726, -32.887)  ( 0.01,  0.01,  0.03)
    angle   ( -3.704,  -4.122,  -4.254)  ( -3.702,  -4.120,  -4.253)  ( 0.05,  0.04,  0.03)
    torsion ( -1.276,   1.541,   0.040)  ( -1.276,   1.540,   0.040)  ( 0.02,  0.03,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.570,   1.340,   0.186)  (  1.570,   1.340,   0.186)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-18.937,  28.982,  24.423)  (-18.932,  28.990,  24.428)  ( 0.02,  0.03,  0.02)
    bond    (-13.995,  29.540,  23.071)  (-13.993,  29.547,  23.075)  ( 0.01,  0.03,  0.02)
    angle   (-26.266,  -2.230, -13.074)  (-26.263,  -2.229, -13.073)  ( 0.01,  0.04,  0.01)
    torsion (  0.414,  -1.810,   2.570)  (  0.414,  -1.810,   2.569)  ( 0.00,  0.01,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 20.910,   3.482,  11.856)  ( 20.910,   3.482,  11.856)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (-22.872, -33.260, -28.499)  (-22.864, -33.251, -28.497)  ( 0.03,  0.03,  0.01)
    bond    (-25.733, -29.234,  -5.362)  (-25.727, -29.226,  -5.362)  ( 0.02,  0.03,  0.00)
    angle   ( 18.510, -15.990,  -1.671)  ( 18.511, -15.989,  -1.669)  ( 0.01,  0.01,  0.11)
    torsion (  3.333,   1.004, -21.468)  (  3.333,   1.004, -21.468)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-18.982,  10.960,   0.002)  (-18.981,  10.960,   0.002)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       (-12.511,   7.191,  43.667)  (-12.507,   7.196,  43.677)  ( 0.03,  0.07,  0.02)
    bond    (-11.801,  20.330,  32.128)  (-11.800,  20.334,  32.137)  ( 0.01,  0.02,  0.03)
    angle   ( 16.132,   4.737,   2.925)  ( 16.134,   4.739,   2.926)  ( 0.01,  0.03,  0.03)
    torsion ( -7.580, -17.156,   8.071)  ( -7.580, -17.155,   8.072)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -9.262,  -0.722,   0.543)  ( -9.262,  -0.722,   0.543)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       ( 10.963,  44.619, -21.853)  ( 10.965,  44.626, -21.843)  ( 0.02,  0.01,  0.04)
    bond    ( -1.579,  24.927, -33.437)  ( -1.579,  24.932, -33.428)  ( 0.01,  0.02,  0.03)
    angle   ( 11.280,   2.411,   1.266)  ( 11.282,   2.412,   1.266)  ( 0.02,  0.05,  0.05)
    torsion (  4.701,  17.021,  12.473)  (  4.701,  17.021,  12.473)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.440,   0.260,  -2.154)  ( -3.440,   0.260,  -2.154)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       ( -0.369,  -5.573,  -0.544)  ( -0.360,  -5.561,  -0.538)  ( 0.32,  0.21,  0.29)
    bond    ( -3.744,  -5.083,   0.375)  ( -3.739,  -5.074,   0.375)  ( 0.14,  0.19,  0.00)
    angle   (  2.729,  -1.968,   0.643)  (  2.733,  -1.966,   0.643)  ( 0.12,  0.08,  0.00)
    torsion (  0.141,  -0.201,  -1.325)  (  0.141,  -0.201,  -1.320)  ( 0.00,  0.00,  0.39)
    oop     (  0.005,  -0.007,  -0.043)  (  0.005,  -0.007,  -0.043)  ( 0.00,  0.00,  0.00)
    vdw     (  0.501,   1.687,  -0.193)  (  0.501,   1.687,  -0.193)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       (-26.171,   6.470,  -5.254)  (-26.156,   6.476,  -5.249)  ( 0.06,  0.09,  0.10)
    bond    (-29.191,   3.711,  -3.730)  (-29.177,   3.711,  -3.730)  ( 0.05,  0.01,  0.01)
    angle   (  0.342,   2.361,  -0.323)  (  0.342,   2.366,  -0.323)  ( 0.00,  0.22,  0.00)
    torsion (  0.150,  -0.213,  -1.393)  (  0.150,  -0.213,  -1.388)  ( 0.00,  0.00,  0.34)
    oop     ( -0.001,   0.001,   0.007)  ( -0.001,   0.001,   0.007)  ( 0.00,  0.00,  0.00)
    vdw     (  2.529,   0.612,   0.185)  (  2.529,   0.612,   0.185)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (-15.688,  22.504,  -4.986)  (-15.681,  22.517,  -4.981)  ( 0.05,  0.06,  0.11)
    bond    (-12.077,  26.778,  -5.388)  (-12.074,  26.791,  -5.387)  ( 0.02,  0.05,  0.01)
    angle   ( -3.761,  -1.725,  -0.153)  ( -3.756,  -1.724,  -0.153)  ( 0.12,  0.05,  0.00)
    torsion ( -0.021,   0.028,   0.184)  ( -0.021,   0.028,   0.189)  ( 0.00,  0.00,  0.09)
    oop     (  0.004,  -0.005,  -0.036)  (  0.004,  -0.005,  -0.036)  ( 0.00,  0.00,  0.00)
    vdw     (  0.167,  -2.573,   0.407)  (  0.168,  -2.573,   0.407)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (  1.656,   4.577,   2.516)  (  1.664,   4.588,   2.522)  ( 0.53,  0.25,  0.21)
    bond    (  3.709,   4.859,  -0.358)  (  3.715,   4.869,  -0.358)  ( 0.15,  0.19,  0.00)
    angle   ( -0.284,   0.214,   0.015)  ( -0.281,   0.215,   0.015)  ( 0.09,  0.04,  0.00)
    torsion ( -0.300,   0.446,   2.942)  ( -0.300,   0.446,   2.947)  ( 0.00,  0.01,  0.18)
    oop     (  0.007,  -0.011,  -0.070)  (  0.007,  -0.011,  -0.069)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.477,  -0.931,  -0.013)  ( -1.477,  -0.931,  -0.013)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (352.958, -97.553, -19.247)  (352.972, -97.530, -19.241)  ( 0.00,  0.02,  0.03)
    bond    ( 22.848,  82.013,  -8.313)  ( 22.850,  82.033,  -8.313)  ( 0.01,  0.02,  0.00)
    angle   ( 49.216, -12.796,   9.026)  ( 49.222, -12.796,   9.026)  ( 0.01,  0.00,  0.00)
    torsion (  2.724,  -3.366, -25.736)  (  2.724,  -3.366, -25.730)  ( 0.00,  0.00,  0.02)
    oop     (  0.108,  -0.137,  -1.058)  (  0.108,  -0.137,  -1.057)  ( 0.00,  0.00,  0.09)
    vdw     (278.062, -163.267,   6.833)  (278.069, -163.264,   6.832)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       (-107.006, -67.700,  28.976)  (-106.989, -67.689,  28.981)  ( 0.02,  0.02,  0.02)
    bond    (-102.009, -70.383,  -0.756)  (-101.995, -70.376,  -0.757)  ( 0.01,  0.01,  0.05)
    angle   (  1.823,  -2.644,  -0.414)  (  1.825,  -2.641,  -0.414)  ( 0.10,  0.14,  0.01)
    torsion ( -3.268,   4.409,  30.442)  ( -3.268,   4.409,  30.449)  ( 0.00,  0.00,  0.02)
    oop     ( -0.045,   0.060,   0.422)  ( -0.045,   0.060,   0.423)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.508,   0.859,  -0.719)  ( -3.507,   0.859,  -0.719)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 14 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 15 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/ibuprofen.gpr
 # Expected      2976.56528, found 2976.565277&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-158.060, -460.516, -55.514)  (-158.032, -460.485, -55.489)  ( 0.02,  0.01,  0.05)
    bond    ( 10.155,  19.969,   0.323)  ( 10.175,  19.991,   0.338)  ( 0.19,  0.11,  0.49)
    angle   (-161.499, -462.935, -54.488)  (-161.492, -462.928, -54.480)  ( 0.00,  0.00,  0.01)
    torsion (  7.010,  -4.799,  10.158)  (  7.011,  -4.798,  10.160)  ( 0.02,  0.02,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-13.727, -12.750, -11.507)  (-13.727, -12.750, -11.507)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-180.269,  61.200, 305.191)  (-180.235,  61.229, 305.223)  ( 0.02,  0.05,  0.01)
    bond    ( 28.291, -13.551,   9.130)  ( 28.313, -13.535,   9.151)  ( 0.08,  0.11,  0.23)
    angle   (-182.087,  51.286, 303.102)  (-182.076,  51.297, 303.111)  ( 0.01,  0.02,  0.00)
    torsion (-17.771,  15.168,  -1.323)  (-17.770,  15.170,  -1.320)  ( 0.01,  0.02,  0.21)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.702,   8.298,  -5.719)  ( -8.702,   8.298,  -5.719)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (176.266, 340.309, -214.728)  (176.661, 336.212, -217.605)  ( 0.22,  1.20,  1.34)
    bond    (-10.523, -16.759,  19.236)  (-10.498, -16.741,  19.252)  ( 0.24,  0.11,  0.08)
    angle   (173.201, 155.834, -319.760)  (173.211, 155.842, -319.750)  ( 0.01,  0.01,  0.00)
    torsion ( 12.311, 190.496,  93.133)  ( 12.311, 190.498,  93.135)  ( 0.00,  0.00,  0.00)
    oop     ( -1.275,   9.366,   7.168)  ( -0.916,   5.239,   4.263)  (28.17, 44.06, 40.53)
    vdw     (  2.553,   1.373, -14.505)  (  2.553,   1.373, -14.505)  ( 0.01,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-10.791, 271.978, 322.700)  (-10.765, 272.006, 322.730)  ( 0.25,  0.01,  0.01)
    bond    (  3.052, -16.442,  -9.180)  (  3.067, -16.423,  -9.158)  ( 0.51,  0.11,  0.24)
    angle   (-10.627, 266.759, 323.540)  (-10.618, 266.767, 323.547)  ( 0.08,  0.00,  0.00)
    torsion (  2.849,   6.311,  -2.954)  (  2.851,   6.313,  -2.954)  ( 0.06,  0.03,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.066,  15.350,  11.294)  ( -6.066,  15.350,  11.295)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (-428.159, -1221.409, -583.618)  (-425.407, -1211.399, -570.576)  ( 0.64,  0.82,  2.23)
    bond    ( 44.303, -89.317, -58.711)  ( 44.329, -89.299, -58.699)  ( 0.06,  0.02,  0.02)
    angle   (-201.213, -723.372,  74.844)  (-201.201, -723.357,  74.858)  ( 0.01,  0.00,  0.02)
    torsion (-216.277, -471.062, -553.300)  (-216.275, -471.062, -553.302)  ( 0.00,  0.00,  0.00)
    oop     ( -9.806, -26.602, -41.203)  ( -7.096, -16.627, -28.184)  (27.64, 37.50, 31.60)
    vdw     (-45.164,  88.944,  -5.248)  (-45.164,  88.946,  -5.248)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (683.995, 876.514,  75.017)  (680.894, 872.601,  71.548)  ( 0.45,  0.45,  4.62)
    bond    (-28.103, -57.233,  82.338)  (-28.077, -57.213,  82.346)  ( 0.09,  0.04,  0.01)
    angle   (403.540, 595.341, -226.757)  (403.551, 595.355, -226.748)  ( 0.00,  0.00,  0.00)
    torsion (240.406, 261.628, 254.450)  (240.408, 261.630, 254.450)  ( 0.00,  0.00,  0.00)
    oop     ( 14.615,  15.383,  18.011)  ( 11.475,  11.432,  14.525)  (21.49, 25.69, 19.36)
    vdw     ( 53.537,  61.395, -53.026)  ( 53.537,  61.396, -53.025)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-831.703, -136.195, 147.048)  (-829.681, -137.185, 144.673)  ( 0.24,  0.73,  1.62)
    bond    (-168.069, -26.034,   8.805)  (-168.042, -26.012,   8.811)  ( 0.02,  0.09,  0.07)
    angle   (-505.496, -118.002,  14.382)  (-505.485, -117.990,  14.390)  ( 0.00,  0.01,  0.06)
    torsion (-252.846, -13.122, 139.543)  (-252.846, -13.121, 139.537)  ( 0.00,  0.01,  0.00)
    oop     (-15.508,   5.435,  12.366)  (-13.526,   4.409,   9.983)  (12.78, 18.88, 19.27)
    vdw     (110.216,  15.528, -28.048)  (110.219,  15.529, -28.048)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (282.608, -687.549, 675.956)  (281.674, -685.535, 675.373)  ( 0.33,  0.29,  0.09)
    bond    (  1.458,  71.116,  68.487)  (  1.475,  71.143,  68.499)  ( 1.21,  0.04,  0.02)
    angle   (186.881, -654.396, 696.438)  (186.895, -654.380, 696.447)  ( 0.01,  0.00,  0.00)
    torsion ( 34.783,  -7.281, -106.662)  ( 34.783,  -7.282, -106.665)  ( 0.00,  0.01,  0.00)
    oop     ( 10.990, -10.864,   8.861)  ( 10.024,  -8.895,   8.260)  ( 8.79, 18.13,  6.78)
    vdw     ( 48.496, -86.123,   8.832)  ( 48.497, -86.121,   8.832)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (253.796, 490.420, -1105.560)  (251.011, 486.447, -1104.132)  ( 1.10,  0.81,  0.13)
    bond    ( 61.002,  37.800, -126.985)  ( 61.019,  37.811, -126.957)  ( 0.03,  0.03,  0.02)
    angle   (302.572, 556.654, -777.605)  (302.585, 556.667, -777.597)  ( 0.00,  0.00,  0.00)
    torsion (-69.212, -104.841, -271.849)  (-69.215, -104.847, -271.852)  ( 0.00,  0.01,  0.00)
    oop     ( 11.805,  20.515,  -8.930)  (  8.992,  16.521,  -7.537)  (23.83, 19.47, 15.60)
    vdw     (-52.371, -19.707,  79.811)  (-52.370, -19.705,  79.812)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-327.890, -118.413, 1299.703)  (-328.102, -121.254, 1290.729)  ( 0.06,  2.40,  0.69)
    bond    ( 70.628,  28.998,   6.944)  ( 70.646,  29.024,   6.955)  ( 0.03,  0.09,  0.16)
    angle   (-411.178, -243.734, 816.661)  (-411.158, -243.726, 816.669)  ( 0.00,  0.00,  0.00)
    torsion (107.997,  97.872, 391.223)  (107.999,  97.871, 391.223)  ( 0.00,  0.00,  0.00)
    oop     (  1.581,  10.950,  33.987)  (  1.326,   8.077,  24.994)  (16.12, 26.24, 26.46)
    vdw     (-96.918, -12.500,  50.888)  (-96.915, -12.500,  50.888)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (511.334, 140.929, -231.841)  (494.290, 141.547, -217.420)  ( 3.33,  0.44,  6.22)
    bond    ( -9.197,  36.479,   4.844)  ( -9.178,  36.501,   4.864)  ( 0.21,  0.06,  0.39)
    angle   (341.845, 116.747, -400.210)  (341.857, 116.761, -400.199)  ( 0.00,  0.01,  0.00)
    torsion (109.631,  15.471, 237.942)  (109.634,  15.472, 237.944)  ( 0.00,  0.01,  0.00)
    oop     ( 63.741, -19.452, -68.052)  ( 46.663, -18.870, -53.663)  (26.79,  2.99, 21.14)
    vdw     (  5.314,  -8.316,  -6.366)  (  5.314,  -8.316,  -6.366)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (145.393, -38.425, -334.126)  (145.421, -38.398, -334.095)  ( 0.02,  0.07,  0.01)
    bond    ( -4.442,   1.405,   6.036)  ( -4.425,   1.422,   6.058)  ( 0.40,  1.19,  0.36)
    angle   (146.189, -36.918, -331.367)  (146.197, -36.909, -331.359)  ( 0.01,  0.02,  0.00)
    torsion (  2.661,  10.075,  -1.921)  (  2.662,  10.077,  -1.921)  ( 0.05,  0.02,  0.03)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.986, -12.988,  -6.874)  (  0.986, -12.988,  -6.874)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       (-251.696, -1106.298, 1512.920)  (-205.175, -1116.817, 1482.607)  (18.48,  0.95,  2.00)
    bond    (-24.751,  -1.393, -11.881)  (-24.732,  -1.375, -11.844)  ( 0.08,  1.31,  0.31)
    angle   (-84.022, -1151.666, 1419.542)  (-84.008, -1151.651, 1419.550)  ( 0.02,  0.00,  0.00)
    torsion ( 35.429, -20.000, -40.923)  ( 35.428, -19.999, -40.925)  ( 0.00,  0.00,  0.01)
    oop     (-188.460,  78.650, 129.944)  (-141.971,  68.097,  99.587)  (24.67, 13.42, 23.36)
    vdw     ( 10.107, -11.890,  16.238)  ( 10.108, -11.890,  16.238)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-519.375, -184.782, -719.294)  (-529.486, -175.687, -714.586)  ( 1.95,  4.92,  0.65)
    bond    (  5.843,   7.534,  -6.324)  (  5.851,   7.567,  -6.314)  ( 0.13,  0.44,  0.16)
    angle   (-584.363, -158.823, -733.997)  (-584.362, -158.823, -734.000)  ( 0.00,  0.00,  0.00)
    torsion ( 12.549,  10.708,  27.711)  ( 12.517,  10.708,  27.682)  ( 0.25,  0.00,  0.10)
    oop     ( 38.865, -36.829, -21.148)  ( 28.778, -27.767, -16.420)  (25.95, 24.60, 22.36)
    vdw     (  7.730,  -7.371,  14.464)  (  7.730,  -7.371,  14.465)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       (533.565, 1184.402, -648.002)  (514.632, 1185.436, -636.068)  ( 3.55,  0.09,  1.84)
    bond    ( -0.918,  -0.369,  -1.437)  ( -0.909,  -0.368,  -1.414)  ( 0.86,  0.06,  1.58)
    angle   (470.948, 1194.060, -613.314)  (470.951, 1194.068, -613.317)  ( 0.00,  0.00,  0.00)
    torsion (-23.370,   9.163,  12.638)  (-23.369,   9.163,  12.639)  ( 0.00,  0.00,  0.00)
    oop     ( 82.164, -23.441, -46.720)  ( 63.217, -22.417, -34.806)  (23.06,  4.37, 25.50)
    vdw     (  4.741,   4.990,   0.830)  (  4.742,   4.990,   0.830)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 28.718, 154.700, -17.368)  ( 28.732, 154.703, -17.366)  ( 0.05,  0.00,  0.01)
    bond    (  9.037,  -1.524,  -0.203)  (  9.050,  -1.524,  -0.203)  ( 0.15,  0.03,  0.00)
    angle   ( 27.205, 164.315, -20.573)  ( 27.205, 164.318, -20.571)  ( 0.00,  0.00,  0.01)
    torsion (  0.210,   0.398,   6.373)  (  0.210,   0.398,   6.374)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.733,  -8.489,  -2.966)  ( -7.733,  -8.489,  -2.966)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (107.083,  86.370, -80.344)  (107.086,  86.377, -80.335)  ( 0.00,  0.01,  0.01)
    bond    (  0.003,   1.672,   1.773)  (  0.003,   1.679,   1.780)  ( 0.00,  0.39,  0.41)
    angle   (110.409,  85.777, -81.062)  (110.411,  85.778, -81.060)  ( 0.00,  0.00,  0.00)
    torsion ( -2.557,   1.919,  -1.806)  ( -2.557,   1.919,  -1.805)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.771,  -2.999,   0.751)  ( -0.771,  -2.998,   0.751)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (159.373,  90.388,  86.681)  (159.375,  90.395,  86.690)  ( 0.00,  0.01,  0.01)
    bond    (  0.190,   3.711,  -4.053)  (  0.190,   3.718,  -4.045)  ( 0.00,  0.17,  0.19)
    angle   (160.624,  96.191,  95.946)  (160.625,  96.192,  95.947)  ( 0.00,  0.00,  0.00)
    torsion (  3.499,  -3.086,  -2.672)  (  3.499,  -3.086,  -2.672)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.940,  -6.429,  -2.540)  ( -4.939,  -6.429,  -2.540)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( 22.366,  93.653,  37.231)  ( 22.371,  93.659,  37.242)  ( 0.03,  0.01,  0.03)
    bond    (  3.354,  -4.340,   8.483)  (  3.355,  -4.337,   8.493)  ( 0.05,  0.06,  0.12)
    angle   ( 23.858,  86.210,  34.597)  ( 23.861,  86.213,  34.598)  ( 0.01,  0.00,  0.00)
    torsion (  9.356,  -0.208,  -3.802)  (  9.357,  -0.207,  -3.802)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-14.202,  11.990,  -2.047)  (-14.202,  11.990,  -2.047)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (103.350,   7.060,  -6.290)  (103.354,   7.066,  -6.279)  ( 0.00,  0.09,  0.17)
    bond    (  0.265,  10.534,  16.212)  (  0.265,  10.538,  16.222)  ( 0.00,  0.04,  0.06)
    angle   (112.645,   9.401,  -7.950)  (112.649,   9.402,  -7.949)  ( 0.00,  0.01,  0.01)
    torsion (-14.500, -13.124,   8.762)  (-14.500, -13.123,   8.762)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.940,   0.249, -23.314)  (  4.940,   0.249, -23.314)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-52.059,   9.470, -74.075)  (-52.053,   9.483, -74.072)  ( 0.01,  0.13,  0.00)
    bond    ( -3.527,  -8.677,   1.493)  ( -3.525,  -8.666,   1.493)  ( 0.06,  0.13,  0.03)
    angle   (-60.450,  13.251, -65.808)  (-60.447,  13.252, -65.806)  ( 0.00,  0.00,  0.00)
    torsion (  9.678,  -4.462,  -3.046)  (  9.678,  -4.462,  -3.046)  ( 0.00,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  2.240,   9.359,  -6.714)  (  2.241,   9.359,  -6.713)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-76.414, -70.217, -153.926)  (-76.402, -70.214, -153.923)  ( 0.02,  0.00,  0.00)
    bond    (  3.533,  -1.023,  -1.278)  (  3.545,  -1.022,  -1.276)  ( 0.32,  0.09,  0.12)
    angle   (-79.733, -80.280, -157.185)  (-79.732, -80.278, -157.184)  ( 0.00,  0.00,  0.00)
    torsion (  0.249,   2.761,  -1.520)  (  0.249,   2.761,  -1.519)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.463,   8.324,   6.056)  ( -0.463,   8.325,   6.056)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 52.667, -85.190, -67.226)  ( 52.671, -85.184, -67.216)  ( 0.01,  0.01,  0.02)
    bond    ( -3.009,   4.808,  -9.022)  ( -3.008,   4.811,  -9.012)  ( 0.04,  0.06,  0.11)
    angle   ( 58.265, -95.897, -70.634)  ( 58.266, -95.894, -70.634)  ( 0.00,  0.00,  0.00)
    torsion ( -1.594,  -0.810,   0.099)  ( -1.594,  -0.810,   0.099)  ( 0.03,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.995,   6.710,  12.331)  ( -0.995,   6.710,  12.331)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 76.000,  -8.616, -123.914)  ( 76.004,  -8.604, -123.911)  ( 0.01,  0.13,  0.00)
    bond    (  0.761,   1.681,   0.278)  (  0.763,   1.693,   0.278)  ( 0.17,  0.67,  0.01)
    angle   ( 78.343, -14.127, -128.839)  ( 78.345, -14.127, -128.837)  ( 0.00,  0.00,  0.00)
    torsion (  0.481,  -0.260,   0.258)  (  0.482,  -0.259,   0.258)  ( 0.02,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.585,   4.090,   4.389)  ( -3.585,   4.090,   4.389)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (-65.067,  49.131,  40.382)  (-64.892,  49.324,  40.886)  ( 0.27,  0.39,  1.25)
    bond    ( -5.493,  -9.604,   5.333)  ( -5.490,  -9.595,   5.336)  ( 0.06,  0.10,  0.05)
    angle   (-41.402,  12.869, -19.449)  (-41.398,  12.871, -19.449)  ( 0.01,  0.01,  0.00)
    torsion (-20.060,  46.688,  63.308)  (-20.060,  46.688,  63.309)  ( 0.00,  0.00,  0.00)
    oop     ( -2.278,  -2.485,  -6.811)  ( -2.110,  -2.303,  -6.312)  ( 7.36,  7.32,  7.34)
    vdw     (  4.166,   1.663,  -1.999)  (  4.167,   1.663,  -1.999)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (137.751, -93.480, -244.746)  (136.908, -92.955, -243.247)  ( 0.61,  0.56,  0.61)
    bond    ( -4.791,  -1.212,  -2.309)  ( -4.779,  -1.211,  -2.306)  ( 0.24,  0.06,  0.12)
    angle   ( -6.854, -31.458,  30.724)  ( -6.854, -31.454,  30.725)  ( 0.00,  0.01,  0.00)
    torsion (141.462, -55.192, -264.132)  (141.462, -55.192, -264.135)  ( 0.00,  0.00,  0.00)
    oop     (  5.926,  -3.391, -10.499)  (  5.071,  -2.870,  -9.001)  (14.43, 15.37, 14.27)
    vdw     (  2.008,  -2.228,   1.470)  (  2.008,  -2.228,   1.470)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (-102.530, -39.308,  21.108)  (-100.985, -37.041,  20.837)  ( 1.51,  5.77,  1.28)
    bond    ( -2.799,   0.425, -11.770)  ( -2.798,   0.426, -11.755)  ( 0.03,  0.00,  0.12)
    angle   (-17.306,  44.711,   5.737)  (-17.303,  44.713,   5.737)  ( 0.02,  0.00,  0.00)
    torsion (-75.920, -74.809,  15.364)  (-75.922, -74.812,  15.364)  ( 0.00,  0.00,  0.00)
    oop     ( -7.652, -11.933,   1.389)  ( -6.110,  -9.665,   1.104)  (20.15, 19.01, 20.51)
    vdw     (  1.147,   2.297,  10.387)  (  1.147,   2.297,  10.387)  ( 0.02,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-175.866, 340.330, -166.049)  (-174.960, 341.280, -164.473)  ( 0.52,  0.28,  0.95)
    bond    (  3.945,   0.719,  -2.690)  (  3.955,   0.720,  -2.685)  ( 0.25,  0.03,  0.17)
    angle   (-150.490, 257.969, -152.555)  (-150.488, 257.972, -152.555)  ( 0.00,  0.00,  0.00)
    torsion (-22.615,  92.362,  -8.563)  (-22.615,  92.362,  -8.562)  ( 0.00,  0.00,  0.01)
    oop     ( -4.712,  -5.306,  -8.363)  ( -3.818,  -4.361,  -6.793)  (18.97, 17.82, 18.77)
    vdw     ( -1.995,  -5.414,   6.122)  ( -1.995,  -5.413,   6.122)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       (-14.596,   2.004,  78.509)  (-14.585,   2.012,  78.512)  ( 0.08,  0.38,  0.00)
    bond    ( 19.096,  11.184,   2.759)  ( 19.107,  11.188,   2.759)  ( 0.05,  0.03,  0.01)
    angle   (-17.857,   8.333,  89.838)  (-17.856,   8.335,  89.841)  ( 0.01,  0.03,  0.00)
    torsion ( -8.884,  12.396,  11.251)  ( -8.884,  12.397,  11.251)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.952, -29.909, -25.340)  ( -6.952, -29.908, -25.339)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-40.004, -29.159, 119.368)  (-40.002, -29.146, 119.371)  ( 0.01,  0.05,  0.00)
    bond    ( -0.641,   4.990,   0.937)  ( -0.641,   5.004,   0.937)  ( 0.02,  0.26,  0.05)
    angle   (-50.385, -29.907, 125.204)  (-50.383, -29.907, 125.206)  ( 0.00,  0.00,  0.00)
    torsion (  7.939,   0.218,   4.263)  (  7.940,   0.218,   4.263)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.082,  -4.461, -11.036)  (  3.082,  -4.461, -11.036)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-89.478,  58.870,  60.382)  (-89.472,  58.873,  60.393)  ( 0.01,  0.01,  0.02)
    bond    (  2.122,  -1.132,   4.187)  (  2.125,  -1.131,   4.197)  ( 0.13,  0.07,  0.25)
    angle   (-93.685,  65.330,  65.028)  (-93.682,  65.332,  65.028)  ( 0.00,  0.00,  0.00)
    torsion ( -1.211,  -2.108,   0.045)  ( -1.211,  -2.108,   0.045)  ( 0.01,  0.02,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.296,  -3.220,  -8.878)  (  3.296,  -3.220,  -8.878)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       (  1.878,  67.860, 113.465)  (  1.890,  67.864, 113.468)  ( 0.65,  0.01,  0.00)
    bond    ( -3.614,  -1.283,   0.787)  ( -3.602,  -1.282,   0.788)  ( 0.33,  0.12,  0.05)
    angle   (  2.517,  67.624, 121.510)  (  2.517,  67.626, 121.512)  ( 0.01,  0.00,  0.00)
    torsion ( -1.096,   2.248,  -1.352)  ( -1.096,   2.249,  -1.352)  ( 0.01,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.071,  -0.730,  -7.481)  (  4.071,  -0.730,  -7.481)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( 47.272, -46.627, -69.481)  ( 47.262, -46.609, -69.489)  ( 0.02,  0.04,  0.01)
    bond    (  2.467,   6.482,  -2.894)  (  2.470,   6.500,  -2.890)  ( 0.11,  0.29,  0.13)
    angle   ( 59.422, -47.335, -55.671)  ( 59.420, -47.335, -55.673)  ( 0.00,  0.00,  0.00)
    torsion (-10.559,  -0.725, -10.654)  (-10.569,  -0.725, -10.664)  ( 0.10,  0.00,  0.10)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -4.059,  -5.049,  -0.262)  ( -4.059,  -5.049,  -0.262)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 15 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 16 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/penicillin.gpr
 # Expected      1227.04632, found 1227.046317&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       ( 82.530, -174.561, -42.477)  ( 82.560, -174.529, -42.455)  ( 0.04,  0.02,  0.05)
    bond    ( 90.698,   4.504,  26.887)  ( 90.717,   4.522,  26.905)  ( 0.02,  0.40,  0.07)
    angle   (  7.556, -151.428, -58.412)  (  7.564, -151.415, -58.404)  ( 0.12,  0.01,  0.01)
    torsion ( -0.161,   1.696,   0.297)  ( -0.162,   1.695,   0.296)  ( 0.00,  0.09,  0.02)
    oop     ( -1.255,  -2.021,   4.821)  ( -1.254,  -2.019,   4.817)  ( 0.08,  0.08,  0.07)
    vdw     (-14.307, -27.313, -16.070)  (-14.307, -27.312, -16.070)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-202.075, 277.273,  18.298)  (-202.025, 277.311,  18.368)  ( 0.02,  0.01,  0.38)
    bond    ( 18.688, 120.062,  50.687)  ( 18.719, 120.102,  50.695)  ( 0.16,  0.03,  0.02)
    angle   (-209.364, 144.850,  21.814)  (-209.334, 144.866,  21.818)  ( 0.01,  0.01,  0.02)
    torsion (  5.513,  10.248, -27.387)  (  5.513,  10.248, -27.383)  ( 0.00,  0.00,  0.01)
    oop     (  4.728,   8.056, -19.476)  (  4.716,   8.037, -19.423)  ( 0.25,  0.23,  0.27)
    vdw     (-21.640,  -5.943,  -7.340)  (-21.639,  -5.943,  -7.340)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-20.368, -42.338,   2.015)  (-20.364, -42.326,   2.016)  ( 0.02,  0.03,  0.06)
    bond    (-14.015, -41.334,   3.370)  (-14.014, -41.322,   3.369)  ( 0.01,  0.03,  0.00)
    angle   (  3.047,  -1.495,  -5.646)  (  3.049,  -1.494,  -5.644)  ( 0.08,  0.02,  0.04)
    torsion ( -1.299,   0.808,   4.512)  ( -1.299,   0.808,   4.511)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.100,  -0.318,  -0.220)  ( -8.100,  -0.318,  -0.220)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-40.287,  20.351,  22.899)  (-40.280,  20.357,  22.905)  ( 0.02,  0.03,  0.03)
    bond    (-24.926,  24.974,  25.987)  (-24.922,  24.978,  25.992)  ( 0.02,  0.02,  0.02)
    angle   ( 14.643,   9.138,   5.258)  ( 14.645,   9.139,   5.259)  ( 0.01,  0.02,  0.03)
    torsion (  0.391,   2.228,  -1.766)  (  0.391,   2.227,  -1.766)  ( 0.00,  0.02,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-30.394, -15.988,  -6.580)  (-30.393, -15.988,  -6.581)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       ( -7.250,   8.409, -46.055)  ( -7.248,   8.412, -46.043)  ( 0.04,  0.03,  0.03)
    bond    ( -4.168,  14.030, -42.962)  ( -4.168,  14.031, -42.950)  ( 0.00,  0.01,  0.03)
    angle   ( -2.071,  -0.954,  -0.111)  ( -2.068,  -0.952,  -0.110)  ( 0.13,  0.16,  0.00)
    torsion (  0.677,  -4.782,  -1.628)  (  0.677,  -4.782,  -1.628)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.689,   0.115,  -1.355)  ( -1.689,   0.115,  -1.355)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 15.039,  33.078,  28.468)  ( 15.062,  33.103,  28.467)  ( 0.15,  0.08,  0.00)
    bond    (-21.244,  25.105,   5.717)  (-21.230,  25.124,   5.718)  ( 0.06,  0.08,  0.02)
    angle   ( 58.670,  43.268,  27.731)  ( 58.677,  43.271,  27.733)  ( 0.01,  0.01,  0.01)
    torsion (  0.668,   0.795,  -1.016)  (  0.668,   0.796,  -1.015)  ( 0.00,  0.01,  0.08)
    oop     ( -1.540,  -2.789,   6.534)  ( -1.539,  -2.787,   6.529)  ( 0.08,  0.09,  0.07)
    vdw     (-21.515, -33.302, -10.497)  (-21.514, -33.301, -10.497)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (358.586, -335.931, 154.911)  (358.672, -335.830, 154.820)  ( 0.02,  0.03,  0.06)
    bond    (245.959, -148.392,  15.324)  (245.992, -148.360,  15.334)  ( 0.01,  0.02,  0.06)
    angle   (136.390, -135.208,  -6.543)  (136.412, -135.193,  -6.538)  ( 0.02,  0.01,  0.08)
    torsion (-32.536, -52.538, 128.814)  (-32.536, -52.537, 128.821)  ( 0.00,  0.00,  0.01)
    oop     ( -3.401,  -6.088,  13.818)  ( -3.372,  -6.035,  13.705)  ( 0.85,  0.86,  0.81)
    vdw     ( 12.174,   6.296,   3.499)  ( 12.175,   6.296,   3.499)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       ( -5.394, 129.958, -28.873)  ( -5.387, 129.950, -28.825)  ( 0.13,  0.01,  0.16)
    bond    (-53.853,  48.848,  13.498)  (-53.841,  48.858,  13.499)  ( 0.02,  0.02,  0.00)
    angle   ( 12.487,  13.050,   2.572)  ( 12.491,  13.054,   2.574)  ( 0.03,  0.02,  0.07)
    torsion ( 11.812,  29.617, -60.086)  ( 11.812,  29.617, -60.084)  ( 0.00,  0.00,  0.00)
    oop     (  0.707,   1.694,  -3.314)  (  0.697,   1.672,  -3.271)  ( 0.65,  1.30,  1.30)
    vdw     ( 23.453,  36.748,  18.458)  ( 23.454,  36.749,  18.458)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-417.571, 126.089, 259.424)  (-417.198, 126.481, 259.644)  ( 0.09,  0.31,  0.08)
    bond    (-103.997, -219.107, -21.476)  (-103.967, -219.084, -21.459)  ( 0.03,  0.01,  0.08)
    angle   (-273.673, 393.753, 352.141)  (-273.658, 393.770, 352.153)  ( 0.01,  0.00,  0.00)
    torsion (-26.441, -47.964, -67.461)  (-26.439, -47.965, -67.460)  ( 0.01,  0.00,  0.00)
    oop     (-14.976, -16.611, -10.251)  (-14.650, -16.258, -10.061)  ( 2.18,  2.13,  1.85)
    vdw     (  1.516,  16.018,   6.470)  (  1.516,  16.018,   6.470)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (224.084, -176.735,  49.434)  (225.171, -173.761,  51.450)  ( 0.49,  1.68,  4.08)
    bond    ( 15.804,  -6.508, 213.853)  ( 15.823,  -6.489, 213.880)  ( 0.12,  0.29,  0.01)
    angle   (225.192, -163.710, -85.969)  (225.208, -163.696, -85.956)  ( 0.01,  0.01,  0.02)
    torsion (-28.028, -14.619, -75.931)  (-28.027, -14.619, -75.931)  ( 0.00,  0.00,  0.00)
    oop     ( -2.980,  -7.720,  -5.117)  ( -1.930,  -4.778,  -3.143)  (35.24, 38.11, 38.58)
    vdw     ( 14.096,  15.821,   2.599)  ( 14.097,  15.821,   2.599)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (-50.078, 272.779, 294.863)  (-51.983, 262.035, 291.844)  ( 3.80,  3.94,  1.02)
    bond    (-40.591, 144.077, -20.199)  (-40.554, 144.089, -20.173)  ( 0.09,  0.01,  0.13)
    angle   (-59.468, -117.379, 364.824)  (-59.451, -117.358, 364.845)  ( 0.03,  0.02,  0.01)
    torsion ( 63.501, 230.066, -53.972)  ( 63.502, 230.066, -53.971)  ( 0.00,  0.00,  0.00)
    oop     ( -7.658,   9.010,   0.631)  ( -9.619,  -1.768,  -2.436)  (25.61, 119.62, 193.64)
    vdw     ( -5.862,   7.006,   3.579)  ( -5.862,   7.006,   3.579)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-24.155, -39.353, -27.866)  (-24.151, -39.348, -27.856)  ( 0.02,  0.01,  0.04)
    bond    ( -6.707, -23.865, -40.222)  ( -6.707, -23.862, -40.212)  ( 0.00,  0.01,  0.02)
    angle   (-27.753, -11.027,  11.170)  (-27.750, -11.025,  11.171)  ( 0.01,  0.02,  0.01)
    torsion ( -9.304, -13.104,   9.328)  ( -9.303, -13.104,   9.328)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 19.609,   8.643,  -8.142)  ( 19.610,   8.643,  -8.142)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 14.913, -33.051,   8.803)  ( 14.928, -33.036,   8.810)  ( 0.10,  0.05,  0.08)
    bond    ( 22.217, -114.854,  49.575)  ( 22.229, -114.844,  49.577)  ( 0.05,  0.01,  0.01)
    angle   (-20.063,  69.083, -57.060)  (-20.061,  69.088, -57.056)  ( 0.01,  0.01,  0.01)
    torsion ( 13.827,   0.411,  30.482)  ( 13.827,   0.411,  30.482)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.068,  12.309, -14.194)  ( -1.067,  12.309, -14.194)  ( 0.06,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (105.126, -26.749, -798.923)  (105.763, -24.649, -798.865)  ( 0.61,  7.85,  0.01)
    bond    ( 50.241,  79.598, -257.048)  ( 50.261,  79.608, -256.999)  ( 0.04,  0.01,  0.02)
    angle   ( 23.435, -119.084, -609.262)  ( 23.451, -119.075, -609.245)  ( 0.07,  0.01,  0.00)
    torsion ( 28.006, -43.443,  37.340)  ( 28.009, -43.441,  37.342)  ( 0.01,  0.00,  0.00)
    oop     ( 50.745,  61.195,  23.986)  ( 51.342,  63.274,  23.977)  ( 1.17,  3.40,  0.04)
    vdw     (-47.301,  -5.015,   6.060)  (-47.300,  -5.015,   6.061)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( 49.610,  27.730,  35.984)  ( 49.615,  27.743,  35.987)  ( 0.01,  0.05,  0.01)
    bond    (  1.170,  30.496,   9.172)  (  1.170,  30.509,   9.173)  ( 0.01,  0.04,  0.01)
    angle   ( 48.163,  -1.970,   0.403)  ( 48.167,  -1.969,   0.405)  ( 0.01,  0.01,  0.08)
    torsion (  2.337,  -6.343,  20.800)  (  2.338,  -6.343,  20.800)  ( 0.02,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -2.061,   5.547,   5.609)  ( -2.060,   5.547,   5.609)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       ( 35.412,  10.161,  78.995)  ( 35.969,  10.829,  79.228)  ( 1.57,  6.58,  0.30)
    bond    (-11.511,  -7.156,  55.081)  (-11.510,  -7.156,  55.112)  ( 0.01,  0.00,  0.06)
    angle   ( 90.368,  28.448,  22.568)  ( 90.372,  28.449,  22.568)  ( 0.00,  0.00,  0.00)
    torsion ( -1.053,  22.384,   2.687)  ( -1.052,  22.384,   2.687)  ( 0.08,  0.00,  0.00)
    oop     (-25.920, -32.157,  -9.588)  (-25.369, -31.491,  -9.387)  ( 2.13,  2.07,  2.10)
    vdw     (-16.473,  -1.358,   8.248)  (-16.473,  -1.358,   8.248)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-122.776, 146.787, -72.607)  (-122.741, 146.820, -72.574)  ( 0.03,  0.02,  0.05)
    bond    (-54.298,  27.135, -21.123)  (-54.277,  27.153, -21.103)  ( 0.04,  0.07,  0.09)
    angle   (-53.471,  87.252, -33.828)  (-53.457,  87.265, -33.815)  ( 0.03,  0.02,  0.04)
    torsion (-16.136,  28.776, -14.773)  (-16.135,  28.777, -14.772)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.128,   3.624,  -2.884)  (  1.128,   3.624,  -2.884)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (-147.307, -347.840, -150.937)  (-147.826, -343.074, -150.159)  ( 0.35,  1.37,  0.52)
    bond    (-13.024, -77.021, -88.008)  (-12.998, -77.001, -87.986)  ( 0.20,  0.03,  0.02)
    angle   (-147.478, -124.435, -132.694)  (-147.461, -124.418, -132.675)  ( 0.01,  0.01,  0.01)
    torsion ( 15.485, -125.268,  65.785)  ( 15.484, -125.267,  65.785)  ( 0.00,  0.00,  0.00)
    oop     ( -3.885, -13.509,   2.412)  ( -4.447,  -8.781,   3.150)  (14.47, 35.00, 30.58)
    vdw     (  1.595,  -7.606,   1.567)  (  1.595,  -7.606,   1.567)  ( 0.04,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (  1.871, -21.131,   4.895)  (  1.900, -21.102,   4.924)  ( 1.55,  0.14,  0.60)
    bond    (-38.663,  58.600,  73.249)  (-38.645,  58.618,  73.268)  ( 0.05,  0.03,  0.03)
    angle   ( 38.107, -88.294, -15.980)  ( 38.116, -88.284, -15.971)  ( 0.02,  0.01,  0.06)
    torsion (-13.830,   1.214,  -8.197)  (-13.828,   1.216,  -8.196)  ( 0.01,  0.09,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 16.257,   7.348, -44.177)  ( 16.257,   7.348, -44.176)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( 22.966, -41.016,  17.594)  ( 22.995, -40.987,  17.623)  ( 0.13,  0.07,  0.17)
    bond    (-65.790, -42.791, -42.397)  (-65.771, -42.772, -42.379)  ( 0.03,  0.04,  0.04)
    angle   ( 58.085,   6.661,  54.151)  ( 58.094,   6.670,  54.161)  ( 0.02,  0.13,  0.02)
    torsion ( 14.868, -26.408,   5.091)  ( 14.869, -26.407,   5.093)  ( 0.00,  0.00,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 15.803,  21.522,   0.748)  ( 15.803,  21.523,   0.748)  ( 0.00,  0.00,  0.02)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (210.987, 408.629, 284.551)  (210.991, 408.686, 284.607)  ( 0.00,  0.01,  0.02)
    bond    (-18.691,  91.685,  -4.967)  (-18.677,  91.723,  -4.945)  ( 0.08,  0.04,  0.46)
    angle   (213.757, 329.147, 254.929)  (213.769, 329.171, 254.941)  ( 0.01,  0.01,  0.00)
    torsion ( 15.791,   8.817,  10.030)  ( 15.789,   8.817,  10.029)  ( 0.01,  0.00,  0.01)
    oop     ( 18.033,   3.483, -15.083)  ( 18.012,   3.478, -15.061)  ( 0.11,  0.13,  0.14)
    vdw     (-17.903, -24.503,  39.642)  (-17.902, -24.502,  39.643)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (  1.233,  33.762,  35.904)  (  1.239,  33.768,  35.915)  ( 0.43,  0.02,  0.03)
    bond    ( -1.983,  13.556,  23.274)  ( -1.983,  13.560,  23.284)  ( 0.00,  0.03,  0.04)
    angle   ( 23.000,  18.199,  -8.642)  ( 23.003,  18.202,  -8.641)  ( 0.02,  0.01,  0.01)
    torsion (-41.237,  -3.500,  -1.473)  (-41.237,  -3.500,  -1.473)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 21.453,   5.506,  22.745)  ( 21.455,   5.507,  22.745)  ( 0.01,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-130.563, -473.810, -211.347)  (-130.539, -473.771, -211.333)  ( 0.02,  0.01,  0.01)
    bond    ( -0.397, -74.774, -11.245)  ( -0.385, -74.751, -11.230)  ( 0.50,  0.03,  0.13)
    angle   (-132.466, -380.712, -211.769)  (-132.462, -380.698, -211.764)  ( 0.00,  0.00,  0.00)
    torsion ( -1.280,  -0.075,   1.110)  ( -1.279,  -0.075,   1.111)  ( 0.04,  0.00,  0.03)
    oop     ( -5.427,  -1.063,   4.722)  ( -5.420,  -1.062,   4.716)  ( 0.14,  0.13,  0.13)
    vdw     (  9.007, -17.186,   5.835)  (  9.007, -17.185,   5.835)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       ( 20.256, -33.956,  16.857)  ( 20.263, -33.949,  16.861)  ( 0.04,  0.02,  0.03)
    bond    ( 24.111, -23.901,  16.691)  ( 24.116, -23.896,  16.693)  ( 0.02,  0.02,  0.02)
    angle   (-11.852, -16.806,  -6.936)  (-11.850, -16.804,  -6.934)  ( 0.01,  0.01,  0.02)
    torsion ( -0.732,   0.033,   1.104)  ( -0.732,   0.033,   1.104)  ( 0.01,  0.00,  0.04)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  8.729,   6.718,   5.998)  (  8.729,   6.718,   5.998)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 10.980,  21.764, -36.215)  ( 10.986,  21.770, -36.208)  ( 0.05,  0.03,  0.02)
    bond    ( 19.250,  20.288, -23.061)  ( 19.254,  20.292, -23.056)  ( 0.02,  0.02,  0.02)
    angle   (-17.059,  -6.237, -19.734)  (-17.057,  -6.235, -19.732)  ( 0.01,  0.02,  0.01)
    torsion (  0.083,  -0.103,  -0.020)  (  0.084,  -0.103,  -0.020)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  8.706,   7.816,   6.600)  (  8.706,   7.816,   6.600)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-27.941,  26.313,  21.232)  (-27.936,  26.319,  21.240)  ( 0.02,  0.03,  0.04)
    bond    (-13.126,  21.965,  25.899)  (-13.124,  21.970,  25.906)  ( 0.01,  0.02,  0.03)
    angle   (-26.177,  -6.448,  -7.794)  (-26.175,  -6.447,  -7.793)  ( 0.01,  0.02,  0.01)
    torsion ( -0.164,   1.531,  -1.382)  ( -0.164,   1.531,  -1.382)  ( 0.00,  0.02,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 11.526,   9.265,   4.509)  ( 11.526,   9.265,   4.509)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( 20.726, -29.222,  23.069)  ( 20.734, -29.214,  23.073)  ( 0.04,  0.03,  0.02)
    bond    ( 24.834, -23.991,  13.351)  ( 24.840, -23.986,  13.352)  ( 0.02,  0.02,  0.01)
    angle   ( -6.102,   6.429,  22.899)  ( -6.101,   6.430,  22.901)  ( 0.02,  0.02,  0.01)
    torsion ( -6.259,  -5.825,   1.181)  ( -6.259,  -5.824,   1.181)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  8.254,  -5.834, -14.362)  (  8.254,  -5.834, -14.362)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (-42.697,  -7.370, -15.997)  (-42.689,  -7.364, -15.992)  ( 0.02,  0.08,  0.03)
    bond    (-26.465, -20.050, -18.073)  (-26.458, -20.046, -18.070)  ( 0.03,  0.02,  0.02)
    angle   (-21.788,  13.487,  16.936)  (-21.787,  13.488,  16.937)  ( 0.01,  0.01,  0.01)
    torsion ( -1.086,   6.316,  -5.417)  ( -1.086,   6.316,  -5.417)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.642,  -7.123,  -9.443)  (  6.642,  -7.123,  -9.443)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 16.274,  33.749, -19.678)  ( 16.279,  33.755, -19.671)  ( 0.03,  0.02,  0.04)
    bond    ( 16.798,  19.680, -23.891)  ( 16.801,  19.684, -23.884)  ( 0.02,  0.02,  0.03)
    angle   (-10.497,  22.512,  11.172)  (-10.495,  22.514,  11.173)  ( 0.01,  0.01,  0.01)
    torsion (  5.216,  -0.584,   3.188)  (  5.217,  -0.584,   3.188)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  4.757,  -7.860, -10.148)  (  4.757,  -7.860, -10.147)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (206.209, 143.745, 248.828)  (206.215, 143.768, 248.834)  ( 0.00,  0.02,  0.00)
    bond    (-17.713,  74.435,  -9.634)  (-17.711,  74.458,  -9.633)  ( 0.01,  0.03,  0.01)
    angle   (159.579,  62.890, 192.692)  (159.582,  62.890, 192.695)  ( 0.00,  0.00,  0.00)
    torsion (  6.965,   0.874,  -6.054)  (  6.965,   0.874,  -6.054)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 57.378,   5.546,  71.824)  ( 57.379,   5.546,  71.826)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-158.990,  61.805, -156.643)  (-158.974,  61.834, -156.637)  ( 0.01,  0.05,  0.00)
    bond    (  1.016,   4.265,   2.313)  (  1.017,   4.290,   2.320)  ( 0.14,  0.59,  0.32)
    angle   (-93.437,  76.797, -101.058)  (-93.432,  76.799, -101.054)  ( 0.00,  0.00,  0.00)
    torsion ( -5.607,  -1.263,   4.795)  ( -5.607,  -1.263,   4.794)  ( 0.01,  0.00,  0.01)
    oop     ( -7.179,  -1.487,   5.896)  ( -7.169,  -1.485,   5.888)  ( 0.14,  0.13,  0.13)
    vdw     (-53.784, -16.507, -68.588)  (-53.783, -16.507, -68.586)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 16 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 17 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/phenyl-pyr.gpr
 # Expected       308.27024, found 308.270239&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       ( 72.452, -13.574,  -0.114)  ( 72.504, -13.545,  -0.076)  ( 0.07,  0.21,  0.43)
    bond    ( 73.768, -13.768,   0.023)  ( 73.796, -13.759,   0.044)  ( 0.04,  0.07,  0.05)
    angle   ( 64.307, -12.118,  -0.151)  ( 64.329, -12.112,  -0.139)  ( 0.03,  0.05,  0.18)
    torsion (  0.011,   0.023,  -0.030)  (  0.011,   0.036,  -0.024)  ( 0.00,  0.03,  0.02)
    oop     (  0.000,   0.002,  -0.002)  (  0.001,   0.002,  -0.002)  ( 0.00,  0.00,  0.00)
    vdw     (-65.635,  12.288,   0.045)  (-65.634,  12.288,   0.045)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (  8.845,  -3.651,  19.982)  (  8.892,  -3.620,  20.024)  ( 0.53,  0.85,  0.21)
    bond    ( 92.410, -51.103, -50.286)  ( 92.439, -51.094, -50.266)  ( 0.03,  0.02,  0.04)
    angle   (-39.972,  23.887,  24.588)  (-39.955,  23.894,  24.602)  ( 0.04,  0.03,  0.06)
    torsion ( -1.948, -10.270,   6.861)  ( -1.947, -10.256,   6.867)  ( 0.03,  0.13,  0.09)
    oop     ( -0.022,  -0.118,   0.078)  ( -0.022,  -0.117,   0.078)  ( 0.00,  0.01,  0.00)
    vdw     (-41.623,  33.953,  38.741)  (-41.622,  33.954,  38.742)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (  7.302,  -0.567, -24.504)  (  7.348,  -0.535, -24.462)  ( 0.63,  1.76,  0.17)
    bond    ( 13.918, -47.527, -68.607)  ( 13.946, -47.517, -68.587)  ( 0.20,  0.02,  0.03)
    angle   (-46.385,   5.158,  -2.692)  (-46.368,   5.165,  -2.677)  ( 0.04,  0.14,  0.55)
    torsion (  2.965,  11.890,  -8.461)  (  2.966,  11.904,  -8.455)  ( 0.02,  0.11,  0.07)
    oop     (  0.050,   0.265,  -0.177)  (  0.050,   0.265,  -0.177)  ( 0.00,  0.01,  0.00)
    vdw     ( 36.754,  29.647,  55.432)  ( 36.754,  29.648,  55.433)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       (-36.561,   7.003,  -0.011)  (-36.511,   7.034,   0.029)  ( 0.14,  0.45,  0.04)
    bond    (-109.736,  20.629,   0.231)  (-109.709,  20.639,   0.252)  ( 0.02,  0.05,  0.48)
    angle   ( 21.637,  -4.107,  -0.085)  ( 21.658,  -4.099,  -0.074)  ( 0.10,  0.20,  0.10)
    torsion ( -0.039,   0.145,  -0.122)  ( -0.038,   0.157,  -0.115)  ( 0.00,  0.17,  0.08)
    oop     ( -0.002,  -0.010,   0.005)  ( -0.002,  -0.009,   0.006)  ( 0.00,  0.00,  0.00)
    vdw     ( 51.579,  -9.654,  -0.040)  ( 51.581,  -9.653,  -0.039)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (  6.619,  -1.532,  23.563)  (  6.664,  -1.500,  23.604)  ( 0.68,  2.08,  0.17)
    bond    ( 29.904,  39.139,  68.212)  ( 29.932,  39.148,  68.232)  ( 0.09,  0.02,  0.03)
    angle   (-45.302,  11.936,   2.716)  (-45.286,  11.944,   2.731)  ( 0.04,  0.07,  0.54)
    torsion ( -1.400, -11.441,   7.947)  ( -1.399, -11.427,   7.953)  ( 0.03,  0.12,  0.08)
    oop     ( -0.045,  -0.241,   0.160)  ( -0.045,  -0.240,   0.160)  ( 0.00,  0.01,  0.00)
    vdw     ( 23.462, -40.924, -55.472)  ( 23.462, -40.924, -55.471)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       (  9.757,  -0.744, -19.817)  (  9.804,  -0.714, -19.775)  ( 0.49,  2.22,  0.21)
    bond    (104.923,  13.970,  49.896)  (104.952,  13.980,  49.916)  ( 0.03,  0.07,  0.04)
    angle   (-45.820,  -7.822, -24.521)  (-45.801,  -7.816, -24.506)  ( 0.04,  0.08,  0.06)
    torsion (  1.762,   9.580,  -6.418)  (  1.763,   9.594,  -6.412)  ( 0.02,  0.14,  0.09)
    oop     (  0.020,   0.108,  -0.072)  (  0.020,   0.108,  -0.072)  ( 0.00,  0.01,  0.00)
    vdw     (-51.130, -16.580, -38.702)  (-51.129, -16.579, -38.701)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       ( 39.114,  -7.057,  -0.205)  ( 39.163,  -7.017,  -0.176)  ( 0.12,  0.57,  0.59)
    bond    ( 27.589,  -4.880,  -0.212)  ( 27.616,  -4.858,  -0.203)  ( 0.10,  0.44,  0.17)
    angle   ( 15.028,  -2.823,   0.014)  ( 15.048,  -2.810,   0.022)  ( 0.13,  0.43,  0.01)
    torsion ( -0.002,  -0.016,   0.003)  ( -0.002,  -0.011,   0.015)  ( 0.00,  0.01,  0.00)
    oop     (  0.000,  -0.000,  -0.001)  (  0.000,   0.000,  -0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.501,   0.661,  -0.010)  ( -3.500,   0.662,  -0.009)  ( 0.04,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (-69.505, -16.154,  21.524)  (-69.462, -16.113,  21.552)  ( 0.06,  0.25,  0.13)
    bond    (-28.824, -42.695,  28.615)  (-28.796, -42.676,  28.622)  ( 0.10,  0.04,  0.03)
    angle   (-11.342, -63.294,  38.916)  (-11.328, -63.279,  38.921)  ( 0.12,  0.02,  0.01)
    torsion (  0.402,   2.129,   3.572)  (  0.402,   2.134,   3.587)  ( 0.01,  0.25,  0.41)
    oop     ( -0.001,  -0.006,  -0.010)  ( -0.001,  -0.006,  -0.009)  ( 0.00,  0.00,  0.00)
    vdw     (-29.740,  87.712, -49.570)  (-29.740,  87.714, -49.569)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (312.777, 137.698, -117.102)  (312.825, 137.742, -117.075)  ( 0.02,  0.03,  0.02)
    bond    ( -4.102,  -5.208,   3.529)  ( -4.072,  -5.183,   3.537)  ( 0.72,  0.48,  0.24)
    angle   (250.917,  75.891, -73.272)  (250.935,  75.905, -73.267)  ( 0.01,  0.02,  0.01)
    torsion ( -0.008,  -0.046,  -0.082)  ( -0.008,  -0.041,  -0.069)  ( 0.00,  0.02,  0.11)
    oop     ( -0.000,  -0.001,  -0.002)  ( -0.000,  -0.001,  -0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( 65.970,  67.061, -47.275)  ( 65.971,  67.062, -47.275)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-303.195,  56.735,   0.262)  (-303.159,  56.772,   0.283)  ( 0.01,  0.06,  0.56)
    bond    (-23.988,   4.534,  -0.038)  (-23.972,   4.563,  -0.027)  ( 0.07,  0.64,  0.04)
    angle   (-318.128,  59.450,   0.280)  (-318.108,  59.455,   0.282)  ( 0.01,  0.01,  0.05)
    torsion (  0.006,   0.031,   0.048)  (  0.006,   0.034,   0.056)  ( 0.00,  0.01,  0.04)
    oop     (  0.000,   0.001,   0.002)  (  0.000,   0.001,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     ( 38.914,  -7.281,  -0.030)  ( 38.915,  -7.281,  -0.030)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       (241.266, -241.617, 116.469)  (241.314, -241.574, 116.496)  ( 0.02,  0.02,  0.02)
    bond    ( -2.495,   6.201,  -3.435)  ( -2.461,   6.222,  -3.426)  ( 1.33,  0.34,  0.25)
    angle   (206.447, -161.363,  72.833)  (206.462, -161.347,  72.838)  ( 0.01,  0.01,  0.01)
    torsion ( -0.012,  -0.067,  -0.118)  ( -0.012,  -0.062,  -0.105)  ( 0.00,  0.03,  0.15)
    oop     ( -0.001,  -0.004,  -0.006)  ( -0.001,  -0.003,  -0.006)  ( 0.00,  0.00,  0.00)
    vdw     ( 37.327, -86.385,  47.195)  ( 37.327, -86.383,  47.195)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-58.156,  39.574, -21.117)  (-58.112,  39.613, -21.089)  ( 0.08,  0.10,  0.13)
    bond    (-10.799,  49.795, -28.441)  (-10.771,  49.815, -28.434)  ( 0.25,  0.04,  0.03)
    angle   ( 12.395,  62.900, -38.835)  ( 12.411,  62.912, -38.830)  ( 0.13,  0.02,  0.01)
    torsion ( -0.390,  -2.077,  -3.496)  ( -0.390,  -2.071,  -3.481)  ( 0.01,  0.25,  0.42)
    oop     (  0.002,   0.008,   0.013)  (  0.002,   0.008,   0.013)  ( 0.00,  0.00,  0.00)
    vdw     (-59.364, -71.052,  49.642)  (-59.362, -71.051,  49.643)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( -2.736,   8.905,  -5.477)  ( -2.727,   8.914,  -5.470)  ( 0.33,  0.11,  0.13)
    bond    (  6.712,   7.382,  -5.157)  (  6.717,   7.388,  -5.154)  ( 0.08,  0.09,  0.06)
    angle   (-10.336,   7.209,  -3.130)  (-10.333,   7.211,  -3.130)  ( 0.03,  0.02,  0.01)
    torsion ( -0.038,  -0.202,  -0.342)  ( -0.038,  -0.201,  -0.338)  ( 0.00,  0.03,  0.13)
    oop     ( -0.001,  -0.003,  -0.005)  ( -0.001,  -0.003,  -0.005)  ( 0.00,  0.00,  0.00)
    vdw     (  0.927,  -5.481,   3.157)  (  0.927,  -5.481,   3.157)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-76.642, -12.991,  16.511)  (-76.634, -12.979,  16.517)  ( 0.01,  0.09,  0.04)
    bond    ( -5.954,  11.782,  -6.350)  ( -5.952,  11.792,  -6.347)  ( 0.04,  0.08,  0.05)
    angle   (-73.401, -24.705,  22.928)  (-73.396, -24.705,  22.929)  ( 0.01,  0.00,  0.00)
    torsion (  0.017,   0.088,   0.147)  (  0.017,   0.089,   0.150)  ( 0.00,  0.01,  0.04)
    oop     (  0.000,   0.000,   0.001)  (  0.000,   0.000,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     (  2.697,  -0.156,  -0.215)  (  2.697,  -0.156,  -0.215)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( -4.671, -19.111, -22.143)  ( -4.640, -19.081, -22.113)  ( 0.66,  0.16,  0.14)
    bond    (-59.579, -42.061, -79.510)  (-59.561, -42.043, -79.491)  ( 0.03,  0.04,  0.02)
    angle   ( 53.161,   7.933,  27.690)  ( 53.172,   7.941,  27.699)  ( 0.02,  0.10,  0.03)
    torsion ( -3.549,  -1.214,   3.285)  ( -3.548,  -1.211,   3.286)  ( 0.03,  0.28,  0.05)
    oop     ( -0.015,  -0.082,   0.055)  ( -0.015,  -0.082,   0.055)  ( 0.00,  0.00,  0.00)
    vdw     (  5.311,  16.313,  26.338)  (  5.312,  16.313,  26.338)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-58.384,  10.945,   0.101)  (-58.365,  10.949,   0.107)  ( 0.03,  0.04,  0.06)
    bond    (-50.199,   9.397,   0.031)  (-50.181,   9.397,   0.030)  ( 0.04,  0.00,  0.00)
    angle   (  0.007,   0.034,   0.052)  (  0.007,   0.036,   0.056)  ( 0.00,  0.01,  0.02)
    torsion ( -0.003,  -0.020,   0.011)  ( -0.003,  -0.018,   0.012)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.001,   0.001)  ( -0.000,  -0.001,   0.001)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.188,   1.535,   0.008)  ( -8.188,   1.535,   0.008)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-47.141,  31.788,  35.132)  (-47.131,  31.796,  35.144)  ( 0.02,  0.03,  0.03)
    bond    (-19.987,  26.705,  34.335)  (-19.984,  26.711,  34.344)  ( 0.02,  0.02,  0.03)
    angle   ( 11.055,   1.456,   5.302)  ( 11.060,   1.457,   5.303)  ( 0.05,  0.01,  0.02)
    torsion ( -0.173,  -0.918,   0.610)  ( -0.173,  -0.915,   0.611)  ( 0.00,  0.20,  0.06)
    oop     (  0.002,   0.010,  -0.007)  (  0.002,   0.010,  -0.007)  ( 0.00,  0.00,  0.00)
    vdw     (-38.038,   4.533,  -5.108)  (-38.037,   4.533,  -5.107)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (  2.548,  19.155,  22.650)  (  2.580,  19.184,  22.680)  ( 1.23,  0.15,  0.13)
    bond    (-40.343,  60.834,  79.794)  (-40.326,  60.853,  79.813)  ( 0.04,  0.03,  0.02)
    angle   ( 46.804, -26.752, -27.660)  ( 46.815, -26.745, -27.651)  ( 0.02,  0.03,  0.03)
    torsion ( -2.934,   2.121,  -3.092)  ( -2.933,   2.124,  -3.090)  ( 0.05,  0.15,  0.05)
    oop     (  0.014,   0.074,  -0.049)  (  0.014,   0.074,  -0.049)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.992, -17.122, -26.344)  ( -0.991, -17.122, -26.343)  ( 0.08,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       (-55.411, -12.472, -34.966)  (-55.400, -12.466, -34.954)  ( 0.02,  0.05,  0.03)
    bond    (-28.238, -17.597, -34.196)  (-28.231, -17.594, -34.186)  ( 0.02,  0.01,  0.03)
    angle   (  9.740,  -5.341,  -5.299)  (  9.744,  -5.340,  -5.298)  ( 0.04,  0.02,  0.02)
    torsion (  0.171,   0.926,  -0.620)  (  0.171,   0.928,  -0.619)  ( 0.00,  0.21,  0.06)
    oop     ( -0.002,  -0.011,   0.007)  ( -0.002,  -0.011,   0.007)  ( 0.00,  0.00,  0.00)
    vdw     (-37.082,   9.551,   5.142)  (-37.081,   9.551,   5.142)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       ( -5.605,  -7.349,   5.419)  ( -5.599,  -7.337,   5.426)  ( 0.12,  0.16,  0.14)
    bond    (  3.610,  -9.358,   5.158)  (  3.612,  -9.348,   5.162)  ( 0.04,  0.11,  0.06)
    angle   (-12.093,  -2.954,   3.110)  (-12.088,  -2.953,   3.110)  ( 0.04,  0.01,  0.01)
    torsion (  0.035,   0.184,   0.307)  (  0.035,   0.185,   0.311)  ( 0.00,  0.02,  0.12)
    oop     (  0.000,   0.002,   0.004)  (  0.000,   0.002,   0.004)  ( 0.00,  0.00,  0.00)
    vdw     (  2.842,   4.777,  -3.160)  (  2.842,   4.777,  -3.160)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (-66.771,  39.965, -16.445)  (-66.761,  39.974, -16.438)  ( 0.02,  0.02,  0.04)
    bond    ( -9.730,  -8.776,   6.304)  ( -9.723,  -8.770,   6.307)  ( 0.07,  0.06,  0.05)
    angle   (-59.601,  49.634, -22.853)  (-59.597,  49.636, -22.853)  ( 0.01,  0.01,  0.00)
    torsion ( -0.012,  -0.064,  -0.108)  ( -0.012,  -0.063,  -0.105)  ( 0.00,  0.01,  0.03)
    oop     (  0.000,   0.001,   0.002)  (  0.000,   0.001,   0.002)  ( 0.00,  0.00,  0.00)
    vdw     (  2.571,  -0.830,   0.211)  (  2.571,  -0.830,   0.211)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       ( 18.465, -36.699,  15.987)  ( 18.470, -36.690,  15.993)  ( 0.03,  0.02,  0.03)
    bond    ( 19.795, -29.611,  20.399)  ( 19.798, -29.604,  20.402)  ( 0.02,  0.02,  0.02)
    angle   (  2.786,  -8.831, -15.519)  (  2.787,  -8.830, -15.517)  ( 0.06,  0.02,  0.01)
    torsion ( -4.473,  -0.508,   3.603)  ( -4.472,  -0.508,   3.603)  ( 0.01,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.357,   2.251,   7.504)  (  0.357,   2.251,   7.504)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       ( 36.504,  15.344, -24.436)  ( 36.511,  15.352, -24.432)  ( 0.02,  0.05,  0.02)
    bond    ( 27.162,  26.884, -15.139)  ( 27.168,  26.890, -15.137)  ( 0.02,  0.02,  0.01)
    angle   (  2.353,  -9.170, -12.064)  (  2.355,  -9.169, -12.062)  ( 0.05,  0.01,  0.02)
    torsion (  6.153,  -6.780,  -0.999)  (  6.153,  -6.779,  -0.999)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.835,   4.410,   3.766)  (  0.835,   4.410,   3.766)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-10.509,  28.317,  29.243)  (-10.502,  28.322,  29.251)  ( 0.07,  0.02,  0.03)
    bond    (-22.714,  19.690,  26.873)  (-22.710,  19.693,  26.879)  ( 0.02,  0.02,  0.02)
    angle   (-24.786,  -5.620, -16.825)  (-24.784,  -5.618, -16.824)  ( 0.01,  0.03,  0.01)
    torsion (  0.856,   6.699,  -4.185)  (  0.856,   6.700,  -4.185)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 36.135,   7.547,  23.381)  ( 36.136,   7.547,  23.381)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       ( 30.688,  27.516, -15.964)  ( 30.696,  27.521, -15.959)  ( 0.03,  0.02,  0.03)
    bond    ( 29.150,  20.548, -20.555)  ( 29.157,  20.551, -20.551)  ( 0.02,  0.02,  0.02)
    angle   (  5.772,   7.218,  15.409)  (  5.773,   7.220,  15.411)  ( 0.02,  0.03,  0.01)
    torsion ( -3.753,   1.953,  -3.371)  ( -3.753,   1.953,  -3.371)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.482,  -2.204,  -7.448)  ( -0.482,  -2.204,  -7.448)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-20.124, -22.315, -29.452)  (-20.115, -22.312, -29.444)  ( 0.04,  0.02,  0.03)
    bond    (-28.443, -10.256, -26.879)  (-28.436, -10.256, -26.873)  ( 0.02,  0.01,  0.02)
    angle   (-21.077,  14.301,  16.841)  (-21.075,  14.303,  16.842)  ( 0.01,  0.01,  0.01)
    torsion ( -1.517,  -6.225,   3.980)  ( -1.517,  -6.224,   3.980)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 30.913, -20.135, -23.394)  ( 30.913, -20.135, -23.394)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       ( 28.342, -27.701,  24.352)  ( 28.346, -27.691,  24.356)  ( 0.01,  0.04,  0.02)
    bond    ( 15.752, -34.951,  15.142)  ( 15.753, -34.941,  15.143)  ( 0.01,  0.03,  0.01)
    angle   (  5.563,   7.744,  12.079)  (  5.564,   7.745,  12.081)  ( 0.03,  0.01,  0.02)
    torsion (  7.864,   3.952,   0.936)  (  7.865,   3.952,   0.936)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.837,  -4.447,  -3.804)  ( -0.837,  -4.446,  -3.804)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 17 # gradients do not validate&apos; passed</Info><Info file="ffuff.cpp" line="77">check &apos;Bail out! error reading reference data&apos; passed</Info><Info file="ffuff.cpp" line="79">check &apos;Bail out! could not setup force field on &apos; passed</Info><Info file="ffuff.cpp" line="86">check &apos;not ok 18 # calculated energy incorect  for molecule /Volumes/Home/ghutchis/Desktop/UFF/viagra.gpr
 # Expected      1253.34751, found 1253.347512&apos; passed</Info>
V A L I D A T E   G R A D I E N T S

ATOM IDX      NUMERICAL GRADIENT           ANALYTICAL GRADIENT        REL. ERRROR (%)   
----------------------------------------------------------------------------------------
 1       (-88.780, -161.880, -63.367)  (-86.112, -171.148, -62.952)  ( 3.00,  5.73,  0.66)
    bond    (-33.270, -17.000, -46.382)  (-33.242, -16.994, -46.354)  ( 0.08,  0.04,  0.06)
    angle   (-61.018, -168.083, -31.460)  (-61.008, -168.071, -31.449)  ( 0.02,  0.01,  0.03)
    torsion (  6.086, -15.462,   0.527)  (  6.087, -15.461,   0.527)  ( 0.01,  0.01,  0.01)
    oop     ( -8.054,  28.772,  -1.032)  ( -5.424,  19.484,  -0.656)  (32.65, 32.28, 36.40)
    vdw     (  7.475,   9.893,  14.979)  (  7.476,   9.893,  14.979)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 2       (-102.208,  38.931,  82.883)  (-102.160,  42.472,  82.560)  ( 0.05,  9.10,  0.39)
    bond    (-30.404, -27.951, -31.777)  (-30.376, -27.932, -31.758)  ( 0.09,  0.07,  0.06)
    angle   (-30.235,  74.711,  51.062)  (-30.223,  74.723,  51.077)  ( 0.04,  0.02,  0.03)
    torsion ( -4.894,   4.019,   4.600)  ( -4.893,   4.020,   4.601)  ( 0.02,  0.03,  0.02)
    oop     ( -0.033, -10.860,   1.008)  ( -0.027,  -7.350,   0.648)  ( 0.02, 32.32, 35.69)
    vdw     (-36.642,  -0.989,  57.990)  (-36.641,  -0.988,  57.991)  ( 0.00,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 3       (-61.745, -64.232,  80.958)  (-59.990, -67.979,  80.131)  ( 2.84,  5.83,  1.02)
    bond    ( 20.613,  26.346,  38.389)  ( 20.632,  26.366,  38.415)  ( 0.09,  0.08,  0.07)
    angle   (-16.869, -77.062,  -0.293)  (-16.855, -77.050,  -0.280)  ( 0.08,  0.02,  0.37)
    torsion ( -4.249,  -5.163,   1.764)  ( -4.248,  -5.162,   1.765)  ( 0.03,  0.03,  0.04)
    oop     ( -4.557,  10.144,   2.339)  ( -2.839,   6.364,   1.472)  (37.71, 37.27, 37.06)
    vdw     (-56.682, -18.496,  38.758)  (-56.680, -18.496,  38.759)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 4       ( -5.133, 106.950,  23.693)  ( -8.906, 118.478,  22.608)  (73.50, 10.78,  4.58)
    bond    (  5.718, -13.679,   1.610)  (  5.745, -13.670,   1.639)  ( 0.49,  0.07,  1.86)
    angle   ( -4.586, 145.000,  35.489)  ( -4.575, 145.012,  35.500)  ( 0.23,  0.01,  0.03)
    torsion ( -4.261,  13.887,  -0.390)  ( -4.260,  13.888,  -0.390)  ( 0.01,  0.01,  0.01)
    oop     ( 10.173, -30.870,   2.958)  (  6.361, -19.365,   1.831)  (37.47, 37.27, 38.10)
    vdw     (-12.177,  -7.388, -15.973)  (-12.177,  -7.388, -15.972)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 5       (101.351, -23.235, -58.457)  (101.413, -27.402, -57.813)  ( 0.06, 17.93,  1.10)
    bond    ( 25.868,  27.546,  31.723)  ( 25.896,  27.565,  31.742)  ( 0.11,  0.07,  0.06)
    angle   ( 24.043, -66.397, -32.211)  ( 24.056, -66.385, -32.196)  ( 0.05,  0.02,  0.05)
    torsion (  3.373,  -3.168,  -4.940)  (  3.374,  -3.167,  -4.939)  ( 0.03,  0.04,  0.02)
    oop     ( -0.050,  11.256,  -1.573)  ( -0.029,   7.057,  -0.966)  ( 0.11, 37.30, 38.57)
    vdw     ( 48.115,   7.528, -51.455)  ( 48.116,   7.528, -51.453)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 6       ( 78.681,  78.449, -78.371)  ( 77.422,  81.654, -77.549)  ( 1.60,  4.09,  1.05)
    bond    (-19.273, -25.557, -37.733)  (-19.254, -25.537, -37.706)  ( 0.10,  0.08,  0.07)
    angle   ( 28.602,  87.487,  -7.264)  ( 28.616,  87.499,  -7.252)  ( 0.05,  0.01,  0.17)
    torsion (  3.940,   6.176,  -2.944)  (  3.941,   6.178,  -2.943)  ( 0.03,  0.02,  0.02)
    oop     (  3.919,  -9.828,  -2.445)  (  2.623,  -6.656,  -1.663)  (33.06, 32.28, 31.98)
    vdw     ( 61.493,  20.170, -27.985)  ( 61.495,  20.171, -27.985)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 7       (-42.799, -51.022, -64.372)  (-40.694, -54.516, -62.951)  ( 4.92,  6.85,  2.21)
    bond    (  0.620,   1.263,   1.049)  (  0.640,   1.284,   1.072)  ( 1.25,  1.69,  2.16)
    angle   (-13.072, -58.268, -31.976)  (-13.061, -58.258, -31.965)  ( 0.08,  0.02,  0.03)
    torsion ( -0.041,   0.026,   0.006)  ( -0.041,   0.027,   0.006)  ( 0.00,  0.00,  0.00)
    oop     ( -5.566,   9.470,  -3.724)  ( -3.494,   5.944,  -2.337)  (37.23, 37.24, 37.24)
    vdw     (-24.739,  -3.513, -29.728)  (-24.739,  -3.513, -29.727)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 8       (582.063, -406.190, -446.422)  (580.747, -403.543, -447.180)  ( 0.23,  0.65,  0.17)
    bond    (281.609, -267.251, -266.649)  (281.625, -267.221, -266.622)  ( 0.01,  0.01,  0.01)
    angle   (293.178, -144.597, -194.716)  (293.186, -144.585, -194.707)  ( 0.00,  0.01,  0.00)
    torsion ( -3.751,   8.569,  -5.610)  ( -3.751,   8.569,  -5.608)  ( 0.00,  0.00,  0.03)
    oop     (  4.159,  -7.991,   2.085)  (  2.819,  -5.386,   1.287)  (32.22, 32.60, 38.25)
    vdw     (  6.867,   5.080,  18.468)  (  6.868,   5.080,  18.469)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
 9       (-247.802,  41.282, 376.108)  (-247.798,  41.287, 376.128)  ( 0.00,  0.01,  0.01)
    bond    (-119.597, -128.814, 352.507)  (-119.596, -128.812, 352.526)  ( 0.00,  0.00,  0.01)
    angle   (-141.177, 168.404,  13.641)  (-141.174, 168.407,  13.642)  ( 0.00,  0.00,  0.01)
    torsion (  3.858,  -1.278,   0.842)  (  3.858,  -1.278,   0.842)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  9.114,   2.971,   9.118)  (  9.114,   2.971,   9.118)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
10       (-170.971, 414.148, 101.627)  (-170.968, 414.172, 101.630)  ( 0.00,  0.01,  0.00)
    bond    (-38.911, 392.669, -61.048)  (-38.912, 392.692, -61.049)  ( 0.00,  0.01,  0.00)
    angle   (-123.770,  11.883, 155.322)  (-123.767,  11.883, 155.326)  ( 0.00,  0.00,  0.00)
    torsion ( -2.732,  -0.720,  -2.890)  ( -2.732,  -0.720,  -2.890)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -5.557,  10.317,  10.242)  ( -5.557,  10.317,  10.242)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
11       ( -0.744, -35.788,   1.624)  ( -0.699, -35.747,   1.645)  ( 3.32,  0.12,  1.31)
    bond    (-41.860,  12.275,   5.586)  (-41.836,  12.302,   5.588)  ( 0.06,  0.22,  0.04)
    angle   ( 90.061, -55.195, -34.418)  ( 90.081, -55.181, -34.415)  ( 0.02,  0.02,  0.01)
    torsion ( -0.189,  -6.630,  19.989)  ( -0.189,  -6.629,  20.004)  ( 0.00,  0.01,  0.08)
    oop     (  0.011,  -0.185,   0.813)  (  0.011,  -0.185,   0.814)  ( 0.00,  0.00,  0.06)
    vdw     (-48.767,  13.946,   9.654)  (-48.766,  13.946,   9.654)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
12       (-49.528,   3.251, -16.019)  (-49.483,   3.293, -15.995)  ( 0.09,  1.31,  0.15)
    bond    ( -0.522,  -5.772,  -1.974)  ( -0.494,  -5.746,  -1.972)  ( 1.41,  0.45,  0.11)
    angle   ( -1.679,  57.411,  14.090)  ( -1.662,  57.426,  14.091)  ( 0.99,  0.03,  0.01)
    torsion ( -0.099,   3.487, -16.209)  ( -0.099,   3.488, -16.189)  ( 0.00,  0.03,  0.12)
    oop     ( -0.009,   0.183,  -0.813)  ( -0.009,   0.183,  -0.812)  ( 0.00,  0.00,  0.08)
    vdw     (-47.219, -52.059, -11.113)  (-47.218, -52.058, -11.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
13       ( 13.149, -222.242, -94.200)  ( 13.193, -222.196, -94.175)  ( 0.33,  0.02,  0.03)
    bond    ( 24.471,  24.991,   4.696)  ( 24.500,  25.014,   4.698)  ( 0.12,  0.09,  0.05)
    angle   ( 29.498, -190.302, -49.492)  ( 29.511, -190.283, -49.491)  ( 0.04,  0.01,  0.00)
    torsion ( -0.403,   5.757, -21.735)  ( -0.403,   5.759, -21.714)  ( 0.00,  0.02,  0.09)
    oop     ( -0.046,   0.462,  -1.801)  ( -0.046,   0.462,  -1.800)  ( 0.00,  0.00,  0.07)
    vdw     (-40.370, -63.151, -25.868)  (-40.369, -63.148, -25.869)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
14       (-70.695, 146.350, 104.823)  (-70.635, 146.402, 104.851)  ( 0.08,  0.04,  0.03)
    bond    ( 37.481,  29.457,   7.570)  ( 37.518,  29.484,   7.573)  ( 0.10,  0.09,  0.04)
    angle   (-116.560, 148.529,  44.877)  (-116.538, 148.552,  44.878)  ( 0.02,  0.01,  0.00)
    torsion (  0.037, -18.981,  76.061)  (  0.037, -18.979,  76.080)  ( 0.00,  0.01,  0.03)
    oop     (  0.098,  -0.925,   3.573)  (  0.098,  -0.925,   3.577)  ( 0.00,  0.03,  0.13)
    vdw     (  8.249, -11.731, -27.257)  (  8.251, -11.730, -27.257)  ( 0.02,  0.01,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
15       ( -0.336,  73.523, -41.327)  ( -0.284,  73.572, -41.301)  ( 1.74,  0.07,  0.06)
    bond    (-12.815, -46.771, -13.270)  (-12.788, -46.744, -13.267)  ( 0.21,  0.06,  0.02)
    angle   (-10.355,  55.047,  19.157)  (-10.332,  55.067,  19.158)  ( 0.21,  0.04,  0.01)
    torsion ( -0.183,  11.511, -45.098)  ( -0.182,  11.513, -45.079)  ( 0.01,  0.02,  0.04)
    oop     (  0.104,   0.467,  -2.195)  (  0.104,   0.467,  -2.193)  ( 0.00,  0.00,  0.08)
    vdw     ( 22.912,  53.269,   0.079)  ( 22.914,  53.270,   0.079)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
16       (-91.612,  92.396,  45.251)  (-91.568,  92.443,  45.274)  ( 0.05,  0.05,  0.05)
    bond    ( 43.014,  -9.899,   0.673)  ( 43.044,  -9.875,   0.676)  ( 0.07,  0.23,  0.16)
    angle   (-89.911,  45.826,  10.334)  (-89.898,  45.845,  10.335)  ( 0.01,  0.04,  0.01)
    torsion (  0.769,  -2.246,  11.569)  (  0.769,  -2.244,  11.589)  ( 0.00,  0.06,  0.17)
    oop     ( -0.003,  -0.515,   1.925)  ( -0.003,  -0.515,   1.924)  ( 0.00,  0.03,  0.06)
    vdw     (-45.480,  59.229,  20.751)  (-45.480,  59.232,  20.751)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
17       (-191.124, -402.577, -132.764)  (-191.090, -402.537, -132.749)  ( 0.02,  0.01,  0.01)
    bond    (-83.920, -169.485,  -3.556)  (-83.894, -169.461,  -3.554)  ( 0.03,  0.01,  0.05)
    angle   (-40.611, -57.319,   9.357)  (-40.604, -57.307,   9.361)  ( 0.02,  0.02,  0.04)
    torsion ( -6.887,  -7.603,  23.877)  ( -6.886,  -7.602,  23.883)  ( 0.01,  0.00,  0.02)
    oop     ( -0.030,   0.296,  -1.145)  ( -0.030,   0.296,  -1.145)  ( 0.00,  0.00,  0.05)
    vdw     (-59.677, -168.466, -161.298)  (-59.676, -168.463, -161.295)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
18       (106.968, 215.193, -29.943)  (107.002, 215.234, -29.910)  ( 0.03,  0.02,  0.11)
    bond    (-49.686, 185.503,  41.124)  (-49.667, 185.531,  41.145)  ( 0.04,  0.02,  0.05)
    angle   ( 76.756,  38.741, -53.360)  ( 76.768,  38.754, -53.348)  ( 0.02,  0.03,  0.02)
    torsion ( 14.356,   1.064, -19.115)  ( 14.358,   1.065, -19.114)  ( 0.01,  0.09,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 65.542, -10.115,   1.408)  ( 65.543, -10.115,   1.408)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
19       ( -6.876, -39.632,  45.914)  ( -6.848, -39.603,  45.943)  ( 0.41,  0.07,  0.06)
    bond    (  8.410,  11.000, -20.862)  (  8.429,  11.018, -20.842)  ( 0.22,  0.17,  0.10)
    angle   (-21.918, -31.874,  59.161)  (-21.910, -31.865,  59.170)  ( 0.04,  0.03,  0.01)
    torsion ( -9.611,  -2.930,  -2.776)  ( -9.609,  -2.929,  -2.775)  ( 0.01,  0.04,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 16.243, -15.827,  10.390)  ( 16.243, -15.827,  10.390)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
20       (  4.198, -271.408,  -2.770)  (  4.259, -271.342,  -2.745)  ( 1.44,  0.02,  0.90)
    bond    ( 48.860, -351.645,  36.679)  ( 48.891, -351.609,  36.683)  ( 0.06,  0.01,  0.01)
    angle   ( 24.875, 125.334, -32.021)  ( 24.901, 125.362, -32.018)  ( 0.10,  0.02,  0.01)
    torsion (-11.068,   6.550,   9.919)  (-11.065,   6.550,   9.936)  ( 0.03,  0.01,  0.17)
    oop     ( -0.208,   0.011,   0.576)  ( -0.208,   0.011,   0.576)  ( 0.00,  0.00,  0.04)
    vdw     (-58.262, -51.657, -17.922)  (-58.260, -51.656, -17.922)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
21       (135.078, 623.725,  29.952)  (135.117, 623.770,  29.969)  ( 0.03,  0.01,  0.06)
    bond    (128.450, 492.247,  22.211)  (128.464, 492.286,  22.213)  ( 0.01,  0.01,  0.01)
    angle   ( -1.623,  93.337, -10.986)  ( -1.601,  93.342, -10.983)  ( 1.32,  0.00,  0.03)
    torsion (-10.722,   1.793,  30.081)  (-10.721,   1.793,  30.093)  ( 0.02,  0.00,  0.04)
    oop     (  0.038,   0.000,  -0.106)  (  0.038,   0.000,  -0.106)  ( 0.00,  0.00,  0.00)
    vdw     ( 18.935,  36.347, -11.248)  ( 18.937,  36.348, -11.248)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
22       (-15.740, -85.942,  14.129)  (-15.686, -85.879,  14.159)  ( 0.34,  0.07,  0.21)
    bond    (-184.821, -85.790, -66.524)  (-184.791, -85.756, -66.519)  ( 0.02,  0.04,  0.01)
    angle   (189.680, -93.945,  79.912)  (189.700, -93.919,  79.915)  ( 0.01,  0.03,  0.00)
    torsion ( -3.641,   0.520,   8.689)  ( -3.637,   0.520,   8.711)  ( 0.09,  0.01,  0.25)
    oop     (  0.165,  -0.030,  -0.436)  (  0.165,  -0.030,  -0.435)  ( 0.00,  0.00,  0.03)
    vdw     (-17.123,  93.304,  -7.512)  (-17.123,  93.307,  -7.512)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
23       (-14.974,  59.814, -15.266)  (-14.919,  59.882, -15.229)  ( 0.37,  0.11,  0.24)
    bond    (107.750, -252.321,  56.463)  (107.775, -252.281,  56.468)  ( 0.02,  0.02,  0.01)
    angle   (-179.471, 250.463, -74.736)  (-179.445, 250.489, -74.733)  ( 0.01,  0.01,  0.01)
    torsion (  4.764,  -0.733, -12.644)  (  4.767,  -0.733, -12.617)  ( 0.08,  0.01,  0.21)
    oop     (  0.167,  -0.024,  -0.427)  (  0.167,  -0.024,  -0.426)  ( 0.00,  0.00,  0.04)
    vdw     ( 51.816,  62.429,  16.078)  ( 51.817,  62.430,  16.078)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
24       (-472.680, 533.857, -211.396)  (-472.614, 533.921, -211.363)  ( 0.01,  0.01,  0.02)
    bond    (-87.772, 315.177, -53.391)  (-87.729, 315.209, -53.383)  ( 0.05,  0.01,  0.01)
    angle   (-398.319, 241.666, -175.483)  (-398.300, 241.698, -175.481)  ( 0.00,  0.01,  0.00)
    torsion ( -3.047,   0.367,   8.319)  ( -3.044,   0.367,   8.338)  ( 0.10,  0.00,  0.23)
    oop     ( -0.533,   0.079,   1.372)  ( -0.533,   0.079,   1.377)  ( 0.03,  0.00,  0.36)
    vdw     ( 16.992, -23.433,   7.787)  ( 16.992, -23.432,   7.787)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
25       (162.885, -430.352,  82.967)  (162.940, -430.285,  82.995)  ( 0.03,  0.02,  0.03)
    bond    (-30.214, 190.400, -29.022)  (-30.176, 190.432, -29.016)  ( 0.12,  0.02,  0.02)
    angle   (148.520, -552.466,  96.931)  (148.534, -552.436,  96.933)  ( 0.01,  0.01,  0.00)
    torsion (  6.776,  -0.115, -18.396)  (  6.779,  -0.115, -18.376)  ( 0.05,  0.00,  0.11)
    oop     ( -0.289,   0.080,   0.729)  ( -0.289,   0.080,   0.729)  ( 0.01,  0.00,  0.04)
    vdw     ( 38.092, -68.250,  32.725)  ( 38.092, -68.247,  32.725)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
26       (-255.901,   2.781, -87.024)  (-255.848,   2.832, -87.001)  ( 0.02,  1.84,  0.03)
    bond    (-129.118, -144.702, -38.830)  (-129.088, -144.673, -38.826)  ( 0.02,  0.02,  0.01)
    angle   (-130.876, 150.722, -83.569)  (-130.855, 150.745, -83.563)  ( 0.02,  0.02,  0.01)
    torsion ( -0.862,  -0.355,   1.681)  ( -0.860,  -0.355,   1.692)  ( 0.17,  0.01,  0.62)
    oop     (  0.159,  -0.034,  -0.406)  (  0.159,  -0.034,  -0.405)  ( 0.00,  0.00,  0.02)
    vdw     (  4.796,  -2.851,  34.099)  (  4.796,  -2.851,  34.100)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
27       (290.510, -285.997, 100.097)  (290.553, -285.942, 100.114)  ( 0.01,  0.02,  0.02)
    bond    (248.311, -157.888, 106.012)  (248.345, -157.860, 106.018)  ( 0.01,  0.02,  0.01)
    angle   ( 29.825, -120.217,  17.235)  ( 29.833, -120.190,  17.239)  ( 0.03,  0.02,  0.03)
    torsion (  9.873,  -2.247, -25.452)  (  9.874,  -2.247, -25.445)  ( 0.01,  0.00,  0.03)
    oop     ( -0.142,   0.030,   0.372)  ( -0.142,   0.030,   0.372)  ( 0.00,  0.00,  0.00)
    vdw     (  2.642,  -5.673,   1.931)  (  2.643,  -5.673,   1.931)  ( 0.02,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
28       (188.936, -202.819,  85.635)  (189.006, -202.754,  85.667)  ( 0.04,  0.03,  0.04)
    bond    (-122.952, 125.551, -56.601)  (-122.912, 125.596, -56.593)  ( 0.03,  0.04,  0.01)
    angle   (313.603, -329.644, 140.706)  (313.631, -329.625, 140.712)  ( 0.01,  0.01,  0.00)
    torsion ( -1.009,  -0.804,   2.730)  ( -1.007,  -0.804,   2.747)  ( 0.24,  0.01,  0.65)
    oop     (  0.144,  -0.028,  -0.384)  (  0.144,  -0.028,  -0.383)  ( 0.00,  0.00,  0.02)
    vdw     ( -0.850,   2.107,  -0.816)  ( -0.850,   2.107,  -0.816)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
29       ( 31.707,  88.818,   2.956)  ( 31.735,  88.833,   2.965)  ( 0.09,  0.02,  0.28)
    bond    (-13.342,   5.622,  -5.580)  (-13.316,   5.627,  -5.576)  ( 0.19,  0.08,  0.08)
    angle   ( 32.844,  85.809,   8.161)  ( 32.845,  85.819,   8.160)  ( 0.01,  0.01,  0.01)
    torsion (  1.225,  -0.163,  -3.094)  (  1.225,  -0.163,  -3.091)  ( 0.05,  0.00,  0.12)
    oop     (  0.284,  -0.046,  -0.725)  (  0.284,  -0.046,  -0.725)  ( 0.00,  0.00,  0.05)
    vdw     ( 10.696,  -2.404,   4.196)  ( 10.696,  -2.404,   4.196)  ( 0.00,  0.02,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
30       (-51.013, 189.529, -29.636)  (-50.976, 189.563, -29.604)  ( 0.07,  0.02,  0.11)
    bond    (-57.140,  -0.068, -21.182)  (-57.114,  -0.050, -21.162)  ( 0.05,  0.13,  0.09)
    angle   ( -3.738, 165.769, -14.187)  ( -3.727, 165.782, -14.179)  ( 0.28,  0.01,  0.06)
    torsion ( -1.064,   4.904,   2.867)  ( -1.063,   4.906,   2.871)  ( 0.05,  0.03,  0.13)
    oop     ( -0.060,   0.012,   0.161)  ( -0.060,   0.012,   0.161)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.989,  18.912,   2.706)  ( 10.989,  18.913,   2.706)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
31       (-41.841, -50.659,   2.785)  (-41.809, -50.626,   2.815)  ( 0.08,  0.06,  1.08)
    bond    ( 24.264,   1.025, -37.484)  ( 24.284,   1.044, -37.464)  ( 0.08,  1.86,  0.05)
    angle   (-67.035, -66.579,  26.125)  (-67.024, -66.567,  26.134)  ( 0.02,  0.02,  0.03)
    torsion (  1.880,   5.952,   6.218)  (  1.882,   5.952,   6.219)  ( 0.08,  0.01,  0.01)
    oop     ( -0.086,   0.018,   0.218)  ( -0.086,   0.018,   0.218)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.864,   8.926,   7.708)  ( -0.864,   8.926,   7.708)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
32       ( 16.599,  36.069, -10.834)  ( 16.629,  36.100, -10.803)  ( 0.18,  0.09,  0.29)
    bond    ( -6.574, -42.124,  16.847)  ( -6.556, -42.105,  16.867)  ( 0.28,  0.05,  0.12)
    angle   ( 18.121,  55.406, -24.065)  ( 18.131,  55.416, -24.055)  ( 0.05,  0.02,  0.04)
    torsion (  8.251,  21.142,   0.462)  (  8.253,  21.143,   0.462)  ( 0.03,  0.01,  0.04)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.200,   1.645,  -4.077)  ( -3.200,   1.645,  -4.077)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
33       ( -4.569, -26.434, -17.279)  ( -4.541, -26.405, -17.250)  ( 0.61,  0.11,  0.17)
    bond    ( -2.307,  38.602,  27.693)  ( -2.289,  38.622,  27.712)  ( 0.80,  0.05,  0.07)
    angle   ( -1.003, -65.158, -17.388)  ( -0.995, -65.150, -17.380)  ( 0.78,  0.01,  0.05)
    torsion (  2.723,  -0.138,   0.283)  (  2.724,  -0.137,   0.284)  ( 0.06,  0.01,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -3.981,   0.260, -27.867)  ( -3.981,   0.260, -27.866)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
34       (  8.987,  -5.389,  -4.922)  (  8.993,  -5.376,  -4.919)  ( 0.06,  0.24,  0.06)
    bond    (  6.793, -18.562,   0.914)  (  6.794, -18.550,   0.914)  ( 0.03,  0.07,  0.01)
    angle   ( 12.440,   4.043, -10.432)  ( 12.443,   4.044, -10.430)  ( 0.03,  0.01,  0.02)
    torsion (  6.776,   2.158,  -6.569)  (  6.777,   2.159,  -6.568)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-17.022,   6.971,  11.165)  (-17.022,   6.971,  11.165)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
35       (  7.908,   3.669, -14.098)  (  7.913,   3.674, -14.086)  ( 0.06,  0.12,  0.09)
    bond    (  4.852,   7.538, -18.762)  (  4.853,   7.540, -18.751)  ( 0.02,  0.03,  0.06)
    angle   ( 17.106,  -2.386,   3.469)  ( 17.109,  -2.384,   3.470)  ( 0.02,  0.08,  0.02)
    torsion ( -2.872,   1.678,  -0.068)  ( -2.872,   1.678,  -0.068)  ( 0.01,  0.02,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-11.178,  -3.161,   1.263)  (-11.178,  -3.161,   1.263)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
36       ( 13.049,   2.644,   7.750)  ( 13.063,   2.647,   7.755)  ( 0.10,  0.11,  0.06)
    bond    ( 19.930,  -1.163,  -2.917)  ( 19.944,  -1.163,  -2.916)  ( 0.07,  0.01,  0.01)
    angle   ( -0.509,   7.232,  -6.369)  ( -0.509,   7.234,  -6.365)  ( 0.00,  0.03,  0.06)
    torsion (  0.113,  -3.557,   2.187)  (  0.113,  -3.556,   2.187)  ( 0.00,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.484,   0.132,  14.849)  ( -6.484,   0.132,  14.849)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
37       (  7.430,   6.472,   2.810)  (  7.434,   6.485,   2.815)  ( 0.05,  0.20,  0.17)
    bond    ( -5.121,  18.462,  -2.248)  ( -5.120,  18.475,  -2.248)  ( 0.02,  0.07,  0.01)
    angle   ( 12.175,   2.009, -11.230)  ( 12.178,   2.009, -11.227)  ( 0.02,  0.01,  0.03)
    torsion (  8.704,   1.762,  -5.344)  (  8.705,   1.762,  -5.344)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.328, -15.761,  21.633)  ( -8.328, -15.761,  21.633)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
38       (  4.935,   1.179,  14.506)  (  4.940,   1.183,  14.518)  ( 0.10,  0.36,  0.08)
    bond    ( -4.521,  -7.164,  18.317)  ( -4.520,  -7.162,  18.328)  ( 0.02,  0.03,  0.06)
    angle   ( -7.913,   5.363,   0.145)  ( -7.909,   5.365,   0.146)  ( 0.04,  0.04,  0.01)
    torsion (  2.436,  -2.304,  -0.299)  (  2.436,  -2.304,  -0.299)  ( 0.01,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 14.933,   5.283,  -3.657)  ( 14.933,   5.283,  -3.657)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
39       (  0.054,   4.743,   8.641)  (  0.060,   4.755,   8.644)  ( 0.03,  0.27,  0.04)
    bond    ( -6.686,  18.075,  -0.977)  ( -6.685,  18.088,  -0.977)  ( 0.03,  0.07,  0.01)
    angle   (-13.304,  -4.351,  10.457)  (-13.300,  -4.350,  10.460)  ( 0.02,  0.01,  0.02)
    torsion ( -5.879,  -1.787,   7.143)  ( -5.879,  -1.787,   7.143)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 25.924,  -7.195,  -7.982)  ( 25.924,  -7.195,  -7.982)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
40       (-15.697,  -3.896,   5.021)  (-15.683,  -3.893,   5.026)  ( 0.09,  0.08,  0.09)
    bond    (-20.987,   1.060,   3.290)  (-20.973,   1.060,   3.290)  ( 0.06,  0.01,  0.01)
    angle   (  1.831,  -7.565,  14.106)  (  1.831,  -7.562,  14.110)  ( 0.01,  0.03,  0.03)
    torsion ( -0.238,   1.144,  -1.889)  ( -0.238,   1.144,  -1.888)  ( 0.00,  0.04,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  3.698,   1.465, -10.486)  (  3.698,   1.466, -10.486)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
41       ( -2.510,  -8.315,   7.727)  ( -2.506,  -8.302,   7.732)  ( 0.16,  0.16,  0.06)
    bond    (  5.462, -18.914,   2.362)  (  5.463, -18.901,   2.362)  ( 0.02,  0.07,  0.01)
    angle   (-11.526,  -1.413,  15.339)  (-11.524,  -1.413,  15.343)  ( 0.02,  0.01,  0.02)
    torsion ( -6.481,  -1.186,   5.499)  ( -6.480,  -1.186,   5.499)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 10.035,  13.198, -15.473)  ( 10.035,  13.198, -15.472)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
42       (  2.283,   3.601,   3.659)  (  2.286,   3.614,   3.662)  ( 0.16,  0.37,  0.09)
    bond    ( -3.557,  12.409,  -0.546)  ( -3.556,  12.422,  -0.546)  ( 0.03,  0.10,  0.00)
    angle   ( 16.569,   5.649,  20.625)  ( 16.571,   5.649,  20.628)  ( 0.01,  0.00,  0.01)
    torsion ( -0.038,  -0.009,   0.033)  ( -0.038,  -0.009,   0.033)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-10.691, -14.448, -16.454)  (-10.691, -14.448, -16.453)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
43       (  7.944,   2.869,   2.204)  (  7.958,   2.872,   2.207)  ( 0.17,  0.09,  0.16)
    bond    ( 12.762,  -0.692,  -1.574)  ( 12.775,  -0.692,  -1.574)  ( 0.11,  0.01,  0.02)
    angle   (  2.645,   5.915,  18.868)  (  2.645,   5.918,  18.871)  ( 0.00,  0.04,  0.01)
    torsion (  0.016,  -0.402,   0.307)  (  0.016,  -0.402,   0.307)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -7.478,  -1.951, -15.397)  ( -7.478,  -1.951, -15.397)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
44       (  0.699,   0.919,   8.721)  (  0.702,   0.923,   8.734)  ( 0.23,  0.39,  0.14)
    bond    ( -2.604,  -4.517,  11.804)  ( -2.604,  -4.515,  11.816)  ( 0.02,  0.04,  0.10)
    angle   ( 16.126,   9.173,   7.060)  ( 16.128,   9.176,   7.060)  ( 0.01,  0.03,  0.01)
    torsion (  0.483,  -0.369,  -0.034)  (  0.483,  -0.369,  -0.034)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (-13.306,  -3.369, -10.108)  (-13.306,  -3.369, -10.108)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
45       ( 37.325,  45.646,   8.211)  ( 37.335,  45.657,   8.217)  ( 0.03,  0.02,  0.07)
    bond    ( 43.946,  43.820,   9.845)  ( 43.953,  43.828,   9.845)  ( 0.02,  0.02,  0.01)
    angle   ( -6.241,   5.925,   1.464)  ( -6.238,   5.927,   1.464)  ( 0.04,  0.04,  0.01)
    torsion ( -0.054,   0.616,  -2.505)  ( -0.054,   0.616,  -2.500)  ( 0.00,  0.02,  0.19)
    oop     (  0.003,  -0.054,   0.231)  (  0.003,  -0.054,   0.231)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.328,  -4.660,  -0.824)  ( -0.328,  -4.660,  -0.824)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
46       ( -4.607,  60.461,  24.078)  ( -4.600,  60.475,  24.084)  ( 0.17,  0.02,  0.02)
    bond    (-10.669,  53.306,  13.917)  (-10.668,  53.320,  13.918)  ( 0.01,  0.03,  0.01)
    angle   ( 53.866,  10.283,   1.896)  ( 53.871,  10.283,   1.896)  ( 0.01,  0.00,  0.00)
    torsion (  0.080,  -2.491,   9.598)  (  0.080,  -2.490,   9.602)  ( 0.00,  0.01,  0.05)
    oop     (  0.007,  -0.087,   0.339)  (  0.007,  -0.087,   0.339)  ( 0.00,  0.00,  0.00)
    vdw     (-47.891,  -0.551,  -1.672)  (-47.889,  -0.551,  -1.672)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
47       ( 18.355, -46.346, -29.199)  ( 18.362, -46.332, -29.192)  ( 0.04,  0.03,  0.02)
    bond    ( 16.083, -55.844, -15.523)  ( 16.084, -55.831, -15.522)  ( 0.01,  0.02,  0.01)
    angle   ( 22.358,   6.130,   1.121)  ( 22.363,   6.131,   1.121)  ( 0.02,  0.01,  0.01)
    torsion ( -0.281,   4.759, -17.416)  ( -0.281,   4.760, -17.411)  ( 0.00,  0.01,  0.03)
    oop     ( -0.003,   0.252,  -0.909)  ( -0.003,   0.251,  -0.908)  ( 0.00,  0.01,  0.08)
    vdw     (-19.802,  -1.643,   3.528)  (-19.801,  -1.643,   3.528)  ( 0.01,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
48       (-13.433, -21.195,  16.440)  (-13.419, -21.190,  16.443)  ( 0.10,  0.02,  0.02)
    bond    (-18.943,  -0.495,   4.460)  (-18.930,  -0.495,   4.461)  ( 0.07,  0.00,  0.02)
    angle   (  2.047, -24.584,   5.957)  (  2.047, -24.580,   5.960)  ( 0.01,  0.02,  0.04)
    torsion (  2.357,   0.951,  10.106)  (  2.357,   0.952,  10.106)  ( 0.00,  0.04,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.107,   2.933,  -4.084)  (  1.107,   2.933,  -4.084)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
49       (  6.753, -15.675,   8.313)  (  6.759, -15.669,   8.322)  ( 0.09,  0.04,  0.11)
    bond    (  1.912,   1.900,   3.242)  (  1.915,   1.902,   3.250)  ( 0.15,  0.15,  0.25)
    angle   (-31.903,  -8.063,  23.515)  (-31.901,  -8.060,  23.516)  ( 0.01,  0.04,  0.00)
    torsion (  0.587,   3.391,  -2.331)  (  0.588,   3.391,  -2.331)  ( 0.03,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( 36.156, -12.903, -16.113)  ( 36.157, -12.903, -16.113)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
50       ( -1.985,  13.455, -14.408)  ( -1.981,  13.468, -14.406)  ( 0.20,  0.09,  0.02)
    bond    ( -5.047,  12.898,   0.979)  ( -5.045,  12.910,   0.979)  ( 0.04,  0.09,  0.01)
    angle   (  6.154,   3.745, -17.678)  (  6.155,   3.745, -17.675)  ( 0.03,  0.01,  0.01)
    torsion ( -2.173,  -0.796,  -0.702)  ( -2.172,  -0.796,  -0.702)  ( 0.02,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -0.919,  -2.393,   2.993)  ( -0.919,  -2.392,   2.993)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
51       (  5.310,  10.556, -15.173)  (  5.323,  10.559, -15.169)  ( 0.25,  0.03,  0.02)
    bond    (  7.392,   0.592,  -2.237)  (  7.405,   0.592,  -2.236)  ( 0.17,  0.01,  0.05)
    angle   ( -9.775,  18.072, -27.581)  ( -9.774,  18.074, -27.579)  ( 0.00,  0.01,  0.01)
    torsion (  0.198,   2.152,   1.225)  (  0.198,   2.152,   1.225)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  7.494, -10.259,  13.421)  (  7.494, -10.259,  13.422)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
52       (  0.669,   5.183, -18.800)  (  0.674,   5.188, -18.791)  ( 0.36,  0.10,  0.05)
    bond    ( -6.958,  -6.497, -10.205)  ( -6.955,  -6.494, -10.198)  ( 0.05,  0.05,  0.07)
    angle   (  6.624,  14.432, -13.712)  (  6.626,  14.433, -13.711)  ( 0.02,  0.01,  0.01)
    torsion (  0.986,  -0.661,  -0.252)  (  0.986,  -0.661,  -0.252)  ( 0.04,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.017,  -2.090,   5.369)  (  0.017,  -2.090,   5.369)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
53       (177.852, -28.759, 171.112)  (177.861, -28.735, 171.121)  ( 0.00,  0.09,  0.01)
    bond    ( 20.228, -169.925,  23.926)  ( 20.227, -169.904,  23.926)  ( 0.00,  0.01,  0.00)
    angle   ( 48.943,   8.169,  16.629)  ( 48.949,   8.169,  16.630)  ( 0.01,  0.00,  0.01)
    torsion ( 11.888,  -2.850, -30.292)  ( 11.888,  -2.850, -30.287)  ( 0.01,  0.00,  0.01)
    oop     (  0.236,  -0.056,  -0.599)  (  0.236,  -0.056,  -0.599)  ( 0.00,  0.00,  0.02)
    vdw     ( 96.558, 135.903, 161.448)  ( 96.559, 135.906, 161.451)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
54       (  6.742, -11.433,   4.624)  (  6.746, -11.421,   4.627)  ( 0.07,  0.11,  0.06)
    bond    ( -3.346,  -9.614,  -0.475)  ( -3.344,  -9.602,  -0.475)  ( 0.05,  0.13,  0.00)
    angle   (  4.060,  -1.505,   1.804)  (  4.062,  -1.504,   1.806)  ( 0.07,  0.02,  0.12)
    torsion ( -0.343,   0.074,   0.922)  ( -0.343,   0.074,   0.923)  ( 0.00,  0.00,  0.05)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.371,  -0.389,   2.373)  (  6.371,  -0.389,   2.373)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
55       (  3.012,   2.579,  11.513)  (  3.019,   2.585,  11.520)  ( 0.24,  0.22,  0.06)
    bond    ( -6.207,   5.487,   6.557)  ( -6.202,   5.491,   6.563)  ( 0.08,  0.07,  0.08)
    angle   (  0.091,  -5.828,   4.961)  (  0.093,  -5.827,   4.963)  ( 0.02,  0.02,  0.03)
    torsion ( -0.228,  -0.987,   0.610)  ( -0.228,  -0.987,   0.610)  ( 0.00,  0.05,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  9.356,   3.907,  -0.615)  (  9.356,   3.907,  -0.615)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
56       ( 10.233,  -0.738,  -8.069)  ( 10.237,  -0.734,  -8.057)  ( 0.03,  0.33,  0.15)
    bond    ( -0.146,   4.226,  -9.796)  ( -0.146,   4.229,  -9.784)  ( 0.00,  0.05,  0.12)
    angle   (  3.502,  -6.227,  -2.743)  (  3.505,  -6.225,  -2.742)  ( 0.10,  0.03,  0.01)
    torsion (  0.452,  -2.813,  -1.222)  (  0.452,  -2.812,  -1.222)  ( 0.00,  0.02,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  6.425,   4.075,   5.692)  (  6.425,   4.075,   5.692)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
57       ( -6.889, -14.506,  -1.888)  ( -6.886, -14.496,  -1.881)  ( 0.04,  0.07,  0.35)
    bond    (  0.989, -14.292,  -9.940)  (  0.989, -14.283,  -9.936)  ( 0.01,  0.07,  0.05)
    angle   (  8.518,   7.030,  -9.261)  (  8.520,   7.031,  -9.259)  ( 0.03,  0.01,  0.02)
    torsion ( -9.476,  -9.922,  13.320)  ( -9.476,  -9.922,  13.320)  ( 0.00,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -6.919,   2.677,   3.994)  ( -6.919,   2.677,   3.994)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
58       (  8.911,  -1.711, -20.980)  (  8.922,  -1.706, -20.977)  ( 0.13,  0.34,  0.01)
    bond    ( 12.966,   7.217,  -1.458)  ( 12.977,   7.220,  -1.458)  ( 0.08,  0.05,  0.01)
    angle   (  2.672,  -7.199, -11.858)  (  2.673,  -7.197, -11.855)  ( 0.02,  0.03,  0.02)
    torsion (  2.153,  -6.788, -14.449)  (  2.153,  -6.787, -14.450)  ( 0.00,  0.01,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -8.881,   5.059,   6.785)  ( -8.881,   5.059,   6.785)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
59       ( -8.867, -11.684,  -0.347)  ( -8.856, -11.678,  -0.343)  ( 0.12,  0.05,  0.13)
    bond    (-16.832, -10.136,   1.712)  (-16.822, -10.133,   1.713)  ( 0.06,  0.04,  0.01)
    angle   (  6.297,  -9.512,   5.587)  (  6.298,  -9.511,   5.590)  ( 0.01,  0.02,  0.05)
    torsion ( -0.020,  -0.277,  -1.833)  ( -0.020,  -0.276,  -1.833)  ( 0.00,  0.02,  0.02)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.689,   8.241,  -5.813)  (  1.689,   8.241,  -5.813)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
60       (  0.760, -21.580,  10.100)  (  0.769, -21.573,  10.104)  ( 0.69,  0.03,  0.04)
    bond    ( 15.609, -12.895,   6.060)  ( 15.617, -12.890,   6.061)  ( 0.05,  0.04,  0.02)
    angle   ( -5.784,  -5.930,   2.289)  ( -5.783,  -5.929,   2.292)  ( 0.02,  0.02,  0.12)
    torsion ( -8.008,  -7.854,   3.930)  ( -8.008,  -7.853,   3.930)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.057,   5.099,  -2.180)  ( -1.057,   5.099,  -2.179)  ( 0.00,  0.00,  0.01)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
61       (  2.972,  12.777,  16.665)  (  2.974,  12.781,  16.678)  ( 0.09,  0.03,  0.08)
    bond    ( -1.242,  -3.976,  13.089)  ( -1.242,  -3.975,  13.101)  ( 0.01,  0.03,  0.10)
    angle   ( -1.936,  20.224,   5.953)  ( -1.934,  20.227,   5.953)  ( 0.09,  0.01,  0.00)
    torsion (  5.685,  -0.198,   0.479)  (  5.686,  -0.198,   0.479)  ( 0.01,  0.00,  0.00)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  0.465,  -3.273,  -2.855)  (  0.465,  -3.273,  -2.855)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
62       (  0.845,  16.600,   3.889)  (  0.856,  16.606,   3.892)  ( 0.89,  0.04,  0.07)
    bond    ( 10.808,   6.980,  -0.988)  ( 10.817,   6.984,  -0.988)  ( 0.09,  0.06,  0.01)
    angle   ( -6.674,  12.423,  14.764)  ( -6.674,  12.425,  14.766)  ( 0.01,  0.01,  0.01)
    torsion ( -2.284,   2.981,  -3.935)  ( -2.284,   2.981,  -3.935)  ( 0.01,  0.01,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     ( -1.004,  -5.785,  -5.952)  ( -1.004,  -5.784,  -5.952)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
63       ( -5.652,  11.623,   8.835)  ( -5.643,  11.629,   8.839)  ( 0.16,  0.06,  0.04)
    bond    ( -8.767,   6.776,  -2.293)  ( -8.759,   6.781,  -2.292)  ( 0.10,  0.07,  0.03)
    angle   (  5.242,  13.754,  20.662)  (  5.242,  13.756,  20.664)  ( 0.02,  0.01,  0.01)
    torsion ( -3.779,  -3.434,   4.280)  ( -3.778,  -3.434,   4.281)  ( 0.00,  0.00,  0.01)
    oop     ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
    vdw     (  1.652,  -5.474, -13.815)  (  1.652,  -5.474, -13.814)  ( 0.00,  0.00,  0.00)
    electro ( -0.000,  -0.000,  -0.000)  (  0.000,   0.000,   0.000)  ( 0.00,  0.00,  0.00)
<Info file="ffuff.cpp" line="90">check &apos;not ok 18 # gradients do not validate&apos; passed</Info><TestingTime>6080000</TestingTime></TestCase></TestSuite></TestSuite></TestLog>
